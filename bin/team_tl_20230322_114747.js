(function ($hx_exports, $global) { "use strict";
var $hxClasses = {},$estr = function() { return js_Boot.__string_rec(this,''); },$hxEnums = $hxEnums || {},$_;
function $extend(from, fields) {
	var proto = Object.create(from);
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var haxe_Timer = function(time_ms) {
	var me = this;
	this.id = setInterval(function() {
		me.run();
	},time_ms);
};
$hxClasses["haxe.Timer"] = haxe_Timer;
haxe_Timer.__name__ = "haxe.Timer";
haxe_Timer.delay = function(f,time_ms) {
	var t = new haxe_Timer(time_ms);
	t.run = function() {
		t.stop();
		f();
	};
	return t;
};
haxe_Timer.prototype = {
	id: null
	,stop: function() {
		if(this.id == null) {
			return;
		}
		clearInterval(this.id);
		this.id = null;
	}
	,run: function() {
	}
	,__class__: haxe_Timer
};
var AppBase = function(mailerClass,xapiHelper,appName,mainUserDirectRports,trackLogin) {
	if(trackLogin == null) {
		trackLogin = false;
	}
	if(mainUserDirectRports == null) {
		mainUserDirectRports = false;
	}
	this.trackLogin = trackLogin;
	this.debounce = true;
	this.initialLoad = true;
	this.mainUserDirectRports = mainUserDirectRports;
	AppBase.ROOT = $global.location.origin;
	AppBase.APPLICATION = $global.location.pathname;
	AppBase.APP_URL = "https://qoom.salt.ch/knowledge/behavioural/better_together";
	Main._mainDebug = AppBase.ROOT.indexOf("test.salt.ch") > -1;
	this.comonLibs = AppBase.ROOT + "/commonlibs/";
	if(!Main._mainDebug) {
		this.comonLibs = "https://qook.test.salt.ch/commonlibs/";
	}
	if(AppBase.APPLICATION != "/" + appName + "/") {
		haxe_Log.trace("this app name \"" + appName + "\" doesn't match the url path, you might have nan issue with the version tracker",{ fileName : "AppBase.hx", lineNumber : 121, className : "AppBase", methodName : "new"});
	}
	this.transactionData = new data_Transaction();
	this.monitoringData = new data_Monitoring();
	this.logger = new http_LoginHelper(this.comonLibs + "login/index.php");
	this.logger.successSignal.add($bind(this,this.onLoginSuccess));
	if(xapiHelper != null) {
		this.xapitracker = Type.createInstance(xapiHelper,[this.comonLibs + "xapi-new/index.php"]);
	}
	if(mailerClass != null) {
		this.mailHelper = Type.createInstance(mailerClass,[this.comonLibs + "mail/index.php"]);
		this.mailHelper.successSignal.add($bind(this,this.onMailSucces));
	}
	this.versionHelper = new http_VersionHelper(this.comonLibs,appName);
	this.versionHelper.scriptChangedSignal.add($bind(this,this.onVersionChecked));
};
$hxClasses["AppBase"] = AppBase;
AppBase.__name__ = "AppBase";
AppBase.prototype = {
	app: null
	,debounce: null
	,comonLibs: null
	,preloader: null
	,loginApp: null
	,transactionData: null
	,monitoringData: null
	,mainApp: null
	,langSwitcher: null
	,coachEmail: null
	,agentTF: null
	,sendBtn: null
	,mailHelper: null
	,cookie: null
	,logger: null
	,markdownHelper: null
	,xapitracker: null
	,whenAppReady: null
	,submitor: null
	,markdownView: null
	,versionHelper: null
	,attributes: null
	,mainUserDirectRports: null
	,initialLoad: null
	,trackLogin: null
	,clearCookie: function() {
		this.cookie.clearCockie(this.versionHelper.getFullVersion());
	}
	,flushActorInCookie: function() {
		haxe_Log.trace("AppBase::flushActorInCookie",{ fileName : "AppBase.hx", lineNumber : 154, className : "AppBase", methodName : "flushActorInCookie"});
		this.cookie.flush(this.versionHelper.getFullVersion(),this.monitoringData.get_coach());
	}
	,changeLang: function(lang) {
		haxe_ui_locale_LocaleManager.get_instance().set_language(lang);
	}
	,init: function() {
		this.checkVersion();
	}
	,checkVersion: function() {
		if(Main._mainDebug) {
			this.versionHelper.request(false);
		} else {
			this.onVersionChecked(false);
		}
	}
	,onVersionChecked: function(needUpdated) {
		var _gthis = this;
		if(needUpdated) {
			var msg = new haxe_ui_containers_dialogs_MessageBox();
			msg.set_type("info");
			msg.set_title("NEW VERSION");
			msg.messageLabel.set_text("NEEDS RELOAD");
			msg.set_onDialogClosed(function(e) {
				_gthis.clearCookie();
				$global.location.reload(true);
			});
			msg.showDialog(true);
		} else if(this.initialLoad) {
			this.initialLoad = false;
			this.cookie = new helpers_CookieHelper(this.versionHelper.getFullVersion());
			haxe_ui_parsers_locale_LocaleParser.register("csv",haxe_ui_parsers_locale_CSVParser);
			haxe_ui_locale_LocaleManager.get_instance().set_language("en");
			AppBase.idleTimer.run = $bind(this,this.onTimer);
			window.onmousemove = function(e) {
				return AppBase.VERSION_TIMER_value = AppBase.VERSION_TIMER_DURATION;
			};
			this.app = new haxe_ui_HaxeUIApp();
			this.app.ready($bind(this,this.onAppReady));
		}
	}
	,loadContent: function() {
		this.prepareHeader();
	}
	,onTimer: function() {
		if(AppBase.VERSION_TIMER_value < 0) {
			this.versionHelper.scriptChangedSignal.add($bind(this,this.onVersionChecked));
			this.versionHelper.request();
		} else {
			AppBase.VERSION_TIMER_value--;
		}
	}
	,onAppReady: function() {
		haxe_ui_tooltips_ToolTipManager.defaultDelay = 100;
		this.markdownHelper = new ui_dialogs_MarkdownHelp();
		this.markdownHelper.destroyOnClose = false;
		this.preloader = new haxe_ui_components_Image();
		this.preloader.set_resource(haxe_ui_util_Variant.fromString("images/loader3.gif"));
		this.preloader.set_width(250);
		this.preloader.set_height(140);
		this.preloader.set_verticalAlign("center");
		try {
			var cookieAgent = this.cookie.retrieve();
			this.logger.searchUserFromCookie(cookieAgent.get_sAMAccountName(),true);
			this.logger.send();
			if(this.mainApp == null) {
				throw new haxe_Exception("mainApp not defined in the AppBase child class");
			}
		} catch( _g ) {
			this.loginApp = new ui_Login(this.logger);
			this.loginApp.set_needsDirectReports(this.mainUserDirectRports);
			this.loginApp.set_attributes(this.attributes);
			this.app.addComponent(this.loginApp);
		}
		this.app.start();
	}
	,prepareHeader: function() {
		var _gthis = this;
		var logoff_button = this.mainApp.findComponent("logoff_button",haxe_ui_components_Button);
		logoff_button.set_onClick(function(e) {
			_gthis.cookie.clearCockie();
			$global.location.reload();
		});
		var usename_label = this.mainApp.findComponent("username_label",haxe_ui_components_Label);
		if(usename_label == null) {
			logoff_button.set_text(this.monitoringData.get_coach().get_sAMAccountName());
		} else {
			usename_label.set_text(this.monitoringData.get_coach().get_sAMAccountName());
			logoff_button.set_text("");
		}
		var app_label = this.mainApp.findComponent("app_label",haxe_ui_components_Label);
		if(app_label == null) {
			throw haxe_Exception.thrown("ALERT need a app_label in the UI");
		}
		app_label.set_onClick(function(e) {
			window.open(AppBase.APP_URL);
		});
		this.sendBtn = this.mainApp.findComponent("send_button",haxe_ui_components_Button);
		if(this.sendBtn == null) {
			throw haxe_Exception.thrown("ALERT need a send_button in the UI");
		}
		this.sendBtn.set_onClick($bind(this,this.onSend));
		this.langSwitcher = this.mainApp.findComponent("langSwitcher_group",null,true);
		if(this.langSwitcher == null) {
			throw haxe_Exception.thrown("ALERT need a langSwitcher_group in the UI");
		}
		this.langSwitcher.set_onChange($bind(this,this.onLangChanged));
		var version_label = this.mainApp.findComponent("version_label",haxe_ui_components_Label);
		if(version_label != null) {
			version_label.set_text(version_label.get_text() + this.versionHelper.get_cachedVersion());
			version_label.validateComponent();
		}
		var l = Main.PARAMS.has("lang") ? Main.PARAMS.get("lang") : HxOverrides.substr(this.monitoringData.get_coach().get_mainLanguage(),0,2) != "" ? HxOverrides.substr(this.monitoringData.get_coach().get_mainLanguage(),0,2) : "en";
		(js_Boot.__cast(this.mainApp.findComponent(l,haxe_ui_components_OptionBox) , haxe_ui_components_OptionBox)).set_selected(true);
		try {
			var thumbnail = this.mainApp.findComponent("thumbnail",haxe_ui_components_Image);
			if(thumbnail != null) {
				var img = window.document.createElement("img");
				var tmp = this.monitoringData.get_coach().get_thumbnailphoto();
				img.src = "data:image/jpeg;base64," + tmp;
				thumbnail.set_resource(haxe_ui_util_Variant.fromImageData(img));
				img.onload = function() {
					thumbnail.set_resource(haxe_ui_util_Variant.fromImageData(img));
					thumbnail.set_imageScale(1.2);
				};
			}
		} catch( _g ) {
			var e = haxe_Exception.caught(_g);
			haxe_Log.trace(e,{ fileName : "AppBase.hx", lineNumber : 364, className : "AppBase", methodName : "prepareHeader"});
		}
	}
	,onSend: function(e) {
		throw haxe_Exception.thrown("need to implement and override in sub class");
	}
	,onLangChanged: function(e) {
		var _box = js_Boot.__cast(e.target , haxe_ui_components_OptionBox);
		AppBase.lang = _box.get_id().toLowerCase();
		if(haxe_ui_locale_LocaleManager.get_instance().get_language() != AppBase.lang) {
			this.changeLang(_box.userData);
		}
	}
	,onLoginSuccess: function(agent) {
		if(agent == null) {
			this.loginApp.feedErrorBack(haxe_ui_locale_LocaleManager.get_instance().lookupString("LOGIN_BAD_CREDENTIALS"));
			return;
		}
		if(((agent) instanceof roles_Coach)) {
			haxe_Log.trace("AppBase::onLoginSuccess->",{ fileName : "AppBase.hx", lineNumber : 395, className : "AppBase", methodName : "onLoginSuccess", customParams : [1]});
			if(agent.get_authorised()) {
				haxe_Log.trace("AppBase::onLoginSuccess->",{ fileName : "AppBase.hx", lineNumber : 400, className : "AppBase", methodName : "onLoginSuccess", customParams : [2]});
				this.monitoringData.set_coach(js_Boot.__cast(agent , roles_Coach));
				haxe_Log.trace("AppBase::onLoginSuccess->",{ fileName : "AppBase.hx", lineNumber : 404, className : "AppBase", methodName : "onLoginSuccess", customParams : [3]});
				if(this.trackLogin) {
					haxe_Log.trace("AppBase::onLoginSuccess->",{ fileName : "AppBase.hx", lineNumber : 409, className : "AppBase", methodName : "onLoginSuccess", customParams : [5]});
					var stmt = this.monitoringData.get_coach().cloneForXapi();
					var _this = this.xapitracker;
					var a = AppBase.APPLICATION;
					var stmt1 = new xapi_Statement(stmt,xapi_Verb.loggedIn,new xapi_Activity(regex_ExpReg.STRING_TO_REG("^(http|https)://").match(a) ? a : $global.location.origin + $global.location.pathname + a));
					haxe_Log.trace("AppBase::onLoginSuccess::stmt",{ fileName : "AppBase.hx", lineNumber : 418, className : "AppBase", methodName : "onLoginSuccess", customParams : [stmt1]});
					this.xapitracker.sendMany([stmt1]);
				}
				this.flushActorInCookie();
				this.whenAppReady();
			} else {
				haxe_Log.trace("AppBase::onLoginSuccess->",{ fileName : "AppBase.hx", lineNumber : 429, className : "AppBase", methodName : "onLoginSuccess", customParams : [4]});
				this.loginApp.feedErrorBack(agent.get_title());
			}
			haxe_Log.trace("AppBase::onLoginSuccess->",{ fileName : "AppBase.hx", lineNumber : 434, className : "AppBase", methodName : "onLoginSuccess", customParams : ["END"]});
			return;
		}
	}
	,onTracking: function(success) {
	}
	,onMailSucces: function(r) {
		this.debounce = true;
	}
	,sendEmail: function() {
		this.mainApp.addComponent(this.preloader);
		this.mailHelper.send(AppBase.ROOT.indexOf("salt.ch") > -1);
	}
	,__class__: AppBase
};
var App = function() {
	haxe_ui_Toolkit.set_theme("dark");
	AppBase.call(this,TLMail,TLxapi,"team_tl");
	this.sep = ";";
	this.DATA_HEADER = "TEAM" + this.sep + "Team Leader NT";
	this.team_tl_server_string = "";
	this.teamTLURLEncoded = "";
	this.logger.teamTlSignal.add($bind(this,this.parseTlList));
	this.logger.manySignal.add($bind(this,this.onTLSChecked));
	this.attributes = ["memberOf","sAMAccountName","mail"];
	this.whenAppReady = $bind(this,this.checkIfAllowed);
	this.init();
};
$hxClasses["App"] = App;
App.__name__ = "App";
App.__super__ = AppBase;
App.prototype = $extend(AppBase.prototype,{
	mainTable: null
	,sep: null
	,team_tl_server_string: null
	,teamTLURLEncoded: null
	,data: null
	,DATA_HEADER: null
	,countOfTeams: null
	,teamCount: null
	,checkIfAllowed: function() {
		if(!Main._mainDebug) {
			this.loadContent();
			return;
		}
		var _g = 0;
		var _g1 = App.AUTHORIZED_GROUPS;
		while(_g < _g1.length) {
			var i = _g1[_g];
			++_g;
			if(this.monitoringData.get_coach().isMember(i)) {
				this.loadContent();
				return;
			}
		}
		if(App.AUTHORIZED_person.indexOf(this.monitoringData.get_coach().get_sAMAccountName()) > -1) {
			this.loadContent();
			return;
		}
		var msg = new haxe_ui_containers_dialogs_MessageBox();
		msg.set_type("warning");
		msg.set_title("Access refused");
		msg.set_message("You are not authorised to come here.\nIf you think you should, give a shout to qook@salt.ch");
		msg.showDialog();
	}
	,loadContent: function() {
		haxe_Log.trace("App::loadContent",{ fileName : "src/App.hx", lineNumber : 106, className : "App", methodName : "loadContent"});
		if(this.loginApp != null) {
			this.app.removeComponent(this.loginApp);
		}
		try {
			var c0 = new haxe_ui_containers_HBox();
			c0.set_id("main");
			c0.set_percentWidth(100.);
			c0.set_percentHeight(100.);
			var rootComponent = c0;
			var c0 = new haxe_ui_containers_VBox();
			c0.set_percentWidth(50.);
			var c1 = new haxe_ui_components_Label();
			c1.set_id("app_title");
			c1.set_text("{{APP_TITLE}}");
			c1.set_styleNames("h1");
			c0.addComponent(c1);
			var c2 = new haxe_ui_components_Label();
			c2.set_id("instructions");
			c2.set_percentWidth(100.);
			c2.set_htmlText("<h1><h2>How do I remove one or many teams ?</h2><p>Just click the checkbox(es) on the 'Delete' column, then click the 'update' button.<h2>How do I Update an existing Team's TL?</h2><p>Just modify the TL in the 'TL' field then click the 'update' button.<h2>How do I Add an new Team and his TL?</h2><ol><li>Scroll or sort the list to find the line with '** NEW team **' (<em>Copy-paste the team's name as is is in the system, because case sensitivity is needed</em>) and '** NEW tl **' fields.</li><li>Fill in the fields with the team's name and the Team Leader's NT login,</li><li>then click the 'update' button.</li></ol><h2>How do I make sure everything went ok ?</h2><p>The list will be updated upon each click on 'update', so you can verify that your desired action is complete.<h2>How do I prevent any error with this buggy tool ?</h2><p>Click on 'csv' before making any changes to save a copy of the actual list.<br/>Check the count  of teams, then make you changes and if you see that the count differs or some teams were missing send a mail with the downloaded file to <a href='mailto:qook@salt.ch'>qook</a>");
			c0.addComponent(c2);
			rootComponent.addComponent(c0);
			var c3 = new haxe_ui_containers_VBox();
			c3.set_percentWidth(50.);
			c3.set_percentHeight(100.);
			var c4 = new haxe_ui_components_Label();
			c4.set_id("count");
			c4.set_percentWidth(30.);
			c3.addComponent(c4);
			var c5 = new haxe_ui_containers_TableView();
			c5.set_id("teams_tableview");
			c5.set_percentWidth(100.);
			c5.set_percentHeight(92.);
			c5.set_percentContentWidth(100.);
			var c6 = new haxe_ui_containers_Header();
			c6.set_percentWidth(100.);
			var c7 = new haxe_ui_components_Column();
			c7.set_id("team");
			c7.set_percentWidth(55.);
			c7.set_text("Team");
			c7.set_sortable(true);
			c6.addComponent(c7);
			var c8 = new haxe_ui_components_Column();
			c8.set_id("tl");
			c8.set_percentWidth(30.);
			c8.set_text("TL");
			c8.set_sortable(true);
			c6.addComponent(c8);
			var c9 = new haxe_ui_components_Column();
			c9.set_id("action");
			c9.set_percentWidth(15.);
			c9.set_text("Delete");
			c9.set_styleString("text-align:center;");
			c6.addComponent(c9);
			c5.addComponent(c6);
			var c10 = new haxe_ui_core_ItemRenderer();
			c10.set_verticalAlign("center");
			var c11 = new haxe_ui_components_TextField();
			c11.set_id("team");
			c11.set_percentWidth(100.);
			c10.addComponent(c11);
			c5.addComponent(c10);
			var c12 = new haxe_ui_core_ItemRenderer();
			c12.set_verticalAlign("center");
			var c13 = new haxe_ui_components_TextField();
			c13.set_id("tl");
			c12.addComponent(c13);
			c5.addComponent(c12);
			var c14 = new haxe_ui_core_ItemRenderer();
			c14.set_verticalAlign("center");
			var c15 = new haxe_ui_components_CheckBox();
			c15.set_id("action");
			c15.set_horizontalAlign("center");
			c14.addComponent(c15);
			c5.addComponent(c14);
			c3.addComponent(c5);
			var c16 = new haxe_ui_containers_Grid();
			c16.set_percentWidth(100.);
			c16.set_columns(3);
			var c17 = new haxe_ui_containers_Box();
			c17.set_percentWidth(30.);
			var c18 = new haxe_ui_components_Button();
			c18.set_id("submit");
			c18.set_text("update");
			c18.set_icon(haxe_ui_util_Variant.fromString("images/update.png"));
			c17.addComponent(c18);
			c16.addComponent(c17);
			var c19 = new haxe_ui_containers_Box();
			c19.set_percentWidth(60.);
			c16.addComponent(c19);
			var c20 = new haxe_ui_containers_Box();
			c20.set_percentWidth(10.);
			c20.set_horizontalAlign("right");
			var c21 = new haxe_ui_components_Button();
			c21.set_id("download");
			c21.set_text("");
			c21.set_icon(haxe_ui_util_Variant.fromString("images/download_csv.png"));
			c20.addComponent(c21);
			c16.addComponent(c20);
			c3.addComponent(c16);
			rootComponent.addComponent(c3);
			rootComponent.bindingRoot = true;
			c1.set_text(haxe_ui_locale_LocaleManager.get_instance().lookupString("APP_TITLE"));
			haxe_ui_locale_LocaleManager.get_instance().registerComponent(c1,"text",function() {
				return haxe_ui_locale_LocaleManager.get_instance().lookupString("APP_TITLE");
			});
			this.mainApp = rootComponent;
			this.mainTable = this.mainApp.findComponent("teams_tableview",haxe_ui_containers_TableView);
			var submitBtn = this.mainApp.findComponent("submit",haxe_ui_components_Button);
			var doanloadBtn = this.mainApp.findComponent("download",haxe_ui_components_Button);
			this.teamCount = this.mainApp.findComponent("count",haxe_ui_components_Label);
			submitBtn.set_onClick($bind(this,this.updateList));
			doanloadBtn.set_onClick($bind(this,this.downloadList));
			this.app.addComponent(this.mainApp);
			this.logger.readTeamTl();
		} catch( _g ) {
			var e = haxe_Exception.caught(_g);
			haxe_Log.trace(e,{ fileName : "src/App.hx", lineNumber : 129, className : "App", methodName : "loadContent"});
		}
	}
	,downloadList: function(e) {
		window.open("data:text/csv;charset=utf-8," + this.team_tl_server_string,"MyName");
	}
	,updateList: function(e) {
		this.data = js_Boot.__cast(this.mainTable.get_dataSource().get_data() , Array);
		haxe_Log.trace("App::updateList::data ",{ fileName : "src/App.hx", lineNumber : 146, className : "App", methodName : "updateList", customParams : [this.data]});
		var _g = [];
		var _g1 = 0;
		var _g2 = this.data;
		while(_g1 < _g2.length) {
			var v = _g2[_g1];
			++_g1;
			var e = v;
			if(e.action == "false" && e.tl != "** NEW tl **") {
				_g.push(v);
			}
		}
		var _this = _g;
		var result = new Array(_this.length);
		var _g = 0;
		var _g1 = _this.length;
		while(_g < _g1) {
			var i = _g++;
			result[i] = _this[i].tl;
		}
		var dataNts = array_ArrayUtils.getUnique(result);
		this.logger.searchMany(dataNts);
	}
	,onTLSChecked: function(actors,errors,leavers) {
		var errorCount = errors.length + leavers.length;
		this.teamTLURLEncoded = this.dataToString(this.data);
		if(errorCount > 0) {
			var msg = new haxe_ui_containers_dialogs_MessageBox();
			msg.set_type("error");
			msg.set_title("Error Rejected TLS");
			msg.set_message("At least " + errorCount + " NT are not found in the Active Directory :" + "\r\n");
			if(errors.length > 0) {
				msg.set_message(msg.get_message() + errors.join("\r\n"));
			}
			if(leavers.length > 0) {
				var tmp = msg.get_message();
				var result = new Array(leavers.length);
				var _g = 0;
				var _g1 = leavers.length;
				while(_g < _g1) {
					var i = _g++;
					result[i] = leavers[i].get_sAMAccountName();
				}
				msg.set_message(tmp + result.join("\r\n"));
			}
			msg.showDialog();
		}
		haxe_Log.trace("App::onTLSChecked::this.logger.data",{ fileName : "src/App.hx", lineNumber : 180, className : "App", methodName : "onTLSChecked", customParams : [this.data]});
		haxe_Log.trace("App::onTLSChecked::this.logger.teamTLURLEncoded",{ fileName : "src/App.hx", lineNumber : 181, className : "App", methodName : "onTLSChecked", customParams : [this.teamTLURLEncoded]});
		if(this.teamTLURLEncoded == this.team_tl_server_string) {
			var msg = new haxe_ui_containers_dialogs_MessageBox();
			msg.set_type("warning");
			msg.set_title("No change");
			msg.set_message("You did not make any changes.");
			msg.showDialog();
		} else {
			this.logger.writeTeamTl(this.teamTLURLEncoded);
			this.trackChanges(this.teamTLURLEncoded);
		}
	}
	,trackChanges: function(str) {
		(js_Boot.__cast(this.xapitracker , TLxapi)).sendSingleStatement(this.monitoringData.get_coach(),str,this.versionHelper.getFullVersion());
	}
	,dataToString: function(table) {
		var s = this.DATA_HEADER;
		var action = "";
		var $delete = false;
		var _g = 0;
		while(_g < table.length) {
			var i = table[_g];
			++_g;
			action = i.action;
			try {
				haxe_Log.trace(i,{ fileName : "src/App.hx", lineNumber : 216, className : "App", methodName : "dataToString"});
				haxe_Log.trace(Std.string(i.action) == "false",{ fileName : "src/App.hx", lineNumber : 217, className : "App", methodName : "dataToString", customParams : [Type.typeof(i.action)]});
				haxe_Log.trace(i.team != "** NEW team **",{ fileName : "src/App.hx", lineNumber : 218, className : "App", methodName : "dataToString", customParams : ["** NEW team **"]});
				haxe_Log.trace(i.tl != "** NEW tl **",{ fileName : "src/App.hx", lineNumber : 219, className : "App", methodName : "dataToString", customParams : ["** NEW tl **"]});
			} catch( _g1 ) {
				var e = haxe_Exception.caught(_g1);
				haxe_Log.trace(e,{ fileName : "src/App.hx", lineNumber : 223, className : "App", methodName : "dataToString"});
			}
			if((i.action == "false" || i.action == false) && (i.team != "** NEW team **" || i.tl != "** NEW tl **")) {
				s += "\r\n" + Std.string(i.team.trim()) + this.sep + Std.string(i.tl.trim());
			} else {
				haxe_Log.trace("skiped",{ fileName : "src/App.hx", lineNumber : 230, className : "App", methodName : "dataToString", customParams : [i]});
			}
		}
		return encodeURIComponent(s);
	}
	,parseTlList: function(s) {
		this.team_tl_server_string = s;
		var t = format_csv_Reader.parseCsv(decodeURIComponent(s.split("+").join(" ")),";");
		haxe_Log.trace("App::parseTlList::t",{ fileName : "src/App.hx", lineNumber : 255, className : "App", methodName : "parseTlList", customParams : [t]});
		var teamIndex = t[0].indexOf("TEAM");
		var tlIndex = t[0].indexOf("Team Leader NT");
		this.mainTable.get_dataSource().clear();
		this.countOfTeams = t.length - 1;
		this.teamCount.set_text(Std.string(this.countOfTeams) + " teams");
		var _g = 1;
		var _g1 = t.length;
		while(_g < _g1) {
			var i = _g++;
			var t1 = t[i][teamIndex];
			var t2 = t[i][tlIndex];
			this.mainTable.get_dataSource().add({ team : t1, tl : t2, action : "false"});
		}
		this.mainTable.get_dataSource().add({ team : "** NEW team **", tl : "** NEW tl **", action : "false"});
		var msg = new haxe_ui_containers_dialogs_MessageBox();
		msg.set_type("warning");
		msg.set_title("Team TL list reloaded");
		msg.set_message("Now there are " + this.countOfTeams + " teams with TLs mapped");
		msg.showDialog();
	}
	,sortAsc: function(a,b) {
		if(a > b) {
			return 1;
		} else if(a < b) {
			return -1;
		} else {
			return 0;
		}
	}
	,__class__: App
});
var DateTools = function() { };
$hxClasses["DateTools"] = DateTools;
DateTools.__name__ = "DateTools";
DateTools.__format_get = function(d,e) {
	switch(e) {
	case "%":
		return "%";
	case "A":
		return DateTools.DAY_NAMES[d.getDay()];
	case "B":
		return DateTools.MONTH_NAMES[d.getMonth()];
	case "C":
		return StringTools.lpad(Std.string(d.getFullYear() / 100 | 0),"0",2);
	case "D":
		return DateTools.__format(d,"%m/%d/%y");
	case "F":
		return DateTools.__format(d,"%Y-%m-%d");
	case "I":case "l":
		var hour = d.getHours() % 12;
		return StringTools.lpad(Std.string(hour == 0 ? 12 : hour),e == "I" ? "0" : " ",2);
	case "M":
		return StringTools.lpad(Std.string(d.getMinutes()),"0",2);
	case "R":
		return DateTools.__format(d,"%H:%M");
	case "S":
		return StringTools.lpad(Std.string(d.getSeconds()),"0",2);
	case "T":
		return DateTools.__format(d,"%H:%M:%S");
	case "Y":
		return Std.string(d.getFullYear());
	case "a":
		return DateTools.DAY_SHORT_NAMES[d.getDay()];
	case "b":case "h":
		return DateTools.MONTH_SHORT_NAMES[d.getMonth()];
	case "d":
		return StringTools.lpad(Std.string(d.getDate()),"0",2);
	case "e":
		return Std.string(d.getDate());
	case "H":case "k":
		return StringTools.lpad(Std.string(d.getHours()),e == "H" ? "0" : " ",2);
	case "m":
		return StringTools.lpad(Std.string(d.getMonth() + 1),"0",2);
	case "n":
		return "\n";
	case "p":
		if(d.getHours() > 11) {
			return "PM";
		} else {
			return "AM";
		}
		break;
	case "r":
		return DateTools.__format(d,"%I:%M:%S %p");
	case "s":
		return Std.string(d.getTime() / 1000 | 0);
	case "t":
		return "\t";
	case "u":
		var t = d.getDay();
		if(t == 0) {
			return "7";
		} else if(t == null) {
			return "null";
		} else {
			return "" + t;
		}
		break;
	case "w":
		return Std.string(d.getDay());
	case "y":
		return StringTools.lpad(Std.string(d.getFullYear() % 100),"0",2);
	default:
		throw new haxe_exceptions_NotImplementedException("Date.format %" + e + "- not implemented yet.",null,{ fileName : "DateTools.hx", lineNumber : 101, className : "DateTools", methodName : "__format_get"});
	}
};
DateTools.__format = function(d,f) {
	var r_b = "";
	var p = 0;
	while(true) {
		var np = f.indexOf("%",p);
		if(np < 0) {
			break;
		}
		var len = np - p;
		r_b += len == null ? HxOverrides.substr(f,p,null) : HxOverrides.substr(f,p,len);
		r_b += Std.string(DateTools.__format_get(d,HxOverrides.substr(f,np + 1,1)));
		p = np + 2;
	}
	var len = f.length - p;
	r_b += len == null ? HxOverrides.substr(f,p,null) : HxOverrides.substr(f,p,len);
	return r_b;
};
DateTools.format = function(d,f) {
	return DateTools.__format(d,f);
};
DateTools.getMonthDays = function(d) {
	var month = d.getMonth();
	var year = d.getFullYear();
	if(month != 1) {
		return DateTools.DAYS_OF_MONTH[month];
	}
	var isB = year % 4 == 0 && year % 100 != 0 || year % 400 == 0;
	if(isB) {
		return 29;
	} else {
		return 28;
	}
};
var EReg = function(r,opt) {
	this.r = new RegExp(r,opt.split("u").join(""));
};
$hxClasses["EReg"] = EReg;
EReg.__name__ = "EReg";
EReg.prototype = {
	r: null
	,match: function(s) {
		if(this.r.global) {
			this.r.lastIndex = 0;
		}
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
	,matched: function(n) {
		if(this.r.m != null && n >= 0 && n < this.r.m.length) {
			return this.r.m[n];
		} else {
			throw haxe_Exception.thrown("EReg::matched");
		}
	}
	,matchedPos: function() {
		if(this.r.m == null) {
			throw haxe_Exception.thrown("No string matched");
		}
		return { pos : this.r.m.index, len : this.r.m[0].length};
	}
	,matchSub: function(s,pos,len) {
		if(len == null) {
			len = -1;
		}
		if(this.r.global) {
			this.r.lastIndex = pos;
			this.r.m = this.r.exec(len < 0 ? s : HxOverrides.substr(s,0,pos + len));
			var b = this.r.m != null;
			if(b) {
				this.r.s = s;
			}
			return b;
		} else {
			var b = this.match(len < 0 ? HxOverrides.substr(s,pos,null) : HxOverrides.substr(s,pos,len));
			if(b) {
				this.r.s = s;
				this.r.m.index += pos;
			}
			return b;
		}
	}
	,split: function(s) {
		var d = "#__delim__#";
		return s.replace(this.r,d).split(d);
	}
	,map: function(s,f) {
		var offset = 0;
		var buf_b = "";
		while(true) {
			if(offset >= s.length) {
				break;
			} else if(!this.matchSub(s,offset)) {
				buf_b += Std.string(HxOverrides.substr(s,offset,null));
				break;
			}
			var p = this.matchedPos();
			buf_b += Std.string(HxOverrides.substr(s,offset,p.pos - offset));
			buf_b += Std.string(f(this));
			if(p.len == 0) {
				buf_b += Std.string(HxOverrides.substr(s,p.pos,1));
				offset = p.pos + 1;
			} else {
				offset = p.pos + p.len;
			}
			if(!this.r.global) {
				break;
			}
		}
		if(!this.r.global && offset > 0 && offset < s.length) {
			buf_b += Std.string(HxOverrides.substr(s,offset,null));
		}
		return buf_b;
	}
	,__class__: EReg
};
var HxOverrides = function() { };
$hxClasses["HxOverrides"] = HxOverrides;
HxOverrides.__name__ = "HxOverrides";
HxOverrides.dateStr = function(date) {
	var m = date.getMonth() + 1;
	var d = date.getDate();
	var h = date.getHours();
	var mi = date.getMinutes();
	var s = date.getSeconds();
	return date.getFullYear() + "-" + (m < 10 ? "0" + m : "" + m) + "-" + (d < 10 ? "0" + d : "" + d) + " " + (h < 10 ? "0" + h : "" + h) + ":" + (mi < 10 ? "0" + mi : "" + mi) + ":" + (s < 10 ? "0" + s : "" + s);
};
HxOverrides.strDate = function(s) {
	switch(s.length) {
	case 8:
		var k = s.split(":");
		var d = new Date();
		d["setTime"](0);
		d["setUTCHours"](k[0]);
		d["setUTCMinutes"](k[1]);
		d["setUTCSeconds"](k[2]);
		return d;
	case 10:
		var k = s.split("-");
		return new Date(k[0],k[1] - 1,k[2],0,0,0);
	case 19:
		var k = s.split(" ");
		var y = k[0].split("-");
		var t = k[1].split(":");
		return new Date(y[0],y[1] - 1,y[2],t[0],t[1],t[2]);
	default:
		throw haxe_Exception.thrown("Invalid date format : " + s);
	}
};
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
HxOverrides.remove = function(a,obj) {
	var i = a.indexOf(obj);
	if(i == -1) {
		return false;
	}
	a.splice(i,1);
	return true;
};
HxOverrides.now = function() {
	return Date.now();
};
var Lambda = function() { };
$hxClasses["Lambda"] = Lambda;
Lambda.__name__ = "Lambda";
Lambda.has = function(it,elt) {
	var x = $getIterator(it);
	while(x.hasNext()) {
		var x1 = x.next();
		if(x1 == elt) {
			return true;
		}
	}
	return false;
};
Lambda.exists = function(it,f) {
	var x = $getIterator(it);
	while(x.hasNext()) {
		var x1 = x.next();
		if(f(x1)) {
			return true;
		}
	}
	return false;
};
Lambda.filter = function(it,f) {
	var _g = [];
	var x = $getIterator(it);
	while(x.hasNext()) {
		var x1 = x.next();
		if(f(x1)) {
			_g.push(x1);
		}
	}
	return _g;
};
Lambda.find = function(it,f) {
	var v = $getIterator(it);
	while(v.hasNext()) {
		var v1 = v.next();
		if(f(v1)) {
			return v1;
		}
	}
	return null;
};
Lambda.concat = function(a,b) {
	var l = [];
	var x = $getIterator(a);
	while(x.hasNext()) {
		var x1 = x.next();
		l.push(x1);
	}
	var x = $getIterator(b);
	while(x.hasNext()) {
		var x1 = x.next();
		l.push(x1);
	}
	return l;
};
var Main = function() { };
$hxClasses["Main"] = Main;
Main.__name__ = "Main";
Main.main = function() {
	Main.PARAMS = new URLSearchParams($global.location.search);
	var app = new App();
};
Math.__name__ = "Math";
var Reflect = function() { };
$hxClasses["Reflect"] = Reflect;
Reflect.__name__ = "Reflect";
Reflect.field = function(o,field) {
	try {
		return o[field];
	} catch( _g ) {
		haxe_NativeStackTrace.lastError = _g;
		return null;
	}
};
Reflect.getProperty = function(o,field) {
	var tmp;
	if(o == null) {
		return null;
	} else {
		var tmp1;
		if(o.__properties__) {
			tmp = o.__properties__["get_" + field];
			tmp1 = tmp;
		} else {
			tmp1 = false;
		}
		if(tmp1) {
			return o[tmp]();
		} else {
			return o[field];
		}
	}
};
Reflect.setProperty = function(o,field,value) {
	var tmp;
	var tmp1;
	if(o.__properties__) {
		tmp = o.__properties__["set_" + field];
		tmp1 = tmp;
	} else {
		tmp1 = false;
	}
	if(tmp1) {
		o[tmp](value);
	} else {
		o[field] = value;
	}
};
Reflect.fields = function(o) {
	var a = [];
	if(o != null) {
		var hasOwnProperty = Object.prototype.hasOwnProperty;
		for( var f in o ) {
		if(f != "__id__" && f != "hx__closures__" && hasOwnProperty.call(o,f)) {
			a.push(f);
		}
		}
	}
	return a;
};
Reflect.isFunction = function(f) {
	if(typeof(f) == "function") {
		return !(f.__name__ || f.__ename__);
	} else {
		return false;
	}
};
Reflect.compare = function(a,b) {
	if(a == b) {
		return 0;
	} else if(a > b) {
		return 1;
	} else {
		return -1;
	}
};
Reflect.compareMethods = function(f1,f2) {
	if(f1 == f2) {
		return true;
	}
	if(!Reflect.isFunction(f1) || !Reflect.isFunction(f2)) {
		return false;
	}
	if(f1.scope == f2.scope && f1.method == f2.method) {
		return f1.method != null;
	} else {
		return false;
	}
};
Reflect.isObject = function(v) {
	if(v == null) {
		return false;
	}
	var t = typeof(v);
	if(!(t == "string" || t == "object" && v.__enum__ == null)) {
		if(t == "function") {
			return (v.__name__ || v.__ename__) != null;
		} else {
			return false;
		}
	} else {
		return true;
	}
};
Reflect.isEnumValue = function(v) {
	if(v != null) {
		return v.__enum__ != null;
	} else {
		return false;
	}
};
Reflect.deleteField = function(o,field) {
	if(!Object.prototype.hasOwnProperty.call(o,field)) {
		return false;
	}
	delete(o[field]);
	return true;
};
Reflect.copy = function(o) {
	if(o == null) {
		return null;
	}
	var o2 = { };
	var _g = 0;
	var _g1 = Reflect.fields(o);
	while(_g < _g1.length) {
		var f = _g1[_g];
		++_g;
		o2[f] = Reflect.field(o,f);
	}
	return o2;
};
var Std = function() { };
$hxClasses["Std"] = Std;
Std.__name__ = "Std";
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std.parseInt = function(x) {
	if(x != null) {
		var _g = 0;
		var _g1 = x.length;
		while(_g < _g1) {
			var i = _g++;
			var c = x.charCodeAt(i);
			if(c <= 8 || c >= 14 && c != 32 && c != 45) {
				var nc = x.charCodeAt(i + 1);
				var v = parseInt(x,nc == 120 || nc == 88 ? 16 : 10);
				if(isNaN(v)) {
					return null;
				} else {
					return v;
				}
			}
		}
	}
	return null;
};
Std.random = function(x) {
	if(x <= 0) {
		return 0;
	} else {
		return Math.floor(Math.random() * x);
	}
};
var StringBuf = function() {
	this.b = "";
};
$hxClasses["StringBuf"] = StringBuf;
StringBuf.__name__ = "StringBuf";
StringBuf.prototype = {
	b: null
	,__class__: StringBuf
};
var StringTools = function() { };
$hxClasses["StringTools"] = StringTools;
StringTools.__name__ = "StringTools";
StringTools.startsWith = function(s,start) {
	if(s.length >= start.length) {
		return s.lastIndexOf(start,0) == 0;
	} else {
		return false;
	}
};
StringTools.endsWith = function(s,end) {
	var elen = end.length;
	var slen = s.length;
	if(slen >= elen) {
		return s.indexOf(end,slen - elen) == slen - elen;
	} else {
		return false;
	}
};
StringTools.isSpace = function(s,pos) {
	var c = HxOverrides.cca(s,pos);
	if(!(c > 8 && c < 14)) {
		return c == 32;
	} else {
		return true;
	}
};
StringTools.ltrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,r)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,r,l - r);
	} else {
		return s;
	}
};
StringTools.rtrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,l - r - 1)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,0,l - r);
	} else {
		return s;
	}
};
StringTools.trim = function(s) {
	return StringTools.ltrim(StringTools.rtrim(s));
};
StringTools.lpad = function(s,c,l) {
	if(c.length <= 0) {
		return s;
	}
	var buf_b = "";
	l -= s.length;
	while(buf_b.length < l) buf_b += c == null ? "null" : "" + c;
	buf_b += s == null ? "null" : "" + s;
	return buf_b;
};
StringTools.rpad = function(s,c,l) {
	if(c.length <= 0) {
		return s;
	}
	var buf_b = "";
	buf_b += s == null ? "null" : "" + s;
	while(buf_b.length < l) buf_b += c == null ? "null" : "" + c;
	return buf_b;
};
StringTools.replace = function(s,sub,by) {
	return s.split(sub).join(by);
};
StringTools.hex = function(n,digits) {
	var s = "";
	var hexChars = "0123456789ABCDEF";
	while(true) {
		s = hexChars.charAt(n & 15) + s;
		n >>>= 4;
		if(!(n > 0)) {
			break;
		}
	}
	if(digits != null) {
		while(s.length < digits) s = "0" + s;
	}
	return s;
};
var haxe_http_HttpBase = function(url) {
	this.url = url;
	this.headers = [];
	this.params = [];
	this.emptyOnData = $bind(this,this.onData);
};
$hxClasses["haxe.http.HttpBase"] = haxe_http_HttpBase;
haxe_http_HttpBase.__name__ = "haxe.http.HttpBase";
haxe_http_HttpBase.prototype = {
	url: null
	,responseBytes: null
	,responseAsString: null
	,postData: null
	,postBytes: null
	,headers: null
	,params: null
	,emptyOnData: null
	,setParameter: function(name,value) {
		var _g = 0;
		var _g1 = this.params.length;
		while(_g < _g1) {
			var i = _g++;
			if(this.params[i].name == name) {
				this.params[i] = { name : name, value : value};
				return;
			}
		}
		this.params.push({ name : name, value : value});
	}
	,addParameter: function(name,value) {
		this.params.push({ name : name, value : value});
	}
	,onData: function(data) {
	}
	,onBytes: function(data) {
	}
	,onError: function(msg) {
	}
	,onStatus: function(status) {
	}
	,hasOnData: function() {
		return !Reflect.compareMethods($bind(this,this.onData),this.emptyOnData);
	}
	,success: function(data) {
		this.responseBytes = data;
		this.responseAsString = null;
		if(this.hasOnData()) {
			this.onData(this.get_responseData());
		}
		this.onBytes(this.responseBytes);
	}
	,get_responseData: function() {
		if(this.responseAsString == null && this.responseBytes != null) {
			this.responseAsString = this.responseBytes.getString(0,this.responseBytes.length,haxe_io_Encoding.UTF8);
		}
		return this.responseAsString;
	}
	,__class__: haxe_http_HttpBase
	,__properties__: {get_responseData:"get_responseData"}
};
var haxe_http_HttpJs = function(url) {
	this.async = true;
	this.withCredentials = false;
	haxe_http_HttpBase.call(this,url);
};
$hxClasses["haxe.http.HttpJs"] = haxe_http_HttpJs;
haxe_http_HttpJs.__name__ = "haxe.http.HttpJs";
haxe_http_HttpJs.__super__ = haxe_http_HttpBase;
haxe_http_HttpJs.prototype = $extend(haxe_http_HttpBase.prototype,{
	async: null
	,withCredentials: null
	,req: null
	,request: function(post) {
		var _gthis = this;
		this.responseAsString = null;
		this.responseBytes = null;
		var r = this.req = js_Browser.createXMLHttpRequest();
		var onreadystatechange = function(_) {
			if(r.readyState != 4) {
				return;
			}
			var s;
			try {
				s = r.status;
			} catch( _g ) {
				haxe_NativeStackTrace.lastError = _g;
				s = null;
			}
			if(s == 0 && js_Browser.get_supported() && $global.location != null) {
				var protocol = $global.location.protocol.toLowerCase();
				var rlocalProtocol = new EReg("^(?:about|app|app-storage|.+-extension|file|res|widget):$","");
				var isLocal = rlocalProtocol.match(protocol);
				if(isLocal) {
					s = r.response != null ? 200 : 404;
				}
			}
			if(s == undefined) {
				s = null;
			}
			if(s != null) {
				_gthis.onStatus(s);
			}
			if(s != null && s >= 200 && s < 400) {
				_gthis.req = null;
				_gthis.success(haxe_io_Bytes.ofData(r.response));
			} else if(s == null || s == 0 && r.response == null) {
				_gthis.req = null;
				_gthis.onError("Failed to connect or resolve host");
			} else if(s == null) {
				_gthis.req = null;
				var onreadystatechange = r.response != null ? haxe_io_Bytes.ofData(r.response) : null;
				_gthis.responseBytes = onreadystatechange;
				_gthis.onError("Http Error #" + r.status);
			} else {
				switch(s) {
				case 12007:
					_gthis.req = null;
					_gthis.onError("Unknown host");
					break;
				case 12029:
					_gthis.req = null;
					_gthis.onError("Failed to connect to host");
					break;
				default:
					_gthis.req = null;
					var onreadystatechange = r.response != null ? haxe_io_Bytes.ofData(r.response) : null;
					_gthis.responseBytes = onreadystatechange;
					_gthis.onError("Http Error #" + r.status);
				}
			}
		};
		if(this.async) {
			r.onreadystatechange = onreadystatechange;
		}
		var uri;
		var _g = this.postData;
		var _g1 = this.postBytes;
		if(_g == null) {
			if(_g1 == null) {
				uri = null;
			} else {
				var bytes = _g1;
				uri = new Blob([bytes.b.bufferValue]);
			}
		} else if(_g1 == null) {
			var str = _g;
			uri = str;
		} else {
			uri = null;
		}
		if(uri != null) {
			post = true;
		} else {
			var _g = 0;
			var _g1 = this.params;
			while(_g < _g1.length) {
				var p = _g1[_g];
				++_g;
				if(uri == null) {
					uri = "";
				} else {
					uri = (uri == null ? "null" : Std.string(uri)) + "&";
				}
				var s = p.name;
				var value = (uri == null ? "null" : Std.string(uri)) + encodeURIComponent(s) + "=";
				var s1 = p.value;
				uri = value + encodeURIComponent(s1);
			}
		}
		try {
			if(post) {
				r.open("POST",this.url,this.async);
			} else if(uri != null) {
				var question = this.url.split("?").length <= 1;
				r.open("GET",this.url + (question ? "?" : "&") + (uri == null ? "null" : Std.string(uri)),this.async);
				uri = null;
			} else {
				r.open("GET",this.url,this.async);
			}
			r.responseType = "arraybuffer";
		} catch( _g ) {
			haxe_NativeStackTrace.lastError = _g;
			var e = haxe_Exception.caught(_g).unwrap();
			this.req = null;
			this.onError(e.toString());
			return;
		}
		r.withCredentials = this.withCredentials;
		if(!Lambda.exists(this.headers,function(h) {
			return h.name == "Content-Type";
		}) && post && this.postData == null) {
			r.setRequestHeader("Content-Type","application/x-www-form-urlencoded");
		}
		var _g = 0;
		var _g1 = this.headers;
		while(_g < _g1.length) {
			var h = _g1[_g];
			++_g;
			r.setRequestHeader(h.name,h.value);
		}
		r.send(uri);
		if(!this.async) {
			onreadystatechange(null);
		}
	}
	,__class__: haxe_http_HttpJs
});
var http_MailHelper = function(url) {
	haxe_http_HttpJs.call(this,url);
	this._mainDebug = url.indexOf("salt.ch") > -1;
	this.async = true;
	this.values = new haxe_ds_EnumValueMap();
	this.values.set(http_Parameters.from_email,"");
	this.values.set(http_Parameters.to_email,"");
	this.values.set(http_Parameters.subject,"");
	this.canRequest = true;
	this.onData = $bind(this,this.ondata);
	this.onError = $bind(this,this.onerror);
	this.onStatus = $bind(this,this.onstatus);
	this.successSignal = new signals_Signal1();
	this.statusSignal = new signals_Signal1();
	this.errorSignal = new signals_Signal1();
};
$hxClasses["http.MailHelper"] = http_MailHelper;
http_MailHelper.__name__ = "http.MailHelper";
http_MailHelper.__super__ = haxe_http_HttpJs;
http_MailHelper.prototype = $extend(haxe_http_HttpJs.prototype,{
	errorSignal: null
	,successSignal: null
	,statusSignal: null
	,values: null
	,nullKeys: null
	,canRequest: null
	,_mainDebug: null
	,setFrom: function(reciepient,fullname) {
		if(fullname == null) {
			fullname = "";
		}
		this.values.set(http_Parameters.from_email,reciepient);
		if(fullname != "") {
			this.values.set(http_Parameters.from_full_name,fullname);
		}
	}
	,setTo: function(recipient) {
		this.values.set(http_Parameters.to_email,recipient[0]);
	}
	,setCc: function(recipient) {
		this.values.set(http_Parameters.cc_email,recipient.length == 1 ? recipient[0] : recipient.join(","));
	}
	,setBcc: function(recipient) {
		this.values.set(http_Parameters.bcc_email,recipient.length == 1 ? recipient[0] : recipient.join(","));
	}
	,setBody: function(content,addCommonStyle,customeStyle) {
		if(customeStyle == null) {
			customeStyle = "";
		}
		if(addCommonStyle == null) {
			addCommonStyle = true;
		}
		var b = "";
		b += "<style type='text/css'>";
		if(addCommonStyle) {
			b += this.setCommonStyle();
		}
		b += customeStyle;
		b += "</style>";
		b += content;
		this.values.set(http_Parameters.body,"<body>" + b + "</body>");
	}
	,setSubject: function(content) {
		haxe_Log.trace("http.MailHelper::setSubject::content",{ fileName : "http/MailHelper.hx", lineNumber : 116, className : "http.MailHelper", methodName : "setSubject", customParams : [content]});
		this.values.set(http_Parameters.subject,content);
	}
	,setCommonStyle: function() {
		var b = "";
		b += "table {border-collapse: collapse;}";
		b += "@font-face {font-family: \"Superior\"; src: url(\"https://qook.salt.ch/_css/SuperiorTitleBlack.woff2\") format(\"woff2\"); font-weight: normal;}";
		b += "@font-face {font-family: \"Univers\"; src: url(\"https://qook.salt.ch/_css/open_sans.woff2\") format(\"woff2\"); font-weight: normal;}";
		b += "h3,h5,h6 {color: #65a63c;}";
		b += "h4 {color: #94AFB0;}";
		b += "body, table, td, li, span, h3,h4,h5,h5  {font-family: \"Univers\", Arial, Helvetica, sans-serif !important;}";
		b += "h2{color: #000000; font-family: \"Superior\" !important;}";
		b += "li{font-size: 11pt !important; padding-top:8px !important;  margin-top:8px !important;}";
		b += "li em{font-size: 9pt !important;}";
		b += "em{color:#D95350;}";
		return b;
	}
	,send: function(dispatch) {
		if(dispatch == null) {
			dispatch = true;
		}
		haxe_Log.trace("MailHelper::send::dispatch",{ fileName : "http/MailHelper.hx", lineNumber : 146, className : "http.MailHelper", methodName : "send", customParams : [dispatch]});
		haxe_Log.trace(this.values == null ? "null" : this.values.toString(),{ fileName : "http/MailHelper.hx", lineNumber : 147, className : "http.MailHelper", methodName : "send"});
		this.prepareParams();
		if(dispatch) {
			if(this._mainDebug) {
				this.request(true);
			} else {
				haxe_Log.trace(this.values == null ? "null" : this.values.toString(),{ fileName : "http/MailHelper.hx", lineNumber : 161, className : "http.MailHelper", methodName : "send"});
			}
		} else {
			haxe_Log.trace(this.values == null ? "null" : this.values.toString(),{ fileName : "http/MailHelper.hx", lineNumber : 171, className : "http.MailHelper", methodName : "send"});
			this.successSignal.dispatch({ status : "success", error : "", additional : "training"});
		}
	}
	,onerror: function(msg) {
		this.errorSignal.dispatch(msg);
	}
	,ondata: function(data) {
		var s = JSON.parse(data);
		haxe_Log.trace("MailHelper::ondata::s",{ fileName : "http/MailHelper.hx", lineNumber : 188, className : "http.MailHelper", methodName : "ondata", customParams : [s]});
		this.successSignal.dispatch(s);
	}
	,onstatus: function(status) {
		this.statusSignal.dispatch(status);
	}
	,prepareParams: function() {
		this.nullKeys = [];
		var map = this.values;
		var _g_map = map;
		var _g_keys = map.keys();
		while(_g_keys.hasNext()) {
			var key = _g_keys.next();
			var _g1_value = _g_map.get(key);
			var _g1_key = key;
			var k = _g1_key;
			var v = _g1_value;
			if(v == null || v.trim() == "") {
				this.nullKeys.push(Std.string(k));
				this.canRequest = false;
			} else {
				this.setParameter(Std.string(k),v);
			}
		}
	}
	,addImageAttachement: function(imageName,tag) {
		if(tag == null) {
			tag = "";
		}
		haxe_Log.trace("http.MailHelper::addImageAttachement BEFORE",{ fileName : "http/MailHelper.hx", lineNumber : 219, className : "http.MailHelper", methodName : "addImageAttachement"});
		try {
			this.addParameter("image",imageName.bytes);
			var s = imageName.name;
			this.addParameter("imagefullname",encodeURIComponent(s));
			this.addParameter("stringToReplace",tag);
		} catch( _g ) {
			var e = haxe_Exception.caught(_g);
			haxe_Log.trace(e.get_message(),{ fileName : "http/MailHelper.hx", lineNumber : 233, className : "http.MailHelper", methodName : "addImageAttachement"});
		}
		haxe_Log.trace("http.MailHelper::addImageAttachement AFTER",{ fileName : "http/MailHelper.hx", lineNumber : 237, className : "http.MailHelper", methodName : "addImageAttachement"});
	}
	,__class__: http_MailHelper
});
var TLMail = function(url) {
	http_MailHelper.call(this,url);
};
$hxClasses["TLMail"] = TLMail;
TLMail.__name__ = "TLMail";
TLMail.__super__ = http_MailHelper;
TLMail.prototype = $extend(http_MailHelper.prototype,{
	__class__: TLMail
});
var http_XapiHelper = function(url) {
	haxe_http_HttpJs.call(this,url);
	this.async = true;
	haxe_Serializer.USE_CACHE = true;
	haxe_Serializer.USE_ENUM_INDEX = true;
	this.statementsRefs = [];
	this.dispatcher = new signals_Signal1();
	this.onData = $bind(this,this.onMyData);
};
$hxClasses["http.XapiHelper"] = http_XapiHelper;
http_XapiHelper.__name__ = "http.XapiHelper";
http_XapiHelper.__super__ = haxe_http_HttpJs;
http_XapiHelper.prototype = $extend(haxe_http_HttpJs.prototype,{
	statementJson: null
	,statementsRefs: null
	,dispatcher: null
	,reset: function(referenceLast) {
		if(!referenceLast) {
			this.statementsRefs = [];
		}
	}
	,start: function() {
		this.reset(false);
	}
	,setStatementRefs: function(statementRef) {
		this.statementsRefs = [statementRef];
	}
	,addStatementRef: function(id) {
		this.statementsRefs.push(id);
	}
	,getStatementRef: function() {
		return this.statementsRefs;
	}
	,getLastStatementRef: function() {
		return this.statementsRefs[this.statementsRefs.length - 1];
	}
	,sendMany: function(stmts) {
		var s = "";
		try {
			s = haxe_Serializer.run(stmts);
			this.setParameter("statements",encodeURIComponent(s));
			this.request(true);
		} catch( _g ) {
			var e = haxe_Exception.caught(_g);
			haxe_Log.trace(e.get_message(),{ fileName : "http/XapiHelper.hx", lineNumber : 101, className : "http.XapiHelper", methodName : "sendMany"});
			var tmp = e.get_stack();
			haxe_Log.trace(tmp == null ? "null" : haxe_CallStack.toString(tmp),{ fileName : "http/XapiHelper.hx", lineNumber : 102, className : "http.XapiHelper", methodName : "sendMany"});
			haxe_Log.trace(e.details(),{ fileName : "http/XapiHelper.hx", lineNumber : 103, className : "http.XapiHelper", methodName : "sendMany"});
		}
	}
	,sendSignle: function(stmt) {
		var s = "";
		try {
			s = haxe_Serializer.run(stmt);
			var ss = haxe_Unserializer.run(s);
			this.setParameter("statement",encodeURIComponent(s));
			this.request(true);
		} catch( _g ) {
			var e = haxe_Exception.caught(_g);
			haxe_Log.trace(e.get_message(),{ fileName : "http/XapiHelper.hx", lineNumber : 130, className : "http.XapiHelper", methodName : "sendSignle"});
			var tmp = e.get_stack();
			haxe_Log.trace(tmp == null ? "null" : haxe_CallStack.toString(tmp),{ fileName : "http/XapiHelper.hx", lineNumber : 131, className : "http.XapiHelper", methodName : "sendSignle"});
			haxe_Log.trace(e.details(),{ fileName : "http/XapiHelper.hx", lineNumber : 132, className : "http.XapiHelper", methodName : "sendSignle"});
		}
	}
	,getActivityIRI: function(a) {
		if(regex_ExpReg.STRING_TO_REG("^(http|https)://").match(a)) {
			return a;
		} else {
			return $global.location.origin + $global.location.pathname + a;
		}
	}
	,voidStatement: function(statementRef,actor,ext) {
		this.sendSignle(new xapi_Statement(actor,xapi_Verb.voided,new xapi_types_StatementRef(statementRef),null,new xapi_Context(null,null,null,null,null,null,null,null,ext)));
	}
	,updateStatement: function(statementRef,actor,ext) {
		this.sendSignle(new xapi_Statement(actor,xapi_Verb.updated,new xapi_types_StatementRef(statementRef),null,new xapi_Context(null,null,null,null,null,null,null,null,ext)));
	}
	,getStatementById: function(id) {
		this.setParameter("get",id);
		this.request(true);
	}
	,onMyData: function(data) {
		try {
			var d = JSON.parse(data);
			if(d.status == "success") {
				if(Object.prototype.hasOwnProperty.call(d,"statementsIds")) {
					var stmtIDS = js_Boot.__cast(Reflect.field(d,"statementsIds") , Array);
					var _g = 0;
					while(_g < stmtIDS.length) {
						var i = stmtIDS[_g];
						++_g;
						this.statementsRefs.push(new xapi_types_StatementRef(i));
					}
					this.dispatcher.dispatch(true);
				} else if(Object.prototype.hasOwnProperty.call(d,"statement")) {
					this.statementJson = Reflect.field(d,"statement");
					this.dispatcher.dispatch(true);
				}
			} else {
				this.dispatcher.dispatch(false);
			}
		} catch( _g ) {
			var e = haxe_Exception.caught(_g);
			haxe_Log.trace(e,{ fileName : "http/XapiHelper.hx", lineNumber : 222, className : "http.XapiHelper", methodName : "onMyData"});
			this.dispatcher.dispatch(false);
		}
	}
	,__class__: http_XapiHelper
});
var TLxapi = function(url) {
	http_XapiHelper.call(this,url);
};
$hxClasses["TLxapi"] = TLxapi;
TLxapi.__name__ = "TLxapi";
TLxapi.__super__ = http_XapiHelper;
TLxapi.prototype = $extend(http_XapiHelper.prototype,{
	sendSingleStatement: function(agent,list,scriptVersion) {
		var def = new xapi_activities_Definition();
		def.get_extensions().h["http://salt.ch/partners/team_to_tl_list"] = list;
		def.get_extensions().h["http://qook.salt.ch/team_tl/version"] = scriptVersion;
		var activity = new xapi_Activity("http://qook.salt.ch/team_tl",def);
		var s = new xapi_Statement(new xapi_Agent(agent.get_mbox(),agent.get_sAMAccountName()),xapi_Verb.updated,activity,null,null);
		this.sendMany([s]);
	}
	,__class__: TLxapi
});
var ValueType = $hxEnums["ValueType"] = { __ename__:"ValueType",__constructs__:null
	,TNull: {_hx_name:"TNull",_hx_index:0,__enum__:"ValueType",toString:$estr}
	,TInt: {_hx_name:"TInt",_hx_index:1,__enum__:"ValueType",toString:$estr}
	,TFloat: {_hx_name:"TFloat",_hx_index:2,__enum__:"ValueType",toString:$estr}
	,TBool: {_hx_name:"TBool",_hx_index:3,__enum__:"ValueType",toString:$estr}
	,TObject: {_hx_name:"TObject",_hx_index:4,__enum__:"ValueType",toString:$estr}
	,TFunction: {_hx_name:"TFunction",_hx_index:5,__enum__:"ValueType",toString:$estr}
	,TClass: ($_=function(c) { return {_hx_index:6,c:c,__enum__:"ValueType",toString:$estr}; },$_._hx_name="TClass",$_.__params__ = ["c"],$_)
	,TEnum: ($_=function(e) { return {_hx_index:7,e:e,__enum__:"ValueType",toString:$estr}; },$_._hx_name="TEnum",$_.__params__ = ["e"],$_)
	,TUnknown: {_hx_name:"TUnknown",_hx_index:8,__enum__:"ValueType",toString:$estr}
};
ValueType.__constructs__ = [ValueType.TNull,ValueType.TInt,ValueType.TFloat,ValueType.TBool,ValueType.TObject,ValueType.TFunction,ValueType.TClass,ValueType.TEnum,ValueType.TUnknown];
var Type = function() { };
$hxClasses["Type"] = Type;
Type.__name__ = "Type";
Type.getEnum = function(o) {
	if(o == null) {
		return null;
	}
	return $hxEnums[o.__enum__];
};
Type.getClassName = function(c) {
	return c.__name__;
};
Type.createInstance = function(cl,args) {
	var ctor = Function.prototype.bind.apply(cl,[null].concat(args));
	return new (ctor);
};
Type.createEnum = function(e,constr,params) {
	var f = Reflect.field(e,constr);
	if(f == null) {
		throw haxe_Exception.thrown("No such constructor " + constr);
	}
	if(Reflect.isFunction(f)) {
		if(params == null) {
			throw haxe_Exception.thrown("Constructor " + constr + " need parameters");
		}
		return f.apply(e,params);
	}
	if(params != null && params.length != 0) {
		throw haxe_Exception.thrown("Constructor " + constr + " does not need parameters");
	}
	return f;
};
Type.getInstanceFields = function(c) {
	var a = [];
	for(var i in c.prototype) a.push(i);
	HxOverrides.remove(a,"__class__");
	HxOverrides.remove(a,"__properties__");
	return a;
};
Type.typeof = function(v) {
	switch(typeof(v)) {
	case "boolean":
		return ValueType.TBool;
	case "function":
		if(v.__name__ || v.__ename__) {
			return ValueType.TObject;
		}
		return ValueType.TFunction;
	case "number":
		if(Math.ceil(v) == v % 2147483648.0) {
			return ValueType.TInt;
		}
		return ValueType.TFloat;
	case "object":
		if(v == null) {
			return ValueType.TNull;
		}
		var e = v.__enum__;
		if(e != null) {
			return ValueType.TEnum($hxEnums[e]);
		}
		var c = js_Boot.getClass(v);
		if(c != null) {
			return ValueType.TClass(c);
		}
		return ValueType.TObject;
	case "string":
		return ValueType.TClass(String);
	case "undefined":
		return ValueType.TNull;
	default:
		return ValueType.TUnknown;
	}
};
Type.enumParameters = function(e) {
	var enm = $hxEnums[e.__enum__];
	var params = enm.__constructs__[e._hx_index].__params__;
	if(params != null) {
		var _g = [];
		var _g1 = 0;
		while(_g1 < params.length) {
			var p = params[_g1];
			++_g1;
			_g.push(e[p]);
		}
		return _g;
	} else {
		return [];
	}
};
var Utils = function() { };
$hxClasses["Utils"] = Utils;
Utils.__name__ = "Utils";
Utils.GET_PARENT_PATH = function(c,path) {
	if(path == null) {
		path = "";
	}
	var parent = c.parentComponent;
	var t = "";
	if(parent == null) {
		var t = path.split(".");
		t.reverse();
		return t.join(".");
	} else {
		if(parent.get_id() != null && parent.get_id() != "") {
			if(parent.get_id() != "main") {
				if(path != "") {
					path = path + "." + parent.get_id();
				} else {
					path = parent.get_id();
				}
			}
		}
		return Utils.GET_PARENT_PATH(parent,path);
	}
};
Utils.GET_ID_FOM_FULL_ID = function(id) {
	var t = id.split(".");
	t.reverse();
	return t[0];
};
Utils.GET_GRANPA_ID = function(comp) {
	var id = Utils.GET_PARENT_PATH(comp,comp.get_id());
	var idTab = id.split(".");
	idTab.pop();
	idTab.pop();
	return { single : idTab[idTab.length - 1], full : idTab.join(".")};
};
Utils.mergeMaps = function(a,b) {
	var _g = b.keyValueIterator();
	while(_g.hasNext()) {
		var _g1 = _g.next();
		var k = _g1.key;
		var v = _g1.value;
		a.set(k,v);
	}
	return a;
};
Utils.addPrefixKey = function(prefix,map) {
	var m = new haxe_ds_StringMap();
	var h = map.h;
	var _g_h = h;
	var _g_keys = Object.keys(h);
	var _g_length = _g_keys.length;
	var _g_current = 0;
	while(_g_current < _g_length) {
		var key = _g_keys[_g_current++];
		var _g1_key = key;
		var _g1_value = _g_h[key];
		var k = _g1_key;
		var v = _g1_value;
		m.h["" + prefix + k] = v;
	}
	return m;
};
Utils.stringyfyMap = function(map) {
	var m = new haxe_ds_StringMap();
	var h = map.h;
	var _g_h = h;
	var _g_keys = Object.keys(h);
	var _g_length = _g_keys.length;
	var _g_current = 0;
	while(_g_current < _g_length) {
		var key = _g_keys[_g_current++];
		var _g1_key = key;
		var _g1_value = _g_h[key];
		var k = _g1_key;
		var v = _g1_value;
		m.h[k] = Std.string(v);
	}
	return m;
};
Utils.arrayToCsv = function(values,sep,endOfLine) {
	if(endOfLine == null) {
		endOfLine = "\n";
	}
	if(sep == null) {
		sep = ",";
	}
	var seperator = sep;
	var buffer = new StringBuf();
	var eol = endOfLine;
	if(values.length < 1) {
		throw haxe_Exception.thrown("Invalid value.");
	}
	var _g = 0;
	while(_g < values.length) {
		var v = values[_g];
		++_g;
		var vindex = 0;
		var _g1 = 0;
		while(_g1 < v.length) {
			var jDyn = v[_g1];
			++_g1;
			var j = jDyn == null ? "null" : "" + jDyn;
			var jindex = 0;
			var addQuote = j.indexOf(seperator.charAt(0) + "") > -1 || j.indexOf("\"") > -1 || j.indexOf(eol) > -1;
			if(addQuote) {
				buffer.b += String.fromCodePoint(34);
			}
			var _g2 = 0;
			var _g3 = j.length;
			while(_g2 < _g3) {
				var k = _g2++;
				var code = HxOverrides.cca(j,k);
				if(code == 34 && addQuote) {
					buffer.b += String.fromCodePoint(code);
				}
				buffer.b += String.fromCodePoint(code);
			}
			if(addQuote) {
				buffer.b += String.fromCodePoint(34);
			}
			if(jindex < v.length - 1) {
				buffer.b += seperator == null ? "null" : "" + seperator;
			}
			++jindex;
		}
		if(vindex < values.length - 1) {
			buffer.b += eol == null ? "null" : "" + eol;
		}
		++vindex;
	}
	var tmp = buffer.b;
	buffer = new StringBuf();
	return tmp;
};
Utils.arrayDynamicToArrayArrayString = function(a) {
	var head = Reflect.fields(a[0]);
	var t = [];
	var t0 = [];
	var _g = 0;
	while(_g < head.length) {
		var j = head[_g];
		++_g;
		t0.push(j);
	}
	t.push(t0);
	var _g = 0;
	while(_g < a.length) {
		var i = a[_g];
		++_g;
		var t1 = [];
		var _g1 = 0;
		while(_g1 < head.length) {
			var h = head[_g1];
			++_g1;
			t1.push(Reflect.getProperty(i,h));
		}
		t.push(t1);
	}
	return t;
};
var array_ArrayUtils = function() { };
$hxClasses["array.ArrayUtils"] = array_ArrayUtils;
array_ArrayUtils.__name__ = "array.ArrayUtils";
array_ArrayUtils.getUnique = function(array) {
	var l = [];
	var _g = 0;
	while(_g < array.length) {
		var v = array[_g];
		++_g;
		if(l.indexOf(v) == -1) {
			l.push(v);
		}
	}
	return l;
};
var data_Monitoring = function(coach) {
	this.reset();
	this.set_coach(coach);
};
$hxClasses["data.Monitoring"] = data_Monitoring;
data_Monitoring.__name__ = "data.Monitoring";
data_Monitoring.prototype = {
	coach: null
	,data: null
	,reset: function() {
		this.data = new haxe_ds_StringMap();
	}
	,get_coach: function() {
		return this.coach;
	}
	,set_coach: function(value) {
		return this.coach = value;
	}
	,__class__: data_Monitoring
	,__properties__: {set_coach:"set_coach",get_coach:"get_coach"}
};
var data_Transaction = function() {
	this.reset();
};
$hxClasses["data.Transaction"] = data_Transaction;
data_Transaction.__name__ = "data.Transaction";
data_Transaction.prototype = {
	monitoree: null
	,type: null
	,data: null
	,id: null
	,date: null
	,summary: null
	,reset: function() {
		this.data = new haxe_ds_StringMap();
		this.set_date(new Date(2000,0,1,0,0,0));
		this.set_id("");
		this.set_type("");
		this.set_summary("");
		this.set_monitoree(null);
	}
	,prepareData: function() {
		var _g = new haxe_ds_StringMap();
		var value = this.getDateISO();
		_g.h["transactionDate"] = value;
		var value = this.get_id();
		_g.h["transactionIdentificator"] = value;
		var value = this.get_summary();
		_g.h["transactionsummary"] = value;
		this.data = _g;
	}
	,getDateISO: function() {
		return date_DateToolsBB.TO_ISO_DATE(this.get_date());
	}
	,get_type: function() {
		return this.type;
	}
	,set_type: function(value) {
		return this.type = value;
	}
	,get_monitoree: function() {
		return this.monitoree;
	}
	,set_monitoree: function(value) {
		return this.monitoree = value;
	}
	,get_id: function() {
		return this.id;
	}
	,set_id: function(value) {
		return this.id = value;
	}
	,get_date: function() {
		return this.date;
	}
	,set_date: function(value) {
		return this.date = value;
	}
	,set_summary: function(value) {
		return this.summary = value;
	}
	,get_summary: function() {
		return this.summary;
	}
	,__class__: data_Transaction
	,__properties__: {set_summary:"set_summary",get_summary:"get_summary",set_date:"set_date",get_date:"get_date",set_id:"set_id",get_id:"get_id",set_type:"set_type",get_type:"get_type",set_monitoree:"set_monitoree",get_monitoree:"get_monitoree"}
};
var date_DateToolsBB = function() { };
$hxClasses["date.DateToolsBB"] = date_DateToolsBB;
date_DateToolsBB.__name__ = "date.DateToolsBB";
date_DateToolsBB.isServiceOpened = function(holidays,daysOpened,hoursOpened,dateNow) {
	haxe_Log.trace("date.DateToolsBB::isServiceOpened::dateNow",{ fileName : "date/DateToolsBB.hx", lineNumber : 79, className : "date.DateToolsBB", methodName : "isServiceOpened", customParams : [dateNow]});
	haxe_Log.trace("date.DateToolsBB::isServiceOpened::isBankHolidayString(holidays, dateNow)",{ fileName : "date/DateToolsBB.hx", lineNumber : 80, className : "date.DateToolsBB", methodName : "isServiceOpened", customParams : [date_DateToolsBB.isBankHolidayString(holidays,dateNow)]});
	haxe_Log.trace("date.DateToolsBB::isServiceOpened::isDayTimeFloatInRanges(daysOpened, hoursOpened, dateNow)",{ fileName : "date/DateToolsBB.hx", lineNumber : 81, className : "date.DateToolsBB", methodName : "isServiceOpened", customParams : [date_DateToolsBB.isDayTimeFloatInRanges(daysOpened,hoursOpened,dateNow)]});
	if(!date_DateToolsBB.isBankHolidayString(holidays,dateNow)) {
		return date_DateToolsBB.isDayTimeFloatInRanges(daysOpened,hoursOpened,dateNow);
	} else {
		return false;
	}
};
date_DateToolsBB.isServiceOpenedFromArray = function(holidays,daysOpened,hoursOpened,dateNow) {
	if(!date_DateToolsBB.isBankHolidayString(holidays,dateNow)) {
		return date_DateToolsBB.isUTCDayTimeFloatInRanges(daysOpened.join(","),hoursOpened,dateNow);
	} else {
		return false;
	}
};
date_DateToolsBB.delta = function(a,b) {
	return a.getTime() - b.getTime();
};
date_DateToolsBB.deltaDatePositive = function(a,b) {
	return new Date(Math.abs(a.getTime() - b.getTime()) | 0);
};
date_DateToolsBB.isBefore = function(date,comparedTo) {
	return date_DateToolsBB.delta(date,comparedTo) < 0;
};
date_DateToolsBB.isAfter = function(date,comparedTo) {
	return date_DateToolsBB.delta(date,comparedTo) > 0;
};
date_DateToolsBB.isSame = function(date,comparedTo) {
	return date_DateToolsBB.delta(date,comparedTo) == 0;
};
date_DateToolsBB.isWithinHours = function(start,stopExcluded,date) {
	if(date == null) {
		date = new Date();
	}
	if(start <= date.getHours()) {
		return date.getHours() < stopExcluded;
	} else {
		return false;
	}
};
date_DateToolsBB.isWithinUTCHours = function(start,stopExcluded,date) {
	if(date == null) {
		date = new Date();
	}
	if(start <= date.getHours()) {
		return date.getHours() < stopExcluded;
	} else {
		return false;
	}
};
date_DateToolsBB.isWithinHoursMinutes = function(start,stopExcluded,date) {
	if(date == null) {
		date = new Date();
	}
	var hoursMin = date.getHours() + date.getMinutes() / 100;
	if(start <= hoursMin) {
		return hoursMin < stopExcluded;
	} else {
		return false;
	}
};
date_DateToolsBB.isWithinUTCHoursMinutes = function(start,stopExcluded,date) {
	if(date == null) {
		date = new Date();
	}
	var hoursMin = date.getUTCHours() + date.getUTCMinutes() / 100;
	haxe_Log.trace("tstool.utils.DateToolsBB::isWithinUTCHoursMinutes::hoursMin",{ fileName : "date/DateToolsBB.hx", lineNumber : 202, className : "date.DateToolsBB", methodName : "isWithinUTCHoursMinutes", customParams : [hoursMin]});
	haxe_Log.trace("tstool.utils.DateToolsBB::isWithinUTCHoursMinutes::start",{ fileName : "date/DateToolsBB.hx", lineNumber : 203, className : "date.DateToolsBB", methodName : "isWithinUTCHoursMinutes", customParams : [start]});
	haxe_Log.trace("tstool.utils.DateToolsBB::isWithinUTCHoursMinutes::stopExcluded",{ fileName : "date/DateToolsBB.hx", lineNumber : 204, className : "date.DateToolsBB", methodName : "isWithinUTCHoursMinutes", customParams : [stopExcluded]});
	if(start <= hoursMin) {
		return hoursMin < stopExcluded;
	} else {
		return false;
	}
};
date_DateToolsBB.isWithinHoursMinutesString = function(start,stopExcluded,date) {
	if(date == null) {
		date = new Date();
	}
	if(start <= Std.string(date.getHours()) + ":" + Std.string(date.getMinutes())) {
		return Std.string(date.getHours()) + ":" + Std.string(date.getMinutes()) < stopExcluded;
	} else {
		return false;
	}
};
date_DateToolsBB.isWithinUTCHoursMinutesString = function(start,stopExcluded,date) {
	if(date == null) {
		date = new Date();
	}
	if(start <= Std.string(date.getUTCHours()) + ":" + Std.string(date.getUTCMinutes())) {
		return Std.string(date.getUTCHours()) + ":" + Std.string(date.getUTCMinutes()) < stopExcluded;
	} else {
		return false;
	}
};
date_DateToolsBB.isWithinDays = function(start,stopExcluded,date) {
	if(date == null) {
		date = new Date();
	}
	if(start <= date.getDay()) {
		return date.getDay() < stopExcluded;
	} else {
		return false;
	}
};
date_DateToolsBB.isWithinUTCDays = function(start,stopExcluded,date) {
	if(date == null) {
		date = new Date();
	}
	if(start <= date.getUTCDay()) {
		return date.getUTCDay() < stopExcluded;
	} else {
		return false;
	}
};
date_DateToolsBB.isWithinDaysArray = function(days,date) {
	if(date == null) {
		date = new Date();
	}
	return days.indexOf(date.getDay()) != -1;
};
date_DateToolsBB.isWithinUTCDaysArray = function(days,date) {
	if(date == null) {
		date = new Date();
	}
	return days.indexOf(date.getUTCDay()) != -1;
};
date_DateToolsBB.isWithinDaysString = function(days,date) {
	if(date == null) {
		date = new Date();
	}
	return days.indexOf(Std.string(date.getDay())) > -1;
};
date_DateToolsBB.isBankHolidayString = function(days,date) {
	if(date == null) {
		date = new Date();
	}
	var i = date.getDate();
	var dayDate = (i < 10 ? "0" : "") + Std.string(i);
	var i = date.getMonth() + 1;
	var month = (i < 10 ? "0" : "") + Std.string(i);
	var s = "" + date.getFullYear() + "-" + month + "-" + dayDate;
	haxe_Log.trace("tstool.utils.DateToolsBB::isBankHolidayString::s",{ fileName : "date/DateToolsBB.hx", lineNumber : 301, className : "date.DateToolsBB", methodName : "isBankHolidayString", customParams : [s,days.indexOf(s) > -1]});
	haxe_Log.trace("date.DateToolsBB::isBankHolidayString::days",{ fileName : "date/DateToolsBB.hx", lineNumber : 304, className : "date.DateToolsBB", methodName : "isBankHolidayString", customParams : [days]});
	return days.indexOf(s) > -1;
};
date_DateToolsBB.isWithinUTCDaysString = function(days,date) {
	if(date == null) {
		date = new Date();
	}
	return days.indexOf(Std.string(date.getUTCDay())) > -1;
};
date_DateToolsBB.isDayTimeFloatInRange = function(days,start,stopExcluded,date) {
	if(date == null) {
		date = new Date();
	}
	if(date_DateToolsBB.isWithinDaysString(days,date)) {
		return date_DateToolsBB.isWithinHoursMinutes(start,stopExcluded,date);
	} else {
		return false;
	}
};
date_DateToolsBB.isUTCDayTimeFloatInRange = function(days,start,stopExcluded,date) {
	if(date == null) {
		date = new Date();
	}
	if(date_DateToolsBB.isWithinUTCDaysString(days,date)) {
		return date_DateToolsBB.isWithinUTCHoursMinutes(start,stopExcluded,date);
	} else {
		return false;
	}
};
date_DateToolsBB.isUTCDayTimeFloatInRanges = function(days,ranges,date) {
	if(date == null) {
		date = new Date();
	}
	if(date_DateToolsBB.isWithinUTCDaysString(days,date)) {
		var _g = 0;
		while(_g < ranges.length) {
			var i = ranges[_g];
			++_g;
			haxe_Log.trace("tstool.utils.DateToolsBB::isUTCDayTimeFloatInRanges::i",{ fileName : "date/DateToolsBB.hx", lineNumber : 362, className : "date.DateToolsBB", methodName : "isUTCDayTimeFloatInRanges", customParams : [i]});
			if(date_DateToolsBB.isWithinUTCHoursMinutes(i.open,i.close,date)) {
				return true;
			}
		}
	}
	return false;
};
date_DateToolsBB.isDayTimeFloatInRanges = function(days,ranges,date) {
	if(date == null) {
		date = new Date();
	}
	if(date_DateToolsBB.isWithinUTCDaysString(days,date)) {
		var _g = 0;
		while(_g < ranges.length) {
			var i = ranges[_g];
			++_g;
			haxe_Log.trace("tstool.utils.DateToolsBB::isDayTimeFloatInRanges::i",{ fileName : "date/DateToolsBB.hx", lineNumber : 388, className : "date.DateToolsBB", methodName : "isDayTimeFloatInRanges", customParams : [i]});
			var date1 = date;
			if(date1 == null) {
				date1 = new Date();
			}
			var dateString = DateTools.format(date1,"%Y.%m.%d");
			if(i.exclude != null && i.exclude.indexOf(dateString) != -1 || i.include != null && i.include.indexOf(dateString) == -1) {
				continue;
			}
			haxe_Log.trace("tstool.utils.DateToolsBB::isDayTimeFloatInRanges::i TREAT",{ fileName : "date/DateToolsBB.hx", lineNumber : 394, className : "date.DateToolsBB", methodName : "isDayTimeFloatInRanges", customParams : [i]});
			if(date_DateToolsBB.isWithinHoursMinutes(i.open,i.close,date)) {
				haxe_Log.trace("date.DateToolsBB::isDayTimeFloatInRanges TRUE",{ fileName : "date/DateToolsBB.hx", lineNumber : 399, className : "date.DateToolsBB", methodName : "isDayTimeFloatInRanges"});
				return true;
			}
		}
	}
	haxe_Log.trace("date.DateToolsBB::isDayTimeFloatInRanges FALSE",{ fileName : "date/DateToolsBB.hx", lineNumber : 406, className : "date.DateToolsBB", methodName : "isDayTimeFloatInRanges"});
	return false;
};
date_DateToolsBB.isRangeExcluded = function(range,date) {
	if(date == null) {
		date = new Date();
	}
	var dateString = DateTools.format(date,"%Y.%m.%d");
	if(!(range.exclude != null && range.exclude.indexOf(dateString) != -1)) {
		if(range.include != null) {
			return range.include.indexOf(dateString) == -1;
		} else {
			return false;
		}
	} else {
		return true;
	}
};
date_DateToolsBB.isTodayARegularDay = function(ranges,date) {
	if(date == null) {
		date = new Date();
	}
	var dateString = DateTools.format(date,"%Y.%m.%d");
	var _g = 0;
	while(_g < ranges.length) {
		var i = ranges[_g];
		++_g;
		if(i.exclude != null && i.exclude.indexOf(dateString) > -1) {
			return false;
		}
		if(i.include != null && i.include.indexOf(dateString) > -1) {
			return false;
		}
	}
	return true;
};
date_DateToolsBB.isRegularRange = function(range) {
	return range.exclude != null;
};
date_DateToolsBB.filterRegularRanges = function(ranges) {
	return Lambda.filter(ranges,function(e) {
		return e.include == null;
	});
};
date_DateToolsBB.isSummerTime = function(date) {
	var stmp = date.getTime();
	var _g = 0;
	var _g1 = date_DateToolsBB.SUMMER_TIME_RANGES;
	while(_g < _g1.length) {
		var i = _g1[_g];
		++_g;
		if(stmp > i.start.getTime() && stmp < i.end.getTime()) {
			return true;
		}
	}
	return false;
};
date_DateToolsBB.getSeasonDelta = function(date) {
	if(date == null) {
		date = new Date();
	}
	if(date_DateToolsBB.isSummerTime(date)) {
		return 2;
	} else {
		return 1;
	}
};
date_DateToolsBB.TO_ISO_DATE = function(d) {
	var i = d.getMonth();
	var i1 = d.getDate();
	var i2 = d.getHours();
	var i3 = d.getMinutes();
	var i4 = d.getSeconds();
	return Std.string(d.getFullYear()) + "-" + ((i < 10 ? "0" : "") + Std.string(i)) + "-" + ((i1 < 10 ? "0" : "") + Std.string(i1)) + "T" + ((i2 < 10 ? "0" : "") + Std.string(i2)) + ":" + ((i3 < 10 ? "0" : "") + Std.string(i3)) + ":" + ((i4 < 10 ? "0" : "") + Std.string(i4)) + "Z";
};
date_DateToolsBB.TO_UTC_ISO_DATE = function(d) {
	var i = d.getUTCMonth();
	var i1 = d.getUTCDate();
	var i2 = d.getUTCHours();
	var i3 = d.getUTCMinutes();
	var i4 = d.getUTCSeconds();
	return Std.string(d.getUTCFullYear()) + "-" + ((i < 10 ? "0" : "") + Std.string(i)) + "-" + ((i1 < 10 ? "0" : "") + Std.string(i1)) + "T" + ((i2 < 10 ? "0" : "") + Std.string(i2)) + ":" + ((i3 < 10 ? "0" : "") + Std.string(i3)) + ":" + ((i4 < 10 ? "0" : "") + Std.string(i4)) + "Z";
};
date_DateToolsBB.ZERO_LEAD = function(i) {
	return (i < 10 ? "0" : "") + (i == null ? "null" : "" + i);
};
date_DateToolsBB.prepareHourFromFloat = function(f) {
	var s = f == null ? "null" : "" + f;
	var o = "";
	if(s.indexOf(".") > -1) {
		o = s.split(".").join("h");
	} else {
		o = s + "h0";
	}
	return o + "0";
};
date_DateToolsBB.CLONE_DateTimeUtc = function(offset,d) {
	if(offset == null) {
		offset = 0;
	}
	if(d == null) {
		d = thx_DateTimeUtc.now();
	}
	haxe_Log.trace("date.DateToolsBB::CLONE_DateTimeUtc::d",{ fileName : "date/DateToolsBB.hx", lineNumber : 516, className : "date.DateToolsBB", methodName : "CLONE_DateTimeUtc", customParams : [d == null ? "null" : thx_DateTimeUtc.toString(d),offset]});
	while(offset > 0) {
		d = thx_DateTimeUtc.jump(d,thx_TimePeriod.Hour,1);
		haxe_Log.trace("date.DateToolsBB::CLONE_DateTimeUtc::d",{ fileName : "date/DateToolsBB.hx", lineNumber : 523, className : "date.DateToolsBB", methodName : "CLONE_DateTimeUtc", customParams : [d == null ? "null" : thx_DateTimeUtc.toString(d),offset]});
		--offset;
	}
	haxe_Log.trace("date.DateToolsBB::CLONE_DateTimeUtc::d.year",{ fileName : "date/DateToolsBB.hx", lineNumber : 529, className : "date.DateToolsBB", methodName : "CLONE_DateTimeUtc", customParams : [thx_DateTimeUtc.getDatePart(d,thx_DateTimeUtc.DATE_PART_YEAR)]});
	haxe_Log.trace("date.DateToolsBB::CLONE_DateTimeUtc::d.month",{ fileName : "date/DateToolsBB.hx", lineNumber : 530, className : "date.DateToolsBB", methodName : "CLONE_DateTimeUtc", customParams : [thx_DateTimeUtc.getDatePart(d,thx_DateTimeUtc.DATE_PART_MONTH)]});
	haxe_Log.trace("date.DateToolsBB::CLONE_DateTimeUtc::d.day",{ fileName : "date/DateToolsBB.hx", lineNumber : 531, className : "date.DateToolsBB", methodName : "CLONE_DateTimeUtc", customParams : [thx_DateTimeUtc.getDatePart(d,thx_DateTimeUtc.DATE_PART_DAY)]});
	haxe_Log.trace("date.DateToolsBB::CLONE_DateTimeUtc::d.hour",{ fileName : "date/DateToolsBB.hx", lineNumber : 532, className : "date.DateToolsBB", methodName : "CLONE_DateTimeUtc", customParams : [thx_DateTimeUtc.get_hour(d)]});
	haxe_Log.trace("date.DateToolsBB::CLONE_DateTimeUtc::d.minute",{ fileName : "date/DateToolsBB.hx", lineNumber : 533, className : "date.DateToolsBB", methodName : "CLONE_DateTimeUtc", customParams : [thx_DateTimeUtc.get_minute(d)]});
	var newDate = new Date(thx_DateTimeUtc.getDatePart(d,thx_DateTimeUtc.DATE_PART_YEAR),thx_DateTimeUtc.getDatePart(d,thx_DateTimeUtc.DATE_PART_MONTH) - 1,thx_DateTimeUtc.getDatePart(d,thx_DateTimeUtc.DATE_PART_DAY),thx_DateTimeUtc.get_hour(d),thx_DateTimeUtc.get_minute(d),thx_DateTimeUtc.get_second(d));
	haxe_Log.trace("date.DateToolsBB::CLONE_DateTimeUtc::newDate",{ fileName : "date/DateToolsBB.hx", lineNumber : 537, className : "date.DateToolsBB", methodName : "CLONE_DateTimeUtc", customParams : [newDate]});
	return newDate;
};
date_DateToolsBB.CLONE_DATETIME_TO_DATE = function(d) {
	var this1 = d[0];
	var a = this1;
	var this1 = d[1];
	var b = this1;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this1 = new haxe__$Int64__$_$_$Int64(high,low);
	var this2 = this1;
	var tmp = thx_DateTimeUtc.getDatePart(this2,thx_DateTimeUtc.DATE_PART_YEAR);
	var this1 = d[0];
	var a = this1;
	var this1 = d[1];
	var b = this1;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this1 = new haxe__$Int64__$_$_$Int64(high,low);
	var this2 = this1;
	var tmp1 = thx_DateTimeUtc.getDatePart(this2,thx_DateTimeUtc.DATE_PART_MONTH) - 1;
	var this1 = d[0];
	var a = this1;
	var this1 = d[1];
	var b = this1;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this1 = new haxe__$Int64__$_$_$Int64(high,low);
	var this2 = this1;
	var tmp2 = thx_DateTimeUtc.getDatePart(this2,thx_DateTimeUtc.DATE_PART_DAY);
	var this1 = d[0];
	var a = this1;
	var this1 = d[1];
	var b = this1;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this1 = new haxe__$Int64__$_$_$Int64(high,low);
	var this2 = this1;
	var tmp3 = thx_DateTimeUtc.get_hour(this2);
	var this1 = d[0];
	var a = this1;
	var this1 = d[1];
	var b = this1;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this1 = new haxe__$Int64__$_$_$Int64(high,low);
	var this2 = this1;
	var tmp4 = thx_DateTimeUtc.get_minute(this2);
	var this1 = d[0];
	var a = this1;
	var this1 = d[1];
	var b = this1;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this1 = new haxe__$Int64__$_$_$Int64(high,low);
	var this2 = this1;
	return new Date(tmp,tmp1,tmp2,tmp3,tmp4,thx_DateTimeUtc.get_second(this2));
};
date_DateToolsBB.getNextClosedDays = function(dates) {
	var now = thx_DateTimeUtc.now();
	var nextMonth = thx_DateTimeUtc.jump(now,thx_TimePeriod.Week,1);
	var nowStr = "" + thx_DateTimeUtc.getDatePart(now,thx_DateTimeUtc.DATE_PART_YEAR) + "-";
	var i = thx_DateTimeUtc.getDatePart(now,thx_DateTimeUtc.DATE_PART_MONTH);
	var nowStr1 = nowStr + ((i < 10 ? "0" : "") + Std.string(i)) + "-";
	var i = thx_DateTimeUtc.getDatePart(now,thx_DateTimeUtc.DATE_PART_DAY);
	var nowStr = nowStr1 + ((i < 10 ? "0" : "") + Std.string(i));
	haxe_Log.trace("date.DateToolsBB::getNextClosedDays::nowStr",{ fileName : "date/DateToolsBB.hx", lineNumber : 554, className : "date.DateToolsBB", methodName : "getNextClosedDays", customParams : [nowStr]});
	var nextMonthStr = "" + thx_DateTimeUtc.getDatePart(nextMonth,thx_DateTimeUtc.DATE_PART_YEAR) + "-";
	var i = thx_DateTimeUtc.getDatePart(nextMonth,thx_DateTimeUtc.DATE_PART_MONTH);
	var nextMonthStr1 = nextMonthStr + ((i < 10 ? "0" : "") + Std.string(i)) + "-";
	var i = thx_DateTimeUtc.getDatePart(nextMonth,thx_DateTimeUtc.DATE_PART_DAY);
	var nextMonthStr = nextMonthStr1 + ((i < 10 ? "0" : "") + Std.string(i));
	haxe_Log.trace("date.DateToolsBB::getNextClosedDays::nextMonthStr",{ fileName : "date/DateToolsBB.hx", lineNumber : 559, className : "date.DateToolsBB", methodName : "getNextClosedDays", customParams : [nextMonthStr]});
	var _g = [];
	var x = $getIterator(Lambda.filter(dates,function(e) {
		if(e > nowStr) {
			return e < nextMonthStr;
		} else {
			return false;
		}
	}));
	while(x.hasNext()) {
		var x1 = x.next();
		var t = x1.split("-");
		t.reverse();
		_g.push(t.join("."));
	}
	return _g;
};
date_DateToolsBB.DATE_FROM_SWISS_STRING = function(date) {
	var r = new EReg("[0-9]{2}\\.[0-9]{2}\\.[0-9]{4}","gi");
	if(r.match(date)) {
		var t = date.split(".");
		return HxOverrides.strDate("" + t[2] + "-" + t[1] + "-" + t[0]);
	} else {
		throw new haxe_Exception("Date $date is not a XX.XX.XXXX swiss date format");
	}
};
date_DateToolsBB.DATE_FROM_MINUS_REVERSE_STRING = function(date) {
	var r = new EReg("^[0-9]{4}-[0-9]{2}-[0-9]{2}$","gi");
	if(r.match(date)) {
		var t = date.split(".");
		return HxOverrides.strDate("" + t[2] + "-" + t[1] + "-" + t[0]);
	} else {
		throw new haxe_Exception("Date $date is not a XX.XX.XXXX swiss date format");
	}
};
date_DateToolsBB.DATETIME_THX_FROM_SWISS_STRING = function(date) {
	var r = new EReg("[0-9]{2}\\.[0-9]{2}\\.[0-9]{4}","gi");
	if(r.match(date)) {
		var t = date.split(".");
		return thx_DateTime.fromString("" + t[2] + "-" + t[1] + "-" + t[0] + "T00:00:00.000Z");
	} else {
		throw new haxe_Exception("Date $date is not a XX.XX.XXXX swiss date format");
	}
};
date_DateToolsBB.DATETIME_THX_FROM_MINUS_REVERSE_STRING = function(date) {
	var r = new EReg("^[0-9]{4}-[0-9]{2}-[0-9]{2}$","gi");
	if(r.match(date)) {
		var t = date.split(".");
		return thx_DateTime.fromString("" + date + "T00:00:00.000Z");
	} else {
		throw new haxe_Exception("Date $date is not a XXXX-XX-XXXX");
	}
};
var format_csv_Reader = function(separator,$escape,endOfLine) {
	var _gthis = this;
	this.sep = separator != null ? separator : ",";
	if(this.stringLength(this.sep) != 1) {
		throw haxe_Exception.thrown("Separator string \"" + this.sep + "\" not allowed, only single char");
	}
	this.esc = $escape != null ? $escape : "\"";
	if(this.stringLength(this.esc) != 1) {
		throw haxe_Exception.thrown("Escape string \"" + this.esc + "\" not allowed, only single char");
	}
	this.eol = endOfLine != null ? endOfLine : ["\r\n","\n"];
	if(Lambda.has(this.eol,null) || Lambda.has(this.eol,"")) {
		throw haxe_Exception.thrown("EOL sequences can't be empty");
	}
	this.eol.sort(function(a,b) {
		return _gthis.stringLength(b) - _gthis.stringLength(a);
	});
	var _this = this.eol;
	var f = $bind(this,this.stringLength);
	var result = new Array(_this.length);
	var _g = 0;
	var _g1 = _this.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = f(_this[i]);
	}
	this.eolsize = result;
	this.open(null,null);
};
$hxClasses["format.csv.Reader"] = format_csv_Reader;
format_csv_Reader.__name__ = "format.csv.Reader";
format_csv_Reader.readCsv = function(stream,separator,$escape,endOfLine) {
	var p = new format_csv_Reader(separator,$escape,endOfLine);
	p.inp = stream;
	return p;
};
format_csv_Reader.parseCsv = function(text,separator,$escape,endOfLine) {
	var p = new format_csv_Reader(separator,$escape,endOfLine);
	p.buffer = text;
	return p.readAll();
};
format_csv_Reader.read = function(text,separator,$escape,endOfLine) {
	return format_csv_Reader.parseCsv(text,separator,$escape,endOfLine);
};
format_csv_Reader.prototype = {
	sep: null
	,esc: null
	,eol: null
	,inp: null
	,eolsize: null
	,buffer: null
	,pos: null
	,bufferOffset: null
	,cachedToken: null
	,cachedPos: null
	,substring: function(str,pos,length) {
		return HxOverrides.substr(str,pos,length);
	}
	,stringLength: function(str) {
		return str.length;
	}
	,fetchBytes: function(n) {
		if(this.inp == null) {
			return null;
		}
		try {
			var bytes = new haxe_io_Bytes(new ArrayBuffer(n));
			var got = this.inp.readBytes(bytes,0,n);
			return bytes.getString(0,got);
		} catch( _g ) {
			haxe_NativeStackTrace.lastError = _g;
			if(((haxe_Exception.caught(_g).unwrap()) instanceof haxe_io_Eof)) {
				return null;
			} else {
				throw _g;
			}
		}
	}
	,get: function(p,len) {
		var bpos = p - this.bufferOffset;
		if(bpos + len > this.stringLength(this.buffer)) {
			var more = this.fetchBytes(4096);
			if(more != null) {
				this.buffer = this.substring(this.buffer,this.pos - this.bufferOffset) + more;
				this.bufferOffset = this.pos;
				bpos = p - this.bufferOffset;
			}
		}
		var ret = this.substring(this.buffer,bpos,len);
		if(ret != "") {
			return ret;
		} else {
			return null;
		}
	}
	,peekToken: function(skip) {
		if(skip == null) {
			skip = 0;
		}
		var token = this.cachedToken;
		var p = this.pos;
		if(token != null) {
			p = this.cachedPos;
			--skip;
		}
		while(skip-- >= 0) {
			token = this.get(p,1);
			if(token == null) {
				break;
			}
			var _g = 0;
			var _g1 = this.eol.length;
			while(_g < _g1) {
				var i = _g++;
				var t = this.get(p,this.eolsize[i]);
				if(t == this.eol[i]) {
					token = t;
					break;
				}
			}
			p += this.stringLength(token);
			if(this.cachedToken == null) {
				this.cachedToken = token;
				this.cachedPos = p;
			}
		}
		return token;
	}
	,nextToken: function() {
		var ret = this.peekToken();
		if(ret == null) {
			return null;
		}
		this.pos = this.cachedPos;
		this.cachedToken = null;
		return ret;
	}
	,readSafeChar: function() {
		var cur = this.peekToken();
		if(cur == this.sep || cur == this.esc || Lambda.has(this.eol,cur)) {
			return null;
		}
		return this.nextToken();
	}
	,readEscapedChar: function() {
		var cur = this.peekToken();
		if(cur == this.esc) {
			if(this.peekToken(1) != this.esc) {
				return null;
			}
			this.nextToken();
		}
		return this.nextToken();
	}
	,readEscapedString: function() {
		var buf_b = "";
		var x = this.readEscapedChar();
		while(x != null) {
			buf_b += x == null ? "null" : "" + x;
			x = this.readEscapedChar();
		}
		return buf_b;
	}
	,readString: function() {
		var buf_b = "";
		var x = this.readSafeChar();
		while(x != null) {
			buf_b += x == null ? "null" : "" + x;
			x = this.readSafeChar();
		}
		return buf_b;
	}
	,readField: function() {
		var cur = this.peekToken();
		if(cur == this.esc) {
			this.nextToken();
			var s = this.readEscapedString();
			var fi = this.nextToken();
			if(fi != this.esc) {
				throw haxe_Exception.thrown("Missing " + this.esc + " at the end of escaped field " + (s.length > 15 ? HxOverrides.substr(s,0,10) + "[...]" : s));
			}
			return s;
		} else {
			return this.readString();
		}
	}
	,readRecord: function() {
		var r = [];
		r.push(this.readField());
		while(this.peekToken() == this.sep) {
			this.nextToken();
			r.push(this.readField());
		}
		return r;
	}
	,open: function(string,stream) {
		this.buffer = string != null ? string : "";
		this.inp = stream;
		this.pos = 0;
		this.bufferOffset = 0;
		this.cachedToken = null;
		this.cachedPos = 0;
		return this;
	}
	,reset: function(string,stream) {
		return this.open(string,stream);
	}
	,readAll: function() {
		var r = [];
		var nl;
		while(this.peekToken() != null) {
			r.push(this.readRecord());
			nl = this.nextToken();
			if(nl != null && !Lambda.has(this.eol,nl)) {
				throw haxe_Exception.thrown("Unexpected \"" + nl + "\" after record");
			}
		}
		return r;
	}
	,hasNext: function() {
		return this.peekToken() != null;
	}
	,next: function() {
		var r = this.readRecord();
		var nl = this.nextToken();
		if(nl != null && !Lambda.has(this.eol,nl)) {
			throw haxe_Exception.thrown("Unexpected \"" + nl + "\" after record");
		}
		return r;
	}
	,iterator: function() {
		return this;
	}
	,__class__: format_csv_Reader
};
var haxe_StackItem = $hxEnums["haxe.StackItem"] = { __ename__:"haxe.StackItem",__constructs__:null
	,CFunction: {_hx_name:"CFunction",_hx_index:0,__enum__:"haxe.StackItem",toString:$estr}
	,Module: ($_=function(m) { return {_hx_index:1,m:m,__enum__:"haxe.StackItem",toString:$estr}; },$_._hx_name="Module",$_.__params__ = ["m"],$_)
	,FilePos: ($_=function(s,file,line,column) { return {_hx_index:2,s:s,file:file,line:line,column:column,__enum__:"haxe.StackItem",toString:$estr}; },$_._hx_name="FilePos",$_.__params__ = ["s","file","line","column"],$_)
	,Method: ($_=function(classname,method) { return {_hx_index:3,classname:classname,method:method,__enum__:"haxe.StackItem",toString:$estr}; },$_._hx_name="Method",$_.__params__ = ["classname","method"],$_)
	,LocalFunction: ($_=function(v) { return {_hx_index:4,v:v,__enum__:"haxe.StackItem",toString:$estr}; },$_._hx_name="LocalFunction",$_.__params__ = ["v"],$_)
};
haxe_StackItem.__constructs__ = [haxe_StackItem.CFunction,haxe_StackItem.Module,haxe_StackItem.FilePos,haxe_StackItem.Method,haxe_StackItem.LocalFunction];
var haxe_CallStack = {};
haxe_CallStack.callStack = function() {
	return haxe_NativeStackTrace.toHaxe(haxe_NativeStackTrace.callStack());
};
haxe_CallStack.exceptionStack = function(fullStack) {
	if(fullStack == null) {
		fullStack = false;
	}
	var eStack = haxe_NativeStackTrace.toHaxe(haxe_NativeStackTrace.exceptionStack());
	return fullStack ? eStack : haxe_CallStack.subtract(eStack,haxe_CallStack.callStack());
};
haxe_CallStack.toString = function(stack) {
	var b = new StringBuf();
	var _g = 0;
	var _g1 = stack;
	while(_g < _g1.length) {
		var s = _g1[_g];
		++_g;
		b.b += "\nCalled from ";
		haxe_CallStack.itemToString(b,s);
	}
	return b.b;
};
haxe_CallStack.subtract = function(this1,stack) {
	var startIndex = -1;
	var i = -1;
	while(++i < this1.length) {
		var _g = 0;
		var _g1 = stack.length;
		while(_g < _g1) {
			var j = _g++;
			if(haxe_CallStack.equalItems(this1[i],stack[j])) {
				if(startIndex < 0) {
					startIndex = i;
				}
				++i;
				if(i >= this1.length) {
					break;
				}
			} else {
				startIndex = -1;
			}
		}
		if(startIndex >= 0) {
			break;
		}
	}
	if(startIndex >= 0) {
		return this1.slice(0,startIndex);
	} else {
		return this1;
	}
};
haxe_CallStack.equalItems = function(item1,item2) {
	if(item1 == null) {
		if(item2 == null) {
			return true;
		} else {
			return false;
		}
	} else {
		switch(item1._hx_index) {
		case 0:
			if(item2 == null) {
				return false;
			} else if(item2._hx_index == 0) {
				return true;
			} else {
				return false;
			}
			break;
		case 1:
			if(item2 == null) {
				return false;
			} else if(item2._hx_index == 1) {
				var m2 = item2.m;
				var m1 = item1.m;
				return m1 == m2;
			} else {
				return false;
			}
			break;
		case 2:
			if(item2 == null) {
				return false;
			} else if(item2._hx_index == 2) {
				var item21 = item2.s;
				var file2 = item2.file;
				var line2 = item2.line;
				var col2 = item2.column;
				var col1 = item1.column;
				var line1 = item1.line;
				var file1 = item1.file;
				var item11 = item1.s;
				if(file1 == file2 && line1 == line2 && col1 == col2) {
					return haxe_CallStack.equalItems(item11,item21);
				} else {
					return false;
				}
			} else {
				return false;
			}
			break;
		case 3:
			if(item2 == null) {
				return false;
			} else if(item2._hx_index == 3) {
				var class2 = item2.classname;
				var method2 = item2.method;
				var method1 = item1.method;
				var class1 = item1.classname;
				if(class1 == class2) {
					return method1 == method2;
				} else {
					return false;
				}
			} else {
				return false;
			}
			break;
		case 4:
			if(item2 == null) {
				return false;
			} else if(item2._hx_index == 4) {
				var v2 = item2.v;
				var v1 = item1.v;
				return v1 == v2;
			} else {
				return false;
			}
			break;
		}
	}
};
haxe_CallStack.itemToString = function(b,s) {
	switch(s._hx_index) {
	case 0:
		b.b += "a C function";
		break;
	case 1:
		var m = s.m;
		b.b += "module ";
		b.b += m == null ? "null" : "" + m;
		break;
	case 2:
		var s1 = s.s;
		var file = s.file;
		var line = s.line;
		var col = s.column;
		if(s1 != null) {
			haxe_CallStack.itemToString(b,s1);
			b.b += " (";
		}
		b.b += file == null ? "null" : "" + file;
		b.b += " line ";
		b.b += line == null ? "null" : "" + line;
		if(col != null) {
			b.b += " column ";
			b.b += col == null ? "null" : "" + col;
		}
		if(s1 != null) {
			b.b += ")";
		}
		break;
	case 3:
		var cname = s.classname;
		var meth = s.method;
		b.b += Std.string(cname == null ? "<unknown>" : cname);
		b.b += ".";
		b.b += meth == null ? "null" : "" + meth;
		break;
	case 4:
		var n = s.v;
		b.b += "local function #";
		b.b += n == null ? "null" : "" + n;
		break;
	}
};
var haxe_IMap = function() { };
$hxClasses["haxe.IMap"] = haxe_IMap;
haxe_IMap.__name__ = "haxe.IMap";
haxe_IMap.__isInterface__ = true;
haxe_IMap.prototype = {
	get: null
	,set: null
	,exists: null
	,remove: null
	,keys: null
	,iterator: null
	,keyValueIterator: null
	,__class__: haxe_IMap
};
var haxe_Exception = function(message,previous,native) {
	Error.call(this,message);
	this.message = message;
	this.__previousException = previous;
	this.__nativeException = native != null ? native : this;
	this.__skipStack = 0;
	var old = Error.prepareStackTrace;
	Error.prepareStackTrace = function(e) { return e.stack; }
	if(((native) instanceof Error)) {
		this.stack = native.stack;
	} else {
		var e = null;
		if(Error.captureStackTrace) {
			Error.captureStackTrace(this,haxe_Exception);
			e = this;
		} else {
			e = new Error();
			if(typeof(e.stack) == "undefined") {
				try { throw e; } catch(_) {}
				this.__skipStack++;
			}
		}
		this.stack = e.stack;
	}
	Error.prepareStackTrace = old;
};
$hxClasses["haxe.Exception"] = haxe_Exception;
haxe_Exception.__name__ = "haxe.Exception";
haxe_Exception.caught = function(value) {
	if(((value) instanceof haxe_Exception)) {
		return value;
	} else if(((value) instanceof Error)) {
		return new haxe_Exception(value.message,null,value);
	} else {
		return new haxe_ValueException(value,null,value);
	}
};
haxe_Exception.thrown = function(value) {
	if(((value) instanceof haxe_Exception)) {
		return value.get_native();
	} else if(((value) instanceof Error)) {
		return value;
	} else {
		var e = new haxe_ValueException(value);
		e.__skipStack++;
		return e;
	}
};
haxe_Exception.__super__ = Error;
haxe_Exception.prototype = $extend(Error.prototype,{
	__skipStack: null
	,__nativeException: null
	,__previousException: null
	,unwrap: function() {
		return this.__nativeException;
	}
	,toString: function() {
		return this.get_message();
	}
	,details: function() {
		if(this.get_previous() == null) {
			var tmp = "Exception: " + this.toString();
			var tmp1 = this.get_stack();
			return tmp + (tmp1 == null ? "null" : haxe_CallStack.toString(tmp1));
		} else {
			var result = "";
			var e = this;
			var prev = null;
			while(e != null) {
				if(prev == null) {
					var result1 = "Exception: " + e.get_message();
					var tmp = e.get_stack();
					result = result1 + (tmp == null ? "null" : haxe_CallStack.toString(tmp)) + result;
				} else {
					var prevStack = haxe_CallStack.subtract(e.get_stack(),prev.get_stack());
					result = "Exception: " + e.get_message() + (prevStack == null ? "null" : haxe_CallStack.toString(prevStack)) + "\n\nNext " + result;
				}
				prev = e;
				e = e.get_previous();
			}
			return result;
		}
	}
	,__shiftStack: function() {
		this.__skipStack++;
	}
	,get_message: function() {
		return this.message;
	}
	,get_previous: function() {
		return this.__previousException;
	}
	,get_native: function() {
		return this.__nativeException;
	}
	,get_stack: function() {
		var _g = this.__exceptionStack;
		if(_g == null) {
			var value = haxe_NativeStackTrace.toHaxe(haxe_NativeStackTrace.normalize(this.stack),this.__skipStack);
			this.setProperty("__exceptionStack",value);
			return value;
		} else {
			var s = _g;
			return s;
		}
	}
	,setProperty: function(name,value) {
		try {
			Object.defineProperty(this,name,{ value : value});
		} catch( _g ) {
			this[name] = value;
		}
	}
	,__class__: haxe_Exception
	,__properties__: {get_native:"get_native",get_previous:"get_previous",get_stack:"get_stack",get_message:"get_message"}
});
var haxe_Int32 = {};
haxe_Int32.ucompare = function(a,b) {
	if(a < 0) {
		if(b < 0) {
			return ~b - ~a | 0;
		} else {
			return 1;
		}
	}
	if(b < 0) {
		return -1;
	} else {
		return a - b | 0;
	}
};
var haxe_Int64 = {};
haxe_Int64.isInt64 = function(val) {
	return ((val) instanceof haxe__$Int64__$_$_$Int64);
};
haxe_Int64.toString = function(this1) {
	var i = this1;
	var b_high = 0;
	var b_low = 0;
	if(i.high == b_high && i.low == b_low) {
		return "0";
	}
	var str = "";
	var neg = false;
	if(i.high < 0) {
		neg = true;
	}
	var this1 = new haxe__$Int64__$_$_$Int64(0,10);
	var ten = this1;
	while(true) {
		var b_high = 0;
		var b_low = 0;
		if(!(i.high != b_high || i.low != b_low)) {
			break;
		}
		var r = haxe_Int64.divMod(i,ten);
		if(r.modulus.high < 0) {
			var x = r.modulus;
			var high = ~x.high;
			var low = ~x.low + 1 | 0;
			if(low == 0) {
				var ret = high++;
				high = high | 0;
			}
			var this_high = high;
			var this_low = low;
			str = this_low + str;
			var x1 = r.quotient;
			var high1 = ~x1.high;
			var low1 = ~x1.low + 1 | 0;
			if(low1 == 0) {
				var ret1 = high1++;
				high1 = high1 | 0;
			}
			var this1 = new haxe__$Int64__$_$_$Int64(high1,low1);
			i = this1;
		} else {
			str = r.modulus.low + str;
			i = r.quotient;
		}
	}
	if(neg) {
		str = "-" + str;
	}
	return str;
};
haxe_Int64.divMod = function(dividend,divisor) {
	if(divisor.high == 0) {
		switch(divisor.low) {
		case 0:
			throw haxe_Exception.thrown("divide by zero");
		case 1:
			var this1 = new haxe__$Int64__$_$_$Int64(dividend.high,dividend.low);
			var this2 = new haxe__$Int64__$_$_$Int64(0,0);
			return { quotient : this1, modulus : this2};
		}
	}
	var divSign = dividend.high < 0 != divisor.high < 0;
	var modulus;
	if(dividend.high < 0) {
		var high = ~dividend.high;
		var low = ~dividend.low + 1 | 0;
		if(low == 0) {
			var ret = high++;
			high = high | 0;
		}
		var this1 = new haxe__$Int64__$_$_$Int64(high,low);
		modulus = this1;
	} else {
		var this1 = new haxe__$Int64__$_$_$Int64(dividend.high,dividend.low);
		modulus = this1;
	}
	if(divisor.high < 0) {
		var high = ~divisor.high;
		var low = ~divisor.low + 1 | 0;
		if(low == 0) {
			var ret = high++;
			high = high | 0;
		}
		var this1 = new haxe__$Int64__$_$_$Int64(high,low);
		divisor = this1;
	}
	var this1 = new haxe__$Int64__$_$_$Int64(0,0);
	var quotient = this1;
	var this1 = new haxe__$Int64__$_$_$Int64(0,1);
	var mask = this1;
	while(!(divisor.high < 0)) {
		var v = haxe_Int32.ucompare(divisor.high,modulus.high);
		var cmp = v != 0 ? v : haxe_Int32.ucompare(divisor.low,modulus.low);
		var b = 1;
		b &= 63;
		if(b == 0) {
			var this1 = new haxe__$Int64__$_$_$Int64(divisor.high,divisor.low);
			divisor = this1;
		} else if(b < 32) {
			var this2 = new haxe__$Int64__$_$_$Int64(divisor.high << b | divisor.low >>> 32 - b,divisor.low << b);
			divisor = this2;
		} else {
			var this3 = new haxe__$Int64__$_$_$Int64(divisor.low << b - 32,0);
			divisor = this3;
		}
		var b1 = 1;
		b1 &= 63;
		if(b1 == 0) {
			var this4 = new haxe__$Int64__$_$_$Int64(mask.high,mask.low);
			mask = this4;
		} else if(b1 < 32) {
			var this5 = new haxe__$Int64__$_$_$Int64(mask.high << b1 | mask.low >>> 32 - b1,mask.low << b1);
			mask = this5;
		} else {
			var this6 = new haxe__$Int64__$_$_$Int64(mask.low << b1 - 32,0);
			mask = this6;
		}
		if(cmp >= 0) {
			break;
		}
	}
	while(true) {
		var b_high = 0;
		var b_low = 0;
		if(!(mask.high != b_high || mask.low != b_low)) {
			break;
		}
		var v = haxe_Int32.ucompare(modulus.high,divisor.high);
		if((v != 0 ? v : haxe_Int32.ucompare(modulus.low,divisor.low)) >= 0) {
			var this1 = new haxe__$Int64__$_$_$Int64(quotient.high | mask.high,quotient.low | mask.low);
			quotient = this1;
			var high = modulus.high - divisor.high | 0;
			var low = modulus.low - divisor.low | 0;
			if(haxe_Int32.ucompare(modulus.low,divisor.low) < 0) {
				var ret = high--;
				high = high | 0;
			}
			var this2 = new haxe__$Int64__$_$_$Int64(high,low);
			modulus = this2;
		}
		var b = 1;
		b &= 63;
		if(b == 0) {
			var this3 = new haxe__$Int64__$_$_$Int64(mask.high,mask.low);
			mask = this3;
		} else if(b < 32) {
			var this4 = new haxe__$Int64__$_$_$Int64(mask.high >>> b,mask.high << 32 - b | mask.low >>> b);
			mask = this4;
		} else {
			var this5 = new haxe__$Int64__$_$_$Int64(0,mask.high >>> b - 32);
			mask = this5;
		}
		var b1 = 1;
		b1 &= 63;
		if(b1 == 0) {
			var this6 = new haxe__$Int64__$_$_$Int64(divisor.high,divisor.low);
			divisor = this6;
		} else if(b1 < 32) {
			var this7 = new haxe__$Int64__$_$_$Int64(divisor.high >>> b1,divisor.high << 32 - b1 | divisor.low >>> b1);
			divisor = this7;
		} else {
			var this8 = new haxe__$Int64__$_$_$Int64(0,divisor.high >>> b1 - 32);
			divisor = this8;
		}
	}
	if(divSign) {
		var high = ~quotient.high;
		var low = ~quotient.low + 1 | 0;
		if(low == 0) {
			var ret = high++;
			high = high | 0;
		}
		var this1 = new haxe__$Int64__$_$_$Int64(high,low);
		quotient = this1;
	}
	if(dividend.high < 0) {
		var high = ~modulus.high;
		var low = ~modulus.low + 1 | 0;
		if(low == 0) {
			var ret = high++;
			high = high | 0;
		}
		var this1 = new haxe__$Int64__$_$_$Int64(high,low);
		modulus = this1;
	}
	return { quotient : quotient, modulus : modulus};
};
var haxe__$Int64__$_$_$Int64 = function(high,low) {
	this.high = high;
	this.low = low;
};
$hxClasses["haxe._Int64.___Int64"] = haxe__$Int64__$_$_$Int64;
haxe__$Int64__$_$_$Int64.__name__ = "haxe._Int64.___Int64";
haxe__$Int64__$_$_$Int64.prototype = {
	high: null
	,low: null
	,__class__: haxe__$Int64__$_$_$Int64
};
var haxe_Log = function() { };
$hxClasses["haxe.Log"] = haxe_Log;
haxe_Log.__name__ = "haxe.Log";
haxe_Log.formatOutput = function(v,infos) {
	var str = Std.string(v);
	if(infos == null) {
		return str;
	}
	var pstr = infos.fileName + ":" + infos.lineNumber;
	if(infos.customParams != null) {
		var _g = 0;
		var _g1 = infos.customParams;
		while(_g < _g1.length) {
			var v = _g1[_g];
			++_g;
			str += ", " + Std.string(v);
		}
	}
	return pstr + ": " + str;
};
haxe_Log.trace = function(v,infos) {
	var str = haxe_Log.formatOutput(v,infos);
	if(typeof(console) != "undefined" && console.log != null) {
		console.log(str);
	}
};
var haxe_NativeStackTrace = function() { };
$hxClasses["haxe.NativeStackTrace"] = haxe_NativeStackTrace;
haxe_NativeStackTrace.__name__ = "haxe.NativeStackTrace";
haxe_NativeStackTrace.saveStack = function(e) {
	haxe_NativeStackTrace.lastError = e;
};
haxe_NativeStackTrace.callStack = function() {
	var e = new Error("");
	var stack = haxe_NativeStackTrace.tryHaxeStack(e);
	if(typeof(stack) == "undefined") {
		try {
			throw e;
		} catch( _g ) {
		}
		stack = e.stack;
	}
	return haxe_NativeStackTrace.normalize(stack,2);
};
haxe_NativeStackTrace.exceptionStack = function() {
	return haxe_NativeStackTrace.normalize(haxe_NativeStackTrace.tryHaxeStack(haxe_NativeStackTrace.lastError));
};
haxe_NativeStackTrace.toHaxe = function(s,skip) {
	if(skip == null) {
		skip = 0;
	}
	if(s == null) {
		return [];
	} else if(typeof(s) == "string") {
		var stack = s.split("\n");
		if(stack[0] == "Error") {
			stack.shift();
		}
		var m = [];
		var _g = 0;
		var _g1 = stack.length;
		while(_g < _g1) {
			var i = _g++;
			if(skip > i) {
				continue;
			}
			var line = stack[i];
			var matched = line.match(/^    at ([A-Za-z0-9_. ]+) \(([^)]+):([0-9]+):([0-9]+)\)$/);
			if(matched != null) {
				var path = matched[1].split(".");
				if(path[0] == "$hxClasses") {
					path.shift();
				}
				var meth = path.pop();
				var file = matched[2];
				var line1 = Std.parseInt(matched[3]);
				var column = Std.parseInt(matched[4]);
				m.push(haxe_StackItem.FilePos(meth == "Anonymous function" ? haxe_StackItem.LocalFunction() : meth == "Global code" ? null : haxe_StackItem.Method(path.join("."),meth),file,line1,column));
			} else {
				m.push(haxe_StackItem.Module(StringTools.trim(line)));
			}
		}
		return m;
	} else if(skip > 0 && Array.isArray(s)) {
		return s.slice(skip);
	} else {
		return s;
	}
};
haxe_NativeStackTrace.tryHaxeStack = function(e) {
	if(e == null) {
		return [];
	}
	var oldValue = Error.prepareStackTrace;
	Error.prepareStackTrace = haxe_NativeStackTrace.prepareHxStackTrace;
	var stack = e.stack;
	Error.prepareStackTrace = oldValue;
	return stack;
};
haxe_NativeStackTrace.prepareHxStackTrace = function(e,callsites) {
	var stack = [];
	var _g = 0;
	while(_g < callsites.length) {
		var site = callsites[_g];
		++_g;
		if(haxe_NativeStackTrace.wrapCallSite != null) {
			site = haxe_NativeStackTrace.wrapCallSite(site);
		}
		var method = null;
		var fullName = site.getFunctionName();
		if(fullName != null) {
			var idx = fullName.lastIndexOf(".");
			if(idx >= 0) {
				var className = fullName.substring(0,idx);
				var methodName = fullName.substring(idx + 1);
				method = haxe_StackItem.Method(className,methodName);
			} else {
				method = haxe_StackItem.Method(null,fullName);
			}
		}
		var fileName = site.getFileName();
		var fileAddr = fileName == null ? -1 : fileName.indexOf("file:");
		if(haxe_NativeStackTrace.wrapCallSite != null && fileAddr > 0) {
			fileName = fileName.substring(fileAddr + 6);
		}
		stack.push(haxe_StackItem.FilePos(method,fileName,site.getLineNumber(),site.getColumnNumber()));
	}
	return stack;
};
haxe_NativeStackTrace.normalize = function(stack,skipItems) {
	if(skipItems == null) {
		skipItems = 0;
	}
	if(Array.isArray(stack) && skipItems > 0) {
		return stack.slice(skipItems);
	} else if(typeof(stack) == "string") {
		switch(stack.substring(0,6)) {
		case "Error\n":case "Error:":
			++skipItems;
			break;
		default:
		}
		return haxe_NativeStackTrace.skipLines(stack,skipItems);
	} else {
		return stack;
	}
};
haxe_NativeStackTrace.skipLines = function(stack,skip,pos) {
	if(pos == null) {
		pos = 0;
	}
	if(skip > 0) {
		pos = stack.indexOf("\n",pos);
		if(pos < 0) {
			return "";
		} else {
			return haxe_NativeStackTrace.skipLines(stack,--skip,pos + 1);
		}
	} else {
		return stack.substring(pos);
	}
};
var haxe_Resource = function() { };
$hxClasses["haxe.Resource"] = haxe_Resource;
haxe_Resource.__name__ = "haxe.Resource";
haxe_Resource.listNames = function() {
	var _g = [];
	var _g1 = 0;
	var _g2 = haxe_Resource.content;
	while(_g1 < _g2.length) {
		var x = _g2[_g1];
		++_g1;
		_g.push(x.name);
	}
	return _g;
};
haxe_Resource.getString = function(name) {
	var _g = 0;
	var _g1 = haxe_Resource.content;
	while(_g < _g1.length) {
		var x = _g1[_g];
		++_g;
		if(x.name == name) {
			if(x.str != null) {
				return x.str;
			}
			var b = haxe_crypto_Base64.decode(x.data);
			return b.toString();
		}
	}
	return null;
};
haxe_Resource.getBytes = function(name) {
	var _g = 0;
	var _g1 = haxe_Resource.content;
	while(_g < _g1.length) {
		var x = _g1[_g];
		++_g;
		if(x.name == name) {
			if(x.str != null) {
				return haxe_io_Bytes.ofString(x.str);
			}
			return haxe_crypto_Base64.decode(x.data);
		}
	}
	return null;
};
var haxe_Serializer = function() {
	this.buf = new StringBuf();
	this.cache = [];
	this.useCache = haxe_Serializer.USE_CACHE;
	this.useEnumIndex = haxe_Serializer.USE_ENUM_INDEX;
	this.shash = new haxe_ds_StringMap();
	this.scount = 0;
};
$hxClasses["haxe.Serializer"] = haxe_Serializer;
haxe_Serializer.__name__ = "haxe.Serializer";
haxe_Serializer.run = function(v) {
	var s = new haxe_Serializer();
	s.serialize(v);
	return s.toString();
};
haxe_Serializer.prototype = {
	buf: null
	,cache: null
	,shash: null
	,scount: null
	,useCache: null
	,useEnumIndex: null
	,toString: function() {
		return this.buf.b;
	}
	,serializeString: function(s) {
		var x = this.shash.h[s];
		if(x != null) {
			this.buf.b += "R";
			this.buf.b += x == null ? "null" : "" + x;
			return;
		}
		this.shash.h[s] = this.scount++;
		this.buf.b += "y";
		s = encodeURIComponent(s);
		this.buf.b += Std.string(s.length);
		this.buf.b += ":";
		this.buf.b += s == null ? "null" : "" + s;
	}
	,serializeRef: function(v) {
		var vt = typeof(v);
		var _g = 0;
		var _g1 = this.cache.length;
		while(_g < _g1) {
			var i = _g++;
			var ci = this.cache[i];
			if(typeof(ci) == vt && ci == v) {
				this.buf.b += "r";
				this.buf.b += i == null ? "null" : "" + i;
				return true;
			}
		}
		this.cache.push(v);
		return false;
	}
	,serializeFields: function(v) {
		var _g = 0;
		var _g1 = Reflect.fields(v);
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			this.serializeString(f);
			this.serialize(Reflect.field(v,f));
		}
		this.buf.b += "g";
	}
	,serialize: function(v) {
		var _g = Type.typeof(v);
		switch(_g._hx_index) {
		case 0:
			this.buf.b += "n";
			break;
		case 1:
			var v1 = v;
			if(v1 == 0) {
				this.buf.b += "z";
				return;
			}
			this.buf.b += "i";
			this.buf.b += v1 == null ? "null" : "" + v1;
			break;
		case 2:
			var v1 = v;
			if(isNaN(v1)) {
				this.buf.b += "k";
			} else if(!isFinite(v1)) {
				this.buf.b += v1 < 0 ? "m" : "p";
			} else {
				this.buf.b += "d";
				this.buf.b += v1 == null ? "null" : "" + v1;
			}
			break;
		case 3:
			this.buf.b += v ? "t" : "f";
			break;
		case 4:
			if(js_Boot.__instanceof(v,Class)) {
				var className = v.__name__;
				this.buf.b += "A";
				this.serializeString(className);
			} else if(js_Boot.__instanceof(v,Enum)) {
				this.buf.b += "B";
				this.serializeString(v.__ename__);
			} else {
				if(this.useCache && this.serializeRef(v)) {
					return;
				}
				this.buf.b += "o";
				this.serializeFields(v);
			}
			break;
		case 5:
			throw haxe_Exception.thrown("Cannot serialize function");
		case 6:
			var c = _g.c;
			if(c == String) {
				this.serializeString(v);
				return;
			}
			if(this.useCache && this.serializeRef(v)) {
				return;
			}
			switch(c) {
			case Array:
				var ucount = 0;
				this.buf.b += "a";
				var l = v["length"];
				var _g1 = 0;
				var _g2 = l;
				while(_g1 < _g2) {
					var i = _g1++;
					if(v[i] == null) {
						++ucount;
					} else {
						if(ucount > 0) {
							if(ucount == 1) {
								this.buf.b += "n";
							} else {
								this.buf.b += "u";
								this.buf.b += ucount == null ? "null" : "" + ucount;
							}
							ucount = 0;
						}
						this.serialize(v[i]);
					}
				}
				if(ucount > 0) {
					if(ucount == 1) {
						this.buf.b += "n";
					} else {
						this.buf.b += "u";
						this.buf.b += ucount == null ? "null" : "" + ucount;
					}
				}
				this.buf.b += "h";
				break;
			case Date:
				var d = v;
				this.buf.b += "v";
				this.buf.b += Std.string(d.getTime());
				break;
			case haxe_ds_IntMap:
				this.buf.b += "q";
				var v1 = v;
				var k = v1.keys();
				while(k.hasNext()) {
					var k1 = k.next();
					this.buf.b += ":";
					this.buf.b += k1 == null ? "null" : "" + k1;
					this.serialize(v1.h[k1]);
				}
				this.buf.b += "h";
				break;
			case haxe_ds_List:
				this.buf.b += "l";
				var v1 = v;
				var _g_head = v1.h;
				while(_g_head != null) {
					var val = _g_head.item;
					_g_head = _g_head.next;
					var i = val;
					this.serialize(i);
				}
				this.buf.b += "h";
				break;
			case haxe_ds_ObjectMap:
				this.buf.b += "M";
				var v1 = v;
				var k = v1.keys();
				while(k.hasNext()) {
					var k1 = k.next();
					var id = Reflect.field(k1,"__id__");
					Reflect.deleteField(k1,"__id__");
					this.serialize(k1);
					k1["__id__"] = id;
					this.serialize(v1.h[k1.__id__]);
				}
				this.buf.b += "h";
				break;
			case haxe_ds_StringMap:
				this.buf.b += "b";
				var v1 = v;
				var h = v1.h;
				var _g_h = h;
				var _g_keys = Object.keys(h);
				var _g_length = _g_keys.length;
				var _g_current = 0;
				while(_g_current < _g_length) {
					var k = _g_keys[_g_current++];
					this.serializeString(k);
					this.serialize(v1.h[k]);
				}
				this.buf.b += "h";
				break;
			case haxe_io_Bytes:
				var v1 = v;
				this.buf.b += "s";
				this.buf.b += Std.string(Math.ceil(v1.length * 8 / 6));
				this.buf.b += ":";
				var i = 0;
				var max = v1.length - 2;
				var b64 = haxe_Serializer.BASE64_CODES;
				if(b64 == null) {
					var this1 = new Array(haxe_Serializer.BASE64.length);
					b64 = this1;
					var _g1 = 0;
					var _g2 = haxe_Serializer.BASE64.length;
					while(_g1 < _g2) {
						var i1 = _g1++;
						b64[i1] = HxOverrides.cca(haxe_Serializer.BASE64,i1);
					}
					haxe_Serializer.BASE64_CODES = b64;
				}
				while(i < max) {
					var b1 = v1.b[i++];
					var b2 = v1.b[i++];
					var b3 = v1.b[i++];
					this.buf.b += String.fromCodePoint(b64[b1 >> 2]);
					this.buf.b += String.fromCodePoint(b64[(b1 << 4 | b2 >> 4) & 63]);
					this.buf.b += String.fromCodePoint(b64[(b2 << 2 | b3 >> 6) & 63]);
					this.buf.b += String.fromCodePoint(b64[b3 & 63]);
				}
				if(i == max) {
					var b1 = v1.b[i++];
					var b2 = v1.b[i++];
					this.buf.b += String.fromCodePoint(b64[b1 >> 2]);
					this.buf.b += String.fromCodePoint(b64[(b1 << 4 | b2 >> 4) & 63]);
					this.buf.b += String.fromCodePoint(b64[b2 << 2 & 63]);
				} else if(i == max + 1) {
					var b1 = v1.b[i++];
					this.buf.b += String.fromCodePoint(b64[b1 >> 2]);
					this.buf.b += String.fromCodePoint(b64[b1 << 4 & 63]);
				}
				break;
			default:
				if(this.useCache) {
					this.cache.pop();
				}
				if(v.hxSerialize != null) {
					this.buf.b += "C";
					this.serializeString(c.__name__);
					if(this.useCache) {
						this.cache.push(v);
					}
					v.hxSerialize(this);
					this.buf.b += "g";
				} else {
					this.buf.b += "c";
					this.serializeString(c.__name__);
					if(this.useCache) {
						this.cache.push(v);
					}
					this.serializeFields(v);
				}
			}
			break;
		case 7:
			var e = _g.e;
			if(this.useCache) {
				if(this.serializeRef(v)) {
					return;
				}
				this.cache.pop();
			}
			this.buf.b += Std.string(this.useEnumIndex ? "j" : "w");
			this.serializeString(e.__ename__);
			if(this.useEnumIndex) {
				this.buf.b += ":";
				this.buf.b += Std.string(v._hx_index);
			} else {
				var e = v;
				this.serializeString($hxEnums[e.__enum__].__constructs__[e._hx_index]._hx_name);
			}
			this.buf.b += ":";
			var params = Type.enumParameters(v);
			this.buf.b += Std.string(params.length);
			var _g = 0;
			while(_g < params.length) {
				var p = params[_g];
				++_g;
				this.serialize(p);
			}
			if(this.useCache) {
				this.cache.push(v);
			}
			break;
		default:
			throw haxe_Exception.thrown("Cannot serialize " + Std.string(v));
		}
	}
	,__class__: haxe_Serializer
};
var haxe__$Unserializer_DefaultResolver = function() {
};
$hxClasses["haxe._Unserializer.DefaultResolver"] = haxe__$Unserializer_DefaultResolver;
haxe__$Unserializer_DefaultResolver.__name__ = "haxe._Unserializer.DefaultResolver";
haxe__$Unserializer_DefaultResolver.prototype = {
	resolveClass: function(name) {
		return $hxClasses[name];
	}
	,resolveEnum: function(name) {
		return $hxEnums[name];
	}
	,__class__: haxe__$Unserializer_DefaultResolver
};
var haxe_Unserializer = function(buf) {
	this.buf = buf;
	this.length = this.buf.length;
	this.pos = 0;
	this.scache = [];
	this.cache = [];
	var r = haxe_Unserializer.DEFAULT_RESOLVER;
	if(r == null) {
		r = new haxe__$Unserializer_DefaultResolver();
		haxe_Unserializer.DEFAULT_RESOLVER = r;
	}
	this.resolver = r;
};
$hxClasses["haxe.Unserializer"] = haxe_Unserializer;
haxe_Unserializer.__name__ = "haxe.Unserializer";
haxe_Unserializer.initCodes = function() {
	var codes = [];
	var _g = 0;
	var _g1 = haxe_Unserializer.BASE64.length;
	while(_g < _g1) {
		var i = _g++;
		codes[haxe_Unserializer.BASE64.charCodeAt(i)] = i;
	}
	return codes;
};
haxe_Unserializer.run = function(v) {
	return new haxe_Unserializer(v).unserialize();
};
haxe_Unserializer.prototype = {
	buf: null
	,pos: null
	,length: null
	,cache: null
	,scache: null
	,resolver: null
	,readDigits: function() {
		var k = 0;
		var s = false;
		var fpos = this.pos;
		while(true) {
			var c = this.buf.charCodeAt(this.pos);
			if(c != c) {
				break;
			}
			if(c == 45) {
				if(this.pos != fpos) {
					break;
				}
				s = true;
				this.pos++;
				continue;
			}
			if(c < 48 || c > 57) {
				break;
			}
			k = k * 10 + (c - 48);
			this.pos++;
		}
		if(s) {
			k *= -1;
		}
		return k;
	}
	,readFloat: function() {
		var p1 = this.pos;
		while(true) {
			var c = this.buf.charCodeAt(this.pos);
			if(c != c) {
				break;
			}
			if(c >= 43 && c < 58 || c == 101 || c == 69) {
				this.pos++;
			} else {
				break;
			}
		}
		return parseFloat(HxOverrides.substr(this.buf,p1,this.pos - p1));
	}
	,unserializeObject: function(o) {
		while(true) {
			if(this.pos >= this.length) {
				throw haxe_Exception.thrown("Invalid object");
			}
			if(this.buf.charCodeAt(this.pos) == 103) {
				break;
			}
			var k = this.unserialize();
			if(typeof(k) != "string") {
				throw haxe_Exception.thrown("Invalid object key");
			}
			var v = this.unserialize();
			o[k] = v;
		}
		this.pos++;
	}
	,unserializeEnum: function(edecl,tag) {
		if(this.buf.charCodeAt(this.pos++) != 58) {
			throw haxe_Exception.thrown("Invalid enum format");
		}
		var nargs = this.readDigits();
		if(nargs == 0) {
			return Type.createEnum(edecl,tag);
		}
		var args = [];
		while(nargs-- > 0) args.push(this.unserialize());
		return Type.createEnum(edecl,tag,args);
	}
	,unserialize: function() {
		switch(this.buf.charCodeAt(this.pos++)) {
		case 65:
			var name = this.unserialize();
			var cl = this.resolver.resolveClass(name);
			if(cl == null) {
				throw haxe_Exception.thrown("Class not found " + name);
			}
			return cl;
		case 66:
			var name = this.unserialize();
			var e = this.resolver.resolveEnum(name);
			if(e == null) {
				throw haxe_Exception.thrown("Enum not found " + name);
			}
			return e;
		case 67:
			var name = this.unserialize();
			var cl = this.resolver.resolveClass(name);
			if(cl == null) {
				throw haxe_Exception.thrown("Class not found " + name);
			}
			var o = Object.create(cl.prototype);
			this.cache.push(o);
			o.hxUnserialize(this);
			if(this.buf.charCodeAt(this.pos++) != 103) {
				throw haxe_Exception.thrown("Invalid custom data");
			}
			return o;
		case 77:
			var h = new haxe_ds_ObjectMap();
			this.cache.push(h);
			var buf = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) {
				var s = this.unserialize();
				h.set(s,this.unserialize());
			}
			this.pos++;
			return h;
		case 82:
			var n = this.readDigits();
			if(n < 0 || n >= this.scache.length) {
				throw haxe_Exception.thrown("Invalid string reference");
			}
			return this.scache[n];
		case 97:
			var buf = this.buf;
			var a = [];
			this.cache.push(a);
			while(true) {
				var c = this.buf.charCodeAt(this.pos);
				if(c == 104) {
					this.pos++;
					break;
				}
				if(c == 117) {
					this.pos++;
					var n = this.readDigits();
					a[a.length + n - 1] = null;
				} else {
					a.push(this.unserialize());
				}
			}
			return a;
		case 98:
			var h = new haxe_ds_StringMap();
			this.cache.push(h);
			var buf = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) {
				var s = this.unserialize();
				var value = this.unserialize();
				h.h[s] = value;
			}
			this.pos++;
			return h;
		case 99:
			var name = this.unserialize();
			var cl = this.resolver.resolveClass(name);
			if(cl == null) {
				throw haxe_Exception.thrown("Class not found " + name);
			}
			var o = Object.create(cl.prototype);
			this.cache.push(o);
			this.unserializeObject(o);
			return o;
		case 100:
			return this.readFloat();
		case 102:
			return false;
		case 105:
			return this.readDigits();
		case 106:
			var name = this.unserialize();
			var edecl = this.resolver.resolveEnum(name);
			if(edecl == null) {
				throw haxe_Exception.thrown("Enum not found " + name);
			}
			this.pos++;
			var index = this.readDigits();
			var _this = edecl.__constructs__;
			var result = new Array(_this.length);
			var _g = 0;
			var _g1 = _this.length;
			while(_g < _g1) {
				var i = _g++;
				result[i] = _this[i]._hx_name;
			}
			var tag = result[index];
			if(tag == null) {
				throw haxe_Exception.thrown("Unknown enum index " + name + "@" + index);
			}
			var e = this.unserializeEnum(edecl,tag);
			this.cache.push(e);
			return e;
		case 107:
			return NaN;
		case 108:
			var l = new haxe_ds_List();
			this.cache.push(l);
			var buf = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) l.add(this.unserialize());
			this.pos++;
			return l;
		case 109:
			return -Infinity;
		case 110:
			return null;
		case 111:
			var o = { };
			this.cache.push(o);
			this.unserializeObject(o);
			return o;
		case 112:
			return Infinity;
		case 113:
			var h = new haxe_ds_IntMap();
			this.cache.push(h);
			var buf = this.buf;
			var c = this.buf.charCodeAt(this.pos++);
			while(c == 58) {
				var i = this.readDigits();
				var value = this.unserialize();
				h.h[i] = value;
				c = this.buf.charCodeAt(this.pos++);
			}
			if(c != 104) {
				throw haxe_Exception.thrown("Invalid IntMap format");
			}
			return h;
		case 114:
			var n = this.readDigits();
			if(n < 0 || n >= this.cache.length) {
				throw haxe_Exception.thrown("Invalid reference");
			}
			return this.cache[n];
		case 115:
			var len = this.readDigits();
			var buf = this.buf;
			if(this.buf.charCodeAt(this.pos++) != 58 || this.length - this.pos < len) {
				throw haxe_Exception.thrown("Invalid bytes length");
			}
			var codes = haxe_Unserializer.CODES;
			if(codes == null) {
				codes = haxe_Unserializer.initCodes();
				haxe_Unserializer.CODES = codes;
			}
			var i = this.pos;
			var rest = len & 3;
			var size = (len >> 2) * 3 + (rest >= 2 ? rest - 1 : 0);
			var max = i + (len - rest);
			var bytes = new haxe_io_Bytes(new ArrayBuffer(size));
			var bpos = 0;
			while(i < max) {
				var c1 = codes[buf.charCodeAt(i++)];
				var c2 = codes[buf.charCodeAt(i++)];
				bytes.b[bpos++] = c1 << 2 | c2 >> 4;
				var c3 = codes[buf.charCodeAt(i++)];
				bytes.b[bpos++] = c2 << 4 | c3 >> 2;
				var c4 = codes[buf.charCodeAt(i++)];
				bytes.b[bpos++] = c3 << 6 | c4;
			}
			if(rest >= 2) {
				var c1 = codes[buf.charCodeAt(i++)];
				var c2 = codes[buf.charCodeAt(i++)];
				bytes.b[bpos++] = c1 << 2 | c2 >> 4;
				if(rest == 3) {
					var c3 = codes[buf.charCodeAt(i++)];
					bytes.b[bpos++] = c2 << 4 | c3 >> 2;
				}
			}
			this.pos += len;
			this.cache.push(bytes);
			return bytes;
		case 116:
			return true;
		case 118:
			var d;
			if(this.buf.charCodeAt(this.pos) >= 48 && this.buf.charCodeAt(this.pos) <= 57 && this.buf.charCodeAt(this.pos + 1) >= 48 && this.buf.charCodeAt(this.pos + 1) <= 57 && this.buf.charCodeAt(this.pos + 2) >= 48 && this.buf.charCodeAt(this.pos + 2) <= 57 && this.buf.charCodeAt(this.pos + 3) >= 48 && this.buf.charCodeAt(this.pos + 3) <= 57 && this.buf.charCodeAt(this.pos + 4) == 45) {
				d = HxOverrides.strDate(HxOverrides.substr(this.buf,this.pos,19));
				this.pos += 19;
			} else {
				d = new Date(this.readFloat());
			}
			this.cache.push(d);
			return d;
		case 119:
			var name = this.unserialize();
			var edecl = this.resolver.resolveEnum(name);
			if(edecl == null) {
				throw haxe_Exception.thrown("Enum not found " + name);
			}
			var e = this.unserializeEnum(edecl,this.unserialize());
			this.cache.push(e);
			return e;
		case 120:
			throw haxe_Exception.thrown(this.unserialize());
		case 121:
			var len = this.readDigits();
			if(this.buf.charCodeAt(this.pos++) != 58 || this.length - this.pos < len) {
				throw haxe_Exception.thrown("Invalid string length");
			}
			var s = HxOverrides.substr(this.buf,this.pos,len);
			this.pos += len;
			s = decodeURIComponent(s.split("+").join(" "));
			this.scache.push(s);
			return s;
		case 122:
			return 0;
		default:
		}
		this.pos--;
		throw haxe_Exception.thrown("Invalid char " + this.buf.charAt(this.pos) + " at position " + this.pos);
	}
	,__class__: haxe_Unserializer
};
var haxe_ValueException = function(value,previous,native) {
	haxe_Exception.call(this,String(value),previous,native);
	this.value = value;
	this.__skipStack++;
};
$hxClasses["haxe.ValueException"] = haxe_ValueException;
haxe_ValueException.__name__ = "haxe.ValueException";
haxe_ValueException.__super__ = haxe_Exception;
haxe_ValueException.prototype = $extend(haxe_Exception.prototype,{
	value: null
	,unwrap: function() {
		return this.value;
	}
	,__class__: haxe_ValueException
});
var haxe_io_Bytes = function(data) {
	this.length = data.byteLength;
	this.b = new Uint8Array(data);
	this.b.bufferValue = data;
	data.hxBytes = this;
	data.bytes = this.b;
};
$hxClasses["haxe.io.Bytes"] = haxe_io_Bytes;
haxe_io_Bytes.__name__ = "haxe.io.Bytes";
haxe_io_Bytes.ofString = function(s,encoding) {
	if(encoding == haxe_io_Encoding.RawNative) {
		var buf = new Uint8Array(s.length << 1);
		var _g = 0;
		var _g1 = s.length;
		while(_g < _g1) {
			var i = _g++;
			var c = s.charCodeAt(i);
			buf[i << 1] = c & 255;
			buf[i << 1 | 1] = c >> 8;
		}
		return new haxe_io_Bytes(buf.buffer);
	}
	var a = [];
	var i = 0;
	while(i < s.length) {
		var c = s.charCodeAt(i++);
		if(55296 <= c && c <= 56319) {
			c = c - 55232 << 10 | s.charCodeAt(i++) & 1023;
		}
		if(c <= 127) {
			a.push(c);
		} else if(c <= 2047) {
			a.push(192 | c >> 6);
			a.push(128 | c & 63);
		} else if(c <= 65535) {
			a.push(224 | c >> 12);
			a.push(128 | c >> 6 & 63);
			a.push(128 | c & 63);
		} else {
			a.push(240 | c >> 18);
			a.push(128 | c >> 12 & 63);
			a.push(128 | c >> 6 & 63);
			a.push(128 | c & 63);
		}
	}
	return new haxe_io_Bytes(new Uint8Array(a).buffer);
};
haxe_io_Bytes.ofData = function(b) {
	var hb = b.hxBytes;
	if(hb != null) {
		return hb;
	}
	return new haxe_io_Bytes(b);
};
haxe_io_Bytes.prototype = {
	length: null
	,b: null
	,getString: function(pos,len,encoding) {
		if(pos < 0 || len < 0 || pos + len > this.length) {
			throw haxe_Exception.thrown(haxe_io_Error.OutsideBounds);
		}
		if(encoding == null) {
			encoding = haxe_io_Encoding.UTF8;
		}
		var s = "";
		var b = this.b;
		var i = pos;
		var max = pos + len;
		switch(encoding._hx_index) {
		case 0:
			var debug = pos > 0;
			while(i < max) {
				var c = b[i++];
				if(c < 128) {
					if(c == 0) {
						break;
					}
					s += String.fromCodePoint(c);
				} else if(c < 224) {
					var code = (c & 63) << 6 | b[i++] & 127;
					s += String.fromCodePoint(code);
				} else if(c < 240) {
					var c2 = b[i++];
					var code1 = (c & 31) << 12 | (c2 & 127) << 6 | b[i++] & 127;
					s += String.fromCodePoint(code1);
				} else {
					var c21 = b[i++];
					var c3 = b[i++];
					var u = (c & 15) << 18 | (c21 & 127) << 12 | (c3 & 127) << 6 | b[i++] & 127;
					s += String.fromCodePoint(u);
				}
			}
			break;
		case 1:
			while(i < max) {
				var c = b[i++] | b[i++] << 8;
				s += String.fromCodePoint(c);
			}
			break;
		}
		return s;
	}
	,toString: function() {
		return this.getString(0,this.length);
	}
	,__class__: haxe_io_Bytes
};
var haxe_io_Encoding = $hxEnums["haxe.io.Encoding"] = { __ename__:"haxe.io.Encoding",__constructs__:null
	,UTF8: {_hx_name:"UTF8",_hx_index:0,__enum__:"haxe.io.Encoding",toString:$estr}
	,RawNative: {_hx_name:"RawNative",_hx_index:1,__enum__:"haxe.io.Encoding",toString:$estr}
};
haxe_io_Encoding.__constructs__ = [haxe_io_Encoding.UTF8,haxe_io_Encoding.RawNative];
var haxe_crypto_Base64 = function() { };
$hxClasses["haxe.crypto.Base64"] = haxe_crypto_Base64;
haxe_crypto_Base64.__name__ = "haxe.crypto.Base64";
haxe_crypto_Base64.encode = function(bytes,complement) {
	if(complement == null) {
		complement = true;
	}
	var str = new haxe_crypto_BaseCode(haxe_crypto_Base64.BYTES).encodeBytes(bytes).toString();
	if(complement) {
		switch(bytes.length % 3) {
		case 1:
			str += "==";
			break;
		case 2:
			str += "=";
			break;
		default:
		}
	}
	return str;
};
haxe_crypto_Base64.decode = function(str,complement) {
	if(complement == null) {
		complement = true;
	}
	if(complement) {
		while(HxOverrides.cca(str,str.length - 1) == 61) str = HxOverrides.substr(str,0,-1);
	}
	return new haxe_crypto_BaseCode(haxe_crypto_Base64.BYTES).decodeBytes(haxe_io_Bytes.ofString(str));
};
var haxe_crypto_BaseCode = function(base) {
	var len = base.length;
	var nbits = 1;
	while(len > 1 << nbits) ++nbits;
	if(nbits > 8 || len != 1 << nbits) {
		throw haxe_Exception.thrown("BaseCode : base length must be a power of two.");
	}
	this.base = base;
	this.nbits = nbits;
};
$hxClasses["haxe.crypto.BaseCode"] = haxe_crypto_BaseCode;
haxe_crypto_BaseCode.__name__ = "haxe.crypto.BaseCode";
haxe_crypto_BaseCode.prototype = {
	base: null
	,nbits: null
	,tbl: null
	,encodeBytes: function(b) {
		var nbits = this.nbits;
		var base = this.base;
		var size = b.length * 8 / nbits | 0;
		var out = new haxe_io_Bytes(new ArrayBuffer(size + (b.length * 8 % nbits == 0 ? 0 : 1)));
		var buf = 0;
		var curbits = 0;
		var mask = (1 << nbits) - 1;
		var pin = 0;
		var pout = 0;
		while(pout < size) {
			while(curbits < nbits) {
				curbits += 8;
				buf <<= 8;
				buf |= b.b[pin++];
			}
			curbits -= nbits;
			out.b[pout++] = base.b[buf >> curbits & mask];
		}
		if(curbits > 0) {
			out.b[pout++] = base.b[buf << nbits - curbits & mask];
		}
		return out;
	}
	,initTable: function() {
		var tbl = [];
		var _g = 0;
		while(_g < 256) {
			var i = _g++;
			tbl[i] = -1;
		}
		var _g = 0;
		var _g1 = this.base.length;
		while(_g < _g1) {
			var i = _g++;
			tbl[this.base.b[i]] = i;
		}
		this.tbl = tbl;
	}
	,decodeBytes: function(b) {
		var nbits = this.nbits;
		var base = this.base;
		if(this.tbl == null) {
			this.initTable();
		}
		var tbl = this.tbl;
		var size = b.length * nbits >> 3;
		var out = new haxe_io_Bytes(new ArrayBuffer(size));
		var buf = 0;
		var curbits = 0;
		var pin = 0;
		var pout = 0;
		while(pout < size) {
			while(curbits < 8) {
				curbits += nbits;
				buf <<= nbits;
				var i = tbl[b.b[pin++]];
				if(i == -1) {
					throw haxe_Exception.thrown("BaseCode : invalid encoded char");
				}
				buf |= i;
			}
			curbits -= 8;
			out.b[pout++] = buf >> curbits & 255;
		}
		return out;
	}
	,__class__: haxe_crypto_BaseCode
};
var haxe_ds_ArraySort = function() { };
$hxClasses["haxe.ds.ArraySort"] = haxe_ds_ArraySort;
haxe_ds_ArraySort.__name__ = "haxe.ds.ArraySort";
haxe_ds_ArraySort.sort = function(a,cmp) {
	haxe_ds_ArraySort.rec(a,cmp,0,a.length);
};
haxe_ds_ArraySort.rec = function(a,cmp,from,to) {
	var middle = from + to >> 1;
	if(to - from < 12) {
		if(to <= from) {
			return;
		}
		var _g = from + 1;
		var _g1 = to;
		while(_g < _g1) {
			var i = _g++;
			var j = i;
			while(j > from) {
				if(cmp(a[j],a[j - 1]) < 0) {
					haxe_ds_ArraySort.swap(a,j - 1,j);
				} else {
					break;
				}
				--j;
			}
		}
		return;
	}
	haxe_ds_ArraySort.rec(a,cmp,from,middle);
	haxe_ds_ArraySort.rec(a,cmp,middle,to);
	haxe_ds_ArraySort.doMerge(a,cmp,from,middle,to,middle - from,to - middle);
};
haxe_ds_ArraySort.doMerge = function(a,cmp,from,pivot,to,len1,len2) {
	var first_cut;
	var second_cut;
	var len11;
	var len22;
	if(len1 == 0 || len2 == 0) {
		return;
	}
	if(len1 + len2 == 2) {
		if(cmp(a[pivot],a[from]) < 0) {
			haxe_ds_ArraySort.swap(a,pivot,from);
		}
		return;
	}
	if(len1 > len2) {
		len11 = len1 >> 1;
		first_cut = from + len11;
		second_cut = haxe_ds_ArraySort.lower(a,cmp,pivot,to,first_cut);
		len22 = second_cut - pivot;
	} else {
		len22 = len2 >> 1;
		second_cut = pivot + len22;
		first_cut = haxe_ds_ArraySort.upper(a,cmp,from,pivot,second_cut);
		len11 = first_cut - from;
	}
	haxe_ds_ArraySort.rotate(a,cmp,first_cut,pivot,second_cut);
	var new_mid = first_cut + len22;
	haxe_ds_ArraySort.doMerge(a,cmp,from,first_cut,new_mid,len11,len22);
	haxe_ds_ArraySort.doMerge(a,cmp,new_mid,second_cut,to,len1 - len11,len2 - len22);
};
haxe_ds_ArraySort.rotate = function(a,cmp,from,mid,to) {
	if(from == mid || mid == to) {
		return;
	}
	var n = haxe_ds_ArraySort.gcd(to - from,mid - from);
	while(n-- != 0) {
		var val = a[from + n];
		var shift = mid - from;
		var p1 = from + n;
		var p2 = from + n + shift;
		while(p2 != from + n) {
			a[p1] = a[p2];
			p1 = p2;
			if(to - p2 > shift) {
				p2 += shift;
			} else {
				p2 = from + (shift - (to - p2));
			}
		}
		a[p1] = val;
	}
};
haxe_ds_ArraySort.gcd = function(m,n) {
	while(n != 0) {
		var t = m % n;
		m = n;
		n = t;
	}
	return m;
};
haxe_ds_ArraySort.upper = function(a,cmp,from,to,val) {
	var len = to - from;
	var half;
	var mid;
	while(len > 0) {
		half = len >> 1;
		mid = from + half;
		if(cmp(a[val],a[mid]) < 0) {
			len = half;
		} else {
			from = mid + 1;
			len = len - half - 1;
		}
	}
	return from;
};
haxe_ds_ArraySort.lower = function(a,cmp,from,to,val) {
	var len = to - from;
	var half;
	var mid;
	while(len > 0) {
		half = len >> 1;
		mid = from + half;
		if(cmp(a[mid],a[val]) < 0) {
			from = mid + 1;
			len = len - half - 1;
		} else {
			len = half;
		}
	}
	return from;
};
haxe_ds_ArraySort.swap = function(a,i,j) {
	var tmp = a[i];
	a[i] = a[j];
	a[j] = tmp;
};
var haxe_ds_BalancedTree = function() {
};
$hxClasses["haxe.ds.BalancedTree"] = haxe_ds_BalancedTree;
haxe_ds_BalancedTree.__name__ = "haxe.ds.BalancedTree";
haxe_ds_BalancedTree.__interfaces__ = [haxe_IMap];
haxe_ds_BalancedTree.iteratorLoop = function(node,acc) {
	if(node != null) {
		haxe_ds_BalancedTree.iteratorLoop(node.left,acc);
		acc.push(node.value);
		haxe_ds_BalancedTree.iteratorLoop(node.right,acc);
	}
};
haxe_ds_BalancedTree.prototype = {
	root: null
	,set: function(key,value) {
		this.root = this.setLoop(key,value,this.root);
	}
	,get: function(key) {
		var node = this.root;
		while(node != null) {
			var c = this.compare(key,node.key);
			if(c == 0) {
				return node.value;
			}
			if(c < 0) {
				node = node.left;
			} else {
				node = node.right;
			}
		}
		return null;
	}
	,remove: function(key) {
		try {
			this.root = this.removeLoop(key,this.root);
			return true;
		} catch( _g ) {
			haxe_NativeStackTrace.lastError = _g;
			if(typeof(haxe_Exception.caught(_g).unwrap()) == "string") {
				return false;
			} else {
				throw _g;
			}
		}
	}
	,exists: function(key) {
		var node = this.root;
		while(node != null) {
			var c = this.compare(key,node.key);
			if(c == 0) {
				return true;
			} else if(c < 0) {
				node = node.left;
			} else {
				node = node.right;
			}
		}
		return false;
	}
	,iterator: function() {
		var ret = [];
		haxe_ds_BalancedTree.iteratorLoop(this.root,ret);
		return new haxe_iterators_ArrayIterator(ret);
	}
	,keyValueIterator: function() {
		return new haxe_iterators_MapKeyValueIterator(this);
	}
	,keys: function() {
		var ret = [];
		this.keysLoop(this.root,ret);
		return new haxe_iterators_ArrayIterator(ret);
	}
	,setLoop: function(k,v,node) {
		if(node == null) {
			return new haxe_ds_TreeNode(null,k,v,null);
		}
		var c = this.compare(k,node.key);
		if(c == 0) {
			return new haxe_ds_TreeNode(node.left,k,v,node.right,node == null ? 0 : node._height);
		} else if(c < 0) {
			var nl = this.setLoop(k,v,node.left);
			return this.balance(nl,node.key,node.value,node.right);
		} else {
			var nr = this.setLoop(k,v,node.right);
			return this.balance(node.left,node.key,node.value,nr);
		}
	}
	,removeLoop: function(k,node) {
		if(node == null) {
			throw haxe_Exception.thrown("Not_found");
		}
		var c = this.compare(k,node.key);
		if(c == 0) {
			return this.merge(node.left,node.right);
		} else if(c < 0) {
			return this.balance(this.removeLoop(k,node.left),node.key,node.value,node.right);
		} else {
			return this.balance(node.left,node.key,node.value,this.removeLoop(k,node.right));
		}
	}
	,keysLoop: function(node,acc) {
		if(node != null) {
			this.keysLoop(node.left,acc);
			acc.push(node.key);
			this.keysLoop(node.right,acc);
		}
	}
	,merge: function(t1,t2) {
		if(t1 == null) {
			return t2;
		}
		if(t2 == null) {
			return t1;
		}
		var t = this.minBinding(t2);
		return this.balance(t1,t.key,t.value,this.removeMinBinding(t2));
	}
	,minBinding: function(t) {
		if(t == null) {
			throw haxe_Exception.thrown("Not_found");
		} else if(t.left == null) {
			return t;
		} else {
			return this.minBinding(t.left);
		}
	}
	,removeMinBinding: function(t) {
		if(t.left == null) {
			return t.right;
		} else {
			return this.balance(this.removeMinBinding(t.left),t.key,t.value,t.right);
		}
	}
	,balance: function(l,k,v,r) {
		var hl = l == null ? 0 : l._height;
		var hr = r == null ? 0 : r._height;
		if(hl > hr + 2) {
			var _this = l.left;
			var _this1 = l.right;
			if((_this == null ? 0 : _this._height) >= (_this1 == null ? 0 : _this1._height)) {
				return new haxe_ds_TreeNode(l.left,l.key,l.value,new haxe_ds_TreeNode(l.right,k,v,r));
			} else {
				return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l.left,l.key,l.value,l.right.left),l.right.key,l.right.value,new haxe_ds_TreeNode(l.right.right,k,v,r));
			}
		} else if(hr > hl + 2) {
			var _this = r.right;
			var _this1 = r.left;
			if((_this == null ? 0 : _this._height) > (_this1 == null ? 0 : _this1._height)) {
				return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l,k,v,r.left),r.key,r.value,r.right);
			} else {
				return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l,k,v,r.left.left),r.left.key,r.left.value,new haxe_ds_TreeNode(r.left.right,r.key,r.value,r.right));
			}
		} else {
			return new haxe_ds_TreeNode(l,k,v,r,(hl > hr ? hl : hr) + 1);
		}
	}
	,compare: function(k1,k2) {
		return Reflect.compare(k1,k2);
	}
	,toString: function() {
		if(this.root == null) {
			return "{}";
		} else {
			return "{" + this.root.toString() + "}";
		}
	}
	,__class__: haxe_ds_BalancedTree
};
var haxe_ds_TreeNode = function(l,k,v,r,h) {
	if(h == null) {
		h = -1;
	}
	this.left = l;
	this.key = k;
	this.value = v;
	this.right = r;
	if(h == -1) {
		var tmp;
		var _this = this.left;
		var _this1 = this.right;
		if((_this == null ? 0 : _this._height) > (_this1 == null ? 0 : _this1._height)) {
			var _this = this.left;
			tmp = _this == null ? 0 : _this._height;
		} else {
			var _this = this.right;
			tmp = _this == null ? 0 : _this._height;
		}
		this._height = tmp + 1;
	} else {
		this._height = h;
	}
};
$hxClasses["haxe.ds.TreeNode"] = haxe_ds_TreeNode;
haxe_ds_TreeNode.__name__ = "haxe.ds.TreeNode";
haxe_ds_TreeNode.prototype = {
	left: null
	,right: null
	,key: null
	,value: null
	,_height: null
	,toString: function() {
		return (this.left == null ? "" : this.left.toString() + ", ") + ("" + Std.string(this.key) + "=" + Std.string(this.value)) + (this.right == null ? "" : ", " + this.right.toString());
	}
	,__class__: haxe_ds_TreeNode
};
var haxe_ds_EnumValueMap = function() {
	haxe_ds_BalancedTree.call(this);
};
$hxClasses["haxe.ds.EnumValueMap"] = haxe_ds_EnumValueMap;
haxe_ds_EnumValueMap.__name__ = "haxe.ds.EnumValueMap";
haxe_ds_EnumValueMap.__interfaces__ = [haxe_IMap];
haxe_ds_EnumValueMap.__super__ = haxe_ds_BalancedTree;
haxe_ds_EnumValueMap.prototype = $extend(haxe_ds_BalancedTree.prototype,{
	compare: function(k1,k2) {
		var d = k1._hx_index - k2._hx_index;
		if(d != 0) {
			return d;
		}
		var p1 = Type.enumParameters(k1);
		var p2 = Type.enumParameters(k2);
		if(p1.length == 0 && p2.length == 0) {
			return 0;
		}
		return this.compareArgs(p1,p2);
	}
	,compareArgs: function(a1,a2) {
		var ld = a1.length - a2.length;
		if(ld != 0) {
			return ld;
		}
		var _g = 0;
		var _g1 = a1.length;
		while(_g < _g1) {
			var i = _g++;
			var d = this.compareArg(a1[i],a2[i]);
			if(d != 0) {
				return d;
			}
		}
		return 0;
	}
	,compareArg: function(v1,v2) {
		if(Reflect.isEnumValue(v1) && Reflect.isEnumValue(v2)) {
			return this.compare(v1,v2);
		} else if(((v1) instanceof Array) && ((v2) instanceof Array)) {
			return this.compareArgs(v1,v2);
		} else {
			return Reflect.compare(v1,v2);
		}
	}
	,__class__: haxe_ds_EnumValueMap
});
var haxe_ds_IntMap = function() {
	this.h = { };
};
$hxClasses["haxe.ds.IntMap"] = haxe_ds_IntMap;
haxe_ds_IntMap.__name__ = "haxe.ds.IntMap";
haxe_ds_IntMap.__interfaces__ = [haxe_IMap];
haxe_ds_IntMap.prototype = {
	h: null
	,set: function(key,value) {
		this.h[key] = value;
	}
	,get: function(key) {
		return this.h[key];
	}
	,exists: function(key) {
		return this.h.hasOwnProperty(key);
	}
	,remove: function(key) {
		if(!this.h.hasOwnProperty(key)) {
			return false;
		}
		delete(this.h[key]);
		return true;
	}
	,keys: function() {
		var a = [];
		for( var key in this.h ) if(this.h.hasOwnProperty(key)) a.push(key | 0);
		return new haxe_iterators_ArrayIterator(a);
	}
	,iterator: function() {
		return { ref : this.h, it : this.keys(), hasNext : function() {
			return this.it.hasNext();
		}, next : function() {
			var i = this.it.next();
			return this.ref[i];
		}};
	}
	,keyValueIterator: function() {
		return new haxe_iterators_MapKeyValueIterator(this);
	}
	,__class__: haxe_ds_IntMap
};
var haxe_ds_List = function() {
	this.length = 0;
};
$hxClasses["haxe.ds.List"] = haxe_ds_List;
haxe_ds_List.__name__ = "haxe.ds.List";
haxe_ds_List.prototype = {
	h: null
	,q: null
	,length: null
	,add: function(item) {
		var x = new haxe_ds__$List_ListNode(item,null);
		if(this.h == null) {
			this.h = x;
		} else {
			this.q.next = x;
		}
		this.q = x;
		this.length++;
	}
	,__class__: haxe_ds_List
};
var haxe_ds__$List_ListNode = function(item,next) {
	this.item = item;
	this.next = next;
};
$hxClasses["haxe.ds._List.ListNode"] = haxe_ds__$List_ListNode;
haxe_ds__$List_ListNode.__name__ = "haxe.ds._List.ListNode";
haxe_ds__$List_ListNode.prototype = {
	item: null
	,next: null
	,__class__: haxe_ds__$List_ListNode
};
var haxe_ds_ObjectMap = function() {
	this.h = { __keys__ : { }};
};
$hxClasses["haxe.ds.ObjectMap"] = haxe_ds_ObjectMap;
haxe_ds_ObjectMap.__name__ = "haxe.ds.ObjectMap";
haxe_ds_ObjectMap.__interfaces__ = [haxe_IMap];
haxe_ds_ObjectMap.prototype = {
	h: null
	,set: function(key,value) {
		var id = key.__id__;
		if(id == null) {
			id = (key.__id__ = $global.$haxeUID++);
		}
		this.h[id] = value;
		this.h.__keys__[id] = key;
	}
	,get: function(key) {
		return this.h[key.__id__];
	}
	,exists: function(key) {
		return this.h.__keys__[key.__id__] != null;
	}
	,remove: function(key) {
		var id = key.__id__;
		if(this.h.__keys__[id] == null) {
			return false;
		}
		delete(this.h[id]);
		delete(this.h.__keys__[id]);
		return true;
	}
	,keys: function() {
		var a = [];
		for( var key in this.h.__keys__ ) {
		if(this.h.hasOwnProperty(key)) {
			a.push(this.h.__keys__[key]);
		}
		}
		return new haxe_iterators_ArrayIterator(a);
	}
	,iterator: function() {
		return { ref : this.h, it : this.keys(), hasNext : function() {
			return this.it.hasNext();
		}, next : function() {
			var i = this.it.next();
			return this.ref[i.__id__];
		}};
	}
	,keyValueIterator: function() {
		return new haxe_iterators_MapKeyValueIterator(this);
	}
	,__class__: haxe_ds_ObjectMap
};
var haxe_ds_Option = $hxEnums["haxe.ds.Option"] = { __ename__:"haxe.ds.Option",__constructs__:null
	,Some: ($_=function(v) { return {_hx_index:0,v:v,__enum__:"haxe.ds.Option",toString:$estr}; },$_._hx_name="Some",$_.__params__ = ["v"],$_)
	,None: {_hx_name:"None",_hx_index:1,__enum__:"haxe.ds.Option",toString:$estr}
};
haxe_ds_Option.__constructs__ = [haxe_ds_Option.Some,haxe_ds_Option.None];
var haxe_ds_StringMap = function() {
	this.h = Object.create(null);
};
$hxClasses["haxe.ds.StringMap"] = haxe_ds_StringMap;
haxe_ds_StringMap.__name__ = "haxe.ds.StringMap";
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
haxe_ds_StringMap.createCopy = function(h) {
	var copy = new haxe_ds_StringMap();
	for (var key in h) copy.h[key] = h[key];
	return copy;
};
haxe_ds_StringMap.stringify = function(h) {
	var s = "{";
	var first = true;
	for (var key in h) {
		if (first) first = false; else s += ',';
		s += key + ' => ' + Std.string(h[key]);
	}
	return s + "}";
};
haxe_ds_StringMap.prototype = {
	h: null
	,exists: function(key) {
		return Object.prototype.hasOwnProperty.call(this.h,key);
	}
	,get: function(key) {
		return this.h[key];
	}
	,set: function(key,value) {
		this.h[key] = value;
	}
	,remove: function(key) {
		if(Object.prototype.hasOwnProperty.call(this.h,key)) {
			delete(this.h[key]);
			return true;
		} else {
			return false;
		}
	}
	,keys: function() {
		return new haxe_ds__$StringMap_StringMapKeyIterator(this.h);
	}
	,iterator: function() {
		return new haxe_ds__$StringMap_StringMapValueIterator(this.h);
	}
	,keyValueIterator: function() {
		return new haxe_ds__$StringMap_StringMapKeyValueIterator(this.h);
	}
	,toString: function() {
		return haxe_ds_StringMap.stringify(this.h);
	}
	,__class__: haxe_ds_StringMap
};
var haxe_ds__$StringMap_StringMapKeyIterator = function(h) {
	this.h = h;
	this.keys = Object.keys(h);
	this.length = this.keys.length;
	this.current = 0;
};
$hxClasses["haxe.ds._StringMap.StringMapKeyIterator"] = haxe_ds__$StringMap_StringMapKeyIterator;
haxe_ds__$StringMap_StringMapKeyIterator.__name__ = "haxe.ds._StringMap.StringMapKeyIterator";
haxe_ds__$StringMap_StringMapKeyIterator.prototype = {
	h: null
	,keys: null
	,length: null
	,current: null
	,hasNext: function() {
		return this.current < this.length;
	}
	,next: function() {
		return this.keys[this.current++];
	}
	,__class__: haxe_ds__$StringMap_StringMapKeyIterator
};
var haxe_ds__$StringMap_StringMapValueIterator = function(h) {
	this.h = h;
	this.keys = Object.keys(h);
	this.length = this.keys.length;
	this.current = 0;
};
$hxClasses["haxe.ds._StringMap.StringMapValueIterator"] = haxe_ds__$StringMap_StringMapValueIterator;
haxe_ds__$StringMap_StringMapValueIterator.__name__ = "haxe.ds._StringMap.StringMapValueIterator";
haxe_ds__$StringMap_StringMapValueIterator.prototype = {
	h: null
	,keys: null
	,length: null
	,current: null
	,hasNext: function() {
		return this.current < this.length;
	}
	,next: function() {
		return this.h[this.keys[this.current++]];
	}
	,__class__: haxe_ds__$StringMap_StringMapValueIterator
};
var haxe_ds__$StringMap_StringMapKeyValueIterator = function(h) {
	this.h = h;
	this.keys = Object.keys(h);
	this.length = this.keys.length;
	this.current = 0;
};
$hxClasses["haxe.ds._StringMap.StringMapKeyValueIterator"] = haxe_ds__$StringMap_StringMapKeyValueIterator;
haxe_ds__$StringMap_StringMapKeyValueIterator.__name__ = "haxe.ds._StringMap.StringMapKeyValueIterator";
haxe_ds__$StringMap_StringMapKeyValueIterator.prototype = {
	h: null
	,keys: null
	,length: null
	,current: null
	,hasNext: function() {
		return this.current < this.length;
	}
	,next: function() {
		var key = this.keys[this.current++];
		return { key : key, value : this.h[key]};
	}
	,__class__: haxe_ds__$StringMap_StringMapKeyValueIterator
};
var haxe_exceptions_PosException = function(message,previous,pos) {
	haxe_Exception.call(this,message,previous);
	if(pos == null) {
		this.posInfos = { fileName : "(unknown)", lineNumber : 0, className : "(unknown)", methodName : "(unknown)"};
	} else {
		this.posInfos = pos;
	}
	this.__skipStack++;
};
$hxClasses["haxe.exceptions.PosException"] = haxe_exceptions_PosException;
haxe_exceptions_PosException.__name__ = "haxe.exceptions.PosException";
haxe_exceptions_PosException.__super__ = haxe_Exception;
haxe_exceptions_PosException.prototype = $extend(haxe_Exception.prototype,{
	posInfos: null
	,toString: function() {
		return "" + haxe_Exception.prototype.toString.call(this) + " in " + this.posInfos.className + "." + this.posInfos.methodName + " at " + this.posInfos.fileName + ":" + this.posInfos.lineNumber;
	}
	,__class__: haxe_exceptions_PosException
});
var haxe_exceptions_NotImplementedException = function(message,previous,pos) {
	if(message == null) {
		message = "Not implemented";
	}
	haxe_exceptions_PosException.call(this,message,previous,pos);
	this.__skipStack++;
};
$hxClasses["haxe.exceptions.NotImplementedException"] = haxe_exceptions_NotImplementedException;
haxe_exceptions_NotImplementedException.__name__ = "haxe.exceptions.NotImplementedException";
haxe_exceptions_NotImplementedException.__super__ = haxe_exceptions_PosException;
haxe_exceptions_NotImplementedException.prototype = $extend(haxe_exceptions_PosException.prototype,{
	__class__: haxe_exceptions_NotImplementedException
});
var haxe_io_Eof = function() {
};
$hxClasses["haxe.io.Eof"] = haxe_io_Eof;
haxe_io_Eof.__name__ = "haxe.io.Eof";
haxe_io_Eof.prototype = {
	toString: function() {
		return "Eof";
	}
	,__class__: haxe_io_Eof
};
var haxe_io_Error = $hxEnums["haxe.io.Error"] = { __ename__:"haxe.io.Error",__constructs__:null
	,Blocked: {_hx_name:"Blocked",_hx_index:0,__enum__:"haxe.io.Error",toString:$estr}
	,Overflow: {_hx_name:"Overflow",_hx_index:1,__enum__:"haxe.io.Error",toString:$estr}
	,OutsideBounds: {_hx_name:"OutsideBounds",_hx_index:2,__enum__:"haxe.io.Error",toString:$estr}
	,Custom: ($_=function(e) { return {_hx_index:3,e:e,__enum__:"haxe.io.Error",toString:$estr}; },$_._hx_name="Custom",$_.__params__ = ["e"],$_)
};
haxe_io_Error.__constructs__ = [haxe_io_Error.Blocked,haxe_io_Error.Overflow,haxe_io_Error.OutsideBounds,haxe_io_Error.Custom];
var haxe_io_Input = function() { };
$hxClasses["haxe.io.Input"] = haxe_io_Input;
haxe_io_Input.__name__ = "haxe.io.Input";
haxe_io_Input.prototype = {
	readByte: function() {
		throw new haxe_exceptions_NotImplementedException(null,null,{ fileName : "haxe/io/Input.hx", lineNumber : 53, className : "haxe.io.Input", methodName : "readByte"});
	}
	,readBytes: function(s,pos,len) {
		var k = len;
		var b = s.b;
		if(pos < 0 || len < 0 || pos + len > s.length) {
			throw haxe_Exception.thrown(haxe_io_Error.OutsideBounds);
		}
		try {
			while(k > 0) {
				b[pos] = this.readByte();
				++pos;
				--k;
			}
		} catch( _g ) {
			haxe_NativeStackTrace.lastError = _g;
			if(!((haxe_Exception.caught(_g).unwrap()) instanceof haxe_io_Eof)) {
				throw _g;
			}
		}
		return len - k;
	}
	,__class__: haxe_io_Input
};
var haxe_iterators_ArrayIterator = function(array) {
	this.current = 0;
	this.array = array;
};
$hxClasses["haxe.iterators.ArrayIterator"] = haxe_iterators_ArrayIterator;
haxe_iterators_ArrayIterator.__name__ = "haxe.iterators.ArrayIterator";
haxe_iterators_ArrayIterator.prototype = {
	array: null
	,current: null
	,hasNext: function() {
		return this.current < this.array.length;
	}
	,next: function() {
		return this.array[this.current++];
	}
	,__class__: haxe_iterators_ArrayIterator
};
var haxe_iterators_MapKeyValueIterator = function(map) {
	this.map = map;
	this.keys = map.keys();
};
$hxClasses["haxe.iterators.MapKeyValueIterator"] = haxe_iterators_MapKeyValueIterator;
haxe_iterators_MapKeyValueIterator.__name__ = "haxe.iterators.MapKeyValueIterator";
haxe_iterators_MapKeyValueIterator.prototype = {
	map: null
	,keys: null
	,hasNext: function() {
		return this.keys.hasNext();
	}
	,next: function() {
		var key = this.keys.next();
		return { value : this.map.get(key), key : key};
	}
	,__class__: haxe_iterators_MapKeyValueIterator
};
var haxe_ui_backend_BackendImpl = function() { };
$hxClasses["haxe.ui.backend.BackendImpl"] = haxe_ui_backend_BackendImpl;
haxe_ui_backend_BackendImpl.__name__ = "haxe.ui.backend.BackendImpl";
var haxe_ui_Backend = function() { };
$hxClasses["haxe.ui.Backend"] = haxe_ui_Backend;
haxe_ui_Backend.__name__ = "haxe.ui.Backend";
haxe_ui_Backend.__properties__ = {get_id:"get_id"};
haxe_ui_Backend.get_id = function() {
	return haxe_ui_backend_BackendImpl.id;
};
haxe_ui_Backend.__super__ = haxe_ui_backend_BackendImpl;
haxe_ui_Backend.prototype = $extend(haxe_ui_backend_BackendImpl.prototype,{
	__class__: haxe_ui_Backend
});
var haxe_ui_backend_CallLaterImpl = function(fn) {
	window.requestAnimationFrame(function(timestamp) {
		fn();
	});
};
$hxClasses["haxe.ui.backend.CallLaterImpl"] = haxe_ui_backend_CallLaterImpl;
haxe_ui_backend_CallLaterImpl.__name__ = "haxe.ui.backend.CallLaterImpl";
haxe_ui_backend_CallLaterImpl.prototype = {
	__class__: haxe_ui_backend_CallLaterImpl
};
var haxe_ui_CallLater = function(fn) {
	haxe_ui_backend_CallLaterImpl.call(this,fn);
};
$hxClasses["haxe.ui.CallLater"] = haxe_ui_CallLater;
haxe_ui_CallLater.__name__ = "haxe.ui.CallLater";
haxe_ui_CallLater.__super__ = haxe_ui_backend_CallLaterImpl;
haxe_ui_CallLater.prototype = $extend(haxe_ui_backend_CallLaterImpl.prototype,{
	__class__: haxe_ui_CallLater
});
var haxe_ui_backend_AppBase = function() {
	this._icon = null;
	this._autoHandlePreload = true;
	this.__events = null;
};
$hxClasses["haxe.ui.backend.AppBase"] = haxe_ui_backend_AppBase;
haxe_ui_backend_AppBase.__name__ = "haxe.ui.backend.AppBase";
haxe_ui_backend_AppBase.prototype = {
	__events: null
	,_autoHandlePreload: null
	,registerEvent: function(type,listener,priority) {
		if(priority == null) {
			priority = 0;
		}
		if(this.__events == null) {
			this.__events = new haxe_ui_util_EventMap();
		}
		this.__events.add(type,listener,priority);
	}
	,hasEvent: function(type,listener) {
		if(this.__events == null) {
			return false;
		}
		return this.__events.contains(type,listener);
	}
	,unregisterEvent: function(type,listener) {
		if(this.__events != null) {
			this.__events.remove(type,listener);
		}
	}
	,dispatch: function(event) {
		if(this.__events != null) {
			this.__events.invoke(event.type,event,null);
		}
	}
	,build: function() {
	}
	,init: function(onReady,onEnd) {
		onReady();
	}
	,getToolkitInit: function() {
		return { };
	}
	,start: function() {
	}
	,exit: function() {
	}
	,buildPreloadList: function() {
		return [];
	}
	,startPreload: function(onComplete) {
	}
	,_icon: null
	,get_icon: function() {
		return this._icon;
	}
	,set_icon: function(value) {
		this._icon = value;
		return value;
	}
	,__class__: haxe_ui_backend_AppBase
	,__properties__: {set_icon:"set_icon",get_icon:"get_icon"}
};
var haxe_ui_backend_AppImpl = function() {
	haxe_ui_backend_AppBase.call(this);
};
$hxClasses["haxe.ui.backend.AppImpl"] = haxe_ui_backend_AppImpl;
haxe_ui_backend_AppImpl.__name__ = "haxe.ui.backend.AppImpl";
haxe_ui_backend_AppImpl.__super__ = haxe_ui_backend_AppBase;
haxe_ui_backend_AppImpl.prototype = $extend(haxe_ui_backend_AppBase.prototype,{
	init: function(onReady,onEnd) {
		var title = haxe_ui_Toolkit.get_backendProperties().getProp("haxe.ui.html5.title");
		if(title != null) {
			haxe_ui_core_Screen.get_instance().set_title(title);
		}
		if(window.document.readyState == "complete") {
			onReady();
		} else {
			window.addEventListener("load",function(e) {
				onReady();
			});
		}
	}
	,getToolkitInit: function() {
		return { container : this.findContainer(haxe_ui_Toolkit.get_backendProperties().getProp("haxe.ui.html5.container","body"))};
	}
	,findContainer: function(id) {
		var el = null;
		if(id == "body") {
			el = window.document.body;
		} else if(id != null) {
			el = window.document.getElementById(id);
		}
		if(el == null) {
			el = window.document.body;
		}
		el.style.overflow = "hidden";
		return el;
	}
	,set_icon: function(value) {
		if(this._icon == value) {
			return value;
		}
		this._icon = value;
		var link = window.document.querySelector("link[rel~='icon']");
		if(link == null) {
			link = window.document.createElement("link");
			link.rel = "icon";
			window.document.getElementsByTagName("head")[0].appendChild(link);
		}
		haxe_ui_ToolkitAssets.get_instance().getImage(this._icon,function(imageInfo) {
			if(imageInfo != null) {
				link.href = imageInfo.data.src;
			}
		});
		return value;
	}
	,__class__: haxe_ui_backend_AppImpl
});
var haxe_ui_HaxeUIApp = function(options) {
	this.preloader = null;
	this.preloaderClass = null;
	haxe_ui_backend_AppImpl.call(this);
	haxe_ui_HaxeUIApp.instance = this;
	this._options = options;
	haxe_ui_Toolkit.build();
	this.build();
};
$hxClasses["haxe.ui.HaxeUIApp"] = haxe_ui_HaxeUIApp;
haxe_ui_HaxeUIApp.__name__ = "haxe.ui.HaxeUIApp";
haxe_ui_HaxeUIApp.__super__ = haxe_ui_backend_AppImpl;
haxe_ui_HaxeUIApp.prototype = $extend(haxe_ui_backend_AppImpl.prototype,{
	_options: null
	,ready: function(onReady,onEnd) {
		this.init(onReady,onEnd);
	}
	,preloaderClass: null
	,preloader: null
	,_onReady: null
	,_onEnd: null
	,init: function(onReady,onEnd) {
		this._onReady = onReady;
		this._onEnd = onEnd;
		if(haxe_ui_Toolkit.get_backendProperties().getProp("haxe.ui.theme") != null && haxe_ui_Toolkit.get_theme() == "default") {
			haxe_ui_Toolkit.set_theme(haxe_ui_Toolkit.get_backendProperties().getProp("haxe.ui.theme"));
		}
		if(this._options == null) {
			haxe_ui_Toolkit.init(this.getToolkitInit());
		} else {
			haxe_ui_Toolkit.init(this._options);
		}
		if(this._autoHandlePreload) {
			this.startPreload($bind(this,this.onPreloadComplete));
		} else {
			haxe_ui_backend_AppImpl.prototype.init.call(this,this._onReady,this._onEnd);
		}
	}
	,onPreloadComplete: function() {
		haxe_ui_backend_AppImpl.prototype.init.call(this,this._onReady,this._onEnd);
	}
	,startPreload: function(onComplete) {
		var preloadList = null;
		preloadList = this.buildPreloadList();
		if(preloadList != null && preloadList.length > 0) {
			if(this.preloaderClass == null) {
				this.preloader = new haxe_ui_Preloader();
			} else {
				this.preloader = Type.createInstance(this.preloaderClass,[]);
			}
			this.preloader.progress(0,preloadList.length);
			this.addComponent(this.preloader);
			this.preloader.validateComponent();
		}
		this.handlePreload(preloadList,onComplete,this.preloader);
	}
	,handlePreload: function(list,onComplete,preloader) {
		var _gthis = this;
		if(list == null || list.length == 0) {
			if(preloader != null) {
				preloader.complete();
			}
			onComplete();
			return;
		}
		var item = list.shift();
		switch(item.type) {
		case "font":
			haxe_ui_ToolkitAssets.get_instance().getFont(item.resourceId,function(f) {
				if(preloader != null) {
					preloader.increment();
				}
				_gthis.handlePreload(list,onComplete,preloader);
			});
			break;
		case "image":
			haxe_ui_ToolkitAssets.get_instance().getImage(item.resourceId,function(i) {
				if(preloader != null) {
					preloader.increment();
				}
				_gthis.handlePreload(list,onComplete,preloader);
			});
			break;
		default:
			haxe_Log.trace("WARNING: unknown type to preload \"" + item.type + "\", continuing",{ fileName : "haxe/ui/HaxeUIApp.hx", lineNumber : 104, className : "haxe.ui.HaxeUIApp", methodName : "handlePreload"});
			if(preloader != null) {
				preloader.increment();
			}
			this.handlePreload(list,onComplete,preloader);
		}
	}
	,get_title: function() {
		return haxe_ui_core_Screen.get_instance().get_title();
	}
	,set_title: function(value) {
		haxe_ui_core_Screen.get_instance().set_title(value);
		return value;
	}
	,addComponent: function(component) {
		return haxe_ui_core_Screen.get_instance().addComponent(component);
	}
	,removeComponent: function(component,dispose) {
		if(dispose == null) {
			dispose = true;
		}
		return haxe_ui_core_Screen.get_instance().removeComponent(component,dispose);
	}
	,setComponentIndex: function(child,index) {
		return haxe_ui_core_Screen.get_instance().setComponentIndex(child,index);
	}
	,buildPreloadList: function() {
		var list = haxe_ui_backend_AppImpl.prototype.buildPreloadList.call(this);
		if(list == null) {
			list = [];
		}
		list = list.concat(haxe_ui_ToolkitAssets.get_instance().preloadList);
		return list;
	}
	,__class__: haxe_ui_HaxeUIApp
	,__properties__: $extend(haxe_ui_backend_AppImpl.prototype.__properties__,{set_title:"set_title",get_title:"get_title"})
});
var haxe_ui_backend_ComponentSurface = function() {
};
$hxClasses["haxe.ui.backend.ComponentSurface"] = haxe_ui_backend_ComponentSurface;
haxe_ui_backend_ComponentSurface.__name__ = "haxe.ui.backend.ComponentSurface";
haxe_ui_backend_ComponentSurface.prototype = {
	__class__: haxe_ui_backend_ComponentSurface
};
var haxe_ui_core_ComponentCommon = function() {
	haxe_ui_backend_ComponentSurface.call(this);
};
$hxClasses["haxe.ui.core.ComponentCommon"] = haxe_ui_core_ComponentCommon;
haxe_ui_core_ComponentCommon.__name__ = "haxe.ui.core.ComponentCommon";
haxe_ui_core_ComponentCommon.__super__ = haxe_ui_backend_ComponentSurface;
haxe_ui_core_ComponentCommon.prototype = $extend(haxe_ui_backend_ComponentSurface.prototype,{
	handleDisabled: function(show) {
	}
	,getTextDisplay: function() {
		return null;
	}
	,hasTextDisplay: function() {
		return false;
	}
	,getTextInput: function() {
		return null;
	}
	,hasTextInput: function() {
		return false;
	}
	,getImageDisplay: function() {
		return null;
	}
	,hasImageDisplay: function() {
		return false;
	}
	,__class__: haxe_ui_core_ComponentCommon
});
var haxe_ui_core_IClonable = function() { };
$hxClasses["haxe.ui.core.IClonable"] = haxe_ui_core_IClonable;
haxe_ui_core_IClonable.__name__ = "haxe.ui.core.IClonable";
haxe_ui_core_IClonable.__isInterface__ = true;
haxe_ui_core_IClonable.prototype = {
	cloneComponent: null
	,self: null
	,postCloneComponent: null
	,__class__: haxe_ui_core_IClonable
};
var haxe_ui_core_ComponentContainer = function() {
	this._id = null;
	this._style = null;
	this._layoutLocked = false;
	this._layout = null;
	this._componentReady = false;
	this.parentComponent = null;
	haxe_ui_core_ComponentCommon.call(this);
	this.behaviours = new haxe_ui_behaviours_Behaviours(js_Boot.__cast(this , haxe_ui_core_Component));
};
$hxClasses["haxe.ui.core.ComponentContainer"] = haxe_ui_core_ComponentContainer;
haxe_ui_core_ComponentContainer.__name__ = "haxe.ui.core.ComponentContainer";
haxe_ui_core_ComponentContainer.__interfaces__ = [haxe_ui_core_IClonable];
haxe_ui_core_ComponentContainer.__super__ = haxe_ui_core_ComponentCommon;
haxe_ui_core_ComponentContainer.prototype = $extend(haxe_ui_core_ComponentCommon.prototype,{
	behaviours: null
	,parentComponent: null
	,dispatch: function(event) {
	}
	,_componentReady: null
	,isReady: null
	,get_isReady: function() {
		return this._componentReady;
	}
	,_children: null
	,childComponents: null
	,get_childComponents: function() {
		if(this._children == null) {
			return [];
		}
		return this._children;
	}
	,registerBehaviours: function() {
		this.behaviours.register("disabled",haxe_ui_core_ComponentDisabledBehaviour);
		this.behaviours.register("tooltip",haxe_ui_core_ComponentToolTipBehaviour,null);
		this.behaviours.register("tooltipRenderer",haxe_ui_core_ComponentToolTipRendererBehaviour,null);
		this.behaviours.register("text",haxe_ui_core_ComponentTextBehaviour);
		this.behaviours.register("value",haxe_ui_core_ComponentValueBehaviour);
	}
	,addComponent: function(child) {
		return null;
	}
	,addComponentAt: function(child,index) {
		return null;
	}
	,removeComponent: function(child,dispose,invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if(dispose == null) {
			dispose = true;
		}
		return null;
	}
	,removeComponentAt: function(index,dispose,invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if(dispose == null) {
			dispose = true;
		}
		return null;
	}
	,moveComponentToBack: function() {
		if(this.parentComponent == null || this.parentComponent.get_numComponents() <= 1) {
			return;
		}
		this.parentComponent.setComponentIndex(this,0);
	}
	,moveComponentBackward: function() {
		if(this.parentComponent == null || this.parentComponent.get_numComponents() <= 1) {
			return;
		}
		var index = this.parentComponent.getComponentIndex(this);
		if(index == 0) {
			return;
		}
		this.parentComponent.setComponentIndex(this,index - 1);
	}
	,moveComponentToFront: function() {
		if(this.parentComponent == null || this.parentComponent.get_numComponents() <= 1) {
			return;
		}
		this.parentComponent.setComponentIndex(this,this.parentComponent.get_numComponents() - 1);
	}
	,moveComponentFrontward: function() {
		if(this.parentComponent == null || this.parentComponent.get_numComponents() <= 1) {
			return;
		}
		var index = this.parentComponent.getComponentIndex(this);
		if(index == this.parentComponent.get_numComponents() - 1) {
			return;
		}
		this.parentComponent.setComponentIndex(this,index + 1);
	}
	,bottomComponent: null
	,get_bottomComponent: function() {
		if(this._children == null || this._children.length == 0) {
			return null;
		}
		return this._children[0];
	}
	,topComponent: null
	,get_topComponent: function() {
		if(this._children == null || this._children.length == 0) {
			return null;
		}
		return this._children[this._children.length - 1];
	}
	,postCloneComponent: function(c) {
	}
	,_layout: null
	,_layoutLocked: null
	,_style: null
	,_id: null
	,get_id: function() {
		return this._id;
	}
	,set_id: function(value) {
		if(this._id != value) {
			this._id = value;
		}
		return this._id;
	}
	,get_disabled: function() {
		if(this.behaviours == null) {
			return false;
		}
		return haxe_ui_util_Variant.toBool(this.behaviours.get("disabled"));
	}
	,set_disabled: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("disabled",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"disabled"));
		return value;
	}
	,get_tooltip: function() {
		return this.behaviours.getDynamic("tooltip");
	}
	,set_tooltip: function(value) {
		this.behaviours.setDynamic("tooltip",value);
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"tooltip"));
		return value;
	}
	,get_tooltipRenderer: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toComponent(this.behaviours.get("tooltipRenderer"));
	}
	,set_tooltipRenderer: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("tooltipRenderer",haxe_ui_util_Variant.fromComponent(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"tooltipRenderer"));
		return value;
	}
	,get_text: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("text"));
	}
	,set_text: function(value) {
		var _g = Type.typeof(value);
		if(_g._hx_index == 6) {
			if(_g.c == String) {
				if(value != null && StringTools.startsWith(value,"{{") && StringTools.endsWith(value,"}}")) {
					haxe_ui_locale_LocaleManager.get_instance().registerComponent(this,"text",null,value);
					return value;
				}
			}
		}
		this.behaviours.set("text",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"text"));
		return value;
	}
	,get_value: function() {
		return this.behaviours.getDynamic("value");
	}
	,set_value: function(value) {
		this.behaviours.setDynamic("value",value);
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"value"));
		return value;
	}
	,cloneComponent: function() {
		var c = this.self();
		if(this.get_id() != null) {
			c.set_id(this.get_id());
		}
		c.set_disabled(this.get_disabled());
		if(this.get_tooltip() != null) {
			c.set_tooltip(this.get_tooltip());
		}
		if(this.get_tooltipRenderer() != null) {
			c.set_tooltipRenderer(this.get_tooltipRenderer());
		}
		if(this.get_text() != null) {
			c.set_text(this.get_text());
		}
		if(this.get_value() != null) {
			c.set_value(this.get_value());
		}
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_core_ComponentContainer();
	}
	,__class__: haxe_ui_core_ComponentContainer
	,__properties__: {set_value:"set_value",get_value:"get_value",set_text:"set_text",get_text:"get_text",set_tooltipRenderer:"set_tooltipRenderer",get_tooltipRenderer:"get_tooltipRenderer",set_tooltip:"set_tooltip",get_tooltip:"get_tooltip",set_disabled:"set_disabled",get_disabled:"get_disabled",set_id:"set_id",get_id:"get_id",get_topComponent:"get_topComponent",get_bottomComponent:"get_bottomComponent",get_childComponents:"get_childComponents",get_isReady:"get_isReady"}
});
var haxe_ui_core_ComponentEvents = function() {
	this._pausedEvents = null;
	this._lastCursor = null;
	this._interactivityDisabledCounter = 0;
	this._interactivityDisabled = false;
	this._internalEventsClass = null;
	this._internalEvents = null;
	haxe_ui_core_ComponentContainer.call(this);
};
$hxClasses["haxe.ui.core.ComponentEvents"] = haxe_ui_core_ComponentEvents;
haxe_ui_core_ComponentEvents.__name__ = "haxe.ui.core.ComponentEvents";
haxe_ui_core_ComponentEvents.__super__ = haxe_ui_core_ComponentContainer;
haxe_ui_core_ComponentEvents.prototype = $extend(haxe_ui_core_ComponentContainer.prototype,{
	_internalEvents: null
	,_internalEventsClass: null
	,registerInternalEvents: function(eventsClass,reregister) {
		if(reregister == null) {
			reregister = false;
		}
		if(this._internalEvents == null && eventsClass != null) {
			this._internalEvents = Type.createInstance(eventsClass,[this]);
			this._internalEvents.register();
		}
		if(reregister == true && this._internalEvents != null) {
			this._internalEvents.register();
		}
	}
	,unregisterInternalEvents: function() {
		if(this._internalEvents == null) {
			return;
		}
		this._internalEvents.unregister();
		this._internalEvents = null;
	}
	,__events: null
	,registerEvent: function(type,listener,priority) {
		if(priority == null) {
			priority = 0;
		}
		if((js_Boot.__cast(this , haxe_ui_core_Component)).classes.indexOf(":mobile") != -1 && (type == "mouseover" || type == "mouseout")) {
			return;
		}
		if(this.get_disabled() == true && this.isInteractiveEvent(type) == true) {
			if(this._disabledEvents == null) {
				this._disabledEvents = new haxe_ui_util_EventMap();
			}
			this._disabledEvents.add(type,listener,priority);
			return;
		}
		if(this.__events == null) {
			this.__events = new haxe_ui_util_EventMap();
		}
		if(this.__events.add(type,listener,priority) == true) {
			this.mapEvent(type,$bind(this,this._onMappedEvent));
		}
	}
	,hasEvent: function(type,listener) {
		if(this.__events == null) {
			return false;
		}
		return this.__events.contains(type,listener);
	}
	,unregisterEvent: function(type,listener) {
		if(this._disabledEvents != null && !this._interactivityDisabled) {
			this._disabledEvents.remove(type,listener);
		}
		if(this.__events != null) {
			if(this.__events.remove(type,listener) == true) {
				this.unmapEvent(type,$bind(this,this._onMappedEvent));
			}
		}
	}
	,dispatch: function(event) {
		if(event != null) {
			if(this.__events != null) {
				this.__events.invoke(event.type,event,js_Boot.__cast(this , haxe_ui_core_Component));
			}
			if(event.bubble == true && event.canceled == false && this.parentComponent != null) {
				this.parentComponent.dispatch(event);
			}
		}
	}
	,dispatchRecursively: function(event) {
		this.dispatch(event);
		var _g = 0;
		var _g1 = this._children == null ? [] : this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			child.dispatchRecursively(event);
		}
	}
	,dispatchRecursivelyWhen: function(event,condition) {
		if(condition(this) == true) {
			this.dispatch(event);
		}
		var _g = 0;
		var _g1 = this._children == null ? [] : this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(condition(child) == true) {
				child.dispatchRecursivelyWhen(event,condition);
			}
		}
	}
	,_onMappedEvent: function(event) {
		this.dispatch(event);
	}
	,_disabledEvents: null
	,isInteractiveEvent: function(type) {
		return haxe_ui_core_ComponentEvents.INTERACTIVE_EVENTS.indexOf(type) != -1;
	}
	,disableInteractiveEvents: function(disable) {
		if(disable == true) {
			if(this.__events != null) {
				var eventType = this.__events.keys();
				while(eventType.hasNext()) {
					var eventType1 = eventType.next();
					if(!this.isInteractiveEvent(eventType1)) {
						continue;
					}
					var listeners = this.__events.listeners(eventType1);
					if(listeners != null) {
						var listener = listeners.copy().iterator();
						while(listener.hasNext()) {
							var listener1 = listener.next();
							if(this._disabledEvents == null) {
								this._disabledEvents = new haxe_ui_util_EventMap();
							}
							this._disabledEvents.add(eventType1,haxe_ui_util_Listener.toFunc(listener1));
							this.unregisterEvent(eventType1,haxe_ui_util_Listener.toFunc(listener1));
						}
					}
				}
			}
		} else if(this._disabledEvents != null) {
			var eventType = this._disabledEvents.keys();
			while(eventType.hasNext()) {
				var eventType1 = eventType.next();
				var listeners = this._disabledEvents.listeners(eventType1);
				if(listeners != null) {
					var listener = listeners.copy().iterator();
					while(listener.hasNext()) {
						var listener1 = listener.next();
						this.registerEvent(eventType1,haxe_ui_util_Listener.toFunc(listener1));
					}
				}
			}
			this._disabledEvents = null;
		}
	}
	,_interactivityDisabled: null
	,_interactivityDisabledCounter: null
	,_lastCursor: null
	,disableInteractivity: function(disable,recursive,updateStyle,force) {
		if(force == null) {
			force = false;
		}
		if(updateStyle == null) {
			updateStyle = false;
		}
		if(recursive == null) {
			recursive = true;
		}
		if(force == true) {
			this._interactivityDisabledCounter = 0;
		}
		if(disable == true) {
			this._interactivityDisabledCounter++;
		} else {
			this._interactivityDisabledCounter--;
		}
		if(this._interactivityDisabledCounter > 0 && this._interactivityDisabled == false) {
			this._interactivityDisabled = true;
			if(updateStyle == true) {
				(js_Boot.__cast(this , haxe_ui_core_Component)).swapClass(":disabled",":hover");
			}
			this.handleDisabled(true);
			this.disableInteractiveEvents(true);
			this.dispatch(new haxe_ui_events_UIEvent("disabled"));
			this._lastCursor = (js_Boot.__cast(this , haxe_ui_core_Component)).element.style.cursor;
			(js_Boot.__cast(this , haxe_ui_core_Component)).element.style.removeProperty("cursor");
		} else if(this._interactivityDisabledCounter < 1 && this._interactivityDisabled == true) {
			this._interactivityDisabled = false;
			if(updateStyle == true) {
				(js_Boot.__cast(this , haxe_ui_core_Component)).removeClass(":disabled");
			}
			this.handleDisabled(false);
			this.disableInteractiveEvents(false);
			this.dispatch(new haxe_ui_events_UIEvent("enabled"));
			if(this._lastCursor != null) {
				(js_Boot.__cast(this , haxe_ui_core_Component)).element.style.cursor = this._lastCursor;
			}
		}
		if(recursive == true) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				child.disableInteractivity(disable,recursive,updateStyle);
			}
		}
	}
	,unregisterEvents: function() {
		if(this.__events != null) {
			var copy = [];
			var eventType = this.__events.keys();
			while(eventType.hasNext()) {
				var eventType1 = eventType.next();
				copy.push(eventType1);
			}
			var _g = 0;
			while(_g < copy.length) {
				var eventType = copy[_g];
				++_g;
				var listeners = this.__events.listeners(eventType);
				if(listeners != null) {
					var listener = listeners.iterator();
					while(listener.hasNext()) {
						var listener1 = listener.next();
						if(listener1 != null) {
							if(this.__events.remove(eventType,haxe_ui_util_Listener.toFunc(listener1)) == true) {
								this.unmapEvent(eventType,$bind(this,this._onMappedEvent));
							}
						}
					}
				}
			}
		}
	}
	,_pausedEvents: null
	,pauseEvent: function(type,recursive) {
		if(recursive == null) {
			recursive = false;
		}
		if(this.__events == null || this.__events.contains(type) == false) {
			return;
		}
		if(this._pausedEvents == null) {
			this._pausedEvents = new haxe_ds_StringMap();
		}
		var pausedList = this._pausedEvents.h[type];
		if(pausedList == null) {
			pausedList = [];
			this._pausedEvents.h[type] = pausedList;
		}
		var listeners = this.__events.listeners(type).copy();
		var l = listeners.iterator();
		while(l.hasNext()) {
			var l1 = l.next();
			pausedList.push(haxe_ui_util_Listener.toFunc(l1));
			this.unregisterEvent(type,haxe_ui_util_Listener.toFunc(l1));
		}
		if(recursive == true) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var c = _g1[_g];
				++_g;
				c.pauseEvent(type,recursive);
			}
		}
	}
	,resumeEvent: function(type,recursive) {
		if(recursive == null) {
			recursive = false;
		}
		var _gthis = this;
		if(this.__events == null) {
			return;
		}
		if(this._pausedEvents == null) {
			return;
		}
		if(Object.prototype.hasOwnProperty.call(this._pausedEvents.h,type) == false) {
			return;
		}
		haxe_ui_Toolkit.callLater(function() {
			var pausedList = _gthis._pausedEvents.h[type];
			var _g = 0;
			while(_g < pausedList.length) {
				var l = pausedList[_g];
				++_g;
				_gthis.registerEvent(type,l);
			}
			var _this = _gthis._pausedEvents;
			if(Object.prototype.hasOwnProperty.call(_this.h,type)) {
				delete(_this.h[type]);
			}
		});
		if(recursive == true) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var c = _g1[_g];
				++_g;
				c.resumeEvent(type,recursive);
			}
		}
	}
	,mapEvent: function(type,listener) {
	}
	,unmapEvent: function(type,listener) {
	}
	,registerBehaviours: function() {
		haxe_ui_core_ComponentContainer.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_ComponentContainer.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_core_ComponentEvents();
	}
	,__class__: haxe_ui_core_ComponentEvents
});
var haxe_ui_core_ComponentValidation = function() {
	this._depth = -1;
	this._invalidateCount = 0;
	this._isDisposed = false;
	this._isInitialized = false;
	this._isValidating = false;
	this._isAllInvalid = false;
	this._delayedInvalidationFlags = new haxe_ds_StringMap();
	this._invalidationFlags = new haxe_ds_StringMap();
	haxe_ui_core_ComponentEvents.call(this);
};
$hxClasses["haxe.ui.core.ComponentValidation"] = haxe_ui_core_ComponentValidation;
haxe_ui_core_ComponentValidation.__name__ = "haxe.ui.core.ComponentValidation";
haxe_ui_core_ComponentValidation.__super__ = haxe_ui_core_ComponentEvents;
haxe_ui_core_ComponentValidation.prototype = $extend(haxe_ui_core_ComponentEvents.prototype,{
	_invalidationFlags: null
	,_delayedInvalidationFlags: null
	,_isAllInvalid: null
	,_isValidating: null
	,_isInitialized: null
	,_isDisposed: null
	,_invalidateCount: null
	,_depth: null
	,get_depth: function() {
		return this._depth;
	}
	,set_depth: function(value) {
		if(this._depth == value) {
			return value;
		}
		this._depth = value;
		return value;
	}
	,isComponentInvalid: function(flag) {
		if(flag == null) {
			flag = "all";
		}
		if(this._isAllInvalid == true) {
			return true;
		}
		if(flag == "all") {
			var h = this._invalidationFlags.h;
			var value_h = h;
			var value_keys = Object.keys(h);
			var value_length = value_keys.length;
			var value_current = 0;
			while(value_current < value_length) {
				var value = value_h[value_keys[value_current++]];
				return true;
			}
			return false;
		}
		return Object.prototype.hasOwnProperty.call(this._invalidationFlags.h,flag);
	}
	,invalidateComponent: function(flag,recursive) {
		if(recursive == null) {
			recursive = false;
		}
		if(flag == null) {
			flag = "all";
		}
		if(this._componentReady == false) {
			return;
		}
		var isAlreadyInvalid = this.isComponentInvalid(flag);
		var isAlreadyDelayedInvalid = false;
		if(this._isValidating == true) {
			var h = this._delayedInvalidationFlags.h;
			var value_h = h;
			var value_keys = Object.keys(h);
			var value_length = value_keys.length;
			var value_current = 0;
			while(value_current < value_length) {
				var value = value_h[value_keys[value_current++]];
				isAlreadyDelayedInvalid = true;
				break;
			}
		}
		if(flag == "all") {
			if(this._isValidating == true) {
				this._delayedInvalidationFlags.h["all"] = true;
			} else {
				this._isAllInvalid = true;
			}
		} else if(this._isValidating == true) {
			this._delayedInvalidationFlags.h[flag] = true;
		} else if(flag != "all" && !Object.prototype.hasOwnProperty.call(this._invalidationFlags.h,flag)) {
			this._invalidationFlags.h[flag] = true;
		}
		if(this._isValidating == true) {
			if(isAlreadyDelayedInvalid == true) {
				return;
			}
			this._invalidateCount++;
			if(this._invalidateCount >= 10) {
				throw haxe_Exception.thrown("The validation queue returned too many times during validation. This may be an infinite loop. Try to avoid doing anything that calls invalidate() during validation.");
			}
			haxe_ui_validation_ValidationManager.get_instance().add(js_Boot.__cast(this , haxe_ui_core_Component));
			return;
		} else if(isAlreadyInvalid == true) {
			if(recursive == true) {
				var _g = 0;
				var _g1 = this._children == null ? [] : this._children;
				while(_g < _g1.length) {
					var child = _g1[_g];
					++_g;
					child.invalidateComponent(flag,recursive);
				}
			}
			return;
		}
		this._invalidateCount = 0;
		haxe_ui_validation_ValidationManager.get_instance().add(js_Boot.__cast(this , haxe_ui_core_Component));
		if(recursive == true) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				child.invalidateComponent(flag,recursive);
			}
		}
	}
	,invalidateComponentData: function(recursive) {
		if(recursive == null) {
			recursive = false;
		}
		this.invalidateComponent("data",recursive);
	}
	,invalidateComponentLayout: function(recursive) {
		if(recursive == null) {
			recursive = false;
		}
		if(this._layout == null || this._layoutLocked == true) {
			return;
		}
		this.invalidateComponent("layout",recursive);
	}
	,invalidateComponentPosition: function(recursive) {
		if(recursive == null) {
			recursive = false;
		}
		this.invalidateComponent("position",recursive);
	}
	,invalidateComponentDisplay: function(recursive) {
		if(recursive == null) {
			recursive = false;
		}
		this.invalidateComponent("display",recursive);
	}
	,invalidateComponentStyle: function(force,recursive) {
		if(recursive == null) {
			recursive = false;
		}
		if(force == null) {
			force = false;
		}
		this.invalidateComponent("style",recursive);
		if(force == true) {
			this._style = null;
		}
	}
	,validateComponent: function(nextFrame) {
		if(nextFrame == null) {
			nextFrame = true;
		}
		if(this._componentReady == false || this._isDisposed == true || this._isValidating == true || this.isComponentInvalid() == false) {
			return;
		}
		var isInitialized = this._isInitialized;
		if(isInitialized == false) {
			this.initializeComponent();
		}
		this._isValidating = true;
		this.validateComponentInternal(nextFrame);
		this.validateInitialSize(isInitialized);
		this._invalidationFlags.h = Object.create(null);
		this._isAllInvalid = false;
		var h = this._delayedInvalidationFlags.h;
		var flag_h = h;
		var flag_keys = Object.keys(h);
		var flag_length = flag_keys.length;
		var flag_current = 0;
		while(flag_current < flag_length) {
			var flag = flag_keys[flag_current++];
			if(flag == "all") {
				this._isAllInvalid = true;
			} else {
				this._invalidationFlags.h[flag] = true;
			}
		}
		this._delayedInvalidationFlags.h = Object.create(null);
		this._isValidating = false;
	}
	,validateNow: function() {
		var _g = 0;
		var _g1 = this._children == null ? [] : this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			child.validateNow();
		}
		this.invalidateComponent();
		this.syncComponentValidation(false);
	}
	,syncComponentValidation: function(nextFrame) {
		if(nextFrame == null) {
			nextFrame = true;
		}
		var count = 0;
		while(this.isComponentInvalid()) {
			this.validateComponent(nextFrame);
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				child.syncComponentValidation(nextFrame);
			}
			if(++count >= 10) {
				if(this._isDisposed) {
					var c = js_Boot.getClass(this);
					haxe_Log.trace("There was a problem validating this component as it has already been destroyed (" + c.__name__ + "#" + this.get_id() + ")",{ fileName : "haxe/ui/core/ComponentValidation.hx", lineNumber : 237, className : "haxe.ui.core.ComponentValidation", methodName : "syncComponentValidation"});
					var c1 = js_Boot.getClass(this);
					throw haxe_Exception.thrown("There was a problem validating this component as it has already been destroyed (" + c1.__name__ + "#" + this.get_id() + ")");
				} else {
					var c2 = js_Boot.getClass(this);
					haxe_Log.trace("The syncValidation returned too many times during validation. This may be an infinite loop. Try to avoid doing anything that calls invalidate() during validation (" + c2.__name__ + "#" + this.get_id() + ").",{ fileName : "haxe/ui/core/ComponentValidation.hx", lineNumber : 242, className : "haxe.ui.core.ComponentValidation", methodName : "syncComponentValidation"});
					var c3 = js_Boot.getClass(this);
					throw haxe_Exception.thrown("The syncValidation returned too many times during validation. This may be an infinite loop. Try to avoid doing anything that calls invalidate() during validation (" + c3.__name__ + "#" + this.get_id() + ").");
				}
			}
		}
	}
	,validateComponentInternal: function(nextFrame) {
		if(nextFrame == null) {
			nextFrame = true;
		}
		var dataInvalid = this.isComponentInvalid("data");
		var styleInvalid = this.isComponentInvalid("style");
		var textDisplayInvalid = this.isComponentInvalid("textDisplay") && this.hasTextDisplay();
		var textInputInvalid = this.isComponentInvalid("textInput") && this.hasTextInput();
		var imageDisplayInvalid = this.isComponentInvalid("imageDisplay") && this.hasImageDisplay();
		var positionInvalid = this.isComponentInvalid("position");
		var displayInvalid = this.isComponentInvalid("display");
		var layoutInvalid = this.isComponentInvalid("layout") && this._layoutLocked == false;
		if(dataInvalid) {
			this.validateComponentData();
		}
		if(styleInvalid) {
			this.validateComponentStyle();
		}
		if(textDisplayInvalid) {
			this.getTextDisplay().validateComponent();
		}
		if(textInputInvalid) {
			this.getTextInput().validateComponent();
		}
		if(imageDisplayInvalid) {
			this.getImageDisplay().validateComponent();
		}
		if(positionInvalid) {
			this.validateComponentPosition();
		}
		if(layoutInvalid) {
			if(this.validateComponentLayout()) {
				displayInvalid = true;
			}
		}
		if(displayInvalid || styleInvalid) {
			haxe_ui_validation_ValidationManager.get_instance().addDisplay(js_Boot.__cast(this , haxe_ui_core_Component),nextFrame);
		}
	}
	,initializeComponent: function() {
	}
	,validateInitialSize: function(isInitialized) {
	}
	,validateComponentData: function() {
	}
	,validateComponentLayout: function() {
		return false;
	}
	,validateComponentStyle: function() {
	}
	,validateComponentPosition: function() {
	}
	,registerBehaviours: function() {
		haxe_ui_core_ComponentEvents.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_ComponentEvents.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_core_ComponentValidation();
	}
	,__class__: haxe_ui_core_ComponentValidation
	,__properties__: $extend(haxe_ui_core_ComponentEvents.prototype.__properties__,{set_depth:"set_depth",get_depth:"get_depth"})
});
var haxe_ui_core_ComponentLayout = function() {
	haxe_ui_core_ComponentValidation.call(this);
};
$hxClasses["haxe.ui.core.ComponentLayout"] = haxe_ui_core_ComponentLayout;
haxe_ui_core_ComponentLayout.__name__ = "haxe.ui.core.ComponentLayout";
haxe_ui_core_ComponentLayout.__super__ = haxe_ui_core_ComponentValidation;
haxe_ui_core_ComponentLayout.prototype = $extend(haxe_ui_core_ComponentValidation.prototype,{
	get_style: function() {
		return this._style;
	}
	,set_style: function(value) {
		this._style = value;
		return value;
	}
	,registerBehaviours: function() {
		haxe_ui_core_ComponentValidation.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_ComponentValidation.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_core_ComponentLayout();
	}
	,__class__: haxe_ui_core_ComponentLayout
	,__properties__: $extend(haxe_ui_core_ComponentValidation.prototype.__properties__,{set_style:"set_style",get_style:"get_style"})
});
var haxe_ui_core_ComponentBounds = function() {
	this._componentClipRect = null;
	this._top = 0;
	this._left = 0;
	this._hasScreen = null;
	this._cachedPercentHeight = null;
	this._cachedPercentWidth = null;
	haxe_ui_core_ComponentLayout.call(this);
};
$hxClasses["haxe.ui.core.ComponentBounds"] = haxe_ui_core_ComponentBounds;
haxe_ui_core_ComponentBounds.__name__ = "haxe.ui.core.ComponentBounds";
haxe_ui_core_ComponentBounds.__super__ = haxe_ui_core_ComponentLayout;
haxe_ui_core_ComponentBounds.prototype = $extend(haxe_ui_core_ComponentLayout.prototype,{
	autoWidth: null
	,get_autoWidth: function() {
		if(this._percentWidth != null || this._width != null) {
			return false;
		}
		if(this.get_style() == null) {
			return true;
		}
		if(this.get_style().autoWidth == null) {
			return false;
		}
		return this.get_style().autoWidth;
	}
	,autoHeight: null
	,get_autoHeight: function() {
		if(this._percentHeight != null || this._height != null || this.get_style() == null) {
			return false;
		}
		if(this.get_style().autoHeight == null) {
			return false;
		}
		return this.get_style().autoHeight;
	}
	,resizeComponent: function(w,h) {
		var invalidate = false;
		if(w != null && this._componentWidth != w) {
			this._componentWidth = w;
			invalidate = true;
		}
		if(h != null && this._componentHeight != h) {
			this._componentHeight = h;
			invalidate = true;
		}
		if(invalidate == true && this.isComponentInvalid("layout") == false) {
			if(!(this._layout == null || this._layoutLocked == true)) {
				this.invalidateComponent("layout",false);
			}
		}
	}
	,actualComponentWidth: null
	,get_actualComponentWidth: function() {
		return this.get_componentWidth() * haxe_ui_Toolkit.get_scaleX();
	}
	,actualComponentHeight: null
	,get_actualComponentHeight: function() {
		return this.get_componentHeight() * haxe_ui_Toolkit.get_scaleY();
	}
	,_componentWidth: null
	,get_componentWidth: function() {
		if(this._componentWidth == null) {
			return 0;
		}
		return this._componentWidth;
	}
	,set_componentWidth: function(value) {
		this.resizeComponent(value,null);
		return value;
	}
	,_componentHeight: null
	,get_componentHeight: function() {
		if(this._componentHeight == null) {
			return 0;
		}
		return this._componentHeight;
	}
	,set_componentHeight: function(value) {
		this.resizeComponent(null,value);
		return value;
	}
	,_percentWidth: null
	,get_percentWidth: function() {
		return this._percentWidth;
	}
	,set_percentWidth: function(value) {
		if(this._percentWidth == value) {
			return value;
		}
		this._percentWidth = value;
		if(this.parentComponent != null) {
			var _this = this.parentComponent;
			if(!(_this._layout == null || _this._layoutLocked == true)) {
				_this.invalidateComponent("layout",false);
			}
		} else {
			haxe_ui_core_Screen.get_instance().resizeRootComponents();
		}
		return value;
	}
	,_percentHeight: null
	,get_percentHeight: function() {
		return this._percentHeight;
	}
	,set_percentHeight: function(value) {
		if(this._percentHeight == value) {
			return value;
		}
		this._percentHeight = value;
		if(this.parentComponent != null) {
			var _this = this.parentComponent;
			if(!(_this._layout == null || _this._layoutLocked == true)) {
				_this.invalidateComponent("layout",false);
			}
		} else {
			haxe_ui_core_Screen.get_instance().resizeRootComponents();
		}
		return value;
	}
	,_cachedPercentWidth: null
	,_cachedPercentHeight: null
	,cachePercentSizes: function(clearExisting) {
		if(clearExisting == null) {
			clearExisting = true;
		}
		if(this._percentWidth != null) {
			this._cachedPercentWidth = this._percentWidth;
			if(clearExisting == true) {
				this._percentWidth = null;
			}
		}
		if(this._percentHeight != null) {
			this._cachedPercentHeight = this._percentHeight;
			if(clearExisting == true) {
				this._percentHeight = null;
			}
		}
	}
	,restorePercentSizes: function() {
		if(this._cachedPercentWidth != null) {
			this.set_percentWidth(this._cachedPercentWidth);
		}
		if(this._cachedPercentHeight != null) {
			this.set_percentHeight(this._cachedPercentHeight);
		}
	}
	,_width: null
	,set_width: function(value) {
		if(this._width == value) {
			return value;
		}
		this._width = value;
		this.set_componentWidth(value);
		return value;
	}
	,get_width: function() {
		var f = this.get_componentWidth();
		return f;
	}
	,_height: null
	,set_height: function(value) {
		if(this._height == value) {
			return value;
		}
		this._height = value;
		this.set_componentHeight(value);
		return value;
	}
	,get_height: function() {
		var f = this.get_componentHeight();
		return f;
	}
	,_actualWidth: null
	,_actualHeight: null
	,_hasScreen: null
	,hasScreen: null
	,get_hasScreen: function() {
		var p = this;
		while(p != null) {
			if(p._hasScreen == false) {
				return false;
			}
			p = p.parentComponent;
		}
		return true;
	}
	,hitTest: function(left,top,allowZeroSized) {
		if(allowZeroSized == null) {
			allowZeroSized = false;
		}
		if(this.get_hasScreen() == false) {
			return false;
		}
		left *= haxe_ui_Toolkit.get_scale();
		top *= haxe_ui_Toolkit.get_scale();
		var b = false;
		var sx = this.get_screenLeft();
		var sy = this.get_screenTop();
		var cx = 0;
		if(this.get_componentWidth() != null) {
			cx = this.get_actualComponentWidth();
		}
		var cy = 0;
		if(this.get_componentHeight() != null) {
			cy = this.get_actualComponentHeight();
		}
		if(allowZeroSized == true) {
			if(this.get_width() <= 0 || this.get_height() <= 0) {
				return true;
			}
		}
		if(left >= sx && left < sx + cx && top >= sy && top < sy + cy) {
			b = true;
		}
		return b;
	}
	,autoSize: function() {
		if(this._componentReady == false || this._layout == null) {
			return false;
		}
		return this._layout.autoSize();
	}
	,moveComponent: function(left,top) {
		var invalidate = false;
		if(left != null && this._left != left) {
			this._left = left;
			invalidate = true;
		}
		if(top != null && this._top != top) {
			this._top = top;
			invalidate = true;
		}
		if(invalidate == true && this.isComponentInvalid("position") == false) {
			this.invalidateComponent("position",false);
		}
	}
	,_left: null
	,get_left: function() {
		return this._left;
	}
	,set_left: function(value) {
		this.moveComponent(value,null);
		return value;
	}
	,_top: null
	,get_top: function() {
		return this._top;
	}
	,set_top: function(value) {
		this.moveComponent(null,value);
		return value;
	}
	,screenLeft: null
	,get_screenLeft: function() {
		var c = this;
		var xpos = 0;
		while(c != null) {
			var l = c.get_left();
			if(c.parentComponent != null) {
				l *= haxe_ui_Toolkit.get_scale();
			}
			xpos += l;
			if(c.get_componentClipRect() != null) {
				xpos -= c.get_componentClipRect().left * haxe_ui_Toolkit.get_scaleX();
			}
			c = c.parentComponent;
		}
		return xpos;
	}
	,screenTop: null
	,get_screenTop: function() {
		var c = this;
		var ypos = 0;
		while(c != null) {
			var t = c.get_top();
			if(c.parentComponent != null) {
				t *= haxe_ui_Toolkit.get_scale();
			}
			ypos += t;
			if(c.get_componentClipRect() != null) {
				ypos -= c.get_componentClipRect().top * haxe_ui_Toolkit.get_scaleY();
			}
			c = c.parentComponent;
		}
		return ypos;
	}
	,_componentClipRect: null
	,get_componentClipRect: function() {
		if(this.get_style() != null && this.get_style().clip != null && this.get_style().clip == true) {
			return new haxe_ui_geom_Rectangle(0,0,this.get_componentWidth(),this.get_componentHeight());
		}
		return this._componentClipRect;
	}
	,set_componentClipRect: function(value) {
		this._componentClipRect = value;
		this.invalidateComponent("display",false);
		return value;
	}
	,isComponentClipped: null
	,get_isComponentClipped: function() {
		return this.get_componentClipRect() != null;
	}
	,isComponentOffscreen: null
	,get_isComponentOffscreen: function() {
		if(this.get_width() == 0 && this.get_height() == 0) {
			return false;
		}
		var x = this.get_screenLeft();
		var y = this.get_screenTop();
		var w = this.get_width();
		var h = this.get_height();
		var thisRect = new haxe_ui_geom_Rectangle(x,y,w,h);
		var screenRect = new haxe_ui_geom_Rectangle(0,0,haxe_ui_core_Screen.get_instance().get_width(),haxe_ui_core_Screen.get_instance().get_height());
		return !screenRect.intersects(thisRect);
	}
	,registerBehaviours: function() {
		haxe_ui_core_ComponentLayout.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_ComponentLayout.prototype.cloneComponent.call(this);
		if(this.get_componentWidth() != null) {
			c.set_componentWidth(this.get_componentWidth());
		}
		if(this.get_componentHeight() != null) {
			c.set_componentHeight(this.get_componentHeight());
		}
		if(this.get_percentWidth() != null) {
			c.set_percentWidth(this.get_percentWidth());
		}
		if(this.get_percentHeight() != null) {
			c.set_percentHeight(this.get_percentHeight());
		}
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_core_ComponentBounds();
	}
	,__class__: haxe_ui_core_ComponentBounds
	,__properties__: $extend(haxe_ui_core_ComponentLayout.prototype.__properties__,{get_isComponentOffscreen:"get_isComponentOffscreen",get_isComponentClipped:"get_isComponentClipped",set_componentClipRect:"set_componentClipRect",get_componentClipRect:"get_componentClipRect",get_screenTop:"get_screenTop",get_screenLeft:"get_screenLeft",set_top:"set_top",get_top:"get_top",set_left:"set_left",get_left:"get_left",get_hasScreen:"get_hasScreen",set_height:"set_height",get_height:"get_height",set_width:"set_width",get_width:"get_width",set_percentHeight:"set_percentHeight",get_percentHeight:"get_percentHeight",set_percentWidth:"set_percentWidth",get_percentWidth:"get_percentWidth",set_componentHeight:"set_componentHeight",get_componentHeight:"get_componentHeight",set_componentWidth:"set_componentWidth",get_componentWidth:"get_componentWidth",get_actualComponentHeight:"get_actualComponentHeight",get_actualComponentWidth:"get_actualComponentWidth",get_autoHeight:"get_autoHeight",get_autoWidth:"get_autoWidth"})
});
var haxe_ui_backend_ComponentBase = function() {
	this._nativeClassName = null;
	this._nodeName = null;
	this._className = null;
	haxe_ui_core_ComponentBounds.call(this);
};
$hxClasses["haxe.ui.backend.ComponentBase"] = haxe_ui_backend_ComponentBase;
haxe_ui_backend_ComponentBase.__name__ = "haxe.ui.backend.ComponentBase";
haxe_ui_backend_ComponentBase.__super__ = haxe_ui_core_ComponentBounds;
haxe_ui_backend_ComponentBase.prototype = $extend(haxe_ui_core_ComponentBounds.prototype,{
	handleCreate: function(native) {
	}
	,handlePosition: function(left,top,style) {
	}
	,handleSize: function(width,height,style) {
	}
	,handleReady: function() {
	}
	,handleClipRect: function(value) {
	}
	,handleVisibility: function(show) {
	}
	,getComponentOffset: function() {
		return new haxe_ui_geom_Point(0,0);
	}
	,isNativeScroller: null
	,get_isNativeScroller: function() {
		return false;
	}
	,isScroller: null
	,get_isScroller: function() {
		return false;
	}
	,handleFrameworkProperty: function(id,value) {
	}
	,handleSetComponentIndex: function(child,index) {
	}
	,handleAddComponent: function(child) {
		return child;
	}
	,handleAddComponentAt: function(child,index) {
		return child;
	}
	,handleRemoveComponent: function(child,dispose) {
		if(dispose == null) {
			dispose = true;
		}
		return child;
	}
	,handleRemoveComponentAt: function(index,dispose) {
		if(dispose == null) {
			dispose = true;
		}
		return null;
	}
	,applyStyle: function(style) {
	}
	,mapEvent: function(type,listener) {
	}
	,unmapEvent: function(type,listener) {
	}
	,_textDisplay: null
	,createTextDisplay: function(text) {
		if(this._textDisplay == null) {
			this._textDisplay = new haxe_ui_core_TextDisplay();
			this._textDisplay.parentComponent = js_Boot.__cast(this , haxe_ui_core_Component);
		}
		if(text != null) {
			this._textDisplay.set_text(text);
		}
		return this._textDisplay;
	}
	,getTextDisplay: function() {
		return this.createTextDisplay();
	}
	,hasTextDisplay: function() {
		return this._textDisplay != null;
	}
	,_textInput: null
	,createTextInput: function(text) {
		if(this._textInput == null) {
			this._textInput = new haxe_ui_core_TextInput();
			this._textInput.parentComponent = js_Boot.__cast(this , haxe_ui_core_Component);
		}
		if(text != null) {
			this._textInput.set_text(text);
		}
		return this._textInput;
	}
	,getTextInput: function() {
		return this.createTextInput();
	}
	,hasTextInput: function() {
		return this._textInput != null;
	}
	,_imageDisplay: null
	,createImageDisplay: function() {
		if(this._imageDisplay == null) {
			this._imageDisplay = new haxe_ui_core_ImageDisplay();
			this._imageDisplay.parentComponent = js_Boot.__cast(this , haxe_ui_core_Component);
		}
		return this._imageDisplay;
	}
	,getImageDisplay: function() {
		return this.createImageDisplay();
	}
	,hasImageDisplay: function() {
		return this._imageDisplay != null;
	}
	,removeImageDisplay: function() {
		if(this._imageDisplay != null) {
			this._imageDisplay.dispose();
			this._imageDisplay = null;
		}
	}
	,handlePreReposition: function() {
	}
	,handlePostReposition: function() {
	}
	,getClassProperty: function(name) {
		var v = null;
		if(this._classProperties != null) {
			v = this._classProperties.h[name];
		}
		if(v == null) {
			var c = js_Boot.getClass(this);
			var c1 = c.__name__.toLowerCase() + "." + name;
			v = haxe_ui_Toolkit.properties.h[c1];
		}
		return v;
	}
	,_classProperties: null
	,setClassProperty: function(name,value) {
		if(this._classProperties == null) {
			this._classProperties = new haxe_ds_StringMap();
		}
		this._classProperties.h[name] = value;
	}
	,_hasNativeEntry: null
	,hasNativeEntry: null
	,get_hasNativeEntry: function() {
		if(this._hasNativeEntry == null) {
			this._hasNativeEntry = this.getNativeConfigProperty(".@id") != null;
		}
		return this._hasNativeEntry;
	}
	,getNativeConfigProperty: function(query,defaultValue) {
		query = "component[id=" + this.get_nativeClassName() + "]" + query;
		return haxe_ui_Toolkit.nativeConfig.query(query,defaultValue,this);
	}
	,getNativeConfigPropertyBool: function(query,defaultValue) {
		if(defaultValue == null) {
			defaultValue = false;
		}
		query = "component[id=" + this.get_nativeClassName() + "]" + query;
		return haxe_ui_Toolkit.nativeConfig.queryBool(query,defaultValue,this);
	}
	,getNativeConfigProperties: function(query) {
		if(query == null) {
			query = "";
		}
		query = "component[id=" + this.get_nativeClassName() + "]" + query;
		return haxe_ui_Toolkit.nativeConfig.queryValues(query,this);
	}
	,_className: null
	,className: null
	,get_className: function() {
		if(this._className != null) {
			return this._className;
		}
		var c = js_Boot.getClass(this);
		this._className = c.__name__;
		return this._className;
	}
	,_nodeName: null
	,nodeName: null
	,get_nodeName: function() {
		if(this._nodeName != null) {
			return this._nodeName;
		}
		this._nodeName = this.get_className().split(".").pop().toLowerCase();
		return this._nodeName;
	}
	,_nativeClassName: null
	,nativeClassName: null
	,get_nativeClassName: function() {
		if(this._nativeClassName != null) {
			return this._nativeClassName;
		}
		var r = js_Boot.getClass(this);
		while(r != null) {
			var c = r.__name__;
			var t = haxe_ui_Toolkit.nativeConfig.query("component[id=" + c + "].@class",null,this);
			if(t != null) {
				this._nativeClassName = c;
				break;
			}
			r = r.__super__;
			if(r == haxe_ui_core_Component) {
				break;
			}
		}
		if(this._nativeClassName == null) {
			this._nativeClassName = this.get_className();
		}
		return this._nativeClassName;
	}
	,registerBehaviours: function() {
		haxe_ui_core_ComponentBounds.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_ComponentBounds.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_backend_ComponentBase();
	}
	,__class__: haxe_ui_backend_ComponentBase
	,__properties__: $extend(haxe_ui_core_ComponentBounds.prototype.__properties__,{get_nativeClassName:"get_nativeClassName",get_nodeName:"get_nodeName",get_className:"get_className",get_hasNativeEntry:"get_hasNativeEntry",get_isScroller:"get_isScroller",get_isNativeScroller:"get_isNativeScroller"})
});
var haxe_ui_backend_ComponentImpl = function() {
	this._contextMenuDisabledCount = 0;
	this._canvas = null;
	haxe_ui_backend_ComponentBase.call(this);
	this._eventMap = new haxe_ds_StringMap();
	if(haxe_ui_backend_ComponentImpl._mutationObserver == null) {
		haxe_ui_backend_ComponentImpl._mutationObserver = new MutationObserver(haxe_ui_backend_ComponentImpl.onMutationEvent);
		haxe_ui_backend_ComponentImpl._mutationObserver.observe(haxe_ui_core_Screen.get_instance().get_container(),{ childList : true});
	}
	if(window.document.styleSheets.length == 0) {
		var style = window.document.createElement("style");
		style.appendChild(window.document.createTextNode(""));
		window.document.head.appendChild(style);
	}
	if(haxe_ui_backend_ComponentImpl._stylesAdded == false) {
		haxe_ui_backend_ComponentImpl._stylesAdded = true;
		var sheet = haxe_ui_backend_html5_util_StyleSheetHelper.getValidStyleSheet();
		sheet.insertRule("#haxeui-container .haxeui-component, .haxeui-component:focus {\r\n                position: absolute;\r\n                box-sizing: border-box;\r\n                -webkit-touch-callout: none;\r\n                -webkit-user-select: none;\r\n                -khtml-user-select: none;\r\n                -moz-user-select: none;\r\n                -ms-user-select: none;\r\n                user-select: none;\r\n                -webkit-tap-highlight-color: transparent;\r\n                webkit-user-select;\r\n                outline: none !important;\r\n            }",sheet.cssRules.length);
		haxe_ui_core_Screen.get_instance().get_container().classList.add("haxeui-theme-" + haxe_ui_Toolkit.get_theme());
	}
};
$hxClasses["haxe.ui.backend.ComponentImpl"] = haxe_ui_backend_ComponentImpl;
haxe_ui_backend_ComponentImpl.__name__ = "haxe.ui.backend.ComponentImpl";
haxe_ui_backend_ComponentImpl.onMutationEvent = function(records,o) {
	var done = false;
	var _g = 0;
	while(_g < records.length) {
		var record = records[_g];
		++_g;
		var _g1 = 0;
		var _g2 = record.addedNodes.length;
		while(_g1 < _g2) {
			var i = _g1++;
			var node = record.addedNodes.item(i);
			var c = haxe_ui_backend_ComponentImpl.elementToComponent.h[node.__id__];
			if(c != null) {
				c.recursiveReady();
			}
		}
		if(done == true) {
			break;
		}
	}
};
haxe_ui_backend_ComponentImpl.__super__ = haxe_ui_backend_ComponentBase;
haxe_ui_backend_ComponentImpl.prototype = $extend(haxe_ui_backend_ComponentBase.prototype,{
	element: null
	,_eventMap: null
	,get_isNativeScroller: function() {
		return false;
	}
	,recursiveReady: function() {
		haxe_ui_backend_ComponentImpl.elementToComponent.remove(this.element);
		var component = js_Boot.__cast(this , haxe_ui_core_Component);
		if(!(component._layout == null || component._layoutLocked == true)) {
			component.invalidateComponent("layout",false);
		}
		component.ready();
		var _g = 0;
		var _g1 = component._children == null ? [] : component._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			child.recursiveReady();
		}
	}
	,handleCreate: function(native) {
		if(this.get_isScroller()) {
			if(this.element == null) {
				this.element = window.document.createElement("div");
			}
			this.element.scrollTop = 0;
			this.element.scrollLeft = 0;
			this.element.classList.add("haxeui-component");
			haxe_ui_backend_ComponentImpl.elementToComponent.set(this.element,js_Boot.__cast(this , haxe_ui_core_Component));
			return;
		}
		var newElement = window.document.createElement("div");
		newElement.classList.add("haxeui-component");
		if(((this) instanceof haxe_ui_components_Image)) {
			newElement.style.boxSizing = "initial";
		}
		if(this.element != null) {
			var p = this.element.parentElement;
			if(p != null) {
				haxe_ui_backend_ComponentImpl.elementToComponent.remove(this.element);
				p.replaceChild(newElement,this.element);
			}
		}
		this.element = newElement;
		haxe_ui_backend_ComponentImpl.elementToComponent.set(this.element,js_Boot.__cast(this , haxe_ui_core_Component));
		this.remapEvents();
	}
	,remapEvents: function() {
		if(this._eventMap == null) {
			return;
		}
		var copy_h = Object.create(null);
		var h = this._eventMap.h;
		var k_h = h;
		var k_keys = Object.keys(h);
		var k_length = k_keys.length;
		var k_current = 0;
		while(k_current < k_length) {
			var k = k_keys[k_current++];
			var fn = this._eventMap.h[k];
			copy_h[k] = fn;
			this.unmapEvent(k,fn);
		}
		this._eventMap = new haxe_ds_StringMap();
		var h = copy_h;
		var k_h = h;
		var k_keys = Object.keys(h);
		var k_length = k_keys.length;
		var k_current = 0;
		while(k_current < k_length) {
			var k = k_keys[k_current++];
			this.mapEvent(k,copy_h[k]);
		}
	}
	,handlePosition: function(left,top,style) {
		if(this.element == null) {
			return;
		}
		if(left != null) {
			this.element.style.left = "" + left + "px";
		}
		if(top != null) {
			this.element.style.top = "" + top + "px";
		}
	}
	,handleSize: function(width,height,style) {
		if(width == null || height == null || width <= 0 || height <= 0) {
			return;
		}
		if(this.element == null) {
			return;
		}
		var c = js_Boot.__cast(this , haxe_ui_core_Component);
		var css = this.element.style;
		haxe_ui_backend_html5_StyleHelper.apply(this,width,height,style);
		var parent = c.parentComponent;
		if(parent != null && parent.element.style.borderWidth != null) {
			css.marginTop = "-" + parent.element.style.borderWidth;
			css.marginLeft = "-" + parent.element.style.borderWidth;
		} else if(parent != null) {
			css.marginTop = "";
			css.marginLeft = "";
		}
		var _g = 0;
		var _this = js_Boot.__cast(this , haxe_ui_core_Component);
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(style.borderLeftSize != null && style.borderLeftSize > 0) {
				child.element.style.marginLeft = "-" + style.borderLeftSize + "px";
			} else {
				child.element.style.marginLeft = "";
			}
			if(style.borderTopSize != null && style.borderTopSize > 0) {
				child.element.style.marginTop = "-" + style.borderTopSize + "px";
			} else {
				child.element.style.marginTop = "";
			}
		}
	}
	,handleReady: function() {
		if((js_Boot.__cast(this , haxe_ui_core_Component)).get_id() != null) {
			this.element.id = (js_Boot.__cast(this , haxe_ui_core_Component)).get_id();
		}
	}
	,handleFrameworkProperty: function(id,value) {
		if(id == "allowMouseInteraction") {
			if(value == true && this.element.style.getPropertyValue("pointer-events") != null) {
				this.element.style.removeProperty("pointer-events");
			} else if(this.element.style.getPropertyValue("pointer-events") != "none") {
				this.element.style.setProperty("pointer-events","none");
				this.setCursor(null);
			}
		}
	}
	,handleClipRect: function(value) {
		var c = js_Boot.__cast(this , haxe_ui_core_Component);
		var parent = c.parentComponent;
		value.toInts();
		if(value != null && parent != null) {
			if(parent.get_isScroller()) {
				parent.element.style.overflow = "hidden";
			}
			var tmp = "rect(" + ("" + value.top + "px") + "," + ("" + value.get_right() + "px") + "," + ("" + value.get_bottom() + "px") + ",";
			this.element.style.clip = tmp + ("" + value.left + "px") + ")";
			var tmp = "" + (c.get_left() - value.left | 0) + "px";
			this.element.style.left = "" + tmp;
			var tmp = "" + (c.get_top() - value.top | 0) + "px";
			this.element.style.top = "" + tmp;
		} else {
			if(parent != null && parent.get_isScroller()) {
				parent.element.style.removeProperty("overflow");
			}
			this.element.style.removeProperty("clip");
		}
	}
	,handleVisibility: function(show) {
		this.element.style.display = show == true ? "" : "none";
	}
	,createTextDisplay: function(text) {
		if(this._textDisplay == null) {
			haxe_ui_backend_ComponentBase.prototype.createTextDisplay.call(this,text);
			this.element.appendChild(this._textDisplay.element);
		}
		return this._textDisplay;
	}
	,createTextInput: function(text) {
		if(this._textInput == null) {
			haxe_ui_backend_ComponentBase.prototype.createTextInput.call(this,text);
			this.element.appendChild(this._textInput.element);
		}
		return this._textInput;
	}
	,createImageDisplay: function() {
		if(this._imageDisplay == null) {
			haxe_ui_backend_ComponentBase.prototype.createImageDisplay.call(this);
			this.element.appendChild(this._imageDisplay.element);
		}
		return this._imageDisplay;
	}
	,handleSetComponentIndex: function(child,index) {
		if(index == (this._children == null ? [] : this._children).length - 1) {
			this.element.appendChild(child.element);
		} else if(index == (this._children == null ? [] : this._children).indexOf(child) - 1) {
			var before = (this._children == null ? [] : this._children)[index];
			haxe_ui_backend_html5_HtmlUtils.insertBefore(before.element,child.element);
		} else {
			var before = (this._children == null ? [] : this._children)[index + 1];
			haxe_ui_backend_html5_HtmlUtils.insertBefore(before.element,child.element);
		}
	}
	,handleAddComponent: function(child) {
		this.element.appendChild(child.element);
		return child;
	}
	,handleAddComponentAt: function(child,index) {
		this.handleAddComponent(child);
		this.handleSetComponentIndex(child,index);
		return child;
	}
	,handleRemoveComponent: function(child,dispose) {
		if(dispose == null) {
			dispose = true;
		}
		haxe_ui_backend_html5_HtmlUtils.removeElement(child.element);
		return child;
	}
	,handleRemoveComponentAt: function(index,dispose) {
		if(dispose == null) {
			dispose = true;
		}
		var child = (js_Boot.__cast(this , haxe_ui_core_Component))._children[index];
		haxe_ui_backend_html5_HtmlUtils.removeElement(child.element);
		return child;
	}
	,applyStyle: function(style) {
		if(this.element == null) {
			return;
		}
		this.setCursor(style.cursor);
		if(style.filter != null) {
			if(((style.filter[0]) instanceof haxe_ui_filters_DropShadow)) {
				var dropShadow = style.filter[0];
				if(dropShadow.inner == false) {
					var tmp = "" + dropShadow.distance + "px " + (dropShadow.distance + 2) + "px " + (dropShadow.blurX - 1) + "px " + (dropShadow.blurY - 1) + "px ";
					var tmp1 = haxe_ui_backend_html5_HtmlUtils.rgba(dropShadow.color,dropShadow.alpha);
					this.element.style.boxShadow = tmp + tmp1;
				} else {
					var tmp = "inset " + dropShadow.distance + "px " + dropShadow.distance + "px " + dropShadow.blurX + "px 0px ";
					var tmp1 = haxe_ui_backend_html5_HtmlUtils.rgba(dropShadow.color,dropShadow.alpha);
					this.element.style.boxShadow = tmp + tmp1;
				}
			} else if(((style.filter[0]) instanceof haxe_ui_filters_Blur)) {
				var blur = style.filter[0];
				this.element.style.setProperty("-webkit-filter","blur(" + blur.amount + "px)");
				this.element.style.setProperty("-moz-filter","blur(" + blur.amount + "px)");
				this.element.style.setProperty("-o-filter","blur(" + blur.amount + "px)");
				this.element.style.setProperty("filter","blur(" + blur.amount + "px)");
			} else if(((style.filter[0]) instanceof haxe_ui_filters_Grayscale)) {
				var grayscale = style.filter[0];
				this.element.style.setProperty("-webkit-filter","grayscale(" + grayscale.amount + "%)");
				this.element.style.setProperty("-moz-filter","grayscale(" + grayscale.amount + "%)");
				this.element.style.setProperty("-o-filter","grayscale(" + grayscale.amount + "%)");
				this.element.style.setProperty("filter","grayscale(" + grayscale.amount + "%)");
			}
		} else {
			this.element.style.filter = null;
			this.element.style.boxShadow = null;
			this.element.style.removeProperty("box-shadow");
			this.element.style.removeProperty("-webkit-filter");
			this.element.style.removeProperty("-moz-filter");
			this.element.style.removeProperty("-o-filter");
			this.element.style.removeProperty("filter");
		}
		if(style.backdropFilter != null) {
			if(((style.backdropFilter[0]) instanceof haxe_ui_filters_Blur)) {
				var blur = style.backdropFilter[0];
				this.element.style.setProperty("backdrop-filter","blur(" + blur.amount + "px)");
			}
		} else {
			this.element.style.removeProperty("backdrop-filter");
		}
		if(style.opacity != null) {
			this.element.style.opacity = "" + style.opacity;
		}
		if(style.fontName != null) {
			this.element.style.fontFamily = style.fontName;
		}
		if(style.fontSize != null) {
			this.element.style.fontSize = "" + style.fontSize + "px";
		}
		if(style.color != null) {
			this.element.style.color = haxe_ui_backend_html5_HtmlUtils.color(style.color);
		}
		if(this.hasImageDisplay()) {
			this._imageDisplay.applyStyle();
		}
	}
	,setCursor: function(cursor) {
		var tmp = cursor == null;
		if(cursor == null) {
			this.element.style.removeProperty("cursor");
			if(this.hasImageDisplay()) {
				this.getImageDisplay().element.style.removeProperty("cursor");
			}
			if(this.hasTextDisplay()) {
				this.getTextDisplay().element.style.removeProperty("cursor");
			}
		} else {
			this.element.style.cursor = cursor;
			if(this.hasImageDisplay()) {
				this.getImageDisplay().element.style.cursor = cursor;
			}
			if(this.hasTextDisplay()) {
				this.getTextDisplay().element.style.cursor = cursor;
			}
		}
		var _g = 0;
		var _this = js_Boot.__cast(this , haxe_ui_core_Component);
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			if(c.element.style.cursor == null) {
				c.setCursor("inherit");
			}
		}
	}
	,_canvas: null
	,getCanvas: function(width,height) {
		if(this._canvas == null) {
			this._canvas = window.document.createElement("canvas");
			this._canvas.style.setProperty("-webkit-backface-visibility","hidden");
			this._canvas.style.setProperty("-moz-backface-visibility","hidden");
			this._canvas.style.setProperty("-ms-backface-visibility","hidden");
			this._canvas.style.position = "absolute";
			this._canvas.style.setProperty("pointer-events","none");
			this._canvas.width = width;
			this._canvas.height = height;
			this.element.insertBefore(this._canvas,this.element.firstChild);
		}
		if(width != this._canvas.width) {
			this._canvas.width = width;
		}
		if(height != this._canvas.height) {
			this._canvas.height = height;
		}
		return this._canvas;
	}
	,hasCanvas: function() {
		return this._canvas != null;
	}
	,removeCanvas: function() {
		if(this._canvas != null && this.element.contains(this._canvas)) {
			this.element.removeChild(this._canvas);
			this._canvas = null;
		}
	}
	,mapEvent: function(type,listener) {
		var _gthis = this;
		switch(type) {
		case "change":
			if(Object.prototype.hasOwnProperty.call(this._eventMap.h,type) == false) {
				if(this.hasTextInput() == true) {
					this._eventMap.h[type] = listener;
					var tmp = haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM.h["keyup"];
					this.getTextInput().element.addEventListener(tmp,$bind(this,this.__onTextFieldChangeEvent));
				}
			}
			break;
		case "click":case "doubleclick":case "mousedown":case "mousemove":case "mouseout":case "mouseover":case "mouseup":case "rightmousedown":case "rightmouseup":
			if(Object.prototype.hasOwnProperty.call(this._eventMap.h,type) == false) {
				this._eventMap.h[type] = listener;
				if(type == "click") {
					haxe_Timer.delay(function() {
						_gthis.element.addEventListener(haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM.h[type],$bind(_gthis,_gthis.__onMouseEvent));
					},50);
				} else {
					this.element.addEventListener(haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM.h[type],$bind(this,this.__onMouseEvent));
				}
				if(type == "rightmousedown" || type == "rightmouseup") {
					this.disableContextMenu(true);
				}
			}
			break;
		case "keydown":case "keyup":
			if(Object.prototype.hasOwnProperty.call(this._eventMap.h,type) == false) {
				this._eventMap.h[type] = listener;
				this.element.addEventListener(haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM.h[type],$bind(this,this.__onKeyboardEvent));
			}
			break;
		case "mousewheel":
			this._eventMap.h[type] = listener;
			if(haxe_ui_backend_html5_UserAgent.get_instance().get_firefox() == true) {
				this.element.addEventListener("DOMMouseScroll",$bind(this,this.__onMouseWheelEvent));
			} else {
				this.element.addEventListener("mousewheel",$bind(this,this.__onMouseWheelEvent));
			}
			break;
		case "rightclick":
			if(Object.prototype.hasOwnProperty.call(this._eventMap.h,type) == false) {
				this._eventMap.h[type] = listener;
				this.element.addEventListener("contextmenu",$bind(this,this.__onContextMenu));
			}
			break;
		case "scrollchange":
			this._eventMap.h[type] = listener;
			this.element.addEventListener("scroll",$bind(this,this.__onScrollEvent));
			break;
		}
	}
	,unmapEvent: function(type,listener) {
		switch(type) {
		case "change":
			if(this.hasTextInput()) {
				var _this = this._eventMap;
				if(Object.prototype.hasOwnProperty.call(_this.h,type)) {
					delete(_this.h[type]);
				}
				var tmp = haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM.h["keyup"];
				this.getTextInput().element.removeEventListener(tmp,$bind(this,this.__onTextFieldChangeEvent));
			}
			break;
		case "click":case "doubleclick":case "mousedown":case "mousemove":case "mouseout":case "mouseover":case "mouseup":case "rightmousedown":case "rightmouseup":
			var _this = this._eventMap;
			if(Object.prototype.hasOwnProperty.call(_this.h,type)) {
				delete(_this.h[type]);
			}
			this.element.removeEventListener(haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM.h[type],$bind(this,this.__onMouseEvent));
			if(type == "rightmousedown" || type == "rightmouseup") {
				this.disableContextMenu(false);
			}
			break;
		case "keydown":case "keyup":
			var _this = this._eventMap;
			if(Object.prototype.hasOwnProperty.call(_this.h,type)) {
				delete(_this.h[type]);
			}
			this.element.removeEventListener(haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM.h[type],$bind(this,this.__onKeyboardEvent));
			break;
		case "mousewheel":
			var _this = this._eventMap;
			if(Object.prototype.hasOwnProperty.call(_this.h,type)) {
				delete(_this.h[type]);
			}
			if(haxe_ui_backend_html5_UserAgent.get_instance().get_firefox() == true) {
				this.element.removeEventListener("DOMMouseScroll",$bind(this,this.__onMouseWheelEvent));
			} else {
				this.element.removeEventListener("mousewheel",$bind(this,this.__onMouseWheelEvent));
			}
			break;
		case "rightclick":
			var _this = this._eventMap;
			if(Object.prototype.hasOwnProperty.call(_this.h,type)) {
				delete(_this.h[type]);
			}
			this.element.removeEventListener("contextmenu",$bind(this,this.__onContextMenu));
			break;
		}
	}
	,_contextMenuDisabledCount: null
	,disableContextMenu: function(disable) {
		if(disable == true) {
			this._contextMenuDisabledCount++;
		} else {
			this._contextMenuDisabledCount--;
			if(this._contextMenuDisabledCount < 0) {
				this._contextMenuDisabledCount = 0;
			}
		}
		if(this._contextMenuDisabledCount == 1) {
			this.element.addEventListener("contextmenu",$bind(this,this.__preventContextMenu));
		} else if(this._contextMenuDisabledCount == 0) {
			this.element.removeEventListener("contextmenu",$bind(this,this.__preventContextMenu));
		}
	}
	,__preventContextMenu: function(event) {
		event.preventDefault();
		return false;
	}
	,__onContextMenu: function(event) {
		event.preventDefault();
		var type = "rightclick";
		if(type != null) {
			var fn = this._eventMap.h[type];
			if(fn != null) {
				var uiEvent = new haxe_ui_events_MouseEvent(type);
				uiEvent.screenX = event.pageX;
				uiEvent.screenY = event.pageY;
				fn(uiEvent);
			}
		}
		return false;
	}
	,__onChangeEvent: function(event) {
		var type = haxe_ui_backend_html5_EventMapper.DOM_TO_HAXEUI.h[event.type];
		if(type != null) {
			var fn = this._eventMap.h[type];
			if(fn != null) {
				var uiEvent = new haxe_ui_events_UIEvent(type);
				fn(uiEvent);
			}
		}
	}
	,__onTextFieldChangeEvent: function(event) {
		var fn = this._eventMap.h["change"];
		if(fn != null) {
			var uiEvent = new haxe_ui_events_UIEvent("change");
			fn(uiEvent);
		}
	}
	,__onMouseEvent: function(event) {
		var which = -1;
		var sx = -1;
		var sy = -1;
		var buttonDown = false;
		var ctrlKey = false;
		var shiftKey = false;
		if(((event) instanceof PointerEvent)) {
			var pe = js_Boot.__cast(event , PointerEvent);
			which = pe.which;
			buttonDown = pe.buttons != 0;
			sx = (pe.pageX - haxe_ui_core_Screen.get_instance().get_container().offsetLeft) / haxe_ui_Toolkit.get_scaleX();
			sy = (pe.pageY - haxe_ui_core_Screen.get_instance().get_container().offsetTop) / haxe_ui_Toolkit.get_scaleY();
			ctrlKey = pe.ctrlKey;
			shiftKey = pe.shiftKey;
		} else if(((event) instanceof MouseEvent)) {
			var me = js_Boot.__cast(event , MouseEvent);
			which = me.which;
			buttonDown = me.buttons != 0;
			sx = (me.pageX - haxe_ui_core_Screen.get_instance().get_container().offsetLeft) / haxe_ui_Toolkit.get_scaleX();
			sy = (me.pageY - haxe_ui_core_Screen.get_instance().get_container().offsetTop) / haxe_ui_Toolkit.get_scaleY();
			ctrlKey = me.ctrlKey;
			shiftKey = me.shiftKey;
		}
		var type = haxe_ui_backend_html5_EventMapper.DOM_TO_HAXEUI.h[event.type];
		if(type != null) {
			if(event.type == "pointerdown") {
				switch(which) {
				case 1:
					type = "mousedown";
					break;
				case 2:
					type = "mousedown";
					break;
				case 3:
					type = "rightmousedown";
					break;
				}
			} else if(event.type == "pointerup") {
				switch(which) {
				case 1:
					type = "mouseup";
					break;
				case 2:
					type = "mouseup";
					break;
				case 3:
					type = "rightmouseup";
					break;
				}
			}
			var tmp = type == "rightmousedown";
			var fn = this._eventMap.h[type];
			if(fn != null) {
				var mouseEvent = new haxe_ui_events_MouseEvent(type);
				mouseEvent._originalEvent = event;
				mouseEvent.buttonDown = buttonDown;
				mouseEvent.screenX = sx;
				mouseEvent.screenY = sy;
				mouseEvent.ctrlKey = ctrlKey;
				mouseEvent.shiftKey = shiftKey;
				fn(mouseEvent);
			}
		}
	}
	,getComponentOffset: function() {
		return new haxe_ui_geom_Point(0,0);
	}
	,__onMouseWheelEvent: function(event) {
		var fn = this._eventMap.h["mousewheel"];
		if(fn == null) {
			return;
		}
		var delta = 0;
		if(Reflect.field(event,"wheelDelta") != null) {
			delta = Reflect.field(event,"wheelDelta");
		} else if(((event) instanceof WheelEvent)) {
			delta = (js_Boot.__cast(event , WheelEvent)).deltaY;
		} else {
			delta = -event.detail;
		}
		delta = Math.max(-1,Math.min(1,delta));
		var mouseEvent = new haxe_ui_events_MouseEvent("mousewheel");
		mouseEvent._originalEvent = event;
		mouseEvent.screenX = (event.pageX - haxe_ui_core_Screen.get_instance().get_container().offsetLeft) / haxe_ui_Toolkit.get_scaleX();
		mouseEvent.screenY = (event.pageY - haxe_ui_core_Screen.get_instance().get_container().offsetTop) / haxe_ui_Toolkit.get_scaleY();
		mouseEvent.ctrlKey = event.ctrlKey;
		mouseEvent.shiftKey = event.shiftKey;
		mouseEvent.delta = delta;
		fn(mouseEvent);
	}
	,__onKeyboardEvent: function(event) {
		var type = haxe_ui_backend_html5_EventMapper.DOM_TO_HAXEUI.h[event.type];
		if(type != null) {
			var fn = this._eventMap.h[type];
			if(fn != null) {
				var keyboardEvent = new haxe_ui_events_KeyboardEvent(type);
				keyboardEvent._originalEvent = event;
				if(((event) instanceof KeyboardEvent)) {
					var me = js_Boot.__cast(event , KeyboardEvent);
					keyboardEvent.keyCode = me.keyCode;
					keyboardEvent.altKey = me.altKey;
					keyboardEvent.ctrlKey = me.ctrlKey;
					keyboardEvent.shiftKey = me.shiftKey;
				}
				fn(keyboardEvent);
			}
		}
	}
	,__onScrollEvent: function(event) {
		var type = haxe_ui_backend_html5_EventMapper.DOM_TO_HAXEUI.h[event.type];
		var fn = this._eventMap.h[type];
		if(fn != null) {
			var scrollEvent = new haxe_ui_events_ScrollEvent("scrollchange");
			fn(scrollEvent);
		}
	}
	,registerBehaviours: function() {
		haxe_ui_backend_ComponentBase.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_backend_ComponentBase.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_backend_ComponentImpl();
	}
	,__class__: haxe_ui_backend_ComponentImpl
});
var haxe_ui_validation_IValidating = function() { };
$hxClasses["haxe.ui.validation.IValidating"] = haxe_ui_validation_IValidating;
haxe_ui_validation_IValidating.__name__ = "haxe.ui.validation.IValidating";
haxe_ui_validation_IValidating.__isInterface__ = true;
haxe_ui_validation_IValidating.prototype = {
	get_depth: null
	,set_depth: null
	,get_id: null
	,set_id: null
	,get_isComponentOffscreen: null
	,validateComponent: null
	,updateComponentDisplay: null
	,isComponentOffscreen: null
	,__class__: haxe_ui_validation_IValidating
	,__properties__: {get_isComponentOffscreen:"get_isComponentOffscreen",set_id:"set_id",get_id:"get_id",set_depth:"set_depth",get_depth:"get_depth"}
};
var haxe_ui_core_Component = function() {
	this._pauseAnimationStyleChanges = false;
	this._initialSizeApplied = false;
	this._scriptAccess = true;
	this._includeInLayout = true;
	this._styleSheet = null;
	this._cachedStyleSheetRef = null;
	this._useCachedStyleSheetRef = false;
	this._styleNamesList = null;
	this._styleNames = null;
	this.cascadeActive = false;
	this.classes = [];
	this._customStyle = null;
	this._hidden = false;
	this.bindingRoot = false;
	this._dragOptions = null;
	this._dragInitiator = null;
	this.userData = null;
	this._animatable = true;
	this._native = null;
	this._defaultLayoutClass = null;
	this.componentTabIndex = 0;
	haxe_ui_backend_ComponentImpl.call(this);
	this.addClass(haxe_ui_Backend.get_id(),false);
	var c = js_Boot.getClass(this);
	while(c != null) {
		var css = c.__name__;
		var className = css.split(".").pop();
		this.addClass(className.toLowerCase(),false);
		this.addClass(haxe_ui_util_StringUtil.toDashes(className),false);
		if(className.toLowerCase() == "component") {
			break;
		}
		c = c.__super__;
	}
	var s = haxe_ui_Toolkit.styleSheet.buildStyleFor(this);
	if(s.native != null && this.get_hasNativeEntry() == true) {
		this.set_native(s.native);
	} else {
		this.create();
	}
	if(haxe_ui_Toolkit.get_initialized() == false) {
		haxe_Log.trace("WARNING: You are trying to create a component before the toolkit has been initialized. This could have undefined results.",{ fileName : "haxe/ui/core/Component.hx", lineNumber : 82, className : "haxe.ui.core.Component", methodName : "new"});
	}
};
$hxClasses["haxe.ui.core.Component"] = haxe_ui_core_Component;
haxe_ui_core_Component.__name__ = "haxe.ui.core.Component";
haxe_ui_core_Component.__interfaces__ = [haxe_ui_validation_IValidating];
haxe_ui_core_Component.addNamedComponentsFrom = function(parent,list) {
	if(parent == null) {
		return;
	}
	if(parent.get_id() != null) {
		list.push(parent);
	}
	var _g = 0;
	var _g1 = parent._children == null ? [] : parent._children;
	while(_g < _g1.length) {
		var child = _g1[_g];
		++_g;
		haxe_ui_core_Component.addNamedComponentsFrom(child,list);
	}
};
haxe_ui_core_Component.__super__ = haxe_ui_backend_ComponentImpl;
haxe_ui_core_Component.prototype = $extend(haxe_ui_backend_ComponentImpl.prototype,{
	componentTabIndex: null
	,_defaultLayoutClass: null
	,create: function() {
		if(this.get_native() == false || this.get_native() == null) {
			this.registerComposite();
		}
		this.createDefaults();
		this.handleCreate(this.get_native());
		this.destroyChildren();
		this.registerBehaviours();
		this.behaviours.replaceNative();
		if(this.get_native() == false || this.get_native() == null) {
			if(this._compositeBuilderClass != null) {
				if(this._compositeBuilder == null) {
					this._compositeBuilder = Type.createInstance(this._compositeBuilderClass,[this]);
				}
				this._compositeBuilder.create();
			}
			this.createChildren();
			if(this._internalEventsClass != null && this._internalEvents == null) {
				this.registerInternalEvents(this._internalEventsClass);
			}
		} else {
			var builderClass = this.getNativeConfigProperty(".builder.@class");
			if(builderClass != null) {
				if(this._compositeBuilder == null) {
					this._compositeBuilder = Type.createInstance($hxClasses[builderClass],[this]);
				}
				this._compositeBuilder.create();
			}
		}
		this.behaviours.applyDefaults();
	}
	,_compositeBuilderClass: null
	,_compositeBuilder: null
	,registerComposite: function() {
	}
	,createDefaults: function() {
	}
	,createChildren: function() {
	}
	,destroyChildren: function() {
		this.unregisterInternalEvents();
	}
	,createLayout: function() {
		var l = null;
		if(this.get_native() == true) {
			var sizeProps = this.getNativeConfigProperties(".size");
			if(sizeProps != null && Object.prototype.hasOwnProperty.call(sizeProps.h,"class")) {
				var name = sizeProps.h["class"];
				var size = Type.createInstance($hxClasses[name],[]);
				size.config = sizeProps;
				l = new haxe_ui_layouts_DelegateLayout(size);
			} else {
				var layoutProps = this.getNativeConfigProperties(".layout");
				if(layoutProps != null && Object.prototype.hasOwnProperty.call(layoutProps.h,"class")) {
					var name = layoutProps.h["class"];
					l = Type.createInstance($hxClasses[name],[]);
				}
			}
		}
		if(l == null) {
			if(this._defaultLayoutClass != null) {
				l = Type.createInstance(this._defaultLayoutClass,[]);
			} else {
				l = new haxe_ui_layouts_DefaultLayout();
			}
		}
		return l;
	}
	,_native: null
	,get_native: function() {
		if(this._native == null) {
			return false;
		}
		if(this.get_hasNativeEntry() == false) {
			return false;
		}
		return this._native;
	}
	,set_native: function(value) {
		if(this.get_hasNativeEntry() == false) {
			return value;
		}
		if(this._native == value) {
			return value;
		}
		this._native = value;
		this.get_customStyle().native = value;
		if(this._native == true && this.get_hasNativeEntry()) {
			this.addClass(":native");
		} else {
			this.removeClass(":native");
		}
		this.behaviours.cache();
		this.behaviours.detatch();
		this.create();
		if(this.get_layout() != null) {
			this.set_layout(this.createLayout());
		}
		this.behaviours.restore();
		return value;
	}
	,_animatable: null
	,get_animatable: function() {
		return false;
	}
	,set_animatable: function(value) {
		if(this._animatable != value) {
			if(value == false && this._componentAnimation != null) {
				this._componentAnimation.stop();
				this._componentAnimation = null;
			}
			this._animatable = value;
		}
		this._animatable = value;
		return value;
	}
	,_componentAnimation: null
	,get_componentAnimation: function() {
		return this._componentAnimation;
	}
	,set_componentAnimation: function(value) {
		if(this._componentAnimation != value && this._animatable == true) {
			if(this._componentAnimation != null) {
				this._componentAnimation.stop();
			}
			this._componentAnimation = value;
		}
		return value;
	}
	,userData: null
	,screen: null
	,get_screen: function() {
		return haxe_ui_Toolkit.get_screen();
	}
	,get_draggable: function() {
		return haxe_ui_dragdrop_DragManager.get_instance().isRegisteredDraggable(this);
	}
	,set_draggable: function(value) {
		if(value == true) {
			haxe_ui_dragdrop_DragManager.get_instance().registerDraggable(this,this.get_dragOptions());
		} else {
			haxe_ui_dragdrop_DragManager.get_instance().unregisterDraggable(this);
		}
		return value;
	}
	,_dragInitiator: null
	,get_dragInitiator: function() {
		return this._dragInitiator;
	}
	,set_dragInitiator: function(value) {
		this._dragInitiator = value;
		if(value != null) {
			if(this._dragOptions != null) {
				this._dragOptions.mouseTarget = value;
			}
			this.set_draggable(true);
		} else {
			this.set_draggable(false);
		}
		return value;
	}
	,_dragOptions: null
	,get_dragOptions: function() {
		if(this._dragOptions == null) {
			this._dragOptions = { mouseTarget : this._dragInitiator};
		}
		return this._dragOptions;
	}
	,set_dragOptions: function(value) {
		this._dragOptions = value;
		this.set_draggable(true);
		return value;
	}
	,bindingRoot: null
	,get_rootComponent: function() {
		var r = this;
		while(r.parentComponent != null) r = r.parentComponent;
		return r;
	}
	,get_numComponents: function() {
		var n = 0;
		if(this._compositeBuilder != null) {
			var builderCount = this._compositeBuilder.get_numComponents();
			if(builderCount != null) {
				n = builderCount;
			} else if(this._children != null) {
				n = this._children.length;
			}
		} else if(this._children != null) {
			n = this._children.length;
		}
		return n;
	}
	,addComponent: function(child) {
		if(this._compositeBuilder != null) {
			var v = this._compositeBuilder.addComponent(child);
			if(v != null) {
				v.set_scriptAccess(this.get_scriptAccess());
				return v;
			}
		}
		if(this.get_native() == true) {
			var allowChildren = this.getNativeConfigPropertyBool(".@allowChildren",true);
			if(allowChildren == false) {
				return child;
			}
		}
		child.parentComponent = this;
		child._isDisposed = false;
		if(this._children == null) {
			this._children = [];
		}
		this._children.push(child);
		this.handleAddComponent(child);
		if(this._componentReady) {
			child.ready();
		}
		this.assignPositionClasses();
		if(!(this._layout == null || this._layoutLocked == true)) {
			this.invalidateComponent("layout",false);
		}
		if(this.get_disabled()) {
			child.set_disabled(true);
		}
		if(this._compositeBuilder != null) {
			this._compositeBuilder.onComponentAdded(child);
		}
		this.onComponentAdded(child);
		this.dispatch(new haxe_ui_events_UIEvent("componentadded"));
		child.dispatch(new haxe_ui_events_UIEvent("componentaddedtoparent"));
		child.set_scriptAccess(this.get_scriptAccess());
		return child;
	}
	,containsComponent: function(child) {
		if(child == null) {
			return false;
		}
		var contains = false;
		this.walkComponents(function(c) {
			if(child == c) {
				contains = true;
			}
			return !contains;
		});
		return contains;
	}
	,addComponentAt: function(child,index) {
		if(this._compositeBuilder != null) {
			var v = this._compositeBuilder.addComponentAt(child,index);
			if(v != null) {
				v.set_scriptAccess(this.get_scriptAccess());
				return v;
			}
		}
		if(this.get_native() == true) {
			var allowChildren = this.getNativeConfigPropertyBool(".@allowChildren",true);
			if(allowChildren == false) {
				return child;
			}
		}
		child.parentComponent = this;
		child._isDisposed = false;
		if(this._children == null) {
			this._children = [];
		}
		this._children.splice(index,0,child);
		this.handleAddComponentAt(child,index);
		if(this._componentReady) {
			child.ready();
		}
		this.assignPositionClasses();
		if(!(this._layout == null || this._layoutLocked == true)) {
			this.invalidateComponent("layout",false);
		}
		if(this.get_disabled()) {
			child.set_disabled(true);
		}
		if(this._compositeBuilder != null) {
			this._compositeBuilder.onComponentAdded(child);
		}
		this.onComponentAdded(child);
		this.dispatch(new haxe_ui_events_UIEvent("componentadded"));
		child.dispatch(new haxe_ui_events_UIEvent("componentaddedtoparent"));
		child.set_scriptAccess(this.get_scriptAccess());
		return child;
	}
	,onComponentAdded: function(child) {
	}
	,removeComponent: function(child,dispose,invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if(dispose == null) {
			dispose = true;
		}
		if(child == null) {
			return null;
		}
		if(this._compositeBuilder != null) {
			var v = this._compositeBuilder.removeComponent(child,dispose,invalidate);
			if(v != null) {
				return v;
			}
		}
		if(this._children != null) {
			if(this._children.indexOf(child) == -1) {
				var childId = child.get_className();
				if(child.get_id() != null) {
					childId += "#" + child.get_id();
				}
				var thisId = this.get_className();
				if(this.get_id() != null) {
					thisId += "#" + this.get_id();
				}
				haxe_Log.trace("WARNING: trying to remove a child (" + childId + ") that is not a child of this component (" + thisId + ")",{ fileName : "haxe/ui/core/Component.hx", lineNumber : 540, className : "haxe.ui.core.Component", methodName : "removeComponent"});
				return child;
			}
			if(HxOverrides.remove(this._children,child)) {
				child.parentComponent = null;
				child.set_depth(-1);
			}
			if(dispose == true) {
				child.disposeComponent();
			} else {
				child.dispatch(new haxe_ui_events_UIEvent("hidden"));
				child.removeClass(":hover",false,true);
			}
		}
		this.handleRemoveComponent(child,dispose);
		this.assignPositionClasses(invalidate);
		if(this._children != null && invalidate == true) {
			if(!(this._layout == null || this._layoutLocked == true)) {
				this.invalidateComponent("layout",false);
			}
		}
		if(this._compositeBuilder != null) {
			this._compositeBuilder.onComponentRemoved(child);
		}
		this.onComponentRemoved(child);
		this.dispatch(new haxe_ui_events_UIEvent("componentremoved"));
		child.dispatch(new haxe_ui_events_UIEvent("componentremovedfromparent"));
		return child;
	}
	,disposeComponent: function() {
		this._isDisposed = true;
		this.removeAllComponents(true);
		this.destroyComponent();
		this.unregisterEvents();
		if(this.hasTextDisplay()) {
			this.getTextDisplay().dispose();
		}
		if(this.hasTextInput()) {
			this.getTextInput().dispose();
		}
		if(this.hasImageDisplay()) {
			this.getImageDisplay().dispose();
		}
		if(this.behaviours != null) {
			this.behaviours.dispose();
			this.behaviours = null;
		}
		if(this._layout != null) {
			this._layout.set_component(null);
			this._layout = null;
		}
		if(this._internalEvents != null) {
			this._internalEvents._target = null;
			this._internalEvents = null;
		}
		this.parentComponent = null;
	}
	,removeComponentAt: function(index,dispose,invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if(dispose == null) {
			dispose = true;
		}
		if(this._children == null) {
			return null;
		}
		var childCount = this._children.length;
		if(this._compositeBuilder != null) {
			var compositeChildCount = this._compositeBuilder.get_numComponents();
			if(compositeChildCount != null) {
				childCount = compositeChildCount;
			}
		}
		if(index < 0 || index > childCount - 1) {
			return null;
		}
		if(this._compositeBuilder != null) {
			var v = this._compositeBuilder.removeComponentAt(index,dispose,invalidate);
			if(v != null) {
				return v;
			}
		}
		var child = this._children[index];
		if(child == null) {
			return null;
		}
		if(dispose == true) {
			child._isDisposed = true;
			child.removeAllComponents(true);
		} else {
			child.dispatch(new haxe_ui_events_UIEvent("hidden"));
			child.removeClass(":hover",false,true);
		}
		this.handleRemoveComponentAt(index,dispose);
		if(HxOverrides.remove(this._children,child)) {
			child.parentComponent = null;
			child.set_depth(-1);
		}
		if(dispose == true) {
			child.destroyComponent();
			child.unregisterEvents();
		}
		this.assignPositionClasses(invalidate);
		if(invalidate == true) {
			if(!(this._layout == null || this._layoutLocked == true)) {
				this.invalidateComponent("layout",false);
			}
		}
		if(this._compositeBuilder != null) {
			this._compositeBuilder.onComponentRemoved(child);
		}
		this.onComponentRemoved(child);
		this.dispatch(new haxe_ui_events_UIEvent("componentremoved"));
		child.dispatch(new haxe_ui_events_UIEvent("componentremovedfromparent"));
		return child;
	}
	,onComponentRemoved: function(child) {
	}
	,assignPositionClasses: function(invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if((this._children == null ? [] : this._children).length == 1) {
			(this._children == null ? [] : this._children)[0].addClasses(["first","last"],invalidate);
			return;
		}
		var _g = 0;
		var _g1 = (this._children == null ? [] : this._children).length;
		while(_g < _g1) {
			var i = _g++;
			var c = (this._children == null ? [] : this._children)[i];
			if(i == 0) {
				c.swapClass("first","last",invalidate);
			} else if((this._children == null ? [] : this._children).length > 1 && i == (this._children == null ? [] : this._children).length - 1) {
				c.swapClass("last","first",invalidate);
			} else {
				c.removeClasses(["first","last"],invalidate);
			}
		}
	}
	,destroyComponent: function() {
		if(this._compositeBuilder != null) {
			this._compositeBuilder.destroy();
		}
		haxe_ui_locale_LocaleManager.get_instance().unregisterComponent(this);
		this.onDestroy();
	}
	,onDestroy: function() {
		var _g = 0;
		var _g1 = this._children == null ? [] : this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			child.onDestroy();
		}
		this.dispatch(new haxe_ui_events_UIEvent("hidden"));
		this.dispatch(new haxe_ui_events_UIEvent("destroy"));
	}
	,walkComponents: function(callback) {
		if(callback(this) == false) {
			return;
		}
		var _g = 0;
		var _g1 = this._children == null ? [] : this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			var cont = [true];
			child.walkComponents((function(cont) {
				return function(c) {
					cont[0] = callback(c);
					return cont[0];
				};
			})(cont));
			if(cont[0] == false) {
				break;
			}
		}
	}
	,removeAllComponents: function(dispose) {
		if(dispose == null) {
			dispose = true;
		}
		if(this._compositeBuilder != null) {
			var b = this._compositeBuilder.removeAllComponents(dispose);
			if(b == true) {
				return;
			}
		}
		if(this._children != null) {
			while(this._children.length > 0) {
				this._children[0].removeAllComponents(dispose);
				this.removeComponent(this._children[0],dispose,false);
			}
			if(!(this._layout == null || this._layoutLocked == true)) {
				this.invalidateComponent("layout",false);
			}
		}
	}
	,matchesSearch: function(criteria,type,searchType) {
		if(searchType == null) {
			searchType = "id";
		}
		if(criteria != null) {
			if(searchType == "id" && this.get_id() == criteria || searchType == "css" && this.classes.indexOf(criteria) != -1 == true) {
				if(type != null) {
					return js_Boot.__instanceof(this,type);
				}
				return true;
			}
		} else if(type != null) {
			return js_Boot.__instanceof(this,type);
		}
		return false;
	}
	,findComponent: function(criteria,type,recursive,searchType) {
		if(searchType == null) {
			searchType = "id";
		}
		if(recursive == null && criteria != null && searchType == "id") {
			recursive = true;
		}
		var match = null;
		var _g = 0;
		var _g1 = this._children == null ? [] : this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.matchesSearch(criteria,type,searchType)) {
				match = child;
				break;
			}
		}
		if(match == null && recursive == true) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				var temp = child.findComponent(criteria,type,recursive,searchType);
				if(temp != null) {
					match = temp;
					break;
				}
			}
			if(match == null && this._compositeBuilder != null) {
				match = this._compositeBuilder.findComponent(criteria,type,recursive,searchType);
			}
		}
		return match;
	}
	,findComponents: function(styleName,type,maxDepth) {
		if(maxDepth == null) {
			maxDepth = 5;
		}
		if(maxDepth == -1) {
			maxDepth = 100;
		}
		if(maxDepth <= 0) {
			return [];
		}
		--maxDepth;
		var r = [];
		if(this._compositeBuilder != null) {
			var childArray = this._compositeBuilder.findComponents(styleName,type,maxDepth);
			if(childArray != null) {
				var _g = 0;
				while(_g < childArray.length) {
					var c = childArray[_g];
					++_g;
					r.push(c);
				}
			}
		}
		var _g = 0;
		var _g1 = this._children == null ? [] : this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			var match = true;
			if(styleName != null && child.classes.indexOf(styleName) != -1 == false) {
				match = false;
			}
			if(type != null && js_Boot.__instanceof(child,type) == false) {
				match = false;
			}
			if(match == true) {
				r.push(child);
			} else {
				var childArray = child.findComponents(styleName,type,maxDepth);
				var _g2 = 0;
				while(_g2 < childArray.length) {
					var c = childArray[_g2];
					++_g2;
					r.push(c);
				}
			}
		}
		return r;
	}
	,findAncestor: function(criteria,type,searchType) {
		if(searchType == null) {
			searchType = "id";
		}
		var match = null;
		var p = this.parentComponent;
		while(p != null) if(p.matchesSearch(criteria,type,searchType)) {
			match = p;
			break;
		} else {
			p = p.parentComponent;
		}
		return match;
	}
	,findComponentsUnderPoint: function(screenX,screenY,type) {
		var c = [];
		if(this.hitTest(screenX,screenY,false)) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				if(child.hitTest(screenX,screenY,false)) {
					var match = true;
					if(type != null && js_Boot.__instanceof(child,type) == false) {
						match = false;
					}
					if(match == true) {
						c.push(child);
					}
					c = c.concat(child.findComponentsUnderPoint(screenX,screenY,type));
				}
			}
		}
		return c;
	}
	,hasComponentUnderPoint: function(screenX,screenY,type) {
		var b = false;
		if(this.hitTest(screenX,screenY,false)) {
			if(type == null) {
				return true;
			}
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				if(child.hitTest(screenX,screenY,false)) {
					var match = true;
					if(type != null && js_Boot.__instanceof(child,type) == false) {
						match = false;
					}
					if(match == false) {
						match = child.hasComponentUnderPoint(screenX,screenY,type);
					}
					if(match == true) {
						b = match;
						break;
					}
				}
			}
		}
		return b;
	}
	,getComponentIndex: function(child) {
		if(this._compositeBuilder != null) {
			var index = this._compositeBuilder.getComponentIndex(child);
			if(index != -2147483648) {
				return index;
			}
		}
		var index = -1;
		if(this._children != null && child != null) {
			index = this._children.indexOf(child);
		}
		return index;
	}
	,setComponentIndex: function(child,index) {
		if(this._compositeBuilder != null) {
			var v = this._compositeBuilder.setComponentIndex(child,index);
			if(v != null) {
				return v;
			}
		}
		if(index >= 0 && index <= this._children.length && child.parentComponent == this) {
			this.handleSetComponentIndex(child,index);
			HxOverrides.remove(this._children,child);
			this._children.splice(index,0,child);
			if(!(this._layout == null || this._layoutLocked == true)) {
				this.invalidateComponent("layout",false);
			}
		}
		return child;
	}
	,getComponentAt: function(index) {
		if(this._compositeBuilder != null) {
			var v = this._compositeBuilder.getComponentAt(index);
			if(v != null) {
				return v;
			}
		}
		if(this._children == null) {
			return null;
		}
		return this._children[index];
	}
	,hide: function() {
		if(this._compositeBuilder != null) {
			var v = this._compositeBuilder.hide();
			if(v == true) {
				return;
			}
		}
		if(this._hidden == false) {
			this._hidden = true;
			this.handleVisibility(false);
			if(this.parentComponent != null) {
				var _this = this.parentComponent;
				if(!(_this._layout == null || _this._layoutLocked == true)) {
					_this.invalidateComponent("layout",false);
				}
			}
			this.dispatchRecursively(new haxe_ui_events_UIEvent("hidden"));
		}
	}
	,hideInternal: function(dispatchChildren) {
		if(dispatchChildren == null) {
			dispatchChildren = false;
		}
		if(this._compositeBuilder != null) {
			var v = this._compositeBuilder.hide();
			if(v == true) {
				return;
			}
		}
		if(this._hidden == false) {
			this._hidden = true;
			this.handleVisibility(false);
			if(this.parentComponent != null) {
				var _this = this.parentComponent;
				if(!(_this._layout == null || _this._layoutLocked == true)) {
					_this.invalidateComponent("layout",false);
				}
			}
			if(dispatchChildren == true) {
				this.dispatchRecursively(new haxe_ui_events_UIEvent("hidden"));
			} else {
				this.dispatch(new haxe_ui_events_UIEvent("hidden"));
			}
		}
	}
	,show: function() {
		if(this._compositeBuilder != null) {
			var v = this._compositeBuilder.show();
			if(v == true) {
				return;
			}
		}
		if(this._hidden == true) {
			this._hidden = false;
			this.handleVisibility(true);
			if(!(this._layout == null || this._layoutLocked == true)) {
				this.invalidateComponent("layout",false);
			}
			if(this.parentComponent != null) {
				var _this = this.parentComponent;
				if(!(_this._layout == null || _this._layoutLocked == true)) {
					_this.invalidateComponent("layout",false);
				}
			}
			this.dispatchRecursively(new haxe_ui_events_UIEvent("shown"));
		}
	}
	,showInternal: function(dispatchChildren) {
		if(dispatchChildren == null) {
			dispatchChildren = false;
		}
		if(this._compositeBuilder != null) {
			var v = this._compositeBuilder.show();
			if(v == true) {
				return;
			}
		}
		if(this._hidden == true) {
			this._hidden = false;
			this.handleVisibility(true);
			if(!(this._layout == null || this._layoutLocked == true)) {
				this.invalidateComponent("layout",false);
			}
			if(this.parentComponent != null) {
				var _this = this.parentComponent;
				if(!(_this._layout == null || _this._layoutLocked == true)) {
					_this.invalidateComponent("layout",false);
				}
			}
			if(dispatchChildren == true) {
				this.dispatchRecursively(new haxe_ui_events_UIEvent("shown"));
			} else {
				this.dispatch(new haxe_ui_events_UIEvent("shown"));
			}
		}
	}
	,fadeIn: function(onEnd,show) {
		if(show == null) {
			show = true;
		}
		var _gthis = this;
		if(onEnd != null || show == true) {
			var prevStart = this.onAnimationStart;
			var prevEnd = this.onAnimationEnd;
			if(show == true) {
				prevStart = this.onAnimationStart;
				this.set_onAnimationStart(function(e) {
					_gthis.show();
					_gthis.set_onAnimationStart(prevStart);
				});
			}
			this.set_onAnimationEnd(function(e) {
				if(onEnd != null) {
					onEnd();
				}
				_gthis.removeClass("fade-in");
				_gthis.set_onAnimationEnd(prevEnd);
			});
		}
		this.swapClass("fade-in","fade-out");
	}
	,fadeOut: function(onEnd,hide) {
		if(hide == null) {
			hide = true;
		}
		var _gthis = this;
		if(onEnd != null || hide == true) {
			var prevEnd = this.onAnimationEnd;
			this.set_onAnimationEnd(function(e) {
				if(hide == true) {
					_gthis.hide();
				}
				if(onEnd != null) {
					onEnd();
				}
				_gthis.set_onAnimationEnd(prevEnd);
				_gthis.removeClass("fade-out");
			});
		}
		this.swapClass("fade-out","fade-in");
	}
	,_hidden: null
	,get_hidden: function() {
		if(this._hidden == true) {
			return true;
		}
		if(this.parentComponent != null) {
			return this.parentComponent.get_hidden();
		}
		return false;
	}
	,set_hidden: function(value) {
		if(value == this._hidden) {
			return value;
		}
		if(value == true) {
			this.hide();
		} else {
			this.show();
		}
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"hidden"));
		return value;
	}
	,_customStyle: null
	,get_customStyle: function() {
		if(this._customStyle == null) {
			this._customStyle = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		return this._customStyle;
	}
	,set_customStyle: function(value) {
		if(value != this._customStyle) {
			this.invalidateComponent("style",false);
		}
		this._customStyle = value;
		return value;
	}
	,classes: null
	,cascadeActive: null
	,addClass: function(name,invalidate,recursive) {
		if(recursive == null) {
			recursive = false;
		}
		if(invalidate == null) {
			invalidate = true;
		}
		if(this.classes.indexOf(name) == -1) {
			this.classes.push(name);
			if(invalidate == true) {
				this.invalidateComponent("style",false);
			}
		}
		if(recursive == true || this.cascadeActive == true && name == ":active") {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				child.addClass(name,invalidate,recursive);
			}
		}
	}
	,addClasses: function(names,invalidate,recursive) {
		if(recursive == null) {
			recursive = false;
		}
		if(invalidate == null) {
			invalidate = true;
		}
		var needsInvalidate = false;
		var _g = 0;
		while(_g < names.length) {
			var name = names[_g];
			++_g;
			if(this.classes.indexOf(name) == -1) {
				this.classes.push(name);
				if(invalidate == true) {
					needsInvalidate = true;
				}
			}
		}
		if(needsInvalidate == true) {
			this.invalidateComponent("style",false);
		}
		if(recursive == true) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				child.addClasses(names,invalidate,recursive);
			}
		}
	}
	,removeClass: function(name,invalidate,recursive) {
		if(recursive == null) {
			recursive = false;
		}
		if(invalidate == null) {
			invalidate = true;
		}
		if(this.classes.indexOf(name) != -1) {
			HxOverrides.remove(this.classes,name);
			if(invalidate == true) {
				this.invalidateComponent("style",false);
			}
		}
		if(recursive == true || this.cascadeActive == true && name == ":active") {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				child.removeClass(name,invalidate,recursive);
			}
		}
	}
	,removeClasses: function(names,invalidate,recursive) {
		if(recursive == null) {
			recursive = false;
		}
		if(invalidate == null) {
			invalidate = true;
		}
		var needsInvalidate = false;
		var _g = 0;
		while(_g < names.length) {
			var name = names[_g];
			++_g;
			if(this.classes.indexOf(name) != -1) {
				HxOverrides.remove(this.classes,name);
				if(invalidate == true) {
					needsInvalidate = true;
				}
			}
		}
		if(needsInvalidate == true) {
			this.invalidateComponent("style",false);
		}
		if(recursive == true) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				child.removeClasses(names,invalidate,recursive);
			}
		}
	}
	,hasClass: function(name) {
		return this.classes.indexOf(name) != -1;
	}
	,swapClass: function(classToAdd,classToRemove,invalidate,recursive) {
		if(recursive == null) {
			recursive = false;
		}
		if(invalidate == null) {
			invalidate = true;
		}
		var needsInvalidate = false;
		if(classToAdd != null && this.classes.indexOf(classToAdd) == -1) {
			this.classes.push(classToAdd);
			needsInvalidate = true;
		}
		if(classToRemove != null && this.classes.indexOf(classToRemove) != -1) {
			HxOverrides.remove(this.classes,classToRemove);
			needsInvalidate = true;
		}
		if(invalidate == true && needsInvalidate == true) {
			this.invalidateComponent("style",false);
		}
		if(recursive == true) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				child.swapClass(classToAdd,classToRemove,invalidate,recursive);
			}
		}
	}
	,_styleNames: null
	,_styleNamesList: null
	,get_styleNames: function() {
		return this._styleNames;
	}
	,set_styleNames: function(value) {
		if(value == this._styleNames) {
			return value;
		}
		if(value == null) {
			value = "";
		}
		this._styleNames = value;
		var newStyleNamesList = [];
		var classesToAdd = [];
		var requiresInvalidation = false;
		var _g = 0;
		var _g1 = value.split(" ");
		while(_g < _g1.length) {
			var x = _g1[_g];
			++_g;
			x = StringTools.trim(x);
			if(x.length == 0) {
				continue;
			}
			newStyleNamesList.push(x);
			if(this._styleNamesList != null) {
				if(this._styleNamesList.indexOf(x) == -1) {
					classesToAdd.push(x);
					requiresInvalidation = true;
				}
			} else {
				classesToAdd.push(x);
				requiresInvalidation = true;
			}
		}
		var classesToRemove = [];
		if(this._styleNamesList != null) {
			var _g = 0;
			var _g1 = this._styleNamesList;
			while(_g < _g1.length) {
				var x = _g1[_g];
				++_g;
				if(newStyleNamesList.indexOf(x) == -1) {
					classesToRemove.push(x);
					requiresInvalidation = true;
				}
			}
		}
		this._styleNamesList = newStyleNamesList;
		if(requiresInvalidation) {
			var _g = 0;
			while(_g < classesToAdd.length) {
				var x = classesToAdd[_g];
				++_g;
				this.addClass(x,false,false);
			}
			var _g = 0;
			while(_g < classesToRemove.length) {
				var x = classesToRemove[_g];
				++_g;
				this.removeClass(x,false,false);
			}
			this.invalidateComponent("all",true);
		}
		return value;
	}
	,_styleString: null
	,get_styleString: function() {
		return this._styleString;
	}
	,set_styleString: function(value) {
		if(value == null || value == this._styleString) {
			return value;
		}
		var cssString = StringTools.trim(value);
		if(cssString.length == 0) {
			return value;
		}
		if(StringTools.endsWith(cssString,";") == false) {
			cssString += ";";
		}
		cssString = "_ { " + cssString + "}";
		var s = new haxe_ui_styles_Parser().parse(cssString);
		this.get_customStyle().mergeDirectives(s.get_rules()[0].directives);
		this._styleString = value;
		this.invalidateComponent("style",false);
		return value;
	}
	,_useCachedStyleSheetRef: null
	,_cachedStyleSheetRef: null
	,_styleSheet: null
	,get_styleSheet: function() {
		if(this._useCachedStyleSheetRef == true) {
			return this._cachedStyleSheetRef;
		}
		var s = null;
		var ref = this;
		while(ref != null) {
			if(ref._styleSheet != null) {
				s = ref._styleSheet;
				break;
			}
			ref = ref.parentComponent;
		}
		this._useCachedStyleSheetRef = true;
		this._cachedStyleSheetRef = s;
		return s;
	}
	,set_styleSheet: function(value) {
		this._styleSheet = value;
		this.resetCachedStyleSheetRef();
		return value;
	}
	,resetCachedStyleSheetRef: function() {
		this._cachedStyleSheetRef = null;
		this._useCachedStyleSheetRef = false;
		var _g = 0;
		var _g1 = this._children == null ? [] : this._children;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			c.resetCachedStyleSheetRef();
		}
	}
	,_includeInLayout: null
	,get_includeInLayout: function() {
		if(this._hidden == true) {
			return false;
		}
		return this._includeInLayout;
	}
	,set_includeInLayout: function(value) {
		this._includeInLayout = value;
		return value;
	}
	,get_layout: function() {
		return this._layout;
	}
	,set_layout: function(value) {
		if(value == null) {
			return value;
		}
		var tmp;
		if(this._layout != null) {
			var c = js_Boot.getClass(value);
			var tmp1 = c.__name__;
			var c = js_Boot.getClass(this._layout);
			tmp = tmp1 == c.__name__;
		} else {
			tmp = false;
		}
		if(tmp) {
			return value;
		}
		this._layout = value;
		this._layout.set_component(this);
		return value;
	}
	,lockLayout: function(recursive) {
		if(recursive == null) {
			recursive = false;
		}
		if(this._layoutLocked == true) {
			return;
		}
		this._layoutLocked = true;
		if(recursive == true) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				child.lockLayout(recursive);
			}
		}
	}
	,unlockLayout: function(recursive) {
		if(recursive == null) {
			recursive = false;
		}
		if(this._layoutLocked == false) {
			return;
		}
		if(recursive == true) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				child.unlockLayout(recursive);
			}
		}
		this._layoutLocked = false;
		if(!(this._layout == null || this._layoutLocked == true)) {
			this.invalidateComponent("layout",false);
		}
	}
	,ready: function() {
		var _gthis = this;
		this.set_depth(haxe_ui_util_ComponentUtil.getDepth(this));
		if(this.isComponentInvalid()) {
			this._invalidateCount = 0;
			haxe_ui_validation_ValidationManager.get_instance().add(this);
		}
		if(this._componentReady == false) {
			this._componentReady = true;
			this.handleReady();
			if((this._children == null ? [] : this._children) != null) {
				var _g = 0;
				var _g1 = this._children == null ? [] : this._children;
				while(_g < _g1.length) {
					var child = _g1[_g];
					++_g;
					child.ready();
				}
			}
			this.invalidateComponent();
			this.behaviours.ready();
			this.behaviours.update();
			haxe_ui_Toolkit.callLater(function() {
				_gthis.invalidateComponent("data",false);
				_gthis.invalidateComponent("style",false);
				if(_gthis._compositeBuilder != null) {
					_gthis._compositeBuilder.onReady();
				}
				_gthis.onReady();
				_gthis.dispatch(new haxe_ui_events_UIEvent("ready"));
				if(_gthis._hidden == false) {
					_gthis.dispatch(new haxe_ui_events_UIEvent("shown"));
				}
			});
		}
	}
	,onReady: function() {
	}
	,onInitialize: function() {
	}
	,onResized: function() {
	}
	,onMoved: function() {
	}
	,_scriptAccess: null
	,get_scriptAccess: function() {
		return this._scriptAccess;
	}
	,set_scriptAccess: function(value) {
		if(value == this._scriptAccess) {
			return value;
		}
		this._scriptAccess = value;
		var _g = 0;
		var _g1 = this._children == null ? [] : this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			child.set_scriptAccess(value);
		}
		return value;
	}
	,namedComponents: null
	,get_namedComponents: function() {
		var list = [];
		haxe_ui_core_Component.addNamedComponentsFrom(this,list);
		return list;
	}
	,onThemeChanged: function() {
	}
	,initializeComponent: function() {
		if(this._isInitialized == true) {
			return;
		}
		if(this._compositeBuilder != null) {
			this._compositeBuilder.onInitialize();
		}
		this.onInitialize();
		if(this._layout == null) {
			this.set_layout(this.createLayout());
		}
		this._isInitialized = true;
		if(this.hasEvent("initialize")) {
			this.dispatch(new haxe_ui_events_UIEvent("initialize"));
		}
	}
	,_initialSizeApplied: null
	,validateInitialSize: function(isInitialized) {
		if(isInitialized == false && this._style != null && this._initialSizeApplied == false) {
			if((this._style.initialWidth != null || this._style.initialPercentWidth != null) && (this.get_width() <= 0 && this.get_percentWidth() == null)) {
				if(this._style.initialWidth != null) {
					this.set_width(this._style.initialWidth);
					this._initialSizeApplied = true;
				} else if(this._style.initialPercentWidth != null) {
					this.set_percentWidth(this._style.initialPercentWidth);
					this._initialSizeApplied = true;
				}
			}
			if((this._style.initialHeight != null || this._style.initialPercentHeight != null) && (this.get_height() <= 0 && this.get_percentHeight() == null)) {
				if(this._style.initialHeight != null) {
					this.set_height(this._style.initialHeight);
					this._initialSizeApplied = true;
				} else if(this._style.initialPercentHeight != null) {
					this.set_percentHeight(this._style.initialPercentHeight);
					this._initialSizeApplied = true;
				}
			}
		}
	}
	,validateComponentData: function() {
		this.behaviours.validateData();
		if(this._compositeBuilder != null) {
			this._compositeBuilder.validateComponentData();
		}
	}
	,validateComponentLayout: function() {
		this.get_layout().refresh();
		while(this.validateComponentAutoSize()) this.get_layout().refresh();
		var sizeChanged = false;
		if(this._componentWidth != this._actualWidth || this._componentHeight != this._actualHeight) {
			this._actualWidth = this._componentWidth;
			this._actualHeight = this._componentHeight;
			this.enforceSizeConstraints();
			if(this.parentComponent != null) {
				var _this = this.parentComponent;
				if(!(_this._layout == null || _this._layoutLocked == true)) {
					_this.invalidateComponent("layout",false);
				}
			}
			this.onResized();
			this.dispatch(new haxe_ui_events_UIEvent("resize"));
			sizeChanged = true;
		}
		if(this._compositeBuilder != null) {
			if(this._compositeBuilder.validateComponentLayout()) {
				sizeChanged = true;
			}
		}
		return sizeChanged;
	}
	,enforceSizeConstraints: function() {
		if(this.get_style() != null) {
			if(this.get_style().minWidth != null && this._componentWidth < this.get_style().minWidth) {
				this._componentWidth = this._actualWidth = this._width = this.get_style().minWidth;
			}
			if(this.get_style().maxWidth != null && this.get_style().maxPercentWidth == null && this._componentWidth > this.get_style().maxWidth) {
				this._componentWidth = this._actualWidth = this._width = this.get_style().maxWidth;
			} else if(this.get_style().maxWidth == null && this.get_style().maxPercentWidth != null) {
				var p = this;
				var max = 0;
				while(p != null) {
					if(p.get_style() != null && p.get_style().maxPercentWidth == null) {
						max += p.get_width();
						break;
					}
					if(p.get_style() != null && p != this) {
						max -= p.get_style().paddingLeft + p.get_style().paddingRight;
					}
					p = p.parentComponent;
				}
				max = max * this.get_style().maxPercentWidth / 100;
				if(max > 0 && this._componentWidth > max) {
					this._componentWidth = this._actualWidth = this._width = max;
				}
			}
			if(this.get_style().minHeight != null && this._componentHeight < this.get_style().minHeight) {
				this._componentHeight = this._actualHeight = this._height = this.get_style().minHeight;
			}
			if(this.get_style().maxHeight != null && this.get_style().maxPercentHeight == null && this._componentHeight > this.get_style().maxHeight) {
				this._componentHeight = this._actualHeight = this._height = this.get_style().maxHeight;
			} else if(this.get_style().maxHeight == null && this.get_style().maxPercentHeight != null) {
				var p = this;
				var max = 0;
				while(p != null) {
					if(p.get_style() != null && p.get_style().maxPercentHeight == null) {
						max += p.get_height();
						break;
					}
					if(p.get_style() != null && p != this) {
						max -= p.get_style().paddingTop + p.get_style().paddingBottom;
					}
					p = p.parentComponent;
				}
				max = max * this.get_style().maxPercentHeight / 100;
				if(max > 0 && this._componentHeight > max) {
					this._componentHeight = this._actualHeight = this._height = max;
				}
			}
		}
	}
	,validateComponentStyle: function() {
		var s = haxe_ui_Toolkit.styleSheet.buildStyleFor(this);
		if(this.get_styleSheet() != null) {
			var localStyle = this.get_styleSheet().buildStyleFor(this);
			s.apply(localStyle);
		}
		s.apply(this.get_customStyle());
		if(this._style == null || this._style.equalTo(s) == false) {
			var marginsChanged = false;
			if(this.parentComponent != null && this._style != null) {
				marginsChanged = this._style.marginLeft != s.marginLeft || this._style.marginRight != s.marginRight || this._style.marginTop != s.marginTop || this._style.marginBottom != s.marginBottom;
			}
			var bordersChanged = false;
			if(this._style != null && this._style.get_fullBorderSize() != s.get_fullBorderSize()) {
				bordersChanged = true;
			}
			this._style = s;
			this.applyStyle(s);
			if(bordersChanged == true) {
				if(!(this._layout == null || this._layoutLocked == true)) {
					this.invalidateComponent("layout",false);
				}
			}
			if(marginsChanged == true) {
				var _this = this.parentComponent;
				if(!(_this._layout == null || _this._layoutLocked == true)) {
					_this.invalidateComponent("layout",false);
				}
			}
		}
	}
	,validateComponentPosition: function() {
		this.handlePosition(this._left,this._top,this._style);
		this.onMoved();
		this.dispatch(new haxe_ui_events_UIEvent("move"));
	}
	,updateComponentDisplay: function() {
		if(this.get_componentWidth() == null || this.get_componentHeight() == null) {
			return;
		}
		this.handleSize(this.get_componentWidth(),this.get_componentHeight(),this._style);
		if(this._componentClipRect != null || this.get_style() != null && this.get_style().clip != null && this.get_style().clip == true) {
			this.handleClipRect(this._componentClipRect != null ? this._componentClipRect : new haxe_ui_geom_Rectangle(0,0,this.get_componentWidth(),this.get_componentHeight()));
		}
	}
	,validateComponentAutoSize: function() {
		var invalidate = false;
		if(this.get_autoWidth() == true || this.get_autoHeight() == true) {
			var s = this.get_layout().calcAutoSize();
			if(this.get_autoWidth() == true) {
				if(s.width != this._componentWidth) {
					this._componentWidth = s.width;
					invalidate = true;
				}
			}
			if(this.get_autoHeight() == true) {
				if(s.height != this._componentHeight) {
					this._componentHeight = s.height;
					invalidate = true;
				}
			}
		}
		return invalidate;
	}
	,_pauseAnimationStyleChanges: null
	,applyStyle: function(style) {
		haxe_ui_backend_ComponentImpl.prototype.applyStyle.call(this,style);
		if(style != null && this._initialSizeApplied == false) {
			if((style.initialWidth != null || style.initialPercentWidth != null) && (this.get_width() <= 0 && this.get_percentWidth() == null)) {
				if(style.initialWidth != null) {
					this.set_width(style.initialWidth);
					this._initialSizeApplied = true;
				} else if(style.initialPercentWidth != null) {
					this.set_percentWidth(style.initialPercentWidth);
					this._initialSizeApplied = true;
				}
			}
			if((style.initialHeight != null || style.initialPercentHeight != null) && (this.get_height() <= 0 && this.get_percentHeight() == null)) {
				if(style.initialHeight != null) {
					this.set_height(style.initialHeight);
					this._initialSizeApplied = true;
				} else if(style.initialPercentHeight != null) {
					this.set_percentHeight(style.initialPercentHeight);
					this._initialSizeApplied = true;
				}
			}
		}
		if(style.left != null) {
			this.set_left(style.left);
		}
		if(style.top != null) {
			this.set_top(style.top);
		}
		if(style.percentWidth != null) {
			this._width = null;
			this.set_componentWidth(null);
			this.set_percentWidth(style.percentWidth);
		}
		if(style.percentHeight != null) {
			this._height = null;
			this.set_componentHeight(null);
			this.set_percentHeight(style.percentHeight);
		}
		if(style.width != null) {
			this.set_percentWidth(null);
			this.set_width(style.width);
		}
		if(style.height != null) {
			this.set_percentHeight(null);
			this.set_height(style.height);
		}
		if(style.native != null) {
			this.set_native(style.native);
		}
		if(style.hidden != null) {
			this.set_hidden(style.hidden);
		}
		if(this._pauseAnimationStyleChanges == false) {
			if(style.animationName != null) {
				var animationKeyFrames = haxe_ui_Toolkit.styleSheet.get_animations().h[style.animationName];
				this.applyAnimationKeyFrame(animationKeyFrames,style.animationOptions);
			} else if(this.get_componentAnimation() != null) {
				this.set_componentAnimation(null);
			}
		}
		if(style.pointerEvents != null && style.pointerEvents != "none") {
			if(this.hasEvent("mouseover",$bind(this,this.onPointerEventsMouseOver)) == false) {
				if(style.cursor == null) {
					this.get_customStyle().cursor = "pointer";
				}
				this.registerEvent("mouseover",$bind(this,this.onPointerEventsMouseOver));
			}
			if(this.hasEvent("mouseout",$bind(this,this.onPointerEventsMouseOut)) == false) {
				this.registerEvent("mouseout",$bind(this,this.onPointerEventsMouseOut));
			}
			if(this.hasEvent("mousedown",$bind(this,this.onPointerEventsMouseDown)) == false) {
				this.registerEvent("mousedown",$bind(this,this.onPointerEventsMouseDown));
			}
			if(this.hasEvent("mouseup",$bind(this,this.onPointerEventsMouseUp)) == false) {
				this.registerEvent("mouseup",$bind(this,this.onPointerEventsMouseUp));
			}
			this.handleFrameworkProperty("allowMouseInteraction",true);
		} else if(style.pointerEvents != null) {
			if(this.hasEvent("mouseover",$bind(this,this.onPointerEventsMouseOver)) == true) {
				this.get_customStyle().cursor = null;
				this.unregisterEvent("mouseover",$bind(this,this.onPointerEventsMouseOver));
			}
			if(this.hasEvent("mouseout",$bind(this,this.onPointerEventsMouseOut)) == true) {
				this.unregisterEvent("mouseout",$bind(this,this.onPointerEventsMouseOut));
			}
			if(this.hasEvent("mousedown",$bind(this,this.onPointerEventsMouseDown)) == true) {
				this.unregisterEvent("mousedown",$bind(this,this.onPointerEventsMouseDown));
			}
			if(this.hasEvent("mouseup",$bind(this,this.onPointerEventsMouseUp)) == true) {
				this.unregisterEvent("mouseup",$bind(this,this.onPointerEventsMouseUp));
			}
			this.handleFrameworkProperty("allowMouseInteraction",false);
		}
		if(style.includeInLayout != null) {
			this.set_includeInLayout(style.includeInLayout);
		}
		if(this._compositeBuilder != null) {
			this._compositeBuilder.applyStyle(style);
		}
	}
	,onPointerEventsMouseOver: function(e) {
		this.addClass(":hover",true,true);
	}
	,onPointerEventsMouseOut: function(e) {
		this.removeClass(":hover",true,true);
	}
	,onPointerEventsMouseDown: function(e) {
		this.addClass(":down",true,true);
	}
	,onPointerEventsMouseUp: function(e) {
		this.removeClass(":down",true,true);
	}
	,applyAnimationKeyFrame: function(animationKeyFrames,options) {
		var _gthis = this;
		if(this._animatable == false || options == null || options.duration == 0 || this._componentAnimation != null && this._componentAnimation.name == animationKeyFrames.id && options.compareToAnimation(this._componentAnimation) == true) {
			return;
		}
		if(this.hasEvent("animationstart")) {
			this.dispatch(new haxe_ui_events_AnimationEvent("animationstart"));
		}
		this.set_componentAnimation(haxe_ui_styles_animation_Animation.createWithKeyFrames(animationKeyFrames,this,options));
		this.get_componentAnimation().run(function() {
			if(_gthis.hasEvent("animationend")) {
				_gthis.dispatch(new haxe_ui_events_AnimationEvent("animationend"));
			}
		});
	}
	,cloneComponent: function() {
		var c = haxe_ui_backend_ComponentImpl.prototype.cloneComponent.call(this);
		if(this.get_styleNames() != null) {
			c.set_styleNames(this.get_styleNames());
		}
		if(this.get_styleString() != null) {
			c.set_styleString(this.get_styleString());
		}
		var tmp = this._componentReady == false;
		if(this._hidden == true) {
			c.hide();
		}
		if(this.get_autoWidth() == false && this.get_width() > 0) {
			c.set_width(this.get_width());
		}
		if(this.get_autoHeight() == false && this.get_height() > 0) {
			c.set_height(this.get_height());
		}
		if(this.get_customStyle() != null) {
			if(c.get_customStyle() == null) {
				c.set_customStyle(new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null));
			}
			c.get_customStyle().apply(this.get_customStyle());
		}
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,get_isComponentClipped: function() {
		if(this._compositeBuilder != null) {
			return this._compositeBuilder.get_isComponentClipped();
		}
		return this.get_componentClipRect() != null;
	}
	,cssName: null
	,get_cssName: function() {
		var cssName = null;
		if(this._compositeBuilder != null) {
			cssName = this._compositeBuilder.get_cssName();
		}
		if(cssName == null) {
			var c = js_Boot.getClass(this);
			cssName = c.__name__.split(".").pop().toLowerCase();
		}
		return cssName;
	}
	,isComponentSolid: null
	,get_isComponentSolid: function() {
		if(this.get_style() == null) {
			return false;
		}
		if(this.get_style().backgroundColor != null || this.get_style().backgroundImage != null) {
			if(this.get_style().opacity == null || this.get_style().opacity > 0) {
				if(this.get_style().backgroundOpacity == null || this.get_style().backgroundOpacity > 0) {
					return true;
				}
			}
		}
		return false;
	}
	,registerBehaviours: function() {
		haxe_ui_backend_ComponentImpl.prototype.registerBehaviours.call(this);
	}
	,get_color: function() {
		if(this.get_customStyle().color != null) {
			return this.get_customStyle().color;
		}
		if(this.get_style() == null || this.get_style().color == null) {
			return null;
		}
		return this.get_style().color;
	}
	,set_color: function(value) {
		if(this.get_customStyle().color == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().color = null;
		} else {
			this.get_customStyle().color = haxe_ui_util_Color.toInt(value);
		}
		this.invalidateComponent("style",false);
		return value;
	}
	,get_backgroundColor: function() {
		if(this.get_customStyle().backgroundColor != null) {
			return this.get_customStyle().backgroundColor;
		}
		if(this.get_style() == null || this.get_style().backgroundColor == null) {
			return null;
		}
		return this.get_style().backgroundColor;
	}
	,set_backgroundColor: function(value) {
		if(this.get_customStyle().backgroundColor == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().backgroundColor = null;
		} else {
			this.get_customStyle().backgroundColor = haxe_ui_util_Color.toInt(value);
		}
		this.invalidateComponent("style",false);
		return value;
	}
	,get_backgroundColorEnd: function() {
		if(this.get_customStyle().backgroundColorEnd != null) {
			return this.get_customStyle().backgroundColorEnd;
		}
		if(this.get_style() == null || this.get_style().backgroundColorEnd == null) {
			return null;
		}
		return this.get_style().backgroundColorEnd;
	}
	,set_backgroundColorEnd: function(value) {
		if(this.get_customStyle().backgroundColorEnd == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().backgroundColorEnd = null;
		} else {
			this.get_customStyle().backgroundColorEnd = haxe_ui_util_Color.toInt(value);
		}
		this.invalidateComponent("style",false);
		return value;
	}
	,get_backgroundImage: function() {
		if(this.get_customStyle().backgroundImage != null) {
			return this.get_customStyle().backgroundImage;
		}
		if(this.get_style() == null || this.get_style().backgroundImage == null) {
			return null;
		}
		return this.get_style().backgroundImage;
	}
	,set_backgroundImage: function(value) {
		if(haxe_ui_util_Variant.eq(this.get_customStyle().backgroundImage,value)) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().backgroundImage = null;
		} else {
			this.get_customStyle().backgroundImage = value;
		}
		this.invalidateComponent("style",false);
		return value;
	}
	,get_borderColor: function() {
		if(this.get_customStyle().borderColor != null) {
			return this.get_customStyle().borderColor;
		}
		if(this.get_style() == null || this.get_style().borderColor == null) {
			return null;
		}
		return this.get_style().borderColor;
	}
	,set_borderColor: function(value) {
		if(this.get_customStyle().borderColor == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().borderColor = null;
		} else {
			this.get_customStyle().borderColor = haxe_ui_util_Color.toInt(value);
		}
		this.get_customStyle().borderTopColor = haxe_ui_util_Color.toInt(value);
		this.get_customStyle().borderLeftColor = haxe_ui_util_Color.toInt(value);
		this.get_customStyle().borderBottomColor = haxe_ui_util_Color.toInt(value);
		this.get_customStyle().borderRightColor = haxe_ui_util_Color.toInt(value);
		this.invalidateComponent("style",false);
		return value;
	}
	,get_borderSize: function() {
		if(this.get_customStyle().borderSize != null) {
			return this.get_customStyle().borderSize;
		}
		if(this.get_style() == null || this.get_style().borderSize == null) {
			return null;
		}
		return this.get_style().borderSize;
	}
	,set_borderSize: function(value) {
		if(this.get_customStyle().borderSize == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().borderSize = null;
		} else {
			this.get_customStyle().borderSize = value;
		}
		this.get_customStyle().borderTopSize = value;
		this.get_customStyle().borderLeftSize = value;
		this.get_customStyle().borderBottomSize = value;
		this.get_customStyle().borderRightSize = value;
		this.invalidateComponent("style",false);
		return value;
	}
	,get_borderRadius: function() {
		if(this.get_customStyle().borderRadius != null) {
			return this.get_customStyle().borderRadius;
		}
		if(this.get_style() == null || this.get_style().borderRadius == null) {
			return null;
		}
		return this.get_style().borderRadius;
	}
	,set_borderRadius: function(value) {
		if(this.get_customStyle().borderRadius == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().borderRadius = null;
		} else {
			this.get_customStyle().borderRadius = value;
		}
		this.invalidateComponent("style",false);
		return value;
	}
	,get_padding: function() {
		if(this.get_customStyle().padding != null) {
			return this.get_customStyle().padding;
		}
		if(this.get_style() == null || this.get_style().padding == null) {
			return null;
		}
		return this.get_style().padding;
	}
	,set_padding: function(value) {
		if(this.get_customStyle().padding == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().set_padding(null);
		} else {
			this.get_customStyle().set_padding(value);
		}
		this.invalidateComponent("style",false);
		if(!(this._layout == null || this._layoutLocked == true)) {
			this.invalidateComponent("layout",false);
		}
		return value;
	}
	,get_paddingLeft: function() {
		if(this.get_customStyle().paddingLeft != null) {
			return this.get_customStyle().paddingLeft;
		}
		if(this.get_style() == null || this.get_style().paddingLeft == null) {
			return null;
		}
		return this.get_style().paddingLeft;
	}
	,set_paddingLeft: function(value) {
		if(this.get_customStyle().paddingLeft == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().paddingLeft = null;
		} else {
			this.get_customStyle().paddingLeft = value;
		}
		this.invalidateComponent("style",false);
		if(!(this._layout == null || this._layoutLocked == true)) {
			this.invalidateComponent("layout",false);
		}
		return value;
	}
	,get_paddingRight: function() {
		if(this.get_customStyle().paddingRight != null) {
			return this.get_customStyle().paddingRight;
		}
		if(this.get_style() == null || this.get_style().paddingRight == null) {
			return null;
		}
		return this.get_style().paddingRight;
	}
	,set_paddingRight: function(value) {
		if(this.get_customStyle().paddingRight == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().paddingRight = null;
		} else {
			this.get_customStyle().paddingRight = value;
		}
		this.invalidateComponent("style",false);
		if(!(this._layout == null || this._layoutLocked == true)) {
			this.invalidateComponent("layout",false);
		}
		return value;
	}
	,get_paddingTop: function() {
		if(this.get_customStyle().paddingTop != null) {
			return this.get_customStyle().paddingTop;
		}
		if(this.get_style() == null || this.get_style().paddingTop == null) {
			return null;
		}
		return this.get_style().paddingTop;
	}
	,set_paddingTop: function(value) {
		if(this.get_customStyle().paddingTop == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().paddingTop = null;
		} else {
			this.get_customStyle().paddingTop = value;
		}
		this.invalidateComponent("style",false);
		if(!(this._layout == null || this._layoutLocked == true)) {
			this.invalidateComponent("layout",false);
		}
		return value;
	}
	,get_paddingBottom: function() {
		if(this.get_customStyle().paddingBottom != null) {
			return this.get_customStyle().paddingBottom;
		}
		if(this.get_style() == null || this.get_style().paddingBottom == null) {
			return null;
		}
		return this.get_style().paddingBottom;
	}
	,set_paddingBottom: function(value) {
		if(this.get_customStyle().paddingBottom == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().paddingBottom = null;
		} else {
			this.get_customStyle().paddingBottom = value;
		}
		this.invalidateComponent("style",false);
		if(!(this._layout == null || this._layoutLocked == true)) {
			this.invalidateComponent("layout",false);
		}
		return value;
	}
	,get_marginLeft: function() {
		if(this.get_customStyle().marginLeft != null) {
			return this.get_customStyle().marginLeft;
		}
		if(this.get_style() == null || this.get_style().marginLeft == null) {
			return null;
		}
		return this.get_style().marginLeft;
	}
	,set_marginLeft: function(value) {
		if(this.get_customStyle().marginLeft == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().marginLeft = null;
		} else {
			this.get_customStyle().marginLeft = value;
		}
		this.invalidateComponent("style",false);
		return value;
	}
	,get_marginRight: function() {
		if(this.get_customStyle().marginRight != null) {
			return this.get_customStyle().marginRight;
		}
		if(this.get_style() == null || this.get_style().marginRight == null) {
			return null;
		}
		return this.get_style().marginRight;
	}
	,set_marginRight: function(value) {
		if(this.get_customStyle().marginRight == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().marginRight = null;
		} else {
			this.get_customStyle().marginRight = value;
		}
		this.invalidateComponent("style",false);
		return value;
	}
	,get_marginTop: function() {
		if(this.get_customStyle().marginTop != null) {
			return this.get_customStyle().marginTop;
		}
		if(this.get_style() == null || this.get_style().marginTop == null) {
			return null;
		}
		return this.get_style().marginTop;
	}
	,set_marginTop: function(value) {
		if(this.get_customStyle().marginTop == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().marginTop = null;
		} else {
			this.get_customStyle().marginTop = value;
		}
		this.invalidateComponent("style",false);
		return value;
	}
	,get_marginBottom: function() {
		if(this.get_customStyle().marginBottom != null) {
			return this.get_customStyle().marginBottom;
		}
		if(this.get_style() == null || this.get_style().marginBottom == null) {
			return null;
		}
		return this.get_style().marginBottom;
	}
	,set_marginBottom: function(value) {
		if(this.get_customStyle().marginBottom == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().marginBottom = null;
		} else {
			this.get_customStyle().marginBottom = value;
		}
		this.invalidateComponent("style",false);
		return value;
	}
	,get_clip: function() {
		if(this.get_customStyle().clip != null) {
			return this.get_customStyle().clip;
		}
		if(this.get_style() == null || this.get_style().clip == null) {
			return null;
		}
		return this.get_style().clip;
	}
	,set_clip: function(value) {
		if(this.get_customStyle().clip == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().clip = null;
		} else {
			this.get_customStyle().clip = value;
		}
		this.invalidateComponent("style",false);
		return value;
	}
	,get_opacity: function() {
		if(this.get_customStyle().opacity != null) {
			return this.get_customStyle().opacity;
		}
		if(this.get_style() == null || this.get_style().opacity == null) {
			return null;
		}
		return this.get_style().opacity;
	}
	,set_opacity: function(value) {
		if(this.get_customStyle().opacity == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().opacity = null;
		} else {
			this.get_customStyle().opacity = value;
		}
		this.invalidateComponent("style",false);
		return value;
	}
	,get_horizontalAlign: function() {
		if(this.get_customStyle().horizontalAlign != null) {
			return this.get_customStyle().horizontalAlign;
		}
		if(this.get_style() == null || this.get_style().horizontalAlign == null) {
			return null;
		}
		return this.get_style().horizontalAlign;
	}
	,set_horizontalAlign: function(value) {
		if(this.get_customStyle().horizontalAlign == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().horizontalAlign = null;
		} else {
			this.get_customStyle().horizontalAlign = value;
		}
		this.invalidateComponent("style",false);
		if(this.parentComponent != null) {
			var _this = this.parentComponent;
			if(!(_this._layout == null || _this._layoutLocked == true)) {
				_this.invalidateComponent("layout",false);
			}
		}
		return value;
	}
	,get_verticalAlign: function() {
		if(this.get_customStyle().verticalAlign != null) {
			return this.get_customStyle().verticalAlign;
		}
		if(this.get_style() == null || this.get_style().verticalAlign == null) {
			return null;
		}
		return this.get_style().verticalAlign;
	}
	,set_verticalAlign: function(value) {
		if(this.get_customStyle().verticalAlign == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().verticalAlign = null;
		} else {
			this.get_customStyle().verticalAlign = value;
		}
		this.invalidateComponent("style",false);
		if(this.parentComponent != null) {
			var _this = this.parentComponent;
			if(!(_this._layout == null || _this._layoutLocked == true)) {
				_this.invalidateComponent("layout",false);
			}
		}
		return value;
	}
	,self: function() {
		return new haxe_ui_core_Component();
	}
	,_internal__onDragStart: null
	,onDragStart: null
	,set_onDragStart: function(value) {
		if(this._internal__onDragStart != null) {
			this.unregisterEvent("dragstart",this._internal__onDragStart);
			this._internal__onDragStart = null;
		}
		if(value != null) {
			this._internal__onDragStart = value;
			this.registerEvent("dragstart",value);
		}
		return value;
	}
	,_internal__onDrag: null
	,onDrag: null
	,set_onDrag: function(value) {
		if(this._internal__onDrag != null) {
			this.unregisterEvent("drag",this._internal__onDrag);
			this._internal__onDrag = null;
		}
		if(value != null) {
			this._internal__onDrag = value;
			this.registerEvent("drag",value);
		}
		return value;
	}
	,_internal__onDragEnd: null
	,onDragEnd: null
	,set_onDragEnd: function(value) {
		if(this._internal__onDragEnd != null) {
			this.unregisterEvent("dragend",this._internal__onDragEnd);
			this._internal__onDragEnd = null;
		}
		if(value != null) {
			this._internal__onDragEnd = value;
			this.registerEvent("dragend",value);
		}
		return value;
	}
	,_internal__onAnimationStart: null
	,onAnimationStart: null
	,set_onAnimationStart: function(value) {
		if(this._internal__onAnimationStart != null) {
			this.unregisterEvent("animationstart",this._internal__onAnimationStart);
			this._internal__onAnimationStart = null;
		}
		if(value != null) {
			this._internal__onAnimationStart = value;
			this.registerEvent("animationstart",value);
		}
		return value;
	}
	,_internal__onAnimationFrame: null
	,onAnimationFrame: null
	,set_onAnimationFrame: function(value) {
		if(this._internal__onAnimationFrame != null) {
			this.unregisterEvent("animationframe",this._internal__onAnimationFrame);
			this._internal__onAnimationFrame = null;
		}
		if(value != null) {
			this._internal__onAnimationFrame = value;
			this.registerEvent("animationframe",value);
		}
		return value;
	}
	,_internal__onAnimationEnd: null
	,onAnimationEnd: null
	,set_onAnimationEnd: function(value) {
		if(this._internal__onAnimationEnd != null) {
			this.unregisterEvent("animationend",this._internal__onAnimationEnd);
			this._internal__onAnimationEnd = null;
		}
		if(value != null) {
			this._internal__onAnimationEnd = value;
			this.registerEvent("animationend",value);
		}
		return value;
	}
	,_internal__onClick: null
	,onClick: null
	,set_onClick: function(value) {
		if(this._internal__onClick != null) {
			this.unregisterEvent("click",this._internal__onClick);
			this._internal__onClick = null;
		}
		if(value != null) {
			this._internal__onClick = value;
			this.registerEvent("click",value);
		}
		return value;
	}
	,_internal__onMouseOver: null
	,onMouseOver: null
	,set_onMouseOver: function(value) {
		if(this._internal__onMouseOver != null) {
			this.unregisterEvent("mouseover",this._internal__onMouseOver);
			this._internal__onMouseOver = null;
		}
		if(value != null) {
			this._internal__onMouseOver = value;
			this.registerEvent("mouseover",value);
		}
		return value;
	}
	,_internal__onMouseOut: null
	,onMouseOut: null
	,set_onMouseOut: function(value) {
		if(this._internal__onMouseOut != null) {
			this.unregisterEvent("mouseout",this._internal__onMouseOut);
			this._internal__onMouseOut = null;
		}
		if(value != null) {
			this._internal__onMouseOut = value;
			this.registerEvent("mouseout",value);
		}
		return value;
	}
	,_internal__onDblClick: null
	,onDblClick: null
	,set_onDblClick: function(value) {
		if(this._internal__onDblClick != null) {
			this.unregisterEvent("doubleclick",this._internal__onDblClick);
			this._internal__onDblClick = null;
		}
		if(value != null) {
			this._internal__onDblClick = value;
			this.registerEvent("doubleclick",value);
		}
		return value;
	}
	,_internal__onRightClick: null
	,onRightClick: null
	,set_onRightClick: function(value) {
		if(this._internal__onRightClick != null) {
			this.unregisterEvent("rightclick",this._internal__onRightClick);
			this._internal__onRightClick = null;
		}
		if(value != null) {
			this._internal__onRightClick = value;
			this.registerEvent("rightclick",value);
		}
		return value;
	}
	,_internal__onChange: null
	,onChange: null
	,set_onChange: function(value) {
		if(this._internal__onChange != null) {
			this.unregisterEvent("change",this._internal__onChange);
			this._internal__onChange = null;
		}
		if(value != null) {
			this._internal__onChange = value;
			this.registerEvent("change",value);
		}
		return value;
	}
	,__class__: haxe_ui_core_Component
	,__properties__: $extend(haxe_ui_backend_ComponentImpl.prototype.__properties__,{set_onChange:"set_onChange",set_onRightClick:"set_onRightClick",set_onDblClick:"set_onDblClick",set_onMouseOut:"set_onMouseOut",set_onMouseOver:"set_onMouseOver",set_onClick:"set_onClick",set_onAnimationEnd:"set_onAnimationEnd",set_onAnimationFrame:"set_onAnimationFrame",set_onAnimationStart:"set_onAnimationStart",set_onDragEnd:"set_onDragEnd",set_onDrag:"set_onDrag",set_onDragStart:"set_onDragStart",set_verticalAlign:"set_verticalAlign",get_verticalAlign:"get_verticalAlign",set_horizontalAlign:"set_horizontalAlign",get_horizontalAlign:"get_horizontalAlign",set_opacity:"set_opacity",get_opacity:"get_opacity",set_clip:"set_clip",get_clip:"get_clip",set_marginBottom:"set_marginBottom",get_marginBottom:"get_marginBottom",set_marginTop:"set_marginTop",get_marginTop:"get_marginTop",set_marginRight:"set_marginRight",get_marginRight:"get_marginRight",set_marginLeft:"set_marginLeft",get_marginLeft:"get_marginLeft",set_paddingBottom:"set_paddingBottom",get_paddingBottom:"get_paddingBottom",set_paddingTop:"set_paddingTop",get_paddingTop:"get_paddingTop",set_paddingRight:"set_paddingRight",get_paddingRight:"get_paddingRight",set_paddingLeft:"set_paddingLeft",get_paddingLeft:"get_paddingLeft",set_padding:"set_padding",get_padding:"get_padding",set_borderRadius:"set_borderRadius",get_borderRadius:"get_borderRadius",set_borderSize:"set_borderSize",get_borderSize:"get_borderSize",set_borderColor:"set_borderColor",get_borderColor:"get_borderColor",set_backgroundImage:"set_backgroundImage",get_backgroundImage:"get_backgroundImage",set_backgroundColorEnd:"set_backgroundColorEnd",get_backgroundColorEnd:"get_backgroundColorEnd",set_backgroundColor:"set_backgroundColor",get_backgroundColor:"get_backgroundColor",set_color:"set_color",get_color:"get_color",get_isComponentSolid:"get_isComponentSolid",get_cssName:"get_cssName",get_namedComponents:"get_namedComponents",set_scriptAccess:"set_scriptAccess",get_scriptAccess:"get_scriptAccess",set_layout:"set_layout",get_layout:"get_layout",set_includeInLayout:"set_includeInLayout",get_includeInLayout:"get_includeInLayout",set_styleSheet:"set_styleSheet",get_styleSheet:"get_styleSheet",set_styleString:"set_styleString",get_styleString:"get_styleString",set_styleNames:"set_styleNames",get_styleNames:"get_styleNames",set_customStyle:"set_customStyle",get_customStyle:"get_customStyle",set_hidden:"set_hidden",get_hidden:"get_hidden",get_numComponents:"get_numComponents",get_rootComponent:"get_rootComponent",set_dragOptions:"set_dragOptions",get_dragOptions:"get_dragOptions",set_dragInitiator:"set_dragInitiator",get_dragInitiator:"get_dragInitiator",set_draggable:"set_draggable",get_draggable:"get_draggable",get_screen:"get_screen",set_componentAnimation:"set_componentAnimation",get_componentAnimation:"get_componentAnimation",set_animatable:"set_animatable",get_animatable:"get_animatable",set_native:"set_native",get_native:"get_native"})
});
var haxe_ui_containers_Box = function() {
	this._direction = null;
	haxe_ui_core_Component.call(this);
};
$hxClasses["haxe.ui.containers.Box"] = haxe_ui_containers_Box;
haxe_ui_containers_Box.__name__ = "haxe.ui.containers.Box";
haxe_ui_containers_Box.__super__ = haxe_ui_core_Component;
haxe_ui_containers_Box.prototype = $extend(haxe_ui_core_Component.prototype,{
	_layoutName: null
	,get_layoutName: function() {
		return this._layoutName;
	}
	,set_layoutName: function(value) {
		if(this._layoutName == value) {
			return value;
		}
		this._layoutName = value;
		this.set_layout(haxe_ui_layouts_LayoutFactory.createFromName(this.get_layoutName()));
		return value;
	}
	,createDefaults: function() {
		haxe_ui_core_Component.prototype.createDefaults.call(this);
		if(this._defaultLayoutClass == null) {
			this._defaultLayoutClass = haxe_ui_layouts_DefaultLayout;
		}
	}
	,_direction: null
	,applyStyle: function(style) {
		haxe_ui_core_Component.prototype.applyStyle.call(this,style);
		if(style.direction != null && style.direction != this._direction) {
			this._direction = style.direction;
			this.set_layout(haxe_ui_layouts_LayoutFactory.createFromName(this._direction));
		}
	}
	,registerComposite: function() {
		haxe_ui_core_Component.prototype.registerComposite.call(this);
		this._defaultLayoutClass = haxe_ui_layouts_DefaultLayout;
	}
	,registerBehaviours: function() {
		haxe_ui_core_Component.prototype.registerBehaviours.call(this);
		this.behaviours.register("icon",haxe_ui_behaviours_DefaultBehaviour);
	}
	,get_icon: function() {
		if(this.behaviours == null) {
			return null;
		}
		return this.behaviours.get("icon");
	}
	,set_icon: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("icon",value);
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"icon"));
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_Component.prototype.cloneComponent.call(this);
		if(this.get_layoutName() != null) {
			c.set_layoutName(this.get_layoutName());
		}
		if(this.get_icon() != null) {
			c.set_icon(this.get_icon());
		}
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_Box();
	}
	,__class__: haxe_ui_containers_Box
	,__properties__: $extend(haxe_ui_core_Component.prototype.__properties__,{set_icon:"set_icon",get_icon:"get_icon",set_layoutName:"set_layoutName",get_layoutName:"get_layoutName"})
});
var haxe_ui_Preloader = function() {
	haxe_ui_containers_Box.call(this);
	this.set_id("preloader");
	this.set_styleString("width:100%;height:100%;");
	this.set_percentWidth(this.set_percentHeight(100));
	this.set_styleNames("default-background");
};
$hxClasses["haxe.ui.Preloader"] = haxe_ui_Preloader;
haxe_ui_Preloader.__name__ = "haxe.ui.Preloader";
haxe_ui_Preloader.__super__ = haxe_ui_containers_Box;
haxe_ui_Preloader.prototype = $extend(haxe_ui_containers_Box.prototype,{
	createChildren: function() {
		var label = new haxe_ui_components_Label();
		label.set_text("Loading");
		label.set_verticalAlign("center");
		label.set_horizontalAlign("center");
		this.addComponent(label);
	}
	,validateComponentLayout: function() {
		var b = haxe_ui_containers_Box.prototype.validateComponentLayout.call(this);
		var tmp = this.get_actualComponentWidth() > 0 && this.get_actualComponentHeight() > 0;
		return b;
	}
	,_current: null
	,_max: null
	,progress: function(current,max) {
		this._current = current;
		this._max = max;
		if(current > 0) {
			var label = this.findComponent(null,haxe_ui_components_Label);
			if(label != null) {
				var text = label.get_text();
				if(StringTools.endsWith(text,"....")) {
					text = "Loading";
				}
				label.set_text(text);
			}
		}
	}
	,increment: function() {
		this.progress(this._current + 1,this._max);
	}
	,complete: function() {
		haxe_ui_core_Screen.get_instance().removeComponent(this);
	}
	,registerBehaviours: function() {
		haxe_ui_containers_Box.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_Box.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_Preloader();
	}
	,__class__: haxe_ui_Preloader
});
var haxe_ui_util_Properties = function() {
	this._props = new haxe_ds_StringMap();
};
$hxClasses["haxe.ui.util.Properties"] = haxe_ui_util_Properties;
haxe_ui_util_Properties.__name__ = "haxe.ui.util.Properties";
haxe_ui_util_Properties.prototype = {
	_props: null
	,exists: function(name) {
		return Object.prototype.hasOwnProperty.call(this._props.h,name);
	}
	,getProp: function(name,defaultValue) {
		var v = defaultValue;
		if(Object.prototype.hasOwnProperty.call(this._props.h,name)) {
			v = this._props.h[name];
		}
		return v;
	}
	,getPropInt: function(name,defaultValue) {
		if(defaultValue == null) {
			defaultValue = 0;
		}
		var v = defaultValue;
		var stringValue = this.getProp(name);
		if(stringValue != null) {
			v = Std.parseInt(stringValue);
		}
		return v;
	}
	,getPropBool: function(name,defaultValue) {
		if(defaultValue == null) {
			defaultValue = false;
		}
		var v = defaultValue;
		var stringValue = this.getProp(name);
		if(stringValue != null) {
			v = stringValue == "true";
		}
		return v;
	}
	,getPropCol: function(name,defaultValue) {
		if(defaultValue == null) {
			defaultValue = 0;
		}
		var v = defaultValue;
		var stringValue = this.getProp(name);
		if(stringValue != null) {
			var s = stringValue;
			if(StringTools.startsWith(s,"#")) {
				s = s.substring(1,s.length);
			} else if(StringTools.startsWith(s,"0x")) {
				s = s.substring(2,s.length);
			}
			v = Std.parseInt("0x" + s);
		}
		return v;
	}
	,setProp: function(name,value) {
		if(name == null || StringTools.trim(name).length == 0) {
			return;
		}
		var this1 = this._props;
		var key = StringTools.trim(name);
		var value1 = StringTools.trim(value);
		this1.h[key] = value1;
	}
	,names: function() {
		return new haxe_ds__$StringMap_StringMapKeyIterator(this._props.h);
	}
	,addAll: function(p) {
		var name = p.names();
		while(name.hasNext()) {
			var name1 = name.next();
			this.setProp(name1,p.getProp(name1));
		}
	}
	,__class__: haxe_ui_util_Properties
};
var haxe_ui_util_GenericConfig = function() {
	this.values = new haxe_ds_StringMap();
	this.sections = new haxe_ds_StringMap();
};
$hxClasses["haxe.ui.util.GenericConfig"] = haxe_ui_util_GenericConfig;
haxe_ui_util_GenericConfig.__name__ = "haxe.ui.util.GenericConfig";
haxe_ui_util_GenericConfig.prototype = {
	values: null
	,sections: null
	,addSection: function(name) {
		var config = new haxe_ui_util_GenericConfig();
		var array = this.sections.h[name];
		if(array == null) {
			array = [];
			this.sections.h[name] = array;
		}
		array.push(config);
		return config;
	}
	,findBy: function(section,field,value) {
		var array = this.sections.h[section];
		if(array == null) {
			return null;
		}
		if(field == null && value == null) {
			return array[0];
		}
		var r = null;
		var _g = 0;
		while(_g < array.length) {
			var item = array[_g];
			++_g;
			var h = item.values.h;
			var key_h = h;
			var key_keys = Object.keys(h);
			var key_length = key_keys.length;
			var key_current = 0;
			while(key_current < key_length) {
				var key = key_keys[key_current++];
				if(key == field && (item.values.h[key] == value || item.values.h[key].toLowerCase() == value.toLowerCase())) {
					r = item;
					break;
				}
			}
			if(r != null) {
				break;
			}
		}
		return r;
	}
	,queryBool: function(q,defaultValue,conditionRef) {
		if(defaultValue == null) {
			defaultValue = false;
		}
		var r = this.query(q,null,conditionRef);
		if(r == null) {
			return defaultValue;
		}
		return r == "true";
	}
	,query: function(q,defaultValue,conditionRef) {
		if(Object.prototype.hasOwnProperty.call(haxe_ui_util_GenericConfig.cache.h,q)) {
			if(defaultValue != null && haxe_ui_util_GenericConfig.cache.h[q] == null) {
				return defaultValue;
			}
			return haxe_ui_util_GenericConfig.cache.h[q];
		}
		var regexp = new EReg("\\.(?![^\\[]*\\])","g");
		var finalArray = regexp.split(q);
		var ref = this;
		var value = null;
		var _g = 0;
		while(_g < finalArray.length) {
			var f = finalArray[_g];
			++_g;
			if(f.indexOf("[") == -1 && f.indexOf("@") == -1) {
				ref = ref.findBy(f);
			} else if(f.indexOf("[") != -1) {
				var p = f.split("[");
				var p1 = p[0];
				var p2 = p[1].split("=")[0];
				var p3 = p[1].split("=")[1];
				p3 = HxOverrides.substr(p3,0,p3.length - 1);
				ref = ref.findBy(p1,p2,p3);
			} else if(f.indexOf("@") != -1) {
				var v = HxOverrides.substr(f,1,f.length);
				value = ref.values.h[v];
				break;
			}
			if(ref == null) {
				haxe_ui_util_GenericConfig.cache.h[q] = defaultValue;
				return defaultValue;
			}
		}
		if(value == null) {
			value = defaultValue;
		}
		if(value != null) {
			haxe_ui_util_GenericConfig.cache.h[q] = value;
		}
		return value;
	}
	,queryValues: function(q,conditionRef) {
		var regexp = new EReg("\\.(?![^\\[]*\\])","g");
		var finalArray = regexp.split(q);
		var ref = this;
		var _g = 0;
		while(_g < finalArray.length) {
			var f = finalArray[_g];
			++_g;
			if(f.indexOf("[") == -1 && f.indexOf("@") == -1) {
				ref = ref.findBy(f);
			} else if(f.indexOf("[") != -1) {
				var p = f.split("[");
				var p1 = p[0];
				var p2 = p[1].split("=")[0];
				var p3 = p[1].split("=")[1];
				p3 = HxOverrides.substr(p3,0,p3.length - 1);
				ref = ref.findBy(p1,p2,p3);
			}
			if(ref == null) {
				return null;
			}
		}
		return ref.values;
	}
	,__class__: haxe_ui_util_GenericConfig
};
var haxe_ui_styles_CompositeStyleSheet = function() {
	this._animations = null;
	this._styleSheets = [];
};
$hxClasses["haxe.ui.styles.CompositeStyleSheet"] = haxe_ui_styles_CompositeStyleSheet;
haxe_ui_styles_CompositeStyleSheet.__name__ = "haxe.ui.styles.CompositeStyleSheet";
haxe_ui_styles_CompositeStyleSheet.prototype = {
	_styleSheets: null
	,_animations: null
	,get_animations: function() {
		if(this._animations != null) {
			return this._animations;
		}
		this._animations = new haxe_ds_StringMap();
		var _g = 0;
		var _g1 = this._styleSheets;
		while(_g < _g1.length) {
			var s = _g1[_g];
			++_g;
			var h = s.get_animations().h;
			var key_h = h;
			var key_keys = Object.keys(h);
			var key_length = key_keys.length;
			var key_current = 0;
			while(key_current < key_length) {
				var key = key_keys[key_current++];
				var a = s.get_animations().h[key];
				this._animations.h[key] = a;
			}
		}
		return this._animations;
	}
	,findAnimation: function(id) {
		var h = this.get_animations().h;
		var a_h = h;
		var a_keys = Object.keys(h);
		var a_length = a_keys.length;
		var a_current = 0;
		while(a_current < a_length) {
			var a = a_h[a_keys[a_current++]];
			if(a.id == id) {
				return a;
			}
		}
		return null;
	}
	,hasMediaQueries: null
	,get_hasMediaQueries: function() {
		var _g = 0;
		var _g1 = this._styleSheets;
		while(_g < _g1.length) {
			var styleSheet = _g1[_g];
			++_g;
			if(styleSheet.get_hasMediaQueries() == true) {
				return true;
			}
		}
		return false;
	}
	,getAnimation: function(id,create) {
		if(create == null) {
			create = true;
		}
		var a = this.findAnimation(id);
		if(a == null) {
			a = new haxe_ui_styles_elements_AnimationKeyFrames(id,[]);
			this.addAnimation(a);
		}
		return a;
	}
	,addAnimation: function(animation) {
		this._styleSheets[0].addAnimation(animation);
	}
	,addStyleSheet: function(styleSheet) {
		this._styleSheets.push(styleSheet);
	}
	,removeStyleSheet: function(styleSheet) {
		HxOverrides.remove(this._styleSheets,styleSheet);
	}
	,parse: function(css,styleSheetName,invalidateAll) {
		if(invalidateAll == null) {
			invalidateAll = false;
		}
		if(styleSheetName == null) {
			styleSheetName = "default";
		}
		var s = this.findStyleSheet(styleSheetName);
		if(s == null) {
			s = new haxe_ui_styles_StyleSheet();
			s.name = styleSheetName;
			this._styleSheets.push(s);
		}
		s.parse(css);
		this._animations = null;
		if(invalidateAll == true) {
			haxe_ui_core_Screen.get_instance().invalidateAll();
		}
	}
	,findStyleSheet: function(styleSheetName) {
		var _g = 0;
		var _g1 = this._styleSheets;
		while(_g < _g1.length) {
			var s = _g1[_g];
			++_g;
			if(s.name == styleSheetName) {
				return s;
			}
		}
		return null;
	}
	,findRule: function(selector) {
		var _g = 0;
		var _g1 = this._styleSheets;
		while(_g < _g1.length) {
			var s = _g1[_g];
			++_g;
			var el = s.findRule(selector);
			if(el != null) {
				return el;
			}
		}
		return null;
	}
	,findMatchingRules: function(selector) {
		var m = [];
		var _g = 0;
		var _g1 = this._styleSheets;
		while(_g < _g1.length) {
			var s = _g1[_g];
			++_g;
			m = m.concat(s.findMatchingRules(selector));
		}
		return m;
	}
	,getAllRules: function() {
		var r = [];
		var _g = 0;
		var _g1 = this._styleSheets;
		while(_g < _g1.length) {
			var s = _g1[_g];
			++_g;
			r = r.concat(s.get_rules());
		}
		return r;
	}
	,buildStyleFor: function(c) {
		var style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		var _g = 0;
		var _g1 = this._styleSheets;
		while(_g < _g1.length) {
			var s = _g1[_g];
			++_g;
			style = s.buildStyleFor(c,style);
		}
		return style;
	}
	,clear: function(styleSheetName) {
		var s = this.findStyleSheet(styleSheetName);
		if(s != null) {
			s.clear();
			this._animations = null;
		}
	}
	,__class__: haxe_ui_styles_CompositeStyleSheet
	,__properties__: {get_hasMediaQueries:"get_hasMediaQueries",get_animations:"get_animations"}
};
var haxe_ui_Toolkit = function() { };
$hxClasses["haxe.ui.Toolkit"] = haxe_ui_Toolkit;
haxe_ui_Toolkit.__name__ = "haxe.ui.Toolkit";
haxe_ui_Toolkit.__properties__ = {set_scale:"set_scale",get_scale:"get_scale",set_scaleY:"set_scaleY",get_scaleY:"get_scaleY",set_scaleX:"set_scaleX",get_scaleX:"get_scaleX",get_autoScaleDPIThreshold:"get_autoScaleDPIThreshold",set_pixelsPerRem:"set_pixelsPerRem",get_screen:"get_screen",get_assets:"get_assets",get_initialized:"get_initialized",get_backendProperties:"get_backendProperties",set_theme:"set_theme",get_theme:"get_theme"};
haxe_ui_Toolkit.get_theme = function() {
	return haxe_ui_Toolkit._theme;
};
haxe_ui_Toolkit.set_theme = function(value) {
	if(haxe_ui_Toolkit._theme == value) {
		return value;
	}
	haxe_ui_Toolkit._theme = value;
	if(haxe_ui_Toolkit._initialized == true) {
		haxe_ui_themes_ThemeManager.get_instance().applyTheme(haxe_ui_Toolkit._theme);
		haxe_ui_core_Screen.get_instance().onThemeChanged();
		haxe_ui_core_Screen.get_instance().invalidateAll();
	}
	return value;
};
haxe_ui_Toolkit.get_backendProperties = function() {
	haxe_ui_Toolkit.buildBackend();
	return haxe_ui_Toolkit._backendProperties;
};
haxe_ui_Toolkit.build = function() {
	if(haxe_ui_Toolkit._built == true) {
		return;
	}
	haxe_ui_themes_ThemeManager.get_instance().getTheme("native").parent = "default";
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("native","haxeui-core/styles/native/main.css",-3.,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("global","haxeui-core/styles/global.css",-4.,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/main.css",-3.,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/buttons.css",-2.99,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/dialogs.css",-2.9800000000000004,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/windows.css",-2.9700000000000006,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/textinputs.css",-2.9600000000000009,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/scrollbars.css",-2.9500000000000011,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/scrollview.css",-2.9400000000000013,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/checkboxes.css",-2.9300000000000015,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/optionboxes.css",-2.9200000000000017,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/ranges.css",-2.9100000000000019,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/progressbars.css",-2.9000000000000021,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/sliders.css",-2.8900000000000023,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/steppers.css",-2.8800000000000026,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/tabs.css",-2.8700000000000028,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/listview.css",-2.860000000000003,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/dropdowns.css",-2.8500000000000032,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/tableview.css",-2.8400000000000034,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/switches.css",-2.8300000000000036,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/calendars.css",-2.8200000000000038,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/menus.css",-2.8100000000000041,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/accordion.css",-2.8000000000000043,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/propertygrids.css",-2.7900000000000045,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/frames.css",-2.7800000000000047,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/splitters.css",-2.7700000000000049,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/tooltips.css",-2.7600000000000051,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/rules.css",-2.7500000000000053,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/sidebars.css",-2.7400000000000055,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/cards.css",-2.7300000000000058,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/treeviews.css",-2.720000000000006,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/colorpickers.css",-2.7100000000000062,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/notifications.css",-2.7000000000000064,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/last.css",-2.6900000000000066,null);
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","warning-large","haxeui-core/styles/shared/warning-large.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","warning-border-color","#ffd83f");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","warning-background-color-start","#fffbeb");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","warning-background-color-end","#fff8df");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","tooltip-background-color","#fffff8");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","tertiary-background-color","#ffffff");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","success-border-color","#53df9e");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","success-background-color-start","#e9fbf3");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","success-background-color-end","#dcf8ec");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","sort-desc","haxeui-core/styles/shared/sortable-desc-blue.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","sort-asc","haxeui-core/styles/shared/sortable-asc-blue.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","solid-background-color-hover","#fcfcfc");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","solid-background-color-down","#f0f0f0");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","solid-background-color-disabled","#fefefe");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","solid-background-color-alt","#fafafa");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","solid-background-color","#f6f6f6");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","selection-text-color","#ffffff");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","selection-background-color-hover","#d9e5f2");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","selection-background-color","#b4cbe4");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","secondary-background-color","#ffffff");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","search","haxeui-core/styles/shared/search.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","scrollbar-button-color","#d6d6d6");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","scrollbar-background-color","#f0f0f0");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","restore-hover","haxeui-core/styles/shared/restore-button-white.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","restore","haxeui-core/styles/shared/restore-button-blue.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","question-large","haxeui-core/styles/shared/help-large.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","option-selected","haxeui-core/styles/shared/option-blue.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","normal-text-color","#666666");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","normal-inner-shadow","drop-shadow(1, 45, #888888, 0.1, 1, 1, 1, 3, true)");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","normal-border-size","1px");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","normal-border-radius","2px");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","normal-border-color","#d2d2d2");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","normal-background-color-start","#fdfdfd");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","normal-background-color-end","#f6f6f6");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","modal-background-color","#ffffff");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","minimize-hover","haxeui-core/styles/shared/minimize-button-white.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","minimize","haxeui-core/styles/shared/minimize-button-blue.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","menu-shadow","drop-shadow(2, 45, #888888, 0.1, 4, 1, 30, 35, false)");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","maximize-hover","haxeui-core/styles/shared/maximize-button-white.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","maximize","haxeui-core/styles/shared/maximize-button-blue.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","lighter-text-color","#a0a0a0");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","info-large","haxeui-core/styles/shared/info-large.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","hover-text-color","#444444");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","hover-border-color","#c0c0c0");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","hover-background-color-start","#f2f2f2");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","hover-background-color-end","#e1e1e1");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","gripper-vertical","haxeui-core/styles/shared/gripper-vertical.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","gripper-horizontal","haxeui-core/styles/shared/gripper-horizontal.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","expanded","haxeui-core/styles/shared/collapsed-blue.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","expand-hover","haxeui-core/styles/shared/window-expand-white.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","expand","haxeui-core/styles/shared/window-expand-blue.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","error-large","haxeui-core/styles/shared/error-large.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","error-border-color","#f6a7a2");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","error-background-color-start","#fde9e8");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","error-background-color-end","#fbdcda");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","down-text-color","#444444");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","down-border-color","#b3b3b3");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","down-background-color-start","#e6e6e6");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","down-background-color-end","#cccccc");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","disabled-text-color","#cccccc");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","disabled-border-color","#e4e4e4");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","disabled-background-color-start","#fdfdfd");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","disabled-background-color-end","#f6f6f6");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","dialog-title-color","#aaaaaa");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","dialog-shadow","drop-shadow(1, 45, #888888, 0.2, 30, 2, 1, 3, false)");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","default-background-color","#ffffff");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","contrast-background-color","#ffffff");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","collapsed","haxeui-core/styles/shared/expanded-blue.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","collapse-hover","haxeui-core/styles/shared/window-collapse-white.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","collapse","haxeui-core/styles/shared/window-collapse-blue.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","close-hover","haxeui-core/styles/shared/close-button-white.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","close","haxeui-core/styles/shared/close-button-blue.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","check-selected","haxeui-core/styles/shared/check-blue.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","blank","haxeui-core/styles/shared/blank.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","arrow-up-down","haxeui-core/styles/shared/sortable-arrows-blue.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","arrow-up","haxeui-core/styles/shared/up-arrow-blue.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","arrow-right-square","haxeui-core/styles/shared/right-arrow-square-blue.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","arrow-right","haxeui-core/styles/shared/right-arrow-blue.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","arrow-left","haxeui-core/styles/shared/left-arrow-blue.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","arrow-down-square","haxeui-core/styles/shared/down-arrow-square-blue.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","arrow-down","haxeui-core/styles/shared/down-arrow-blue.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","accent-gradient-start","#98c4e6");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","accent-gradient-end","#549bde");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","accent-color-lighter","#ecf2f9");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","accent-color-darker","#407dbf");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","accent-color","#83aad4");
	haxe_ui_themes_ThemeManager.get_instance().getTheme("dark").parent = "default";
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("dark","haxeui-core/styles/dark/scrollbars.css",-2.,null);
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","warning-border-color","#807100");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","warning-background-color-start","#4d4400");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","warning-background-color-end","#473f00");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","tooltip-background-color","#3d3f41");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","tertiary-background-color","#313435");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","success-border-color","#146c43");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","success-background-color-start","#0c4129");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","success-background-color-end","#093421");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","solid-background-color-hover","#393b3c");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","solid-background-color-down","#313335");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","solid-background-color-disabled","#2f3132");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","solid-background-color-alt","#2d2e2f");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","solid-background-color","#3d3f41");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","selection-text-color","#d4d4d4");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","selection-background-color-hover","#323e52");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","selection-background-color","#415982");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","secondary-background-color","#3d3f41");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","scrollbar-button-color","#3e4142");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","scrollbar-background-color","#2c2f30");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","normal-text-color","#aaaaaa");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","normal-inner-shadow","drop-shadow(1, 45, #000000, 0.2, 2, 2, 1, 3, true)");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","normal-border-size","1px");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","normal-border-radius","2px");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","normal-border-color","#222426");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","normal-background-color-start","#3e4142");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","normal-background-color-end","#36383a");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","modal-background-color","#181a1b");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","menu-shadow","drop-shadow(2, 45, #000000, 0.15, 6, 1, 30, 35, false)");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","lighter-text-color","#737373");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","hover-text-color","#bbbbbb");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","hover-border-color","#222426");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","hover-background-color-start","#434647");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","hover-background-color-end","#393b3c");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","error-border-color","#8b160e");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","error-background-color-start","#4a1721");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","error-background-color-end","#3a121a");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","down-text-color","#999999");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","down-border-color","#222426");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","down-background-color-start","#393c3c");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","down-background-color-end","#313335");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","disabled-text-color","#595959");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","disabled-border-color","#26292b");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","disabled-background-color-start","#36393a");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","disabled-background-color-end","#313335");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","dialog-title-color","#aaaaaa");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","dialog-shadow","drop-shadow(1, 45, #000000, 0.2, 30, 2, 1, 3, false)");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","default-background-color","#2c2f30");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","contrast-background-color","#aaaaaa");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","accent-gradient-start","#334666");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","accent-gradient-end","#2f3746");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","accent-color-lighter","#323e52");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","accent-color-darker","#407dbf");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","accent-color","#3c5177");
	haxe_ui_locale_LocaleManager.get_instance().parseResource("en","haxeui-core/locale/en/expression-replacements.properties");
	haxe_ui_locale_LocaleManager.get_instance().parseResource("en","haxeui-core/locale/en/std-strings.properties");
	haxe_ui_locale_LocaleManager.get_instance().parseResource("en","haxeui-core/locale/en/formats.properties");
	haxe_ui_locale_LocaleManager.get_instance().parseResource("en_US","haxeui-core/locale/en_US/formats.properties");
	haxe_ui_locale_LocaleManager.get_instance().parseResource("es","haxeui-core/locale/es/expression-replacements.properties");
	haxe_ui_locale_LocaleManager.get_instance().parseResource("es","haxeui-core/locale/es/std-strings.properties");
	haxe_ui_locale_LocaleManager.get_instance().parseResource("es","haxeui-core/locale/es/formats.properties");
	haxe_ui_locale_LocaleManager.get_instance().parseResource("de","haxeui-core/locale/de/expression-replacements.properties");
	haxe_ui_locale_LocaleManager.get_instance().parseResource("de","haxeui-core/locale/de/std-strings.properties");
	haxe_ui_locale_LocaleManager.get_instance().parseResource("de","haxeui-core/locale/de/formats.properties");
	haxe_ui_locale_LocaleManager.get_instance().parseResource("fr","haxeui-core/locale/fr/expression-replacements.properties");
	haxe_ui_locale_LocaleManager.get_instance().parseResource("fr","haxeui-core/locale/fr/std-strings.properties");
	haxe_ui_locale_LocaleManager.get_instance().parseResource("fr","haxeui-core/locale/fr/formats.properties");
	haxe_ui_locale_LocaleManager.get_instance().parseResource("it","haxeui-core/locale/it/expression-replacements.properties");
	haxe_ui_locale_LocaleManager.get_instance().parseResource("it","haxeui-core/locale/it/std-strings.properties");
	haxe_ui_locale_LocaleManager.get_instance().parseResource("it","haxeui-core/locale/it/formats.properties");
	haxe_ui_locale_LocaleManager.get_instance().parseResource("ru","haxeui-core/locale/ru/expression-replacements.properties");
	haxe_ui_locale_LocaleManager.get_instance().parseResource("ru","haxeui-core/locale/ru/std-strings.properties");
	haxe_ui_locale_LocaleManager.get_instance().parseResource("ru","haxeui-core/locale/ru/formats.properties");
	haxe_ui_validators_ValidatorManager.get_instance().registerValidator("required",function() {
		return new haxe_ui_validators_RequiredValidator();
	},null);
	haxe_ui_validators_ValidatorManager.get_instance().registerValidator("pattern",function() {
		return new haxe_ui_validators_PatternValidator();
	},null);
	haxe_ui_validators_ValidatorManager.get_instance().registerValidator("email",function() {
		return new haxe_ui_validators_EmailValidator();
	},null);
	haxe_ui_actions_ActionManager.get_instance().registerInputSource(new haxe_ui_actions_KeyboardActionInputSource());
	haxe_ui_loaders_image_ImageLoader.get_instance().register("asset",function() {
		return new haxe_ui_loaders_image_AssetImageLoader();
	},true,true);
	haxe_ui_loaders_image_ImageLoader.get_instance().register("file",function() {
		return new haxe_ui_loaders_image_FileImageLoader();
	},false,true);
	haxe_ui_loaders_image_ImageLoader.get_instance().register("http",function() {
		return new haxe_ui_loaders_image_HttpImageLoader();
	},false,false);
	haxe_ui_loaders_image_ImageLoader.get_instance().register("https",function() {
		return new haxe_ui_loaders_image_HttpImageLoader();
	},false,false);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("global","styles/main.css",-2,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","styles/default/main.css",-1,null);
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","title-color","#4fd1d9");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","my-border-size","rgb(0, 0, 255)");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","my-border-color","5px");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","highlight-color","#c2e812");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","error-color","#f05365");
	haxe_ui_locale_LocaleManager.get_instance().parseResource("en","locale/en-GB/tl_en.csv");
	haxe_ui_core_ComponentClassMap.register("tooltip","haxe.ui.tooltips.ToolTip");
	haxe_ui_core_ComponentClassMap.register("preloader","haxe.ui.Preloader");
	haxe_ui_core_ComponentClassMap.register("label","haxe.ui.components.Label");
	haxe_ui_core_ComponentClassMap.register("itemrenderer","haxe.ui.core.ItemRenderer");
	haxe_ui_core_ComponentClassMap.register("interactivecomponent","haxe.ui.core.InteractiveComponent");
	haxe_ui_core_ComponentClassMap.register("image","haxe.ui.components.Image");
	haxe_ui_core_ComponentClassMap.register("component","haxe.ui.core.Component");
	haxe_ui_core_ComponentClassMap.register("canvas","haxe.ui.components.Canvas");
	haxe_ui_core_ComponentClassMap.register("button","haxe.ui.components.Button");
	haxe_ui_core_ComponentClassMap.register("box","haxe.ui.containers.Box");
	haxe_ui_Toolkit.buildBackend();
	haxe_ui_Toolkit._built = true;
};
haxe_ui_Toolkit.buildBackend = function() {
	if(haxe_ui_Toolkit._backendBuilt == true) {
		return;
	}
	haxe_ui_util_Defines.set("xapi","0.0.0");
	haxe_ui_util_Defines.set("windows","1");
	haxe_ui_util_Defines.set("utils","0.0.0");
	haxe_ui_util_Defines.set("utf16","1");
	haxe_ui_util_Defines.set("uglifyjs","1.0.0");
	haxe_ui_util_Defines.set("tstool","0.0.0");
	haxe_ui_util_Defines.set("true","1");
	haxe_ui_util_Defines.set("thx_core","1");
	haxe_ui_util_Defines.set("thx.core","0.44.0");
	haxe_ui_util_Defines.set("target.utf16","true");
	haxe_ui_util_Defines.set("target.unicode","true");
	haxe_ui_util_Defines.set("target.name","js");
	haxe_ui_util_Defines.set("source_header","Generated by Haxe 4.2.3");
	haxe_ui_util_Defines.set("signals","1.3.2");
	haxe_ui_util_Defines.set("quality","0.0.0");
	haxe_ui_util_Defines.set("lrs","0.0.0");
	haxe_ui_util_Defines.set("js_es5","1");
	haxe_ui_util_Defines.set("js_es","5");
	haxe_ui_util_Defines.set("js-es5","1");
	haxe_ui_util_Defines.set("js","1");
	haxe_ui_util_Defines.set("html5","1.4.0");
	haxe_ui_util_Defines.set("haxeui_html5","1.4.0");
	haxe_ui_util_Defines.set("haxeui_core","1.4.0");
	haxe_ui_util_Defines.set("haxeui_allow_subpixels","1");
	haxe_ui_util_Defines.set("haxeui-html5","1.4.0");
	haxe_ui_util_Defines.set("haxeui-core","1.4.0");
	haxe_ui_util_Defines.set("haxe_ver","4.203");
	haxe_ui_util_Defines.set("haxe4","1");
	haxe_ui_util_Defines.set("haxe3","1");
	haxe_ui_util_Defines.set("haxe","4.2.3");
	haxe_ui_util_Defines.set("debug","1");
	haxe_ui_util_Defines.set("dce","std");
	haxe_ui_util_Defines.set("csv","0.4.0");
	haxe_ui_util_Defines.set("core","1.4.0");
	haxe_ui_util_Defines.set("backend","html5");
	haxe_ui_util_Defines.set("allow_subpixels","1");
	haxe_ui_Toolkit._backendBuilt = true;
};
haxe_ui_Toolkit.get_initialized = function() {
	return haxe_ui_Toolkit._initialized;
};
haxe_ui_Toolkit.init = function(options) {
	haxe_ui_Toolkit.build();
	haxe_ui_themes_ThemeManager.get_instance().applyTheme(haxe_ui_Toolkit._theme);
	if(options != null) {
		haxe_ui_Toolkit.get_screen().set_options(options);
		haxe_ui_ToolkitAssets.get_instance().options = options;
	}
	haxe_ui_Toolkit.get_screen().registerEvent("keydown",haxe_ui_Toolkit.onKeyDown);
	haxe_ui_Toolkit._initialized = true;
};
haxe_ui_Toolkit.onKeyDown = function(event) {
	if(event.keyCode == haxe_ui_core_Platform.get_instance().getKeyCode("tab")) {
		if(event.shiftKey == false) {
			haxe_ui_focus_FocusManager.get_instance().focusNext();
		} else {
			haxe_ui_focus_FocusManager.get_instance().focusPrev();
		}
	}
};
haxe_ui_Toolkit.get_assets = function() {
	return haxe_ui_ToolkitAssets.get_instance();
};
haxe_ui_Toolkit.get_screen = function() {
	return haxe_ui_core_Screen.get_instance();
};
haxe_ui_Toolkit.set_pixelsPerRem = function(value) {
	if(haxe_ui_Toolkit.pixelsPerRem == value) {
		return value;
	}
	haxe_ui_Toolkit.pixelsPerRem = value;
	haxe_ui_core_Screen.get_instance().refreshStyleRootComponents();
	return value;
};
haxe_ui_Toolkit.get_autoScaleDPIThreshold = function() {
	if(haxe_ui_core_Screen.get_instance().get_isRetina() == true) {
		return 192;
	}
	return 120;
};
haxe_ui_Toolkit.get_scaleX = function() {
	if(haxe_ui_Toolkit._scaleX == 0) {
		if(haxe_ui_Toolkit.autoScale == true) {
			var dpi = haxe_ui_core_Screen.get_instance().get_dpi();
			if(dpi > haxe_ui_Toolkit.get_autoScaleDPIThreshold()) {
				if(haxe_ui_Toolkit.roundScale == true) {
					haxe_ui_Toolkit._scaleX = Math.round(dpi / haxe_ui_Toolkit.get_autoScaleDPIThreshold());
				} else {
					haxe_ui_Toolkit._scaleX = dpi / haxe_ui_Toolkit.get_autoScaleDPIThreshold();
				}
			} else {
				haxe_ui_Toolkit._scaleX = 1;
			}
		} else {
			haxe_ui_Toolkit._scaleX = 1;
		}
	}
	return haxe_ui_Toolkit._scaleX;
};
haxe_ui_Toolkit.set_scaleX = function(value) {
	if(haxe_ui_Toolkit._scaleX == value) {
		return value;
	}
	haxe_ui_Toolkit._scaleX = value;
	haxe_ui_Toolkit.autoScale = false;
	return value;
};
haxe_ui_Toolkit.get_scaleY = function() {
	if(haxe_ui_Toolkit._scaleY == 0) {
		if(haxe_ui_Toolkit.autoScale == true) {
			var dpi = haxe_ui_core_Screen.get_instance().get_dpi();
			if(dpi > haxe_ui_Toolkit.get_autoScaleDPIThreshold()) {
				if(haxe_ui_Toolkit.roundScale == true) {
					haxe_ui_Toolkit._scaleY = Math.round(dpi / haxe_ui_Toolkit.get_autoScaleDPIThreshold());
				} else {
					haxe_ui_Toolkit._scaleY = dpi / haxe_ui_Toolkit.get_autoScaleDPIThreshold();
				}
			} else {
				haxe_ui_Toolkit._scaleY = 1;
			}
		} else {
			haxe_ui_Toolkit._scaleY = 1;
		}
	}
	return haxe_ui_Toolkit._scaleY;
};
haxe_ui_Toolkit.set_scaleY = function(value) {
	if(haxe_ui_Toolkit._scaleY == value) {
		return value;
	}
	haxe_ui_Toolkit._scaleY = value;
	haxe_ui_Toolkit.autoScale = false;
	return value;
};
haxe_ui_Toolkit.get_scale = function() {
	return Math.max(haxe_ui_Toolkit.get_scaleX(),haxe_ui_Toolkit.get_scaleY());
};
haxe_ui_Toolkit.set_scale = function(value) {
	haxe_ui_Toolkit.set_scaleX(value);
	haxe_ui_Toolkit.set_scaleY(value);
	return value;
};
haxe_ui_Toolkit.callLater = function(fn) {
	new haxe_ui_CallLater(fn);
};
var haxe_ui_backend_AssetsBase = function() {
};
$hxClasses["haxe.ui.backend.AssetsBase"] = haxe_ui_backend_AssetsBase;
haxe_ui_backend_AssetsBase.__name__ = "haxe.ui.backend.AssetsBase";
haxe_ui_backend_AssetsBase.isAbsolutePath = function(path) {
	if(StringTools.startsWith(path,"/")) {
		return true;
	}
	if(path.charAt(1) == ":") {
		return true;
	}
	if(StringTools.startsWith(path,"\\\\")) {
		return true;
	}
	return false;
};
haxe_ui_backend_AssetsBase.prototype = {
	getTextDelegate: function(resourceId) {
		return null;
	}
	,getImageInternal: function(resourceId,callback) {
		callback(null);
	}
	,getImageFromHaxeResource: function(resourceId,callback) {
		callback(resourceId,null);
	}
	,imageFromBytes: function(bytes,callback) {
		callback(null);
	}
	,imageFromFile: function(filename,callback) {
		haxe_Log.trace("WARNING: cant load from file system on non-sys targets [" + filename + "]",{ fileName : "haxe/ui/backend/AssetsBase.hx", lineNumber : 50, className : "haxe.ui.backend.AssetsBase", methodName : "imageFromFile"});
		callback(null);
	}
	,getFontInternal: function(resourceId,callback) {
		callback(null);
	}
	,getFontFromHaxeResource: function(resourceId,callback) {
		callback(resourceId,null);
	}
	,imageInfoFromImageData: function(imageData) {
		return { data : imageData, width : 0, height : 0};
	}
	,__class__: haxe_ui_backend_AssetsBase
};
var haxe_ui_backend_AssetsImpl = function() {
	haxe_ui_backend_AssetsBase.call(this);
};
$hxClasses["haxe.ui.backend.AssetsImpl"] = haxe_ui_backend_AssetsImpl;
haxe_ui_backend_AssetsImpl.__name__ = "haxe.ui.backend.AssetsImpl";
haxe_ui_backend_AssetsImpl.__super__ = haxe_ui_backend_AssetsBase;
haxe_ui_backend_AssetsImpl.prototype = $extend(haxe_ui_backend_AssetsBase.prototype,{
	getImageInternal: function(resourceId,callback) {
		var bytes = haxe_Resource.getBytes(resourceId);
		if(bytes != null) {
			callback(null);
			return;
		}
		var image = window.document.createElement("img");
		image.onload = function(e) {
			var imageInfo = { width : image.width, height : image.height, data : image};
			callback(imageInfo);
		};
		image.onerror = function(e) {
			callback(null);
		};
		image.src = resourceId;
	}
	,getImageFromHaxeResource: function(resourceId,callback) {
		var bytes = haxe_Resource.getBytes(resourceId);
		this.imageFromBytes(bytes,function(imageInfo) {
			if(imageInfo == null) {
				haxe_Log.trace("WARNING: problem loading image from haxe resource: " + resourceId,{ fileName : "haxe/ui/backend/AssetsImpl.hx", lineNumber : 41, className : "haxe.ui.backend.AssetsImpl", methodName : "getImageFromHaxeResource"});
			}
			callback(resourceId,imageInfo);
		});
	}
	,imageFromBytes: function(bytes,callback) {
		if(bytes == null) {
			callback(null);
			return;
		}
		var image = window.document.createElement("img");
		image.onload = function(e) {
			var imageInfo = { width : image.width, height : image.height, data : image};
			callback(imageInfo);
		};
		image.onerror = function(e) {
			window.console.log(e);
			callback(null);
		};
		var blob = new Blob([bytes.b.bufferValue],this.getBlobOptionsFromBytes(bytes));
		var blobUrl = URL.createObjectURL(blob);
		image.src = blobUrl;
	}
	,getBlobOptionsFromBytes: function(bytes) {
		if(bytes.b[0] == HxOverrides.cca("<",0) && this.containsByteSequence(bytes,haxe_ui_backend_AssetsImpl.SVG_BYTE_SEQUENCE)) {
			return { type : "image/svg+xml"};
		}
		return null;
	}
	,containsByteSequence: function(bytes,seq) {
		var _g = 0;
		var _g1 = bytes.length - seq.length;
		while(_g < _g1) {
			var i = _g++;
			var match = true;
			var _g2 = 0;
			var _g3 = seq.length;
			while(_g2 < _g3) {
				var j = _g2++;
				if(bytes.b[i + j] != seq[j]) {
					match = false;
					break;
				}
			}
			if(match == true) {
				return true;
			}
		}
		return false;
	}
	,getFontInternal: function(resourceId,callback) {
		var bytes = haxe_Resource.getBytes(resourceId);
		if(bytes == null) {
			haxe_ui_backend_html5_util_FontDetect.onFontLoaded(resourceId,function(f) {
				var fontInfo = { data : f};
				callback(fontInfo);
			},function(f) {
				callback(null);
			});
			return;
		}
		this.getFontFromHaxeResource(resourceId,function(r,f) {
			callback(f);
		});
	}
	,imageInfoFromImageData: function(imageData) {
		return { data : imageData, width : imageData.width, height : imageData.height};
	}
	,getFontFromHaxeResource: function(resourceId,callback) {
		var bytes = haxe_Resource.getBytes(resourceId);
		if(bytes == null) {
			callback(resourceId,null);
			return;
		}
		var fontFamilyParts = resourceId.split("/");
		var fontFamily = fontFamilyParts[fontFamilyParts.length - 1];
		if(fontFamily.indexOf(".") != -1) {
			fontFamily = HxOverrides.substr(fontFamily,0,fontFamily.indexOf("."));
		}
		var fontFace = new FontFace(fontFamily,bytes.b.bufferValue);
		fontFace.load().then(function(loadedFace) {
			window.document.fonts.add(loadedFace);
			haxe_ui_backend_html5_util_FontDetect.onFontLoaded(fontFamily,function(f) {
				var fontInfo = { data : fontFamily};
				callback(resourceId,fontInfo);
			},function(f) {
				callback(resourceId,null);
			});
		}).catch(function(error) {
			haxe_Log.trace("WARNING: problem loading font '" + resourceId + "' (" + error + ")",{ fileName : "haxe/ui/backend/AssetsImpl.hx", lineNumber : 157, className : "haxe.ui.backend.AssetsImpl", methodName : "getFontFromHaxeResource"});
			callback(resourceId,null);
		});
	}
	,__class__: haxe_ui_backend_AssetsImpl
});
var haxe_ui_ToolkitAssets = function() {
	this.options = null;
	this.preloadList = [];
	haxe_ui_backend_AssetsImpl.call(this);
};
$hxClasses["haxe.ui.ToolkitAssets"] = haxe_ui_ToolkitAssets;
haxe_ui_ToolkitAssets.__name__ = "haxe.ui.ToolkitAssets";
haxe_ui_ToolkitAssets.__properties__ = {get_instance:"get_instance"};
haxe_ui_ToolkitAssets.get_instance = function() {
	if(haxe_ui_ToolkitAssets._instance == null) {
		haxe_ui_ToolkitAssets._instance = new haxe_ui_ToolkitAssets();
	}
	return haxe_ui_ToolkitAssets._instance;
};
haxe_ui_ToolkitAssets.__super__ = haxe_ui_backend_AssetsImpl;
haxe_ui_ToolkitAssets.prototype = $extend(haxe_ui_backend_AssetsImpl.prototype,{
	preloadList: null
	,options: null
	,_fontCache: null
	,_fontCallbacks: null
	,_imageCache: null
	,_imageCallbacks: null
	,getFont: function(resourceId,callback,useCache) {
		if(useCache == null) {
			useCache = true;
		}
		var _gthis = this;
		if(this._fontCache != null && this._fontCache.h[resourceId] != null && useCache == true) {
			callback(this._fontCache.h[resourceId]);
		} else {
			if(this._fontCallbacks == null) {
				this._fontCallbacks = new haxe_ui_util_CallbackMap();
			}
			this._fontCallbacks.add(resourceId,callback);
			if(this._fontCallbacks.count(resourceId) == 1) {
				this.getFontInternal(resourceId,function(font) {
					if(font != null) {
						_gthis._onFontLoaded(resourceId,font);
					} else if(haxe_Resource.listNames().indexOf(resourceId) != -1) {
						_gthis.getFontFromHaxeResource(resourceId,$bind(_gthis,_gthis._onFontLoaded));
					} else {
						_gthis._fontCallbacks.remove(resourceId,callback);
						callback(null);
					}
				});
			}
		}
	}
	,_onFontLoaded: function(resourceId,font) {
		if(this._fontCache == null) {
			this._fontCache = new haxe_ds_StringMap();
		}
		this._fontCache.h[resourceId] = font;
		this._fontCallbacks.invokeAndRemove(resourceId,font);
	}
	,cacheImage: function(resourceId,imageInfo) {
		if(this._imageCache == null) {
			this._imageCache = new haxe_ds_StringMap();
		}
		if(imageInfo == null || resourceId == null) {
			return;
		}
		this._imageCache.h[resourceId] = imageInfo;
	}
	,getCachedImage: function(resourceId) {
		if(this._imageCache == null) {
			return null;
		}
		return this._imageCache.h[resourceId];
	}
	,getImage: function(resourceId,callback,useCache) {
		if(useCache == null) {
			useCache = true;
		}
		var _gthis = this;
		var orginalResourceId = resourceId;
		resourceId = this.runPlugins(resourceId);
		if(this._imageCache != null && this._imageCache.h[resourceId] != null && useCache == true) {
			callback(this._imageCache.h[resourceId]);
		} else {
			if(this._imageCallbacks == null) {
				this._imageCallbacks = new haxe_ui_util_CallbackMap();
			}
			this._imageCallbacks.add(resourceId,callback);
			if(this._imageCallbacks.count(resourceId) == 1) {
				this.getImageInternal(resourceId,function(imageInfo) {
					if(imageInfo != null) {
						_gthis._onImageLoaded(resourceId,imageInfo);
					} else if(haxe_Resource.listNames().indexOf(orginalResourceId) != -1) {
						_gthis._imageCallbacks.remove(resourceId,callback);
						_gthis._imageCallbacks.add(orginalResourceId,callback);
						_gthis.getImageFromHaxeResource(orginalResourceId,$bind(_gthis,_gthis._onImageLoaded));
					} else if(haxe_Resource.listNames().indexOf(resourceId) != -1) {
						_gthis.getImageFromHaxeResource(resourceId,$bind(_gthis,_gthis._onImageLoaded));
					} else {
						_gthis._imageCallbacks.remove(resourceId,callback);
						callback(null);
					}
				});
			}
		}
	}
	,_onImageLoaded: function(resourceId,imageInfo) {
		if(imageInfo != null && (imageInfo.width == -1 || imageInfo.width == -1)) {
			haxe_Log.trace("WARNING: imageData.originalWidth == -1 || imageData.originalHeight == -1",{ fileName : "haxe/ui/ToolkitAssets.hx", lineNumber : 123, className : "haxe.ui.ToolkitAssets", methodName : "_onImageLoaded"});
		}
		if(this._imageCache == null) {
			this._imageCache = new haxe_ds_StringMap();
		}
		this._imageCache.h[resourceId] = imageInfo;
		this._imageCallbacks.invokeAndRemove(resourceId,imageInfo);
	}
	,getText: function(resourceId) {
		var s = this.getTextDelegate(resourceId);
		if(s == null) {
			s = haxe_Resource.getString(resourceId);
		}
		return s;
	}
	,getBytes: function(resourceId) {
		return haxe_Resource.getBytes(resourceId);
	}
	,_plugins: null
	,addPlugin: function(plugin) {
		if(this._plugins == null) {
			this._plugins = [];
		}
		this._plugins.push(plugin);
	}
	,runPlugins: function(asset) {
		if(this._plugins == null) {
			return asset;
		}
		var _g = 0;
		var _g1 = this._plugins;
		while(_g < _g1.length) {
			var p = _g1[_g];
			++_g;
			asset = p.invoke(asset);
		}
		return asset;
	}
	,__class__: haxe_ui_ToolkitAssets
});
var haxe_ui_actions_ActionManager = function() {
	this._repeatActions = new haxe_ds_StringMap();
	this._inputSources = [];
	this._events = null;
	this.navigationMethod = "navigationDesktop";
};
$hxClasses["haxe.ui.actions.ActionManager"] = haxe_ui_actions_ActionManager;
haxe_ui_actions_ActionManager.__name__ = "haxe.ui.actions.ActionManager";
haxe_ui_actions_ActionManager.__properties__ = {get_instance:"get_instance"};
haxe_ui_actions_ActionManager.get_instance = function() {
	if(haxe_ui_actions_ActionManager._instance == null) {
		haxe_ui_actions_ActionManager._instance = new haxe_ui_actions_ActionManager();
	}
	return haxe_ui_actions_ActionManager._instance;
};
haxe_ui_actions_ActionManager.prototype = {
	navigationMethod: null
	,_events: null
	,_inputSources: null
	,_repeatActions: null
	,registerEvent: function(type,listener,priority) {
		if(priority == null) {
			priority = 0;
		}
		if(this._events == null) {
			this._events = new haxe_ui_util_EventMap();
		}
		this._events.add(type,listener,priority);
	}
	,unregisterEvent: function(type,listener) {
		if(this._events == null) {
			return;
		}
		this._events.remove(type,listener);
	}
	,dispatch: function(event) {
		if(this._events == null) {
			return;
		}
		this._events.invoke(event.type,event);
	}
	,registerInputSource: function(source) {
		source.start();
		this._inputSources.push(source);
	}
	,actionStart: function(action,source) {
		var _gthis = this;
		var currentFocus = haxe_ui_focus_FocusManager.get_instance().get_focus();
		if(currentFocus == null) {
			haxe_Log.trace("no focus for action: " + action,{ fileName : "haxe/ui/actions/ActionManager.hx", lineNumber : 73, className : "haxe.ui.actions.ActionManager", methodName : "actionStart"});
			return;
		}
		if(!((currentFocus) instanceof haxe_ui_core_InteractiveComponent)) {
			haxe_Log.trace("current focus not interactive: " + action,{ fileName : "haxe/ui/actions/ActionManager.hx", lineNumber : 80, className : "haxe.ui.actions.ActionManager", methodName : "actionStart"});
			return;
		}
		var actionEvent = new haxe_ui_events_ActionEvent("actionstart",action);
		var c = js_Boot.__cast(currentFocus , haxe_ui_core_InteractiveComponent);
		c.dispatch(actionEvent);
		if(actionEvent.canceled == false) {
			var c1 = js_Boot.getClass(source);
			this.dispatch(new haxe_ui_events_ActionEvent("actionstart",action,false,c1.__name__));
		}
		if(actionEvent.repeater == true && Object.prototype.hasOwnProperty.call(this._repeatActions.h,action) == false) {
			var this1 = this._repeatActions;
			var value = { type : action, timer : new haxe_ui_util_Timer(c.actionRepeatInterval,function() {
				_gthis.actionStart(action,source);
			})};
			this1.h[action] = value;
		}
	}
	,actionEnd: function(action,source) {
		var currentFocus = haxe_ui_focus_FocusManager.get_instance().get_focus();
		if(currentFocus == null) {
			return;
		}
		if(!((currentFocus) instanceof haxe_ui_core_InteractiveComponent)) {
			haxe_Log.trace("current focus not interactive: " + action,{ fileName : "haxe/ui/actions/ActionManager.hx", lineNumber : 109, className : "haxe.ui.actions.ActionManager", methodName : "actionEnd"});
			return;
		}
		var actionEvent = new haxe_ui_events_ActionEvent("actionend",action);
		var c = js_Boot.__cast(currentFocus , haxe_ui_core_InteractiveComponent);
		c.dispatch(actionEvent);
		if(actionEvent.canceled == false) {
			var c = js_Boot.getClass(source);
			this.dispatch(new haxe_ui_events_ActionEvent("actionend",action,false,c.__name__));
		}
		if(Object.prototype.hasOwnProperty.call(this._repeatActions.h,action)) {
			var info = this._repeatActions.h[action];
			info.timer.stop();
			var _this = this._repeatActions;
			var key = action;
			if(Object.prototype.hasOwnProperty.call(_this.h,key)) {
				delete(_this.h[key]);
			}
		}
	}
	,__class__: haxe_ui_actions_ActionManager
};
var haxe_ui_actions_IActionInputSource = function() { };
$hxClasses["haxe.ui.actions.IActionInputSource"] = haxe_ui_actions_IActionInputSource;
haxe_ui_actions_IActionInputSource.__name__ = "haxe.ui.actions.IActionInputSource";
haxe_ui_actions_IActionInputSource.__isInterface__ = true;
haxe_ui_actions_IActionInputSource.prototype = {
	start: null
	,__class__: haxe_ui_actions_IActionInputSource
};
var haxe_ui_actions_KeyboardActionInputSource = function() {
	this._downKeys = new haxe_ds_IntMap();
	this._started = false;
};
$hxClasses["haxe.ui.actions.KeyboardActionInputSource"] = haxe_ui_actions_KeyboardActionInputSource;
haxe_ui_actions_KeyboardActionInputSource.__name__ = "haxe.ui.actions.KeyboardActionInputSource";
haxe_ui_actions_KeyboardActionInputSource.__interfaces__ = [haxe_ui_actions_IActionInputSource];
haxe_ui_actions_KeyboardActionInputSource.prototype = {
	_started: null
	,start: function() {
		if(this._started == true) {
			return;
		}
		this._started = true;
		haxe_ui_core_Screen.get_instance().registerEvent("keydown",$bind(this,this.onKeyDown));
		haxe_ui_core_Screen.get_instance().registerEvent("keyup",$bind(this,this.onKeyUp));
	}
	,_downKeys: null
	,onKeyDown: function(e) {
		var keyCode = e.keyCode;
		if(this._downKeys.h.hasOwnProperty(keyCode)) {
			return;
		}
		this._downKeys.h[keyCode] = true;
		if(keyCode == haxe_ui_core_Platform.get_instance().getKeyCode("space")) {
			haxe_ui_actions_ActionManager.get_instance().actionStart("actionPress",this);
		} else if(keyCode == haxe_ui_core_Platform.get_instance().getKeyCode("left")) {
			haxe_ui_actions_ActionManager.get_instance().actionStart("actionLeft",this);
		} else if(keyCode == haxe_ui_core_Platform.get_instance().getKeyCode("right")) {
			haxe_ui_actions_ActionManager.get_instance().actionStart("actionRight",this);
		} else if(keyCode == haxe_ui_core_Platform.get_instance().getKeyCode("up")) {
			haxe_ui_actions_ActionManager.get_instance().actionStart("actionUp",this);
		} else if(keyCode == haxe_ui_core_Platform.get_instance().getKeyCode("down")) {
			haxe_ui_actions_ActionManager.get_instance().actionStart("actionDown",this);
		} else if(keyCode == haxe_ui_core_Platform.get_instance().getKeyCode("escape")) {
			haxe_ui_actions_ActionManager.get_instance().actionStart("actionBack",this);
		} else if(keyCode == haxe_ui_core_Platform.get_instance().getKeyCode("enter")) {
			haxe_ui_actions_ActionManager.get_instance().actionStart("actionConfirm",this);
		}
	}
	,onKeyUp: function(e) {
		var keyCode = e.keyCode;
		if(this._downKeys.h.hasOwnProperty(keyCode) == false) {
			return;
		}
		this._downKeys.remove(keyCode);
		if(keyCode == haxe_ui_core_Platform.get_instance().getKeyCode("space")) {
			haxe_ui_actions_ActionManager.get_instance().actionEnd("actionPress",this);
		} else if(keyCode == haxe_ui_core_Platform.get_instance().getKeyCode("left")) {
			haxe_ui_actions_ActionManager.get_instance().actionEnd("actionLeft",this);
		} else if(keyCode == haxe_ui_core_Platform.get_instance().getKeyCode("right")) {
			haxe_ui_actions_ActionManager.get_instance().actionEnd("actionRight",this);
		} else if(keyCode == haxe_ui_core_Platform.get_instance().getKeyCode("up")) {
			haxe_ui_actions_ActionManager.get_instance().actionEnd("actionUp",this);
		} else if(keyCode == haxe_ui_core_Platform.get_instance().getKeyCode("down")) {
			haxe_ui_actions_ActionManager.get_instance().actionEnd("actionDown",this);
		} else if(keyCode == haxe_ui_core_Platform.get_instance().getKeyCode("escape")) {
			haxe_ui_actions_ActionManager.get_instance().actionEnd("actionBack",this);
		} else if(keyCode == haxe_ui_core_Platform.get_instance().getKeyCode("enter")) {
			haxe_ui_actions_ActionManager.get_instance().actionEnd("actionConfirm",this);
		}
	}
	,__class__: haxe_ui_actions_KeyboardActionInputSource
};
var haxe_ui_assets_AssetPlugin = function() {
};
$hxClasses["haxe.ui.assets.AssetPlugin"] = haxe_ui_assets_AssetPlugin;
haxe_ui_assets_AssetPlugin.__name__ = "haxe.ui.assets.AssetPlugin";
haxe_ui_assets_AssetPlugin.prototype = {
	_props: null
	,invoke: function(asset) {
		return asset;
	}
	,setProperty: function(name,value) {
		if(this._props == null) {
			this._props = new haxe_ds_StringMap();
		}
		this._props.h[name] = value;
	}
	,getProperty: function(name,defaultValue) {
		if(this._props == null) {
			return defaultValue;
		}
		var v = this._props.h[name];
		if(v == null) {
			v = defaultValue;
		}
		return v;
	}
	,__class__: haxe_ui_assets_AssetPlugin
};
var haxe_ui_backend_ComponentGraphicsBase = function(component) {
	this._drawCommands = [];
	this._component = component;
};
$hxClasses["haxe.ui.backend.ComponentGraphicsBase"] = haxe_ui_backend_ComponentGraphicsBase;
haxe_ui_backend_ComponentGraphicsBase.__name__ = "haxe.ui.backend.ComponentGraphicsBase";
haxe_ui_backend_ComponentGraphicsBase.prototype = {
	_component: null
	,_drawCommands: null
	,clear: function() {
		this._drawCommands = [];
		this._drawCommands.push(haxe_ui_graphics_DrawCommand.Clear);
	}
	,setPixel: function(x,y,color) {
		this._drawCommands.push(haxe_ui_graphics_DrawCommand.SetPixel(x,y,color));
	}
	,setPixels: function(pixels) {
		this._drawCommands.push(haxe_ui_graphics_DrawCommand.SetPixels(pixels));
	}
	,moveTo: function(x,y) {
		this._drawCommands.push(haxe_ui_graphics_DrawCommand.MoveTo(x,y));
	}
	,lineTo: function(x,y) {
		this._drawCommands.push(haxe_ui_graphics_DrawCommand.LineTo(x,y));
	}
	,strokeStyle: function(color,thickness,alpha) {
		if(alpha == null) {
			alpha = 1;
		}
		if(thickness == null) {
			thickness = 1;
		}
		this._drawCommands.push(haxe_ui_graphics_DrawCommand.StrokeStyle(color,thickness,alpha));
	}
	,circle: function(x,y,radius) {
		this._drawCommands.push(haxe_ui_graphics_DrawCommand.Circle(x,y,radius));
	}
	,fillStyle: function(color,alpha) {
		if(alpha == null) {
			alpha = 1;
		}
		this._drawCommands.push(haxe_ui_graphics_DrawCommand.FillStyle(color,alpha));
	}
	,curveTo: function(controlX,controlY,anchorX,anchorY) {
		this._drawCommands.push(haxe_ui_graphics_DrawCommand.CurveTo(controlX,controlY,anchorX,anchorY));
	}
	,cubicCurveTo: function(controlX1,controlY1,controlX2,controlY2,anchorX,anchorY) {
		this._drawCommands.push(haxe_ui_graphics_DrawCommand.CubicCurveTo(controlX1,controlY1,controlX2,controlY2,anchorX,anchorY));
	}
	,rectangle: function(x,y,width,height) {
		this._drawCommands.push(haxe_ui_graphics_DrawCommand.Rectangle(x,y,width,height));
	}
	,image: function(resource,x,y,width,height) {
		this._drawCommands.push(haxe_ui_graphics_DrawCommand.Image(resource,x,y,width,height));
	}
	,resize: function(width,height) {
	}
	,setProperty: function(name,value) {
	}
	,detach: function() {
	}
	,replayDrawCommands: function() {
		var commands = this._drawCommands.slice();
		this._drawCommands = [];
		var _g = 0;
		while(_g < commands.length) {
			var c = commands[_g];
			++_g;
			switch(c._hx_index) {
			case 0:
				this.clear();
				break;
			case 1:
				var x = c.x;
				var y = c.y;
				var color = c.color;
				this.setPixel(x,y,color);
				break;
			case 2:
				var pixels = c.pixels;
				this.setPixels(pixels);
				break;
			case 3:
				var x1 = c.x;
				var y1 = c.y;
				this.moveTo(x1,y1);
				break;
			case 4:
				var x2 = c.x;
				var y2 = c.y;
				this.lineTo(x2,y2);
				break;
			case 5:
				var color1 = c.color;
				var thickness = c.thickness;
				var alpha = c.alpha;
				this.strokeStyle(color1,thickness,alpha);
				break;
			case 6:
				var x3 = c.x;
				var y3 = c.y;
				var radius = c.radius;
				this.circle(x3,y3,radius);
				break;
			case 7:
				var color2 = c.color;
				var alpha1 = c.alpha;
				this.fillStyle(color2,alpha1);
				break;
			case 8:
				var controlX = c.controlX;
				var controlY = c.controlY;
				var anchorX = c.anchorX;
				var anchorY = c.anchorY;
				this.curveTo(controlX,controlY,anchorX,anchorY);
				break;
			case 9:
				var controlX1 = c.controlX1;
				var controlY1 = c.controlY1;
				var controlX2 = c.controlX2;
				var controlY2 = c.controlY2;
				var anchorX1 = c.anchorX;
				var anchorY1 = c.anchorY;
				this.cubicCurveTo(controlX1,controlY1,controlX2,controlY2,anchorX1,anchorY1);
				break;
			case 10:
				var x4 = c.x;
				var y4 = c.y;
				var width = c.width;
				var height = c.height;
				this.rectangle(x4,y4,width,height);
				break;
			case 11:
				var resource = c.resource;
				var x5 = c.x;
				var y5 = c.y;
				var width1 = c.width;
				var height1 = c.height;
				this.image(resource,x5,y5,width1,height1);
				break;
			}
		}
	}
	,__class__: haxe_ui_backend_ComponentGraphicsBase
};
var haxe_ui_backend_ComponentGraphicsImpl = function(component) {
	haxe_ui_backend_ComponentGraphicsBase.call(this,component);
	this._impl = new haxe_ui_backend_html5_graphics_SVGGraphicsImpl(component);
};
$hxClasses["haxe.ui.backend.ComponentGraphicsImpl"] = haxe_ui_backend_ComponentGraphicsImpl;
haxe_ui_backend_ComponentGraphicsImpl.__name__ = "haxe.ui.backend.ComponentGraphicsImpl";
haxe_ui_backend_ComponentGraphicsImpl.__super__ = haxe_ui_backend_ComponentGraphicsBase;
haxe_ui_backend_ComponentGraphicsImpl.prototype = $extend(haxe_ui_backend_ComponentGraphicsBase.prototype,{
	_impl: null
	,clear: function() {
		haxe_ui_backend_ComponentGraphicsBase.prototype.clear.call(this);
		this._impl.clear();
	}
	,setPixel: function(x,y,color) {
		haxe_ui_backend_ComponentGraphicsBase.prototype.setPixel.call(this,x,y,color);
		this._impl.setPixel(x,y,color);
	}
	,setPixels: function(pixels) {
		haxe_ui_backend_ComponentGraphicsBase.prototype.setPixels.call(this,pixels);
		this._impl.setPixels(pixels);
	}
	,moveTo: function(x,y) {
		haxe_ui_backend_ComponentGraphicsBase.prototype.moveTo.call(this,x,y);
		this._impl.moveTo(x,y);
	}
	,lineTo: function(x,y) {
		haxe_ui_backend_ComponentGraphicsBase.prototype.lineTo.call(this,x,y);
		this._impl.lineTo(x,y);
	}
	,strokeStyle: function(color,thickness,alpha) {
		if(alpha == null) {
			alpha = 1;
		}
		if(thickness == null) {
			thickness = 1;
		}
		haxe_ui_backend_ComponentGraphicsBase.prototype.strokeStyle.call(this,color,thickness,alpha);
		this._impl.strokeStyle(color,thickness,alpha);
	}
	,fillStyle: function(color,alpha) {
		if(alpha == null) {
			alpha = 1;
		}
		haxe_ui_backend_ComponentGraphicsBase.prototype.fillStyle.call(this,color,alpha);
		this._impl.fillStyle(color,alpha);
	}
	,circle: function(x,y,radius) {
		haxe_ui_backend_ComponentGraphicsBase.prototype.circle.call(this,x,y,radius);
		this._impl.circle(x,y,radius);
	}
	,curveTo: function(controlX,controlY,anchorX,anchorY) {
		haxe_ui_backend_ComponentGraphicsBase.prototype.curveTo.call(this,controlX,controlY,anchorX,anchorY);
		this._impl.curveTo(controlX,controlY,anchorX,anchorY);
	}
	,cubicCurveTo: function(controlX1,controlY1,controlX2,controlY2,anchorX,anchorY) {
		haxe_ui_backend_ComponentGraphicsBase.prototype.cubicCurveTo.call(this,controlX1,controlY1,controlX2,controlY2,anchorX,anchorY);
		this._impl.cubicCurveTo(controlX1,controlY1,controlX2,controlY2,anchorX,anchorY);
	}
	,rectangle: function(x,y,width,height) {
		haxe_ui_backend_ComponentGraphicsBase.prototype.rectangle.call(this,x,y,width,height);
		this._impl.rectangle(x,y,width,height);
	}
	,image: function(resource,x,y,width,height) {
		haxe_ui_backend_ComponentGraphicsBase.prototype.image.call(this,resource,x,y,width,height);
		this._impl.image(resource,x,y,width,height);
	}
	,resize: function(width,height) {
		haxe_ui_backend_ComponentGraphicsBase.prototype.resize.call(this,width,height);
		this._impl.resize(width,height);
	}
	,setProperty: function(name,value) {
		if(name == "html5.graphics.method") {
			if(value == "svg") {
				if(this._impl != null) {
					this._impl.detach();
				}
				this._impl = new haxe_ui_backend_html5_graphics_SVGGraphicsImpl(this._component);
			} else if(value == "canvas") {
				if(this._impl != null) {
					this._impl.detach();
				}
				this._impl = new haxe_ui_backend_html5_graphics_CanvasGraphicsImpl(this._component);
			}
		} else {
			this._impl.setProperty(name,value);
		}
	}
	,__class__: haxe_ui_backend_ComponentGraphicsImpl
});
var haxe_ui_backend_DialogBase = function() {
	this._buttonsCreated = false;
	this._forcedTop = null;
	this._forcedLeft = null;
	this._dialogParent = null;
	this._autoSizeDialog = false;
	this.destroyOnClose = true;
	this.defaultButton = null;
	this.button = null;
	this.centerDialog = true;
	this.buttons = null;
	this.autoCenterDialog = true;
	this.modal = true;
	var _gthis = this;
	haxe_ui_containers_Box.call(this);
	this.dialogContainer = new haxe_ui_containers_VBox();
	this.dialogContainer.set_id("dialog-container");
	this.dialogContainer.set_styleNames("dialog-container");
	this.dialogContainer.set_scriptAccess(false);
	this.addComponent(this.dialogContainer);
	this.dialogTitle = new haxe_ui_containers_HBox();
	this.dialogTitle.set_id("dialog-title");
	this.dialogTitle.set_styleNames("dialog-title");
	this.dialogTitle.set_scriptAccess(false);
	this.set_dragInitiator(this.dialogTitle);
	this.dialogContainer.addComponent(this.dialogTitle);
	this.dialogTitleLabel = new haxe_ui_components_Label();
	this.dialogTitleLabel.set_id("dialog-title-label");
	this.dialogTitleLabel.set_styleNames("dialog-title-label");
	this.dialogTitleLabel.set_text("HaxeUI");
	this.dialogTitleLabel.set_scriptAccess(false);
	this.dialogTitle.addComponent(this.dialogTitleLabel);
	this.dialogCloseButton = new haxe_ui_components_Image();
	this.dialogCloseButton.set_id("dialog-close-button");
	this.dialogCloseButton.set_styleNames("dialog-close-button");
	this.dialogCloseButton.set_scriptAccess(false);
	this.dialogTitle.addComponent(this.dialogCloseButton);
	this.dialogContent = new haxe_ui_containers_VBox();
	this.dialogContent.set_id("dialog-content");
	this.dialogContent.set_styleNames("dialog-content");
	this.dialogContent.set_scriptAccess(false);
	this.dialogContent.registerEvent("resize",$bind(this,this.onContentResize));
	this.dialogContainer.addComponent(this.dialogContent);
	this.dialogFooterContainer = new haxe_ui_containers_Box();
	this.dialogFooterContainer.set_id("dialog-footer-container");
	this.dialogFooterContainer.set_styleNames("dialog-footer-container");
	this.dialogFooterContainer.set_scriptAccess(false);
	this.dialogContainer.addComponent(this.dialogFooterContainer);
	this.dialogFooter = new haxe_ui_containers_HBox();
	this.dialogFooter.set_id("dialog-footer");
	this.dialogFooter.set_styleNames("dialog-footer");
	this.dialogFooter.set_scriptAccess(false);
	this.dialogFooter.registerEvent("resize",$bind(this,this.onFooterResize));
	this.dialogFooterContainer.addComponent(this.dialogFooter);
	this.dialogFooterContainer.hide();
	this.dialogCloseButton.set_onClick(function(e) {
		_gthis.hideDialog("{{cancel}}");
	});
	this.registerEvent("submit",$bind(this,this.onSubmit));
};
$hxClasses["haxe.ui.backend.DialogBase"] = haxe_ui_backend_DialogBase;
haxe_ui_backend_DialogBase.__name__ = "haxe.ui.backend.DialogBase";
haxe_ui_backend_DialogBase.__super__ = haxe_ui_containers_Box;
haxe_ui_backend_DialogBase.prototype = $extend(haxe_ui_containers_Box.prototype,{
	modal: null
	,autoCenterDialog: null
	,buttons: null
	,centerDialog: null
	,button: null
	,defaultButton: null
	,_overlay: null
	,dialogContainer: null
	,dialogTitle: null
	,dialogTitleLabel: null
	,dialogCloseButton: null
	,dialogContent: null
	,dialogFooterContainer: null
	,dialogFooter: null
	,destroyOnClose: null
	,onSubmit: function(event) {
		if(this.defaultButton != null) {
			this.hideDialog(this.defaultButton);
		}
	}
	,_autoSizeDialog: null
	,onReady: function() {
		haxe_ui_containers_Box.prototype.onReady.call(this);
		this._autoSizeDialog = this.get_autoWidth();
	}
	,_dialogParent: null
	,get_dialogParent: function() {
		return this._dialogParent;
	}
	,set_dialogParent: function(value) {
		this._dialogParent = value;
		return value;
	}
	,showDialog: function(modal) {
		if(modal == null) {
			modal = true;
		}
		this.modal = modal;
		this.show();
	}
	,_forcedLeft: null
	,set_left: function(value) {
		haxe_ui_containers_Box.prototype.set_left.call(this,value);
		this.autoCenterDialog = false;
		this._forcedLeft = value;
		return value;
	}
	,_forcedTop: null
	,set_top: function(value) {
		haxe_ui_containers_Box.prototype.set_top.call(this,value);
		this.autoCenterDialog = false;
		this._forcedTop = value;
		return value;
	}
	,show: function() {
		var _gthis = this;
		this.handleVisibility(false);
		var dp = this.get_dialogParent();
		if(this.modal) {
			if(this._overlay == null) {
				this._overlay = new haxe_ui_core_Component();
				this._overlay.set_id("modal-background");
				this._overlay.addClass("modal-background");
				this._overlay.set_percentWidth(this._overlay.set_percentHeight(100));
				this._overlay.set_onClick(function(_) {
					if(_gthis.get_closable()) {
						_gthis.hideDialog("{{cancel}}");
					}
				});
			}
			if(dp != null) {
				this.set_includeInLayout(false);
				this._overlay.set_includeInLayout(false);
				this._overlay.screenTop = dp.get_screenTop();
				this._overlay.screenLeft = dp.get_screenLeft();
				this._overlay.set_height(dp.get_height());
				this._overlay.set_width(dp.get_width());
				dp.addComponent(this._overlay);
			} else {
				haxe_ui_core_Screen.get_instance().addComponent(this._overlay);
			}
		}
		this.createButtons();
		if(dp != null) {
			dp.addComponent(this);
		} else {
			haxe_ui_core_Screen.get_instance().addComponent(this);
		}
		this.syncComponentValidation();
		if(this.get_autoHeight() == false) {
			this.dialogContainer.set_percentHeight(100);
			this.dialogContent.set_percentHeight(100);
		}
		if(this.centerDialog) {
			this.centerDialogComponent(js_Boot.__cast(this , haxe_ui_containers_dialogs_Dialog));
		}
		haxe_ui_Toolkit.callLater(function() {
			if(_gthis.centerDialog) {
				_gthis.centerDialogComponent(js_Boot.__cast(_gthis , haxe_ui_containers_dialogs_Dialog));
			}
			haxe_ui_Toolkit.callLater(function() {
				_gthis.handleVisibility(true);
				_gthis.centerDialogComponent(js_Boot.__cast(_gthis , haxe_ui_containers_dialogs_Dialog));
				_gthis._forcedLeft = null;
				_gthis._forcedTop = null;
				if(_gthis.autoCenterDialog) {
					haxe_ui_core_Screen.get_instance().registerEvent("resize",$bind(_gthis,_gthis._onScreenResized));
				}
			});
		});
	}
	,_onScreenResized: function(_) {
		this._forcedLeft = null;
		this._forcedTop = null;
		this.centerDialogComponent(this);
	}
	,_buttonsCreated: null
	,createButtons: function() {
		if(this._buttonsCreated == true) {
			return;
		}
		if(this.buttons != null) {
			var _g = 0;
			var _g1 = haxe_ui_containers_dialogs_DialogButton.toArray(this.buttons);
			while(_g < _g1.length) {
				var button = _g1[_g];
				++_g;
				var buttonComponent = new haxe_ui_components_Button();
				buttonComponent.set_id(haxe_ui_containers_dialogs_DialogButton.toString(button).toLowerCase());
				var text = haxe_ui_containers_dialogs_DialogButton.toString(button);
				buttonComponent.set_text(text);
				buttonComponent.userData = button;
				buttonComponent.registerEvent("click",$bind(this,this.onFooterButtonClick));
				if(this.defaultButton != null && buttonComponent.get_text() == this.defaultButton) {
					buttonComponent.addClass("emphasized");
				}
				this.addFooterComponent(buttonComponent);
			}
			this._buttonsCreated = true;
		}
	}
	,get_closable: function() {
		return !this.dialogCloseButton.get_hidden();
	}
	,set_closable: function(value) {
		if(value == true) {
			this.dialogCloseButton.show();
		} else {
			this.dialogCloseButton.hide();
		}
		return value;
	}
	,validateDialog: function(button,fn) {
		fn(true);
	}
	,hide: function() {
		var _gthis = this;
		this.validateDialog(this.button,function(result) {
			if(result == true) {
				var dp = _gthis.get_dialogParent();
				var event = new haxe_ui_containers_dialogs_DialogEvent("dialogClosed");
				event.button = _gthis.button;
				_gthis.dispatch(event);
				if(event.canceled == true) {
					return;
				}
				if(_gthis.modal && _gthis._overlay != null) {
					if(dp != null) {
						dp.removeComponent(_gthis._overlay,_gthis.destroyOnClose);
					} else {
						haxe_ui_core_Screen.get_instance().removeComponent(_gthis._overlay,_gthis.destroyOnClose);
					}
				}
				if(dp != null) {
					dp.removeComponent(_gthis,_gthis.destroyOnClose);
				} else {
					haxe_ui_core_Screen.get_instance().removeComponent(_gthis,_gthis.destroyOnClose);
				}
			}
		});
	}
	,hideDialog: function(button) {
		this.button = button;
		this.hide();
	}
	,get_title: function() {
		return this.dialogTitleLabel.get_text();
	}
	,set_title: function(value) {
		this.dialogTitleLabel.set_text(value);
		return value;
	}
	,addComponent: function(child) {
		if(child == this.dialogContainer) {
			return haxe_ui_containers_Box.prototype.addComponent.call(this,child);
		}
		return this.dialogContent.addComponent(child);
	}
	,validateComponentLayout: function() {
		var b = haxe_ui_containers_Box.prototype.validateComponentLayout.call(this);
		this.dialogTitle.set_width(this.get_layout().get_innerWidth());
		if(this._autoSizeDialog == false) {
			var offset = this.get_layout().get_paddingLeft() + this.get_layout().get_paddingRight();
			if(this.dialogContent.get_width() != this.get_width() - offset) {
				this.dialogContent.set_width(this.get_width() - offset);
			}
			if(this.dialogFooterContainer.get_width() != this.get_width() - offset) {
				this.dialogFooterContainer.set_width(this.get_width() - offset);
			}
		}
		return b;
	}
	,onDestroy: function() {
		haxe_ui_containers_Box.prototype.onDestroy.call(this);
		if(this._overlay != null) {
			haxe_ui_core_Screen.get_instance().removeComponent(this._overlay);
			this._overlay = null;
		}
		haxe_ui_core_Screen.get_instance().unregisterEvent("resize",$bind(this,this._onScreenResized));
	}
	,onContentResize: function(e) {
		if(this.dialogFooter.get_width() <= 0 || this.dialogFooterContainer.get_width() <= 0 || this._autoSizeDialog == false) {
			return;
		}
		var cx = Math.max(this.dialogFooter.get_width(),this.dialogContent.get_width());
		var offset = this.get_layout().get_paddingLeft() + this.get_layout().get_paddingRight();
		var recenter = false;
		if(cx > 0 && cx != this.get_width() + offset) {
			this.set_width(cx + offset);
			recenter = true;
		}
		if(this.dialogFooterContainer.get_width() != this.get_width() - offset) {
			this.dialogFooterContainer.set_width(this.get_width() - offset);
		}
		if(recenter == true && this.autoCenterDialog == true) {
			this.centerDialogComponent(js_Boot.__cast(this , haxe_ui_containers_dialogs_Dialog),false);
		}
	}
	,onFooterResize: function(e) {
		if(this.dialogFooter.get_width() <= 0 || this.dialogFooterContainer.get_width() <= 0 || this._autoSizeDialog == false) {
			return;
		}
		var cx = Math.max(this.dialogFooter.get_width(),this.dialogContent.get_width());
		var offset = this.get_layout().get_paddingLeft() + this.get_layout().get_paddingRight();
		var recenter = false;
		if(cx > 0 && cx != this.get_width() + offset) {
			this.set_width(cx + offset);
			recenter = true;
		}
		if(this.dialogFooterContainer.get_width() != this.get_width() - offset) {
			this.dialogFooterContainer.set_width(this.get_width() - offset);
		}
		if(recenter == true && this.autoCenterDialog == true) {
			this.centerDialogComponent(js_Boot.__cast(this , haxe_ui_containers_dialogs_Dialog),false);
		}
	}
	,addFooterComponent: function(c) {
		this.dialogFooterContainer.show();
		this.dialogFooter.addComponent(c);
	}
	,centerDialogComponent: function(dialog,validate) {
		if(validate == null) {
			validate = true;
		}
		if(this._isDisposed) {
			return;
		}
		if(validate == true) {
			dialog.syncComponentValidation();
		}
		var dp = this.get_dialogParent();
		if(dp != null) {
			if(validate == true) {
				dp.syncComponentValidation();
			}
			var x = dp.get_actualComponentWidth() / 2 - dialog.get_actualComponentWidth() / 2;
			if(this._forcedLeft != null && this._forcedLeft > 0) {
				x = this._forcedLeft;
			}
			var y = dp.get_actualComponentHeight() / 2 - dialog.get_actualComponentHeight() / 2;
			if(this._forcedTop != null && this._forcedTop > 0) {
				y = this._forcedTop;
			}
			dialog.moveComponent(x,y);
		} else {
			var x = haxe_ui_core_Screen.get_instance().get_actualWidth() / 2 - dialog.get_actualComponentWidth() / 2;
			if(this._forcedLeft != null && this._forcedLeft > 0) {
				x = this._forcedLeft;
			}
			var y = haxe_ui_core_Screen.get_instance().get_actualHeight() / 2 - dialog.get_actualComponentHeight() / 2;
			if(this._forcedTop != null && this._forcedTop > 0) {
				y = this._forcedTop;
			}
			dialog.moveComponent(x,y);
		}
	}
	,onFooterButtonClick: function(event) {
		this.hideDialog(event.target.userData);
	}
	,registerBehaviours: function() {
		haxe_ui_containers_Box.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_Box.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_backend_DialogBase();
	}
	,__class__: haxe_ui_backend_DialogBase
	,__properties__: $extend(haxe_ui_containers_Box.prototype.__properties__,{set_title:"set_title",get_title:"get_title",set_closable:"set_closable",get_closable:"get_closable",set_dialogParent:"set_dialogParent",get_dialogParent:"get_dialogParent"})
});
var haxe_ui_backend_EventBase = function() { };
$hxClasses["haxe.ui.backend.EventBase"] = haxe_ui_backend_EventBase;
haxe_ui_backend_EventBase.__name__ = "haxe.ui.backend.EventBase";
haxe_ui_backend_EventBase.prototype = {
	cancel: function() {
	}
	,postClone: function(event) {
	}
	,__class__: haxe_ui_backend_EventBase
};
var haxe_ui_backend_EventImpl = function() { };
$hxClasses["haxe.ui.backend.EventImpl"] = haxe_ui_backend_EventImpl;
haxe_ui_backend_EventImpl.__name__ = "haxe.ui.backend.EventImpl";
haxe_ui_backend_EventImpl.__super__ = haxe_ui_backend_EventBase;
haxe_ui_backend_EventImpl.prototype = $extend(haxe_ui_backend_EventBase.prototype,{
	_originalEvent: null
	,cancel: function() {
		if(this._originalEvent != null) {
			this._originalEvent.preventDefault();
			this._originalEvent.stopImmediatePropagation();
			this._originalEvent.stopPropagation();
		}
	}
	,postClone: function(event) {
		event._originalEvent = this._originalEvent;
	}
	,__class__: haxe_ui_backend_EventImpl
});
var haxe_ui_backend_FocusManagerBase = function() {
};
$hxClasses["haxe.ui.backend.FocusManagerBase"] = haxe_ui_backend_FocusManagerBase;
haxe_ui_backend_FocusManagerBase.__name__ = "haxe.ui.backend.FocusManagerBase";
haxe_ui_backend_FocusManagerBase.prototype = {
	applyFocus: function(c) {
	}
	,unapplyFocus: function(c) {
	}
	,__class__: haxe_ui_backend_FocusManagerBase
};
var haxe_ui_backend_FocusManagerImpl = function() {
	haxe_ui_backend_FocusManagerBase.call(this);
};
$hxClasses["haxe.ui.backend.FocusManagerImpl"] = haxe_ui_backend_FocusManagerImpl;
haxe_ui_backend_FocusManagerImpl.__name__ = "haxe.ui.backend.FocusManagerImpl";
haxe_ui_backend_FocusManagerImpl.__super__ = haxe_ui_backend_FocusManagerBase;
haxe_ui_backend_FocusManagerImpl.prototype = $extend(haxe_ui_backend_FocusManagerBase.prototype,{
	applyFocus: function(c) {
		haxe_ui_backend_FocusManagerBase.prototype.applyFocus.call(this,c);
	}
	,unapplyFocus: function(c) {
		haxe_ui_backend_FocusManagerBase.prototype.applyFocus.call(this,c);
	}
	,__class__: haxe_ui_backend_FocusManagerImpl
});
var haxe_ui_backend_ImageSurface = function() {
};
$hxClasses["haxe.ui.backend.ImageSurface"] = haxe_ui_backend_ImageSurface;
haxe_ui_backend_ImageSurface.__name__ = "haxe.ui.backend.ImageSurface";
haxe_ui_backend_ImageSurface.prototype = {
	__class__: haxe_ui_backend_ImageSurface
};
var haxe_ui_backend_ImageBase = function() {
	this._imageHeight = 0;
	this._imageWidth = 0;
	this._top = 0;
	this._left = 0;
	this.aspectRatio = 1;
	haxe_ui_backend_ImageSurface.call(this);
};
$hxClasses["haxe.ui.backend.ImageBase"] = haxe_ui_backend_ImageBase;
haxe_ui_backend_ImageBase.__name__ = "haxe.ui.backend.ImageBase";
haxe_ui_backend_ImageBase.__super__ = haxe_ui_backend_ImageSurface;
haxe_ui_backend_ImageBase.prototype = $extend(haxe_ui_backend_ImageSurface.prototype,{
	parentComponent: null
	,aspectRatio: null
	,_left: null
	,_top: null
	,_imageWidth: null
	,_imageHeight: null
	,_imageInfo: null
	,_imageClipRect: null
	,dispose: function() {
		if(this.parentComponent != null) {
			this.parentComponent = null;
		}
	}
	,validateData: function() {
	}
	,validatePosition: function() {
	}
	,validateDisplay: function() {
	}
	,__class__: haxe_ui_backend_ImageBase
});
var haxe_ui_backend_ImageDisplayImpl = function() {
	haxe_ui_backend_ImageBase.call(this);
	this.element = window.document.createElement("img");
	this.element.style.position = "absolute";
	this.element.style.borderRadius = "inherit";
	this.element.style.setProperty("pointer-events","none");
};
$hxClasses["haxe.ui.backend.ImageDisplayImpl"] = haxe_ui_backend_ImageDisplayImpl;
haxe_ui_backend_ImageDisplayImpl.__name__ = "haxe.ui.backend.ImageDisplayImpl";
haxe_ui_backend_ImageDisplayImpl.__super__ = haxe_ui_backend_ImageBase;
haxe_ui_backend_ImageDisplayImpl.prototype = $extend(haxe_ui_backend_ImageBase.prototype,{
	element: null
	,dispose: function() {
		if(this.element != null) {
			haxe_ui_backend_html5_HtmlUtils.removeElement(this.element);
		}
	}
	,validateData: function() {
		if(this.element.src != this._imageInfo.data.src) {
			this.element.src = this._imageInfo.data.src;
			this.applyStyle();
		}
	}
	,validatePosition: function() {
		var style = this.element.style;
		style.left = "" + this._left + "px";
		style.top = "" + this._top + "px";
	}
	,validateDisplay: function() {
		var style = this.element.style;
		style.width = "" + this._imageWidth + "px";
		style.height = "" + this._imageHeight + "px";
		if(this._imageClipRect != null) {
			var clipValue = "rect(" + ("" + (-this._top + this._imageClipRect.top) + "px") + "," + ("" + (-this._left + this._imageClipRect.left + this._imageClipRect.width) + "px") + "," + ("" + (-this._top + this._imageClipRect.top + this._imageClipRect.height) + "px") + "," + ("" + (-this._left + this._imageClipRect.left) + "px") + ")";
			if(this.element.style.clip != clipValue) {
				this.element.style.clip = clipValue;
			}
		} else if(this.element.style.clip != null) {
			this.element.style.removeProperty("clip");
		}
	}
	,applyStyle: function() {
		if(this.parentComponent != null && this.parentComponent.get_style() != null) {
			if(this.parentComponent.get_style().imageRendering == "pixelated") {
				this.element.style.setProperty("image-rendering","pixelated");
				this.element.style.setProperty("image-rendering","-moz-crisp-edges");
				this.element.style.setProperty("image-rendering","crisp-edges");
			} else if(this.element.style.getPropertyValue("image-rendering") != null) {
				this.element.style.removeProperty("image-rendering");
			}
		}
	}
	,__class__: haxe_ui_backend_ImageDisplayImpl
});
var haxe_ui_containers_dialogs_Dialog = function() {
	var _gthis = this;
	haxe_ui_backend_DialogBase.call(this);
	haxe_ui_actions_ActionManager.get_instance().registerEvent("actionstart",function(event) {
		if(event.action == "actionCancel" || event.action == "actionBack") {
			_gthis.hideDialog("{{cancel}}");
		}
	});
};
$hxClasses["haxe.ui.containers.dialogs.Dialog"] = haxe_ui_containers_dialogs_Dialog;
haxe_ui_containers_dialogs_Dialog.__name__ = "haxe.ui.containers.dialogs.Dialog";
haxe_ui_containers_dialogs_Dialog.__super__ = haxe_ui_backend_DialogBase;
haxe_ui_containers_dialogs_Dialog.prototype = $extend(haxe_ui_backend_DialogBase.prototype,{
	__onDialogClosed: null
	,onDialogClosed: null
	,set_onDialogClosed: function(value) {
		if(this.__onDialogClosed != null) {
			this.unregisterEvent("dialogClosed",this.__onDialogClosed);
			this.__onDialogClosed = null;
		}
		this.registerEvent("dialogClosed",value);
		this.__onDialogClosed = value;
		return value;
	}
	,registerBehaviours: function() {
		haxe_ui_backend_DialogBase.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_backend_DialogBase.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_dialogs_Dialog();
	}
	,__class__: haxe_ui_containers_dialogs_Dialog
	,__properties__: $extend(haxe_ui_backend_DialogBase.prototype.__properties__,{set_onDialogClosed:"set_onDialogClosed"})
});
var haxe_ui_backend_MessageBoxBase = function() {
	this._type = null;
	haxe_ui_containers_dialogs_Dialog.call(this);
	var hbox = new haxe_ui_containers_HBox();
	hbox.set_percentWidth(100);
	hbox.set_styleString("spacing:10px;");
	this.addComponent(hbox);
	this.iconImage = new haxe_ui_components_Image();
	this.iconImage.set_id("iconImage");
	hbox.addComponent(this.iconImage);
	this.messageLabel = new haxe_ui_components_Label();
	this.messageLabel.set_id("messageLabel");
	this.messageLabel.set_percentWidth(100);
	hbox.addComponent(this.messageLabel);
};
$hxClasses["haxe.ui.backend.MessageBoxBase"] = haxe_ui_backend_MessageBoxBase;
haxe_ui_backend_MessageBoxBase.__name__ = "haxe.ui.backend.MessageBoxBase";
haxe_ui_backend_MessageBoxBase.__super__ = haxe_ui_containers_dialogs_Dialog;
haxe_ui_backend_MessageBoxBase.prototype = $extend(haxe_ui_containers_dialogs_Dialog.prototype,{
	iconImage: null
	,messageLabel: null
	,get_message: function() {
		return this.messageLabel.get_text();
	}
	,set_message: function(value) {
		this.messageLabel.set_text(value);
		return value;
	}
	,get_text: function() {
		return this.get_message();
	}
	,set_text: function(value) {
		this.set_message(value);
		return value;
	}
	,get_icon: function() {
		return this.iconImage.get_resource();
	}
	,set_icon: function(value) {
		this.iconImage.set_resource(value);
		return value;
	}
	,_type: null
	,get_type: function() {
		return this._type;
	}
	,set_type: function(value) {
		this._type = haxe_ui_containers_dialogs_MessageBoxType.toString(value);
		this.iconImage.addClass(this._type);
		this.addClass(this._type);
		return value;
	}
	,registerBehaviours: function() {
		haxe_ui_containers_dialogs_Dialog.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_dialogs_Dialog.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_backend_MessageBoxBase();
	}
	,__class__: haxe_ui_backend_MessageBoxBase
	,__properties__: $extend(haxe_ui_containers_dialogs_Dialog.prototype.__properties__,{set_type:"set_type",get_type:"get_type",set_message:"set_message",get_message:"get_message"})
});
var haxe_ui_backend_PlatformBase = function() {
	this._isMobile = null;
};
$hxClasses["haxe.ui.backend.PlatformBase"] = haxe_ui_backend_PlatformBase;
haxe_ui_backend_PlatformBase.__name__ = "haxe.ui.backend.PlatformBase";
haxe_ui_backend_PlatformBase.prototype = {
	isWindows: null
	,get_isWindows: function() {
		return window.navigator.userAgent.toLowerCase().indexOf("windows") != -1;
	}
	,isLinux: null
	,get_isLinux: function() {
		return window.navigator.userAgent.toLowerCase().indexOf("linux") != -1;
	}
	,isMac: null
	,get_isMac: function() {
		return window.navigator.userAgent.toLowerCase().indexOf("mac") != -1;
	}
	,_isMobile: null
	,isMobile: null
	,get_isMobile: function() {
		if(this._isMobile != null) {
			return this._isMobile;
		}
		this._isMobile = false;
		var ua = $global.navigator.userAgent;
		this._isMobile = haxe_ui_backend_PlatformBase.MOBILE_REGEXP.match(ua);
		return this._isMobile;
	}
	,getMetric: function(id) {
		return 0;
	}
	,getColor: function(id) {
		return null;
	}
	,getSystemLocale: function() {
		return null;
	}
	,perf: function() {
		return HxOverrides.now() / 1000 * 1000;
	}
	,KeyTab: null
	,get_KeyTab: function() {
		return this.getKeyCode("tab");
	}
	,KeyUp: null
	,get_KeyUp: function() {
		return this.getKeyCode("up");
	}
	,KeyDown: null
	,get_KeyDown: function() {
		return this.getKeyCode("down");
	}
	,KeyLeft: null
	,get_KeyLeft: function() {
		return this.getKeyCode("left");
	}
	,KeyRight: null
	,get_KeyRight: function() {
		return this.getKeyCode("right");
	}
	,KeySpace: null
	,get_KeySpace: function() {
		return this.getKeyCode("space");
	}
	,KeyEnter: null
	,get_KeyEnter: function() {
		return this.getKeyCode("enter");
	}
	,KeyEscape: null
	,get_KeyEscape: function() {
		return this.getKeyCode("escape");
	}
	,getKeyCode: function(keyId) {
		switch(keyId) {
		case "down":
			return 40;
		case "enter":
			return 13;
		case "escape":
			return 27;
		case "left":
			return 37;
		case "right":
			return 39;
		case "space":
			return 32;
		case "tab":
			return 9;
		case "up":
			return 38;
		default:
			return HxOverrides.cca(keyId,0);
		}
	}
	,__class__: haxe_ui_backend_PlatformBase
	,__properties__: {get_KeyEscape:"get_KeyEscape",get_KeyEnter:"get_KeyEnter",get_KeySpace:"get_KeySpace",get_KeyRight:"get_KeyRight",get_KeyLeft:"get_KeyLeft",get_KeyDown:"get_KeyDown",get_KeyUp:"get_KeyUp",get_KeyTab:"get_KeyTab",get_isMobile:"get_isMobile",get_isMac:"get_isMac",get_isLinux:"get_isLinux",get_isWindows:"get_isWindows"}
};
var haxe_ui_backend_PlatformImpl = function() {
	haxe_ui_backend_PlatformBase.call(this);
};
$hxClasses["haxe.ui.backend.PlatformImpl"] = haxe_ui_backend_PlatformImpl;
haxe_ui_backend_PlatformImpl.__name__ = "haxe.ui.backend.PlatformImpl";
haxe_ui_backend_PlatformImpl.calcScrollSize = function() {
	if(haxe_ui_backend_PlatformImpl._vscrollWidth >= 0 && haxe_ui_backend_PlatformImpl._hscrollHeight >= 0) {
		return;
	}
	var div = window.document.createElement("div");
	div.style.position = "absolute";
	div.style.top = "-99999px";
	div.style.left = "-99999px";
	div.style.height = "100px";
	div.style.width = "100px";
	div.style.overflow = "scroll";
	window.document.body.appendChild(div);
	haxe_ui_backend_PlatformImpl._vscrollWidth = div.offsetWidth - div.clientWidth;
	haxe_ui_backend_PlatformImpl._hscrollHeight = div.offsetHeight - div.clientHeight;
	haxe_ui_backend_html5_HtmlUtils.removeElement(div);
};
haxe_ui_backend_PlatformImpl.__super__ = haxe_ui_backend_PlatformBase;
haxe_ui_backend_PlatformImpl.prototype = $extend(haxe_ui_backend_PlatformBase.prototype,{
	getMetric: function(id) {
		switch(id) {
		case "patform.metrics.hscroll.height":
			haxe_ui_backend_PlatformImpl.calcScrollSize();
			return haxe_ui_backend_PlatformImpl._hscrollHeight;
		case "patform.metrics.vscroll.width":
			haxe_ui_backend_PlatformImpl.calcScrollSize();
			return haxe_ui_backend_PlatformImpl._vscrollWidth;
		}
		return haxe_ui_backend_PlatformBase.prototype.getMetric.call(this,id);
	}
	,getSystemLocale: function() {
		return $global.navigator.language;
	}
	,perf: function() {
		return window.performance.now();
	}
	,__class__: haxe_ui_backend_PlatformImpl
});
var haxe_ui_backend_ScreenBase = function() {
	this.rootComponents = [];
};
$hxClasses["haxe.ui.backend.ScreenBase"] = haxe_ui_backend_ScreenBase;
haxe_ui_backend_ScreenBase.__name__ = "haxe.ui.backend.ScreenBase";
haxe_ui_backend_ScreenBase.prototype = {
	rootComponents: null
	,_options: null
	,get_options: function() {
		return this._options;
	}
	,set_options: function(value) {
		this._options = value;
		return value;
	}
	,dpi: null
	,get_dpi: function() {
		return 72;
	}
	,get_title: function() {
		return null;
	}
	,set_title: function(s) {
		return s;
	}
	,width: null
	,get_width: function() {
		return 0;
	}
	,height: null
	,get_height: function() {
		return 0;
	}
	,actualWidth: null
	,get_actualWidth: function() {
		return this.get_width() * haxe_ui_Toolkit.get_scaleX();
	}
	,actualHeight: null
	,get_actualHeight: function() {
		return this.get_height() * haxe_ui_Toolkit.get_scaleY();
	}
	,isRetina: null
	,get_isRetina: function() {
		return false;
	}
	,topComponent: null
	,get_topComponent: function() {
		if(this.rootComponents.length == 0) {
			return null;
		}
		var n = this.rootComponents.length - 1;
		var c = null;
		while(n >= 0) {
			c = this.rootComponents[n];
			if(c.get_style() == null) {
				break;
			}
			if(c.get_style().pointerEvents != "none") {
				break;
			}
			--n;
		}
		return c;
	}
	,addComponent: function(component) {
		return component;
	}
	,removeComponent: function(component,dispose) {
		if(dispose == null) {
			dispose = true;
		}
		return component;
	}
	,handleSetComponentIndex: function(child,index) {
	}
	,resizeComponent: function(c) {
		var cx = null;
		var cy = null;
		if(c.get_percentWidth() > 0) {
			cx = this.get_width() * c.get_percentWidth() / 100;
		}
		if(c.get_percentHeight() > 0) {
			cy = this.get_height() * c.get_percentHeight() / 100;
		}
		c.resizeComponent(cx,cy);
	}
	,refreshStyleRootComponents: function() {
		var _g = 0;
		var _g1 = this.rootComponents;
		while(_g < _g1.length) {
			var component = _g1[_g];
			++_g;
			this._refreshStyleComponent(component);
		}
	}
	,resizeRootComponents: function() {
		var _g = 0;
		var _g1 = this.rootComponents;
		while(_g < _g1.length) {
			var component = _g1[_g];
			++_g;
			this.resizeComponent(component);
		}
	}
	,_refreshStyleComponent: function(component) {
		var _g = 0;
		var _g1 = component._children == null ? [] : component._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			child.invalidateComponent("style",false);
			child.invalidateComponent("display",false);
			this._refreshStyleComponent(child);
		}
	}
	,_onRootComponentResize: function(e) {
		this._refreshStyleComponent(e.target);
	}
	,invalidateAll: function(flag) {
		if(flag == null) {
			flag = "all";
		}
		var _g = 0;
		var _g1 = this.rootComponents;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			this.invalidateChildren(c,flag);
		}
	}
	,invalidateChildren: function(c,flag) {
		if(flag == null) {
			flag = "all";
		}
		var _g = 0;
		var _g1 = c._children == null ? [] : c._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			this.invalidateChildren(child,flag);
		}
		c.invalidateComponent(flag);
	}
	,supportsEvent: function(type) {
		return false;
	}
	,mapEvent: function(type,listener) {
	}
	,unmapEvent: function(type,listener) {
	}
	,__class__: haxe_ui_backend_ScreenBase
	,__properties__: {get_topComponent:"get_topComponent",get_isRetina:"get_isRetina",get_actualHeight:"get_actualHeight",get_actualWidth:"get_actualWidth",get_height:"get_height",get_width:"get_width",set_title:"set_title",get_title:"get_title",get_dpi:"get_dpi",set_options:"set_options",get_options:"get_options"}
};
var haxe_ui_backend_ScreenImpl = function() {
	this._contextMenuDisabledCount = 0;
	this._hasListener = false;
	this._containerParent = null;
	this._pageRoot = null;
	this._container = null;
	this._percentContainerHeightAdded = false;
	this._percentContainerWidthAdded = false;
	this._height = null;
	this._width = null;
	haxe_ui_backend_ScreenBase.call(this);
	this._mapping = new haxe_ds_StringMap();
};
$hxClasses["haxe.ui.backend.ScreenImpl"] = haxe_ui_backend_ScreenImpl;
haxe_ui_backend_ScreenImpl.__name__ = "haxe.ui.backend.ScreenImpl";
haxe_ui_backend_ScreenImpl.__super__ = haxe_ui_backend_ScreenBase;
haxe_ui_backend_ScreenImpl.prototype = $extend(haxe_ui_backend_ScreenBase.prototype,{
	_mapping: null
	,set_options: function(value) {
		haxe_ui_backend_ScreenBase.prototype.set_options.call(this,value);
		var cx = haxe_ui_Toolkit.get_backendProperties().getProp("haxe.ui.html5.container.width",null);
		var cy = haxe_ui_Toolkit.get_backendProperties().getProp("haxe.ui.html5.container.height",null);
		var c = this.get_container();
		if(cx != null) {
			c.style.width = cx;
		}
		if(cy != null) {
			c.style.height = cy;
		}
		return value;
	}
	,get_dpi: function() {
		return haxe_ui_backend_html5_HtmlUtils.get_dpi();
	}
	,get_title: function() {
		return window.document.title;
	}
	,set_title: function(s) {
		window.document.title = s;
		return s;
	}
	,_width: null
	,get_width: function() {
		if(this._width != null && this._width > 0) {
			return this._width;
		}
		var cx = this.get_container().offsetWidth;
		if(cx <= 0) {
			var _g = 0;
			var _g1 = this.rootComponents;
			while(_g < _g1.length) {
				var c = _g1[_g];
				++_g;
				if(c.get_width() > cx) {
					cx = c.get_width();
				}
			}
		}
		this._width = cx / haxe_ui_Toolkit.get_scaleX();
		return this._width;
	}
	,_height: null
	,get_height: function() {
		if(this._height != null && this._height > 0) {
			return this._height;
		}
		var cy = this.get_container().offsetHeight;
		if(cy <= 0) {
			var _g = 0;
			var _g1 = this.rootComponents;
			while(_g < _g1.length) {
				var c = _g1[_g];
				++_g;
				if(c.get_height() > cy) {
					cy = c.get_height();
				}
			}
		}
		this._height = cy / haxe_ui_Toolkit.get_scaleY();
		return this._height;
	}
	,get_isRetina: function() {
		return haxe_ui_backend_html5_HtmlUtils.isRetinaDisplay();
	}
	,addComponent: function(component) {
		this.get_container().appendChild(component.element);
		component.ready();
		if(haxe_ui_Toolkit.get_scaleX() != 1 || haxe_ui_Toolkit.get_scaleY() != 1) {
			var transformString = "";
			if(haxe_ui_Toolkit.get_scaleX() != 1) {
				transformString += "scaleX(" + haxe_ui_Toolkit.get_scaleX() + ") ";
			}
			if(haxe_ui_Toolkit.get_scaleY() != 1) {
				transformString += "scaleY(" + haxe_ui_Toolkit.get_scaleY() + ") ";
			}
			component.element.style.transform = transformString;
			component.element.style.transformOrigin = "top left";
		}
		if(component.get_percentWidth() != null) {
			this.addPercentContainerWidth();
		}
		if(component.get_percentHeight() != null) {
			this.addPercentContainerHeight();
		}
		this.addResizeListener();
		this.resizeComponent(component);
		return component;
	}
	,_percentContainerWidthAdded: null
	,addPercentContainerWidth: function() {
		if(this._percentContainerWidthAdded == true) {
			return;
		}
		this._percentContainerWidthAdded = true;
		var sheet = haxe_ui_backend_html5_util_StyleSheetHelper.getValidStyleSheet();
		var w = this.get_containerParent().getAttribute("width");
		if(w == null) {
			w = "";
		}
		w = StringTools.trim(w);
		if(!StringTools.endsWith(w,"%") && !StringTools.endsWith(w,"px")) {
			sheet.insertRule("#haxeui-container-parent {\r\n                margin: 0;\r\n                width: 100%;\r\n            }",sheet.cssRules.length);
		}
		sheet.insertRule("#haxeui-container {\r\n            margin: 0;\r\n            width: 100%;\r\n        }",sheet.cssRules.length);
	}
	,_percentContainerHeightAdded: null
	,addPercentContainerHeight: function() {
		if(this._percentContainerHeightAdded == true) {
			return;
		}
		this._percentContainerHeightAdded = true;
		var sheet = haxe_ui_backend_html5_util_StyleSheetHelper.getValidStyleSheet();
		var h = this.get_containerParent().getAttribute("height");
		if(h == null) {
			h = "";
		}
		h = StringTools.trim(h);
		if(!StringTools.endsWith(h,"%") && !StringTools.endsWith(h,"px")) {
			sheet.insertRule("#haxeui-container-parent {\r\n                margin: 0;\r\n                height: 100%;\r\n            }",sheet.cssRules.length);
		}
		sheet.insertRule("#haxeui-container {\r\n            margin: 0;\r\n            height: 100%;\r\n        }",sheet.cssRules.length);
	}
	,removeComponent: function(component,dispose) {
		if(dispose == null) {
			dispose = true;
		}
		HxOverrides.remove(this.rootComponents,component);
		if(this.get_container().contains(component.element) == true) {
			this.get_container().removeChild(component.element);
		}
		return component;
	}
	,handleSetComponentIndex: function(child,index) {
		if(index == (js_Boot.__cast(this , haxe_ui_core_Screen)).rootComponents.length - 1) {
			this.get_container().appendChild(child.element);
		} else {
			haxe_ui_backend_html5_HtmlUtils.insertBefore((js_Boot.__cast(this , haxe_ui_core_Screen)).rootComponents[index + 1].element,child.element);
		}
	}
	,_container: null
	,container: null
	,get_container: function() {
		if(this._container != null) {
			return this._container;
		}
		var c = null;
		if(this.get_options() == null || this.get_options().container == null) {
			c = window.document.body;
		} else {
			c = this.get_options().container;
		}
		if(c.style.overflow == null || c.style.overflow == "") {
			c.style.overflow = "hidden";
		}
		if(c.id != "haxeui-container") {
			c.id = "haxeui-container";
			if(this.get_options() != null && this.get_options().container != null) {
				c.style.position = "relative";
			}
			if(c.parentElement != null && c.parentElement.id != "haxeui-container-parent") {
				c.parentElement.id = "haxeui-container-parent";
			}
		}
		this._container = c;
		return c;
	}
	,_pageRoot: null
	,pageRoot: function(from) {
		if(this._pageRoot != null) {
			return this._pageRoot;
		}
		var r = null;
		var el = from;
		while(el != null) {
			if(el.classList.contains("haxeui-component") == false) {
				r = el;
				this._pageRoot = el;
				break;
			}
			el = el.parentElement;
		}
		return r;
	}
	,_containerParent: null
	,containerParent: null
	,get_containerParent: function() {
		if(this._containerParent != null) {
			return this._containerParent;
		}
		var c = this.get_container();
		if(c != null) {
			this._containerParent = c.parentElement;
		}
		return this._containerParent;
	}
	,_hasListener: null
	,addResizeListener: function() {
		var _gthis = this;
		if(this._hasListener == true) {
			return;
		}
		this._hasListener = true;
		window.addEventListener("load",$bind(this,this.onFullyLoaded));
		if(this.get_container() == window.document.body) {
			window.addEventListener("resize",function(e) {
				_gthis.containerResized();
			});
		} else {
			var observer = this.resizeObserver($bind(this,this.onElementResized));
			if(observer != null) {
				var tmp = this.get_container();
				observer.observe(tmp);
			}
		}
	}
	,onElementResized: function(entries) {
		this.containerResized();
	}
	,resizeObserver: function(cb) {
		var ro = null;
		try {
			ro = ResizeObserver;
		} catch( _g ) {
			haxe_NativeStackTrace.lastError = _g;
			return null;
		}
		if(ro == null) {
			return null;
		}
		return new ResizeObserver(cb);
	}
	,onFullyLoaded: function() {
		window.removeEventListener("load",$bind(this,this.onFullyLoaded));
		this.get_container().style.setProperty("touch-action","none");
		this.containerResized();
	}
	,containerResized: function() {
		this._width = null;
		this._height = null;
		this.resizeRootComponents();
		if(Object.prototype.hasOwnProperty.call(this._mapping.h,"resize")) {
			var event = new haxe_ui_events_UIEvent("resize");
			var fn = this._mapping.h["resize"];
			if(fn != null) {
				fn(event);
			}
		}
	}
	,supportsEvent: function(type) {
		if(type != "resize") {
			return haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM.h[type] != null;
		} else {
			return true;
		}
	}
	,mapEvent: function(type,listener) {
		var container = window.document.body;
		switch(type) {
		case "keydown":case "keyup":
			if(Object.prototype.hasOwnProperty.call(this._mapping.h,type) == false) {
				this._mapping.h[type] = listener;
				container.addEventListener(haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM.h[type],$bind(this,this.__onKeyEvent));
			}
			break;
		case "resize":
			if(Object.prototype.hasOwnProperty.call(this._mapping.h,type) == false) {
				this._mapping.h[type] = listener;
			}
			break;
		case "click":case "doubleclick":case "mousedown":case "mousemove":case "mouseout":case "mouseover":case "mouseup":case "rightclick":case "rightmousedown":case "rightmouseup":
			if(Object.prototype.hasOwnProperty.call(this._mapping.h,type) == false) {
				this._mapping.h[type] = listener;
				var passive = false;
				if(passive == null) {
					passive = true;
				}
				container.addEventListener(haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM.h[type],$bind(this,this.__onMouseEvent),{ passive : passive});
			}
			if(type == "rightmousedown" || type == "rightmouseup") {
				this.disableContextMenu(true);
			}
			break;
		}
	}
	,unmapEvent: function(type,listener) {
		var container = window.document.body;
		switch(type) {
		case "keydown":case "keyup":
			var _this = this._mapping;
			if(Object.prototype.hasOwnProperty.call(_this.h,type)) {
				delete(_this.h[type]);
			}
			container.removeEventListener(haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM.h[type],$bind(this,this.__onKeyEvent));
			break;
		case "resize":
			var _this = this._mapping;
			if(Object.prototype.hasOwnProperty.call(_this.h,type)) {
				delete(_this.h[type]);
			}
			break;
		case "click":case "doubleclick":case "mousedown":case "mousemove":case "mouseout":case "mouseover":case "mouseup":case "rightclick":case "rightmousedown":case "rightmouseup":
			var _this = this._mapping;
			if(Object.prototype.hasOwnProperty.call(_this.h,type)) {
				delete(_this.h[type]);
			}
			container.removeEventListener(haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM.h[type],$bind(this,this.__onMouseEvent));
			if(type == "rightmousedown" || type == "rightmouseup") {
				this.disableContextMenu(false);
			}
			break;
		}
	}
	,__onMouseEvent: function(event) {
		var which = -1;
		var sx = -1;
		var sy = -1;
		var buttonDown = false;
		var ctrlKey = false;
		var shiftKey = false;
		if(((event) instanceof PointerEvent)) {
			var pe = js_Boot.__cast(event , PointerEvent);
			which = pe.which;
			buttonDown = pe.buttons != 0;
			sx = (pe.pageX - haxe_ui_core_Screen.get_instance().get_container().offsetLeft) / haxe_ui_Toolkit.get_scaleX();
			sy = (pe.pageY - haxe_ui_core_Screen.get_instance().get_container().offsetTop) / haxe_ui_Toolkit.get_scaleY();
			ctrlKey = pe.ctrlKey;
			shiftKey = pe.shiftKey;
		} else if(((event) instanceof MouseEvent)) {
			var me = js_Boot.__cast(event , MouseEvent);
			which = me.which;
			buttonDown = me.buttons != 0;
			sx = (me.pageX - haxe_ui_core_Screen.get_instance().get_container().offsetLeft) / haxe_ui_Toolkit.get_scaleX();
			sy = (me.pageY - haxe_ui_core_Screen.get_instance().get_container().offsetTop) / haxe_ui_Toolkit.get_scaleY();
			ctrlKey = me.ctrlKey;
			shiftKey = me.shiftKey;
		}
		var r = true;
		var type = haxe_ui_backend_html5_EventMapper.DOM_TO_HAXEUI.h[event.type];
		if(type == "rightclick") {
			event.stopPropagation();
			event.preventDefault();
			r = false;
		}
		if(event.type == "pointerdown") {
			switch(which) {
			case 1:
				type = "mousedown";
				break;
			case 2:
				type = "mousedown";
				break;
			case 3:
				type = "rightmousedown";
				break;
			}
		} else if(event.type == "pointerup") {
			switch(which) {
			case 1:
				type = "mouseup";
				break;
			case 2:
				type = "mouseup";
				break;
			case 3:
				type = "rightmouseup";
				break;
			}
		}
		if(type != null) {
			var fn = this._mapping.h[type];
			if(fn != null) {
				var mouseEvent = new haxe_ui_events_MouseEvent(type);
				mouseEvent._originalEvent = event;
				mouseEvent.buttonDown = buttonDown;
				mouseEvent.screenX = sx;
				mouseEvent.screenY = sy;
				mouseEvent.ctrlKey = ctrlKey;
				mouseEvent.shiftKey = shiftKey;
				fn(mouseEvent);
			}
		}
		return r;
	}
	,__onKeyEvent: function(event) {
		var type = haxe_ui_backend_html5_EventMapper.DOM_TO_HAXEUI.h[event.type];
		if(type != null) {
			if(event.keyCode == 9 || event.which == 9) {
				event.preventDefault();
				event.stopImmediatePropagation();
				event.stopPropagation();
			}
			var fn = this._mapping.h[type];
			if(fn != null) {
				var keyboardEvent = new haxe_ui_events_KeyboardEvent(type);
				keyboardEvent._originalEvent = event;
				keyboardEvent.keyCode = event.keyCode;
				keyboardEvent.ctrlKey = event.ctrlKey;
				keyboardEvent.shiftKey = event.shiftKey;
				fn(keyboardEvent);
			}
		}
	}
	,_contextMenuDisabledCount: null
	,disableContextMenu: function(disable) {
		var container = window.document.body;
		if(disable == true) {
			this._contextMenuDisabledCount++;
		} else {
			this._contextMenuDisabledCount--;
			if(this._contextMenuDisabledCount < 0) {
				this._contextMenuDisabledCount = 0;
			}
		}
		if(this._contextMenuDisabledCount == 1) {
			container.addEventListener("contextmenu",$bind(this,this.__preventContextMenu));
		} else if(this._contextMenuDisabledCount == 0) {
			container.removeEventListener("contextmenu",$bind(this,this.__preventContextMenu));
		}
	}
	,__preventContextMenu: function(event) {
		event.preventDefault();
		return false;
	}
	,__class__: haxe_ui_backend_ScreenImpl
	,__properties__: $extend(haxe_ui_backend_ScreenBase.prototype.__properties__,{get_containerParent:"get_containerParent",get_container:"get_container"})
});
var haxe_ui_backend_TextBase = function() {
	this._textHeight = 0;
	this._textWidth = 0;
	this._height = 0;
	this._width = 0;
	this._top = 0;
	this._left = 0;
	this._htmlText = null;
	this._inputData = new haxe_ui_core_TextInputData();
	this._displayData = new haxe_ui_core_TextDisplayData();
};
$hxClasses["haxe.ui.backend.TextBase"] = haxe_ui_backend_TextBase;
haxe_ui_backend_TextBase.__name__ = "haxe.ui.backend.TextBase";
haxe_ui_backend_TextBase.prototype = {
	parentComponent: null
	,_displayData: null
	,_inputData: null
	,_text: null
	,_htmlText: null
	,_left: null
	,_top: null
	,_width: null
	,_height: null
	,_textWidth: null
	,_textHeight: null
	,_textStyle: null
	,_fontInfo: null
	,focus: function() {
	}
	,blur: function() {
	}
	,dispose: function() {
		if(this.parentComponent != null) {
			this.parentComponent = null;
		}
	}
	,_dataSource: null
	,get_dataSource: function() {
		return this._dataSource;
	}
	,set_dataSource: function(value) {
		this._dataSource = value;
		return value;
	}
	,supportsHtml: null
	,get_supportsHtml: function() {
		return false;
	}
	,get_caretIndex: function() {
		return 0;
	}
	,set_caretIndex: function(value) {
		return value;
	}
	,get_selectionStartIndex: function() {
		return 0;
	}
	,set_selectionStartIndex: function(value) {
		return value;
	}
	,get_selectionEndIndex: function() {
		return 0;
	}
	,set_selectionEndIndex: function(value) {
		return value;
	}
	,validateData: function() {
	}
	,validateStyle: function() {
		return false;
	}
	,validatePosition: function() {
	}
	,validateDisplay: function() {
	}
	,measureText: function() {
	}
	,measureTextWidth: function() {
		var textDisplay = new haxe_ui_core_TextDisplay();
		textDisplay._textStyle = this._textStyle;
		textDisplay._fontInfo = this._fontInfo;
		textDisplay.validateStyle();
		textDisplay._text = this._text;
		textDisplay.validateData();
		textDisplay.measureText();
		return textDisplay._textWidth;
	}
	,__class__: haxe_ui_backend_TextBase
	,__properties__: {set_selectionEndIndex:"set_selectionEndIndex",get_selectionEndIndex:"get_selectionEndIndex",set_selectionStartIndex:"set_selectionStartIndex",get_selectionStartIndex:"get_selectionStartIndex",set_caretIndex:"set_caretIndex",get_caretIndex:"get_caretIndex",get_supportsHtml:"get_supportsHtml",set_dataSource:"set_dataSource",get_dataSource:"get_dataSource"}
};
var haxe_ui_backend_TextDisplayImpl = function() {
	this._fixedHeight = false;
	this._fixedWidth = false;
	this._isHTML = false;
	haxe_ui_backend_TextBase.call(this);
	this._displayData.multiline = false;
	this.element = this.createElement();
};
$hxClasses["haxe.ui.backend.TextDisplayImpl"] = haxe_ui_backend_TextDisplayImpl;
haxe_ui_backend_TextDisplayImpl.__name__ = "haxe.ui.backend.TextDisplayImpl";
haxe_ui_backend_TextDisplayImpl.__super__ = haxe_ui_backend_TextBase;
haxe_ui_backend_TextDisplayImpl.prototype = $extend(haxe_ui_backend_TextBase.prototype,{
	element: null
	,_html: null
	,_isHTML: null
	,validateData: function() {
		var html = null;
		if(this._text != null) {
			html = this.normalizeText(this._text);
			this._isHTML = false;
		} else if(this._htmlText != null) {
			html = this.normalizeHtmlText(this._htmlText,false);
			this._isHTML = true;
		}
		if(html != null && this._html != html) {
			if(this._isHTML == false) {
				this.element.textContent = html;
			} else {
				this.element.innerHTML = html;
			}
			this._html = html;
			if(this.get_autoWidth() == true) {
				this._fixedWidth = false;
			}
			if(this.get_autoHeight() == true) {
				this._fixedHeight = false;
			}
		}
	}
	,_rawFontName: null
	,validateStyle: function() {
		var measureTextRequired = false;
		if(this._displayData.wordWrap == true && this.element.style.whiteSpace != null) {
			this.element.style.whiteSpace = "pre-wrap";
			this.element.style.wordBreak = "break-word";
			measureTextRequired = true;
		} else if(this._displayData.wordWrap == false && this.element.style.whiteSpace != "pre") {
			this.element.style.whiteSpace = "pre";
			measureTextRequired = true;
		}
		if(this._textStyle != null) {
			if(this.element.style.textAlign != this._textStyle.textAlign) {
				this.element.style.textAlign = this._textStyle.textAlign;
			}
			var fontSizeValue = "" + this._textStyle.fontSize + "px";
			if(this.element.style.fontSize != fontSizeValue) {
				this.element.style.fontSize = fontSizeValue;
				measureTextRequired = true;
			}
			if(this._textStyle.fontBold == true && this.element.style.fontWeight != "bold") {
				this.element.style.fontWeight = "bold";
				measureTextRequired = true;
			} else if((this._textStyle.fontBold == null || this._textStyle.fontBold == false) && this.element.style.fontWeight == "bold") {
				this.element.style.removeProperty("font-weight");
				measureTextRequired = true;
			}
			if(this._textStyle.fontItalic == true && this.element.style.fontStyle != "italic") {
				this.element.style.fontStyle = "italic";
				measureTextRequired = true;
			} else if((this._textStyle.fontItalic == null || this._textStyle.fontItalic == false) && this.element.style.fontStyle == "italic") {
				this.element.style.removeProperty("font-style");
				measureTextRequired = true;
			}
			if(this._textStyle.fontUnderline == true && this.element.style.textDecoration != "underline") {
				this.element.style.textDecoration = "underline";
				measureTextRequired = true;
			} else if((this._textStyle.fontUnderline == null || this._textStyle.fontUnderline == false) && this.element.style.textDecoration == "underline") {
				this.element.style.removeProperty("text-decoration");
				measureTextRequired = true;
			}
			if(this._textStyle.fontStrikeThrough == true && this.element.style.textDecoration != "line-through") {
				this.element.style.textDecoration = "line-through";
				measureTextRequired = true;
			} else if((this._textStyle.fontStrikeThrough == null || this._textStyle.fontStrikeThrough == false) && this.element.style.textDecoration == "line-through") {
				this.element.style.removeProperty("text-decoration");
				measureTextRequired = true;
			}
			var colorValue = haxe_ui_backend_html5_HtmlUtils.color(this._textStyle.color);
			if(this.element.style.color != colorValue) {
				this.element.style.color = colorValue;
			}
			if(this._fontInfo != null && this._fontInfo.data != this._rawFontName) {
				this.element.style.fontFamily = this._fontInfo.data;
				this._rawFontName = this._fontInfo.data;
				measureTextRequired = true;
				var _this = this.parentComponent;
				if(!(_this._layout == null || _this._layoutLocked == true)) {
					_this.invalidateComponent("layout",false);
				}
			}
		}
		if(measureTextRequired == true) {
			if(this.get_autoWidth() == true) {
				this._fixedWidth = false;
			}
			if(this.get_autoHeight() == true) {
				this._fixedHeight = false;
			}
		}
		return measureTextRequired;
	}
	,validatePosition: function() {
		var style = this.element.style;
		style.left = "" + this._left + "px";
		style.top = "" + this._top + "px";
	}
	,_fixedWidth: null
	,_fixedHeight: null
	,validateDisplay: function() {
		var style = this.element.style;
		var allowFixed = true;
		if(this.get_autoWidth() == false && style.width != "" + this._width + "px") {
			allowFixed = false;
		}
		if(this._width > 0 && this.get_autoWidth() == false) {
			this._fixedWidth = true;
			style.width = "" + this._width + "px";
		}
		if(this._height > 0 && this.get_autoHeight() == false) {
			this._fixedHeight = true;
			style.height = "" + this._height + "px";
		}
		if(allowFixed == false) {
			this._fixedHeight = false;
		}
	}
	,measureText: function() {
		if(this._fixedWidth == true && this._fixedHeight == true) {
			return;
		}
		var t = null;
		var isHtml = false;
		if(this._text != null) {
			t = this.normalizeText(this._text);
		} else if(this._htmlText != null) {
			t = this.normalizeHtmlText(this._htmlText,false);
			isHtml = true;
		}
		if(t == null || t.length == 0) {
			t = "|";
		}
		var w = null;
		if(this.get_autoWidth() == false) {
			w = this._width > 0 ? this._width : null;
		}
		var size = haxe_ui_backend_html5_text_TextMeasurer.get_instance().measureText({ text : t, width : w, fontFamily : this.element.style.fontFamily, fontSize : this.element.style.fontSize, fontBold : this.element.style.fontWeight == "bold", fontItalic : this.element.style.fontStyle == "italic", whiteSpace : this.element.style.whiteSpace, wordBreak : this.element.style.wordBreak, isHtml : isHtml});
		if(this._fixedWidth == false) {
			this._textWidth = size.width + 2;
		}
		if(this._fixedHeight == false) {
			this._textHeight = size.height + 2;
		}
	}
	,createElement: function() {
		var el = window.document.createElement("div");
		el.style.marginTop = "1px";
		el.style.marginLeft = "1px";
		el.style.position = "absolute";
		el.style.cursor = "inherit";
		return el;
	}
	,normalizeText: function(text) {
		text = StringTools.replace(text,"\\n","\n");
		return text;
	}
	,normalizeHtmlText: function(text,$escape) {
		if($escape == null) {
			$escape = true;
		}
		var html = text;
		if($escape == true) {
			html = haxe_ui_backend_html5_HtmlUtils.escape(text);
		}
		html = StringTools.replace(html,"\\n","\n");
		html = StringTools.replace(html,"\r\n","<br/>");
		html = StringTools.replace(html,"\r","<br/>");
		html = StringTools.replace(html,"\n","<br/>");
		return html;
	}
	,autoWidth: null
	,get_autoWidth: function() {
		if(((this.parentComponent) instanceof haxe_ui_components_Label)) {
			return (js_Boot.__cast(this.parentComponent , haxe_ui_components_Label)).get_autoWidth();
		}
		return false;
	}
	,autoHeight: null
	,get_autoHeight: function() {
		if(((this.parentComponent) instanceof haxe_ui_components_Label)) {
			return (js_Boot.__cast(this.parentComponent , haxe_ui_components_Label)).get_autoHeight();
		}
		return false;
	}
	,get_supportsHtml: function() {
		return true;
	}
	,__class__: haxe_ui_backend_TextDisplayImpl
	,__properties__: $extend(haxe_ui_backend_TextBase.prototype.__properties__,{get_autoHeight:"get_autoHeight",get_autoWidth:"get_autoWidth"})
});
var haxe_ui_backend_TextInputImpl = function() {
	this._selectedEndIndex = -1;
	this._selectionStartIndex = 0;
	haxe_ui_backend_TextDisplayImpl.call(this);
};
$hxClasses["haxe.ui.backend.TextInputImpl"] = haxe_ui_backend_TextInputImpl;
haxe_ui_backend_TextInputImpl.__name__ = "haxe.ui.backend.TextInputImpl";
haxe_ui_backend_TextInputImpl.__super__ = haxe_ui_backend_TextDisplayImpl;
haxe_ui_backend_TextInputImpl.prototype = $extend(haxe_ui_backend_TextDisplayImpl.prototype,{
	focus: function() {
		var _gthis = this;
		haxe_ui_util_Timer.delay(function() {
			_gthis.element.focus({preventScroll: true});
		},50);
	}
	,blur: function() {
		this.element.blur();
	}
	,onChangeEvent: function(e) {
		var newText = null;
		if(((this.element) instanceof HTMLTextAreaElement)) {
			newText = (js_Boot.__cast(this.element , HTMLTextAreaElement)).value;
		} else {
			newText = (js_Boot.__cast(this.element , HTMLInputElement)).value;
		}
		if(newText != this._text) {
			this._text = newText;
			this.measureText();
			if(this._inputData.onChangedCallback != null) {
				this._inputData.onChangedCallback();
			}
		}
	}
	,onScroll: function(e) {
		this._inputData.hscrollPos = this.element.scrollLeft;
		this._inputData.vscrollPos = this.element.scrollTop;
		this._inputData.hscrollMax = this._textWidth - this._width;
		this._inputData.hscrollPageSize = this._width * this._inputData.hscrollMax / this._textWidth;
		this._inputData.vscrollMax = this._textHeight - this._height;
		this._inputData.vscrollPageSize = this._height * this._inputData.vscrollMax / this._textHeight;
		if(this._inputData.onScrollCallback != null) {
			this._inputData.onScrollCallback();
		}
	}
	,validateData: function() {
		if(this._text != null) {
			var html = this.normalizeText(this._text);
			if(((this.element) instanceof HTMLInputElement)) {
				(js_Boot.__cast(this.element , HTMLInputElement)).value = html;
			} else if(((this.element) instanceof HTMLTextAreaElement)) {
				(js_Boot.__cast(this.element , HTMLTextAreaElement)).value = html;
			}
		}
		var hscrollValue = this._inputData.hscrollPos | 0;
		if(this.element.scrollLeft != hscrollValue) {
			this.element.scrollLeft = hscrollValue;
		}
		var vscrollValue = this._inputData.vscrollPos | 0;
		if(this.element.scrollTop != vscrollValue) {
			this.element.scrollTop = vscrollValue;
		}
	}
	,validateStyle: function() {
		var measureTextRequired = false;
		if(this._displayData.multiline == false && ((this.element) instanceof HTMLInputElement) == false || this._displayData.multiline == true && ((this.element) instanceof HTMLTextAreaElement) == false) {
			var newElement = this.createElement();
			this.element.parentElement.appendChild(newElement);
			haxe_ui_backend_html5_HtmlUtils.removeElement(this.element);
			this.element.removeEventListener("input",$bind(this,this.onChangeEvent));
			this.element.removeEventListener("propertychange",$bind(this,this.onChangeEvent));
			this.element.removeEventListener("scroll",$bind(this,this.onScroll));
			this.element = newElement;
			this.validateData();
			measureTextRequired = true;
		}
		if(((this.element) instanceof HTMLInputElement)) {
			var inputElement = this.element;
			if(this._inputData.password == true && inputElement.type != "password") {
				inputElement.type = "password";
			} else if(this._inputData.password == false && inputElement.type != "") {
				inputElement.type = "";
			}
		}
		if(this.parentComponent.get_disabled() || this.parentComponent._interactivityDisabled == true) {
			this.element.style.cursor = "not-allowed";
			if(((this.element) instanceof HTMLInputElement)) {
				(js_Boot.__cast(this.element , HTMLInputElement)).disabled = true;
			} else if(((this.element) instanceof HTMLTextAreaElement)) {
				(js_Boot.__cast(this.element , HTMLTextAreaElement)).disabled = true;
			}
		} else {
			this.element.style.cursor = null;
			if(((this.element) instanceof HTMLInputElement)) {
				(js_Boot.__cast(this.element , HTMLInputElement)).disabled = false;
			} else if(((this.element) instanceof HTMLTextAreaElement)) {
				(js_Boot.__cast(this.element , HTMLTextAreaElement)).disabled = false;
			}
		}
		if(!haxe_ui_backend_TextDisplayImpl.prototype.validateStyle.call(this)) {
			return measureTextRequired;
		} else {
			return true;
		}
	}
	,measureText: function() {
		var div = haxe_ui_backend_html5_HtmlUtils.getDivHelper("haxeui-text-input-div-helper");
		this.setTempDivData(div);
		haxe_ui_backend_html5_HtmlUtils.releaseDivHelper(div);
		this._textWidth = div.clientWidth;
		this._textHeight = div.clientHeight + 2;
		this._inputData.hscrollMax = this._textWidth - this._width;
		this._inputData.hscrollPageSize = this._width * this._inputData.hscrollMax / this._textWidth;
		this._inputData.vscrollMax = this._textHeight - this._height;
		this._inputData.vscrollPageSize = this._height * this._inputData.vscrollMax / this._textHeight;
	}
	,_selectionStartIndex: null
	,get_selectionStartIndex: function() {
		return this._selectionStartIndex;
	}
	,set_selectionStartIndex: function(value) {
		this._selectionStartIndex = value;
		this.applySelection();
		return value;
	}
	,_selectedEndIndex: null
	,get_selectionEndIndex: function() {
		return this._selectedEndIndex;
	}
	,set_selectionEndIndex: function(value) {
		this._selectedEndIndex = value;
		this.applySelection();
		return value;
	}
	,applySelection: function() {
		if(this._selectionStartIndex < 0 || this._selectedEndIndex < 0) {
			return;
		}
		if(this._text != null && this._selectedEndIndex > this._text.length) {
			this._selectedEndIndex = this._text.length;
		}
		if(((this.element) instanceof HTMLInputElement)) {
			(js_Boot.__cast(this.element , HTMLInputElement)).setSelectionRange(this._selectionStartIndex,this._selectedEndIndex);
		} else if(((this.element) instanceof HTMLTextAreaElement)) {
			(js_Boot.__cast(this.element , HTMLTextAreaElement)).setSelectionRange(this._selectionStartIndex,this._selectedEndIndex);
		}
	}
	,createElement: function() {
		if(this.element != null) {
			this.element.removeEventListener("input",$bind(this,this.onChangeEvent));
			this.element.removeEventListener("propertychange",$bind(this,this.onChangeEvent));
			this.element.removeEventListener("scroll",$bind(this,this.onScroll));
		}
		var el = null;
		if(this._displayData.multiline == false) {
			el = window.document.createElement("input");
			el.style.border = "none";
			el.style.outline = "none";
			el.style.whiteSpace = "pre";
			el.style.overflow = "hidden";
			el.style.cursor = "initial";
			el.style.position = "absolute";
			el.style.backgroundColor = "inherit";
			el.style.padding = "0px";
			el.spellcheck = false;
		} else {
			el = window.document.createElement("textarea");
			el.style.border = "none";
			el.style.resize = "none";
			el.style.outline = "none";
			el.style.lineHeight = "1.4";
			el.style.padding = "0px";
			el.style.margin = "0px";
			el.style.bottom = "0px";
			el.style.right = "0px";
			el.style.overflow = "hidden";
			el.style.cursor = "initial";
			el.style.position = "absolute";
			el.style.backgroundColor = "inherit";
			el.style.whiteSpace = "pre-wrap";
			el.id = "textArea";
			el.spellcheck = false;
			el.onkeydown = function(e) {
				if(e.keyCode == 9 || e.which == 9) {
					e.preventDefault();
					e.stopImmediatePropagation();
					e.stopPropagation();
					var ta = js_Boot.__cast(el , HTMLTextAreaElement);
					var s = ta.selectionStart;
					ta.value = ta.value.substring(0,ta.selectionStart) + "\t" + ta.value.substring(ta.selectionEnd);
					ta.selectionEnd = s + 1;
					return false;
				}
				return true;
			};
		}
		el.addEventListener("input",$bind(this,this.onChangeEvent));
		el.addEventListener("propertychange",$bind(this,this.onChangeEvent));
		el.addEventListener("scroll",$bind(this,this.onScroll));
		return el;
	}
	,validatePosition: function() {
		var x = this._left;
		var y = this._top;
		if(this._displayData.multiline == false && this.parentComponent != null && this.parentComponent.get_style() != null) {
			if(this.parentComponent.get_style().borderLeftSize != null) {
				x -= this.parentComponent.get_style().borderLeftSize;
			}
			if(this.parentComponent.get_style().borderTopSize != null) {
				y -= this.parentComponent.get_style().borderTopSize;
			}
		}
		var style = this.element.style;
		style.left = "" + x + "px";
		style.top = "" + y + "px";
	}
	,setTempDivData: function(div) {
		var t = this._text;
		if(t == null || t.length == 0) {
			t = "|";
		}
		div.style.fontFamily = this.element.style.fontFamily;
		div.style.fontSize = this.element.style.fontSize;
		div.style.whiteSpace = this.element.style.whiteSpace;
		div.style.lineHeight = this.element.style.lineHeight;
		if(((this.element) instanceof HTMLTextAreaElement)) {
			div.style.wordBreak = this.element.style.wordBreak;
		}
		if(this.get_autoWidth() == false) {
			div.style.width = this._width > 0 ? "" + ("" + this._width + "px") : "";
		} else {
			div.style.width = "";
		}
		var normalizedText = haxe_ui_backend_TextDisplayImpl.prototype.normalizeText.call(this,t);
		normalizedText = StringTools.replace(normalizedText,"<","&lt;");
		normalizedText = StringTools.replace(normalizedText,">","&gt;");
		if(this._displayData.multiline == true) {
			normalizedText += "<br>";
		}
		div.innerHTML = normalizedText;
	}
	,__class__: haxe_ui_backend_TextInputImpl
});
var haxe_ui_backend_TimerImpl = function(delay,callback) {
	this._timer = new haxe_Timer(delay);
	this._timer.run = function() {
		callback();
	};
};
$hxClasses["haxe.ui.backend.TimerImpl"] = haxe_ui_backend_TimerImpl;
haxe_ui_backend_TimerImpl.__name__ = "haxe.ui.backend.TimerImpl";
haxe_ui_backend_TimerImpl.prototype = {
	_timer: null
	,stop: function() {
		this._timer.stop();
	}
	,__class__: haxe_ui_backend_TimerImpl
};
var haxe_ui_backend_html5_EventMapper = function() { };
$hxClasses["haxe.ui.backend.html5.EventMapper"] = haxe_ui_backend_html5_EventMapper;
haxe_ui_backend_html5_EventMapper.__name__ = "haxe.ui.backend.html5.EventMapper";
var haxe_ui_backend_html5_HtmlUtils = function() { };
$hxClasses["haxe.ui.backend.html5.HtmlUtils"] = haxe_ui_backend_html5_HtmlUtils;
haxe_ui_backend_html5_HtmlUtils.__name__ = "haxe.ui.backend.html5.HtmlUtils";
haxe_ui_backend_html5_HtmlUtils.__properties__ = {get_dpi:"get_dpi"};
haxe_ui_backend_html5_HtmlUtils.px = function(value) {
	return "" + value + "px";
};
haxe_ui_backend_html5_HtmlUtils.color = function(value) {
	if(value == null) {
		return "rgba(0, 0, 0, 0)";
	}
	return "#" + StringTools.hex(value,6);
};
haxe_ui_backend_html5_HtmlUtils.rgba = function(value,alpha) {
	if(alpha == null) {
		alpha = 1;
	}
	var r = value >> 16 & 255;
	var g = value >> 8 & 255;
	var b = value & 255;
	return "rgba(" + r + ", " + g + ", " + b + ", " + alpha + ")";
};
haxe_ui_backend_html5_HtmlUtils.escape = function(s) {
	s = StringTools.replace(s,"\"","&quot;");
	s = StringTools.replace(s,"'","&#39;");
	s = StringTools.replace(s,"<","&lt;");
	s = StringTools.replace(s,">","&gt;");
	return s;
};
haxe_ui_backend_html5_HtmlUtils.namedChild = function(el,child,index) {
	if(index == null) {
		index = 0;
	}
	if(child != null) {
		var list = el.getElementsByTagName(child);
		if(list.length == 0) {
			return null;
		}
		el = list.item(index);
	}
	return el;
};
haxe_ui_backend_html5_HtmlUtils.getDivHelper = function(id) {
	var div = null;
	if(id != null) {
		var helper = haxe_ui_backend_html5_HtmlUtils._divHelpersId.h[id];
		if(helper != null) {
			div = helper.div;
		}
	} else {
		var key = haxe_ui_backend_html5_HtmlUtils._divHelpers.keys();
		while(key.hasNext()) {
			var key1 = key.next();
			var value = haxe_ui_backend_html5_HtmlUtils._divHelpers.h[key1.__id__];
			if(value.claimed == false) {
				div = value.div;
				break;
			}
		}
	}
	if(div == null) {
		div = window.document.createElement("div");
		div.style.position = "absolute";
		div.style.top = "-99999px";
		div.style.left = "-99999px";
		window.document.body.appendChild(div);
		var helper = { div : div, claimed : true};
		if(id != null) {
			haxe_ui_backend_html5_HtmlUtils._divHelpersId.h[id] = helper;
		} else {
			haxe_ui_backend_html5_HtmlUtils._divHelpers.set(div,helper);
		}
	}
	return div;
};
haxe_ui_backend_html5_HtmlUtils.releaseDivHelper = function(div) {
	if(haxe_ui_backend_html5_HtmlUtils._divHelpers.h.__keys__[div.__id__] != null) {
		haxe_ui_backend_html5_HtmlUtils._divHelpers.h[div.__id__].claimed = false;
	}
};
haxe_ui_backend_html5_HtmlUtils.measureText = function(text,addWidth,addHeight,fontSize,fontName) {
	if(fontSize == null) {
		fontSize = -1;
	}
	if(addHeight == null) {
		addHeight = 0;
	}
	if(addWidth == null) {
		addWidth = 0;
	}
	var div = haxe_ui_backend_html5_HtmlUtils.getDivHelper();
	div.style.width = "";
	div.style.height = "";
	if(fontSize > 0) {
		div.style.fontSize = "" + fontSize + "px";
	} else {
		div.style.fontSize = "";
	}
	if(fontName != null) {
		div.style.fontFamily = fontName;
	} else {
		div.style.fontFamily = "";
	}
	div.innerHTML = text;
	return new haxe_ui_geom_Size(div.clientWidth + addWidth,div.clientHeight + addHeight);
};
haxe_ui_backend_html5_HtmlUtils.addEventListener = function(element,type,listener,passive) {
	if(passive == null) {
		passive = true;
	}
	element.addEventListener(type,listener,{ passive : passive});
};
haxe_ui_backend_html5_HtmlUtils.get_dpi = function() {
	if(haxe_ui_backend_html5_HtmlUtils._dpi != 0) {
		return haxe_ui_backend_html5_HtmlUtils._dpi;
	}
	var div = window.document.createElement("div");
	div.style.width = "1in";
	div.style.height = "1in";
	div.style.position = "absolute";
	div.style.top = "-99999px";
	div.style.left = "-99999px";
	window.document.body.appendChild(div);
	var devicePixelRatio = window.devicePixelRatio;
	if(devicePixelRatio == null) {
		devicePixelRatio = 1;
	}
	haxe_ui_backend_html5_HtmlUtils._dpi = div.offsetWidth * devicePixelRatio;
	haxe_ui_backend_html5_HtmlUtils.removeElement(div);
	return haxe_ui_backend_html5_HtmlUtils._dpi;
};
haxe_ui_backend_html5_HtmlUtils.swapElements = function(el1,el2) {
	el2.parentElement.insertBefore(el2,el1);
};
haxe_ui_backend_html5_HtmlUtils.insertBefore = function(el,before) {
	before.parentElement.insertBefore(before,el);
};
haxe_ui_backend_html5_HtmlUtils.removeElement = function(el) {
	if(el != null && el.parentElement != null) {
		el.parentElement.removeChild(el);
	}
};
haxe_ui_backend_html5_HtmlUtils.isRetinaDisplay = function() {
	if(haxe_ui_backend_html5_HtmlUtils._isRetina == null) {
		var query = "(-webkit-min-device-pixel-ratio: 2), (min-device-pixel-ratio: 2), (min-resolution: 192dpi)";
		if(window.matchMedia(query).matches) {
			haxe_ui_backend_html5_HtmlUtils._isRetina = true;
		} else {
			haxe_ui_backend_html5_HtmlUtils._isRetina = false;
		}
	}
	return haxe_ui_backend_html5_HtmlUtils._isRetina;
};
var haxe_ui_backend_html5_StyleHelper = function() { };
$hxClasses["haxe.ui.backend.html5.StyleHelper"] = haxe_ui_backend_html5_StyleHelper;
haxe_ui_backend_html5_StyleHelper.__name__ = "haxe.ui.backend.html5.StyleHelper";
haxe_ui_backend_html5_StyleHelper.apply = function(component,width,height,style) {
	var element = component.element;
	var css = element.style;
	var slice = null;
	if(style.backgroundImageSliceTop != null && style.backgroundImageSliceLeft != null && style.backgroundImageSliceBottom != null && style.backgroundImageSliceRight != null) {
		slice = new haxe_ui_geom_Rectangle(style.backgroundImageSliceLeft,style.backgroundImageSliceTop,style.backgroundImageSliceRight - style.backgroundImageSliceLeft,style.backgroundImageSliceBottom - style.backgroundImageSliceTop);
	}
	if(slice != null) {
		width = Math.round(width);
		height = Math.round(height);
	}
	css.width = "" + width + "px";
	css.height = "" + height + "px";
	var borderStyle = style.borderStyle;
	if(borderStyle == null) {
		borderStyle = "solid";
	}
	if(style.borderLeftSize != null && style.borderLeftSize == style.borderRightSize && style.borderLeftSize == style.borderBottomSize && style.borderLeftSize == style.borderTopSize) {
		if(style.borderLeftSize > 0) {
			css.borderWidth = "" + style.borderLeftSize + "px";
			css.borderStyle = borderStyle;
		} else {
			css.removeProperty("border-width");
			css.removeProperty("border-style");
		}
	} else if(style.borderLeftSize == null && style.borderRightSize == null && style.borderBottomSize == null && style.borderTopSize == null) {
		css.removeProperty("border-width");
		css.removeProperty("border-style");
	} else {
		if(style.borderTopSize != null && style.borderTopSize > 0) {
			css.borderTopWidth = "" + style.borderTopSize + "px";
			css.borderTopStyle = borderStyle;
		} else {
			css.removeProperty("border-top-width");
			css.removeProperty("border-top-style");
		}
		if(style.borderLeftSize != null && style.borderLeftSize > 0) {
			css.borderLeftWidth = "" + style.borderLeftSize + "px";
			css.borderLeftStyle = borderStyle;
		} else {
			css.removeProperty("border-left-width");
			css.removeProperty("border-left-style");
		}
		if(style.borderBottomSize != null && style.borderBottomSize > 0) {
			css.borderBottomWidth = "" + style.borderBottomSize + "px";
			css.borderBottomStyle = borderStyle;
		} else {
			css.removeProperty("border-bottom-width");
			css.removeProperty("border-bottom-style");
		}
		if(style.borderRightSize != null && style.borderRightSize > 0) {
			css.borderRightWidth = "" + style.borderRightSize + "px";
			css.borderRightStyle = borderStyle;
		} else {
			css.removeProperty("border-right-width");
			css.removeProperty("border-right-style");
		}
	}
	if(style.borderLeftColor != null && style.borderLeftColor == style.borderRightColor && style.borderLeftColor == style.borderBottomColor && style.borderLeftColor == style.borderTopColor) {
		if(style.borderOpacity == null) {
			css.borderColor = haxe_ui_backend_html5_HtmlUtils.color(style.borderLeftColor);
		} else {
			css.borderColor = haxe_ui_backend_html5_HtmlUtils.rgba(style.borderLeftColor,style.borderOpacity);
		}
	} else if(style.borderLeftColor == null && style.borderRightColor == null && style.borderBottomColor == null && style.borderTopColor == null) {
		css.removeProperty("border-color");
	} else {
		if(style.borderTopColor != null && style.borderTopSize != null) {
			if(style.borderOpacity == null) {
				css.borderTopColor = haxe_ui_backend_html5_HtmlUtils.color(style.borderTopColor);
			} else {
				css.borderTopColor = haxe_ui_backend_html5_HtmlUtils.rgba(style.borderTopColor,style.borderOpacity);
			}
		} else if(style.borderTopColor == null && style.borderTopSize != null) {
			css.borderTopColor = haxe_ui_backend_html5_HtmlUtils.color(style.borderTopColor);
		} else {
			css.removeProperty("border-top-color");
		}
		if(style.borderLeftColor != null && style.borderLeftSize != null) {
			if(style.borderOpacity == null) {
				css.borderLeftColor = haxe_ui_backend_html5_HtmlUtils.color(style.borderLeftColor);
			} else {
				css.borderLeftColor = haxe_ui_backend_html5_HtmlUtils.rgba(style.borderLeftColor,style.borderOpacity);
			}
		} else if(style.borderLeftColor == null && style.borderLeftSize != null) {
			css.borderLeftColor = haxe_ui_backend_html5_HtmlUtils.color(style.borderLeftColor);
		} else {
			css.removeProperty("border-left-color");
		}
		if(style.borderBottomColor != null && style.borderBottomSize != null) {
			if(style.borderOpacity == null) {
				css.borderBottomColor = haxe_ui_backend_html5_HtmlUtils.color(style.borderBottomColor);
			} else {
				css.borderBottomColor = haxe_ui_backend_html5_HtmlUtils.rgba(style.borderBottomColor,style.borderOpacity);
			}
		} else if(style.borderBottomColor == null && style.borderBottomSize != null) {
			css.borderBottomColor = haxe_ui_backend_html5_HtmlUtils.color(style.borderBottomColor);
		} else {
			css.removeProperty("border-bottom-color");
		}
		if(style.borderRightColor != null && style.borderRightSize != null) {
			if(style.borderOpacity == null) {
				css.borderRightColor = haxe_ui_backend_html5_HtmlUtils.color(style.borderRightColor);
			} else {
				css.borderRightColor = haxe_ui_backend_html5_HtmlUtils.rgba(style.borderRightColor,style.borderOpacity);
			}
		} else if(style.borderRightColor == null && style.borderRightSize != null) {
			css.borderRightColor = haxe_ui_backend_html5_HtmlUtils.color(style.borderRightColor);
		} else {
			css.removeProperty("border-right-color");
		}
	}
	var background = [];
	if(style.backgroundColor != null) {
		if(style.backgroundColorEnd != null && style.backgroundColorEnd != style.backgroundColor) {
			css.removeProperty("background-color");
			var gradientStyle = style.backgroundGradientStyle;
			if(gradientStyle == null) {
				gradientStyle = "vertical";
			}
			if(style.backgroundOpacity != null) {
				if(gradientStyle == "vertical") {
					background.push("linear-gradient(to bottom, " + haxe_ui_backend_html5_HtmlUtils.rgba(style.backgroundColor,style.backgroundOpacity) + ", " + haxe_ui_backend_html5_HtmlUtils.rgba(style.backgroundColorEnd,style.backgroundOpacity) + ")");
				} else if(gradientStyle == "horizontal") {
					background.push("linear-gradient(to right, " + haxe_ui_backend_html5_HtmlUtils.rgba(style.backgroundColor,style.backgroundOpacity) + ", " + haxe_ui_backend_html5_HtmlUtils.rgba(style.backgroundColorEnd,style.backgroundOpacity) + ")");
				}
			} else if(gradientStyle == "vertical") {
				background.push("linear-gradient(to bottom, " + haxe_ui_backend_html5_HtmlUtils.color(style.backgroundColor) + ", " + haxe_ui_backend_html5_HtmlUtils.color(style.backgroundColorEnd) + ")");
			} else if(gradientStyle == "horizontal") {
				background.push("linear-gradient(to right, " + haxe_ui_backend_html5_HtmlUtils.color(style.backgroundColor) + ", " + haxe_ui_backend_html5_HtmlUtils.color(style.backgroundColorEnd) + ")");
			}
		} else {
			css.removeProperty("background");
			if(style.backgroundOpacity != null) {
				css.backgroundColor = haxe_ui_backend_html5_HtmlUtils.rgba(style.backgroundColor,style.backgroundOpacity);
			} else {
				css.backgroundColor = haxe_ui_backend_html5_HtmlUtils.color(style.backgroundColor);
			}
		}
	} else {
		css.removeProperty("background");
		css.removeProperty("background-color");
	}
	if(style.borderRadius != null && style.borderRadius > 0 && (style.borderRadiusTopLeft == null || style.borderRadiusTopLeft == style.borderRadius) && (style.borderRadiusTopRight == null || style.borderRadiusTopRight == style.borderRadius) && (style.borderRadiusBottomLeft == null || style.borderRadiusBottomLeft == style.borderRadius) && (style.borderRadiusBottomRight == null || style.borderRadiusBottomRight == style.borderRadius)) {
		css.borderRadius = "" + style.borderRadius + "px";
	} else if(style.borderRadiusTopLeft != null && style.borderRadiusTopLeft > 0 || style.borderRadiusTopRight != null && style.borderRadiusTopRight > 0 || style.borderRadiusBottomLeft != null && style.borderRadiusBottomLeft > 0 || style.borderRadiusBottomRight != null && style.borderRadiusBottomRight > 0) {
		if(style.borderRadiusTopLeft != null && style.borderRadiusTopLeft > 0) {
			css.borderTopLeftRadius = "" + style.borderRadiusTopLeft + "px";
		} else {
			css.removeProperty("border-top-left-radius");
		}
		if(style.borderRadiusTopRight != null && style.borderRadiusTopRight > 0) {
			css.borderTopRightRadius = "" + style.borderRadiusTopRight + "px";
		} else {
			css.removeProperty("border-top-right-radius");
		}
		if(style.borderRadiusBottomLeft != null && style.borderRadiusBottomLeft > 0) {
			css.borderBottomLeftRadius = "" + style.borderRadiusBottomLeft + "px";
		} else {
			css.removeProperty("border-bottom-left-radius");
		}
		if(style.borderRadiusBottomRight != null && style.borderRadiusBottomRight > 0) {
			css.borderBottomRightRadius = "" + style.borderRadiusBottomRight + "px";
		} else {
			css.removeProperty("border-bottom-right-radius");
		}
	} else {
		css.removeProperty("border-radius");
	}
	if(style.backgroundImage != null) {
		haxe_ui_Toolkit.get_assets().getImage(haxe_ui_util_Variant.toString(style.backgroundImage),function(imageInfo) {
			if(imageInfo == null) {
				return;
			}
			var imageRect = new haxe_ui_geom_Rectangle(0,0,imageInfo.width,imageInfo.height);
			if(style.backgroundImageClipTop != null && style.backgroundImageClipLeft != null && style.backgroundImageClipBottom != null && style.backgroundImageClipRight != null) {
				imageRect = new haxe_ui_geom_Rectangle(style.backgroundImageClipLeft,style.backgroundImageClipTop,style.backgroundImageClipRight - style.backgroundImageClipLeft,style.backgroundImageClipBottom - style.backgroundImageClipTop);
			}
			if(slice == null) {
				if(imageRect.width == imageInfo.width && imageRect.height == imageInfo.height) {
					var backgroundRepeat = null;
					var backgroundSizeX = null;
					var backgroundSizeY = null;
					background.push("url(" + imageInfo.data.src + ")");
					if(style.backgroundImageRepeat == null || style.backgroundImageRepeat == "no-repeat") {
						backgroundRepeat = "no-repeat";
					} else if(style.backgroundImageRepeat == "repeat") {
						backgroundRepeat = "repeat";
					} else if(style.backgroundImageRepeat == "stretch") {
						backgroundRepeat = "no-repeat";
						backgroundSizeX = "100%";
						backgroundSizeY = "100%";
					}
					if(style.backgroundWidth != null) {
						backgroundSizeX = style.backgroundWidth + "px";
					} else if(style.backgroundWidthPercent != null) {
						backgroundSizeX = style.backgroundWidthPercent + "%";
					}
					if(style.backgroundHeight != null) {
						backgroundSizeY = style.backgroundHeight + "px";
					} else if(style.backgroundHeightPercent != null) {
						backgroundSizeY = style.backgroundHeightPercent + "%";
					}
					background.reverse();
					css.background = background.join(",");
					if(backgroundSizeX != null || backgroundSizeY != null) {
						css.backgroundSize = backgroundSizeX + " " + backgroundSizeY;
					} else {
						css.removeProperty("background-size");
					}
					if(backgroundRepeat != null) {
						css.backgroundRepeat = backgroundRepeat;
					} else {
						css.removeProperty("background-repeat");
					}
				} else {
					var canvas = component.getCanvas(width,height);
					var ctx = canvas.getContext("2d",null);
					ctx.clearRect(0,0,width,height);
					haxe_ui_backend_html5_StyleHelper.paintBitmap(ctx,imageInfo.data,imageRect,new haxe_ui_geom_Rectangle(0,0,width,height));
				}
			} else {
				var rects = haxe_ui_geom_Slice9.buildRects(width,height,imageRect.width,imageRect.height,slice);
				var srcRects = rects.src;
				var dstRects = rects.dst;
				var canvas = component.getCanvas(width,height);
				var ctx = canvas.getContext("2d",null);
				ctx.clearRect(0,0,width,height);
				ctx.imageSmoothingEnabled = false;
				var _g = 0;
				var _g1 = srcRects.length;
				while(_g < _g1) {
					var i = _g++;
					var srcRect = new haxe_ui_geom_Rectangle(srcRects[i].left + imageRect.left,srcRects[i].top + imageRect.top,srcRects[i].width,srcRects[i].height);
					var dstRect = dstRects[i];
					haxe_ui_backend_html5_StyleHelper.paintBitmap(ctx,imageInfo.data,srcRect,dstRect);
				}
			}
		});
	} else {
		component.removeCanvas();
		css.background = background[0];
	}
};
haxe_ui_backend_html5_StyleHelper.paintBitmap = function(ctx,img,srcRect,dstRect) {
	if(srcRect.width == 0 || srcRect.height == 0) {
		return;
	}
	if(dstRect.width == 0 || dstRect.height == 0) {
		return;
	}
	ctx.drawImage(img,srcRect.left | 0,srcRect.top | 0,srcRect.width | 0,srcRect.height | 0,dstRect.left | 0,dstRect.top | 0,dstRect.width | 0,dstRect.height | 0);
};
var haxe_ui_backend_html5_UserAgent = function() {
	this._unknown = false;
	this._msie = false;
	this._firefox = false;
	this._safari = false;
	this._chrome = false;
	this._opera = false;
	var ua = $global.navigator.userAgent;
	if(ua.indexOf("Opera") != -1 || ua.indexOf("OPR") != -1) {
		this._opera = true;
	} else if(ua.indexOf("Chrome") != -1) {
		this._chrome = true;
	} else if(ua.indexOf("Safari") != -1) {
		this._safari = true;
	} else if(ua.indexOf("Firefox") != -1) {
		this._firefox = true;
	} else if(ua.indexOf("MSIE") != -1) {
		this._msie = true;
	} else {
		this._unknown = true;
	}
};
$hxClasses["haxe.ui.backend.html5.UserAgent"] = haxe_ui_backend_html5_UserAgent;
haxe_ui_backend_html5_UserAgent.__name__ = "haxe.ui.backend.html5.UserAgent";
haxe_ui_backend_html5_UserAgent.__properties__ = {get_instance:"get_instance"};
haxe_ui_backend_html5_UserAgent.get_instance = function() {
	if(haxe_ui_backend_html5_UserAgent._instance == null) {
		haxe_ui_backend_html5_UserAgent._instance = new haxe_ui_backend_html5_UserAgent();
	}
	return haxe_ui_backend_html5_UserAgent._instance;
};
haxe_ui_backend_html5_UserAgent.prototype = {
	_opera: null
	,opera: null
	,get_opera: function() {
		return this._opera;
	}
	,_chrome: null
	,chrome: null
	,get_chrome: function() {
		return this._chrome;
	}
	,_safari: null
	,safari: null
	,get_safari: function() {
		return this._safari;
	}
	,_firefox: null
	,firefox: null
	,get_firefox: function() {
		return this._firefox;
	}
	,_msie: null
	,msie: null
	,get_msie: function() {
		return this._msie;
	}
	,_unknown: null
	,unknown: null
	,get_unknown: function() {
		return this._unknown;
	}
	,__class__: haxe_ui_backend_html5_UserAgent
	,__properties__: {get_unknown:"get_unknown",get_msie:"get_msie",get_firefox:"get_firefox",get_safari:"get_safari",get_chrome:"get_chrome",get_opera:"get_opera"}
};
var haxe_ui_backend_html5_graphics_CanvasGraphicsImpl = function(component) {
	this._hasSize = false;
	this._ctx = null;
	this._canvas = null;
	haxe_ui_backend_ComponentGraphicsBase.call(this,component);
	this.createCanvas();
};
$hxClasses["haxe.ui.backend.html5.graphics.CanvasGraphicsImpl"] = haxe_ui_backend_html5_graphics_CanvasGraphicsImpl;
haxe_ui_backend_html5_graphics_CanvasGraphicsImpl.__name__ = "haxe.ui.backend.html5.graphics.CanvasGraphicsImpl";
haxe_ui_backend_html5_graphics_CanvasGraphicsImpl.__super__ = haxe_ui_backend_ComponentGraphicsBase;
haxe_ui_backend_html5_graphics_CanvasGraphicsImpl.prototype = $extend(haxe_ui_backend_ComponentGraphicsBase.prototype,{
	_canvas: null
	,_ctx: null
	,_hasSize: null
	,fillStyle: function(color,alpha) {
		if(alpha == null) {
			alpha = 1;
		}
		if(this._hasSize == false) {
			haxe_ui_backend_ComponentGraphicsBase.prototype.fillStyle.call(this,color,alpha);
			return;
		}
		this._ctx.fillStyle = "rgb(" + (color >> 16 & 255) + ", " + (color >> 8 & 255) + ", " + (color & 255) + ")";
	}
	,rectangle: function(x,y,width,height) {
		if(this._hasSize == false) {
			haxe_ui_backend_ComponentGraphicsBase.prototype.rectangle.call(this,x,y,width,height);
			return;
		}
		this._ctx.fillRect(x,y,width,height);
	}
	,setPixel: function(x,y,color) {
		if(this._hasSize == false) {
			haxe_ui_backend_ComponentGraphicsBase.prototype.setPixel.call(this,x,y,color);
			return;
		}
		this._ctx.fillStyle = "rgb(" + (color >> 16 & 255) + ", " + (color >> 8 & 255) + ", " + (color & 255) + ")";
		this._ctx.fillRect(x,y,1,1);
	}
	,createCanvas: function() {
		if(this._component.element == null) {
			return;
		}
		this._canvas = window.document.createElement("canvas");
		this._component.element.appendChild(this._canvas);
		this._ctx = this._canvas.getContext("2d",null);
	}
	,setPixels: function(pixels) {
		if(this._hasSize == false) {
			haxe_ui_backend_ComponentGraphicsBase.prototype.setPixels.call(this,pixels);
			return;
		}
		var imageData = new ImageData(new Uint8ClampedArray(pixels.b.bufferValue),this._ctx.canvas.width,this._ctx.canvas.height);
		this._ctx.putImageData(imageData,0,0);
	}
	,resize: function(width,height) {
		this._canvas.width = width | 0;
		this._canvas.height = height | 0;
		if(width > 0 && height > 0) {
			if(this._hasSize == false) {
				this._hasSize = true;
				this.replayDrawCommands();
			}
		}
	}
	,detach: function() {
		this._canvas.remove();
		this._canvas = null;
		this._ctx = null;
	}
	,__class__: haxe_ui_backend_html5_graphics_CanvasGraphicsImpl
});
var haxe_ui_backend_html5_graphics_SVGGraphicsImpl = function(component) {
	this._currentPosition = new haxe_ui_geom_Point();
	this._svg = null;
	haxe_ui_backend_ComponentGraphicsBase.call(this,component);
	this.createSVG();
};
$hxClasses["haxe.ui.backend.html5.graphics.SVGGraphicsImpl"] = haxe_ui_backend_html5_graphics_SVGGraphicsImpl;
haxe_ui_backend_html5_graphics_SVGGraphicsImpl.__name__ = "haxe.ui.backend.html5.graphics.SVGGraphicsImpl";
haxe_ui_backend_html5_graphics_SVGGraphicsImpl.__super__ = haxe_ui_backend_ComponentGraphicsBase;
haxe_ui_backend_html5_graphics_SVGGraphicsImpl.prototype = $extend(haxe_ui_backend_ComponentGraphicsBase.prototype,{
	_svg: null
	,clear: function() {
		this._svg.clear();
	}
	,_currentPosition: null
	,moveTo: function(x,y) {
		this._currentPosition.x = x;
		this._currentPosition.y = y;
	}
	,lineTo: function(x,y) {
		this._svg.line(this._currentPosition.x,this._currentPosition.y,x,y);
		this._currentPosition.x = x;
		this._currentPosition.y = y;
	}
	,strokeStyle: function(color,thickness,alpha) {
		if(alpha == null) {
			alpha = 1;
		}
		if(thickness == null) {
			thickness = 1;
		}
		if(thickness != null) {
			this._svg.currentStrokeStyle.thickness = thickness;
		}
		if(color != null) {
			if(alpha < 1) {
				this._svg.currentStrokeStyle.color = "rgba(" + (color >> 16 & 255) + ", " + (color >> 8 & 255) + ", " + (color & 255) + ", " + alpha + ")";
			} else {
				this._svg.currentStrokeStyle.color = "rgb(" + (color >> 16 & 255) + ", " + (color >> 8 & 255) + ", " + (color & 255) + ")";
			}
		} else {
			this._svg.currentStrokeStyle.color = "none";
		}
	}
	,fillStyle: function(color,alpha) {
		if(alpha == null) {
			alpha = 1;
		}
		if(color != null) {
			if(alpha < 1) {
				this._svg.currentFillStyle.color = "rgba(" + (color >> 16 & 255) + ", " + (color >> 8 & 255) + ", " + (color & 255) + ", " + alpha + ")";
			} else {
				this._svg.currentFillStyle.color = "rgb(" + (color >> 16 & 255) + ", " + (color >> 8 & 255) + ", " + (color & 255) + ")";
			}
		} else {
			this._svg.currentFillStyle.color = "none";
		}
	}
	,circle: function(x,y,radius) {
		this._svg.circle(x,y,radius);
	}
	,curveTo: function(controlX,controlY,anchorX,anchorY) {
		this._svg.path(this._currentPosition.x,this._currentPosition.y).quadraticBezier(controlX,controlY,anchorX,anchorY);
		this._currentPosition.x = anchorX;
		this._currentPosition.y = anchorY;
	}
	,cubicCurveTo: function(controlX1,controlY1,controlX2,controlY2,anchorX,anchorY) {
		this._svg.path(this._currentPosition.x,this._currentPosition.y).cubicBezier(controlX1,controlY1,controlX2,controlY2,anchorX,anchorY);
		this._currentPosition.x = anchorX;
		this._currentPosition.y = anchorY;
	}
	,rectangle: function(x,y,width,height) {
		this._svg.rectangle(x,y,width,height);
	}
	,setPixel: function(x,y,color) {
		this.strokeStyle(null);
		this.fillStyle(color);
		this.rectangle(x,y,1,1);
	}
	,image: function(resource,x,y,width,height) {
		var _gthis = this;
		haxe_ui_loaders_image_ImageLoader.get_instance().load(resource,function(imageInfo) {
			if(imageInfo != null) {
				if(x == null) {
					x = 0;
				}
				if(y == null) {
					y = 0;
				}
				if(width == null) {
					width = imageInfo.width;
				}
				if(height == null) {
					height = imageInfo.height;
				}
				_gthis._svg.image(imageInfo.data.src,x,y,width,height);
			} else {
				haxe_Log.trace("could not load: " + (resource == null ? "null" : haxe_ui_util_Variant.toString(resource)),{ fileName : "haxe/ui/backend/html5/graphics/SVGGraphicsImpl.hx", lineNumber : 97, className : "haxe.ui.backend.html5.graphics.SVGGraphicsImpl", methodName : "image"});
			}
		});
	}
	,createSVG: function() {
		if(this._component.element == null) {
			return;
		}
		var existingElements = this._component.element.getElementsByTagNameNS("http://www.w3.org/2000/svg","svg");
		var existingElement = null;
		if(existingElements.length > 0) {
			existingElements.item(0);
		}
		this._svg = new haxe_ui_backend_html5_svg_SVGBuilder(existingElement);
		if(existingElement == null) {
			this._component.element.appendChild(this._svg.element);
		}
	}
	,resize: function(width,height) {
		this._svg.size(width,height);
	}
	,detach: function() {
		this._svg.element.remove();
		this._svg = null;
	}
	,__class__: haxe_ui_backend_html5_graphics_SVGGraphicsImpl
});
var haxe_ui_backend_html5_svg_SVGBuilder = function(existingElement,width,height) {
	this.currentFontStyle = { };
	this.currentFillStyle = { };
	this.currentStrokeStyle = { };
	this.element = null;
	if(existingElement == null) {
		this.element = window.document.createElementNS("http://www.w3.org/2000/svg","svg");
	} else {
		this.element = existingElement;
	}
	if(width != null) {
		this.element.setAttribute("width",width == null ? "null" : "" + width);
	}
	if(height != null) {
		this.element.setAttribute("height",height == null ? "null" : "" + height);
	}
};
$hxClasses["haxe.ui.backend.html5.svg.SVGBuilder"] = haxe_ui_backend_html5_svg_SVGBuilder;
haxe_ui_backend_html5_svg_SVGBuilder.__name__ = "haxe.ui.backend.html5.svg.SVGBuilder";
haxe_ui_backend_html5_svg_SVGBuilder.prototype = {
	element: null
	,size: function(width,height) {
		this.element.setAttribute("width",width == null ? "null" : "" + width);
		this.element.setAttribute("height",height == null ? "null" : "" + height);
	}
	,shapeRendering: function(value) {
		this.element.setAttribute("shape-rendering",value);
	}
	,clear: function() {
		this.element.innerHTML = "";
	}
	,currentStrokeStyle: null
	,strokeStyle: function(strokeStyle) {
		if(strokeStyle.color != null) {
			this.currentStrokeStyle.color = strokeStyle.color;
		}
		if(strokeStyle.thickness != null) {
			this.currentStrokeStyle.thickness = strokeStyle.thickness;
		}
		if(strokeStyle.alpha != null) {
			this.currentStrokeStyle.alpha = strokeStyle.alpha;
		}
	}
	,clearStrokeStyle: function() {
		this.currentStrokeStyle = { };
	}
	,currentFillStyle: null
	,fillStyle: function(fillStyle) {
		if(fillStyle.color != null) {
			this.currentFillStyle.color = fillStyle.color;
		}
	}
	,clearFillStyle: function() {
		this.currentFillStyle = { };
	}
	,currentFontStyle: null
	,fontStyle: function(fontStyle) {
		if(fontStyle.size != null) {
			this.currentFontStyle.size = fontStyle.size;
		}
		if(fontStyle.family != null) {
			this.currentFontStyle.family = fontStyle.family;
		}
		if(fontStyle.anchor != null) {
			this.currentFontStyle.anchor = fontStyle.anchor;
		}
	}
	,clearFontStyle: function() {
		this.currentFontStyle = { };
	}
	,line: function(x1,y1,x2,y2) {
		var builder = new haxe_ui_backend_html5_svg_SVGLineBuilder();
		builder.start(x1,y1);
		builder.end(x2,y2);
		builder.stroke(this.currentStrokeStyle);
		this.element.appendChild(builder.element);
		return builder;
	}
	,rectangle: function(x,y,width,height) {
		var builder = new haxe_ui_backend_html5_svg_SVGRectBuilder();
		builder.position(x,y);
		builder.size(width,height);
		builder.stroke(this.currentStrokeStyle);
		builder.fill(this.currentFillStyle);
		this.element.appendChild(builder.element);
		return builder;
	}
	,circle: function(x,y,r) {
		var builder = new haxe_ui_backend_html5_svg_SVGCircleBuilder();
		builder.position(x,y);
		builder.radius(r);
		builder.stroke(this.currentStrokeStyle);
		builder.fill(this.currentFillStyle);
		this.element.appendChild(builder.element);
		return builder;
	}
	,text: function(value,x,y) {
		var builder = new haxe_ui_backend_html5_svg_SVGTextBuilder();
		builder.position(x,y);
		builder.value(value);
		builder.stroke(this.currentStrokeStyle);
		builder.fill(this.currentFillStyle);
		builder.font(this.currentFontStyle);
		this.element.appendChild(builder.element);
		return builder;
	}
	,path: function(x,y,absolute) {
		if(absolute == null) {
			absolute = true;
		}
		var builder = new haxe_ui_backend_html5_svg_SVGPathBuilder();
		if(x != null && y != null) {
			builder.moveTo(x,y,absolute);
		}
		this.element.appendChild(builder.element);
		builder.stroke(this.currentStrokeStyle);
		builder.fill(this.currentFillStyle);
		return builder;
	}
	,image: function(href,x,y,width,height) {
		var builder = new haxe_ui_backend_html5_svg_SVGImageBuilder();
		if(x != null && y != null) {
			builder.position(x,y);
		}
		if(width != null && height != null) {
			builder.size(width,height);
		}
		builder.href(href);
		this.element.appendChild(builder.element);
		return builder;
	}
	,__class__: haxe_ui_backend_html5_svg_SVGBuilder
};
var haxe_ui_backend_html5_svg_SVGCircleBuilder = function() {
	this.element = null;
	this.element = window.document.createElementNS("http://www.w3.org/2000/svg","circle");
};
$hxClasses["haxe.ui.backend.html5.svg.SVGCircleBuilder"] = haxe_ui_backend_html5_svg_SVGCircleBuilder;
haxe_ui_backend_html5_svg_SVGCircleBuilder.__name__ = "haxe.ui.backend.html5.svg.SVGCircleBuilder";
haxe_ui_backend_html5_svg_SVGCircleBuilder.prototype = {
	element: null
	,id: function(value) {
		this.element.id = value;
		return this;
	}
	,position: function(x,y) {
		this.element.cx.baseVal.value = x;
		this.element.cy.baseVal.value = y;
		return this;
	}
	,radius: function(r) {
		this.element.r.baseVal.value = r;
		return this;
	}
	,stroke: function(strokeStyle) {
		if(strokeStyle.color != null) {
			this.element.setAttribute("stroke",strokeStyle.color);
		}
		if(strokeStyle.thickness != null) {
			this.element.setAttribute("stroke-width",strokeStyle.thickness == null ? "null" : "" + strokeStyle.thickness);
		}
		return this;
	}
	,fill: function(fillStyle) {
		if(fillStyle.color != null) {
			this.element.setAttribute("fill",fillStyle.color);
		}
		return this;
	}
	,__class__: haxe_ui_backend_html5_svg_SVGCircleBuilder
};
var haxe_ui_backend_html5_svg_SVGImageBuilder = function() {
	this.element = null;
	this.element = window.document.createElementNS("http://www.w3.org/2000/svg","image");
};
$hxClasses["haxe.ui.backend.html5.svg.SVGImageBuilder"] = haxe_ui_backend_html5_svg_SVGImageBuilder;
haxe_ui_backend_html5_svg_SVGImageBuilder.__name__ = "haxe.ui.backend.html5.svg.SVGImageBuilder";
haxe_ui_backend_html5_svg_SVGImageBuilder.prototype = {
	element: null
	,position: function(x,y) {
		this.element.x.baseVal.value = x;
		this.element.y.baseVal.value = y;
	}
	,size: function(width,height) {
		this.element.width.baseVal.value = width;
		this.element.height.baseVal.value = height;
	}
	,href: function(uri) {
		this.element.href.baseVal = uri;
	}
	,__class__: haxe_ui_backend_html5_svg_SVGImageBuilder
};
var haxe_ui_backend_html5_svg_SVGLineBuilder = function() {
	this.element = null;
	this.element = window.document.createElementNS("http://www.w3.org/2000/svg","line");
};
$hxClasses["haxe.ui.backend.html5.svg.SVGLineBuilder"] = haxe_ui_backend_html5_svg_SVGLineBuilder;
haxe_ui_backend_html5_svg_SVGLineBuilder.__name__ = "haxe.ui.backend.html5.svg.SVGLineBuilder";
haxe_ui_backend_html5_svg_SVGLineBuilder.prototype = {
	element: null
	,id: function(value) {
		this.element.id = value;
		return this;
	}
	,start: function(x,y) {
		this.element.x1.baseVal.value = x;
		this.element.y1.baseVal.value = y;
	}
	,end: function(x,y) {
		this.element.x2.baseVal.value = x;
		this.element.y2.baseVal.value = y;
	}
	,stroke: function(strokeStyle) {
		if(strokeStyle.color != null) {
			this.element.setAttribute("stroke",strokeStyle.color);
		}
		if(strokeStyle.thickness != null) {
			this.element.setAttribute("stroke-width",strokeStyle.thickness == null ? "null" : "" + strokeStyle.thickness);
		}
	}
	,__class__: haxe_ui_backend_html5_svg_SVGLineBuilder
};
var haxe_ui_backend_html5_svg_SVGPathBuilder = function() {
	this._d = new StringBuf();
	this.element = null;
	this.element = window.document.createElementNS("http://www.w3.org/2000/svg","path");
};
$hxClasses["haxe.ui.backend.html5.svg.SVGPathBuilder"] = haxe_ui_backend_html5_svg_SVGPathBuilder;
haxe_ui_backend_html5_svg_SVGPathBuilder.__name__ = "haxe.ui.backend.html5.svg.SVGPathBuilder";
haxe_ui_backend_html5_svg_SVGPathBuilder.prototype = {
	element: null
	,_d: null
	,id: function(value) {
		this.element.id = value;
		return this;
	}
	,moveTo: function(x,y,absolute) {
		if(absolute == null) {
			absolute = true;
		}
		if(absolute == true) {
			this._d.b += "M";
		} else {
			this._d.b += "m";
		}
		this._d.b += x == null ? "null" : "" + x;
		this._d.b += " ";
		this._d.b += y == null ? "null" : "" + y;
		this._d.b += " ";
		this.element.setAttribute("d",this._d.b);
		return this;
	}
	,lineTo: function(x,y,absolute) {
		if(absolute == null) {
			absolute = true;
		}
		if(absolute == true) {
			this._d.b += "L";
		} else {
			this._d.b += "l";
		}
		this._d.b += x == null ? "null" : "" + x;
		this._d.b += " ";
		this._d.b += y == null ? "null" : "" + y;
		this._d.b += " ";
		this.element.setAttribute("d",this._d.b);
		return this;
	}
	,cubicBezier: function(x1,y1,x2,y2,x,y,absolute) {
		if(absolute == null) {
			absolute = true;
		}
		if(absolute == true) {
			this._d.b += "C";
		} else {
			this._d.b += "c";
		}
		this._d.b += x1 == null ? "null" : "" + x1;
		this._d.b += " ";
		this._d.b += y1 == null ? "null" : "" + y1;
		this._d.b += " ";
		this._d.b += x2 == null ? "null" : "" + x2;
		this._d.b += " ";
		this._d.b += y2 == null ? "null" : "" + y2;
		this._d.b += " ";
		this._d.b += x == null ? "null" : "" + x;
		this._d.b += " ";
		this._d.b += y == null ? "null" : "" + y;
		this._d.b += " ";
		this.element.setAttribute("d",this._d.b);
		return this;
	}
	,quadraticBezier: function(x1,y1,x,y,absolute) {
		if(absolute == null) {
			absolute = true;
		}
		if(absolute == true) {
			this._d.b += "Q";
		} else {
			this._d.b += "q";
		}
		this._d.b += x1 == null ? "null" : "" + x1;
		this._d.b += " ";
		this._d.b += y1 == null ? "null" : "" + y1;
		this._d.b += " ";
		this._d.b += x == null ? "null" : "" + x;
		this._d.b += " ";
		this._d.b += y == null ? "null" : "" + y;
		this._d.b += " ";
		this.element.setAttribute("d",this._d.b);
		return this;
	}
	,close: function() {
		this._d.b += "Z ";
		this.element.setAttribute("d",this._d.b);
		return this;
	}
	,stroke: function(strokeStyle) {
		if(strokeStyle.color != null) {
			this.element.setAttribute("stroke",strokeStyle.color);
		}
		if(strokeStyle.thickness != null) {
			this.element.setAttribute("stroke-width",strokeStyle.thickness == null ? "null" : "" + strokeStyle.thickness);
		}
		return this;
	}
	,fill: function(fillStyle) {
		if(fillStyle.color != null) {
			this.element.setAttribute("fill",fillStyle.color);
		}
		if(fillStyle.opacity != null) {
			this.element.setAttribute("fill-opacity",fillStyle.opacity == null ? "null" : "" + fillStyle.opacity);
		}
		return this;
	}
	,__class__: haxe_ui_backend_html5_svg_SVGPathBuilder
};
var haxe_ui_backend_html5_svg_SVGRectBuilder = function() {
	this.element = null;
	this.element = window.document.createElementNS("http://www.w3.org/2000/svg","rect");
};
$hxClasses["haxe.ui.backend.html5.svg.SVGRectBuilder"] = haxe_ui_backend_html5_svg_SVGRectBuilder;
haxe_ui_backend_html5_svg_SVGRectBuilder.__name__ = "haxe.ui.backend.html5.svg.SVGRectBuilder";
haxe_ui_backend_html5_svg_SVGRectBuilder.prototype = {
	element: null
	,id: function(value) {
		this.element.id = value;
		return this;
	}
	,position: function(x,y) {
		this.element.x.baseVal.value = x;
		this.element.y.baseVal.value = y;
	}
	,size: function(width,height) {
		this.element.width.baseVal.value = width;
		this.element.height.baseVal.value = height;
	}
	,stroke: function(strokeStyle) {
		if(strokeStyle.color != null) {
			this.element.setAttribute("stroke",strokeStyle.color);
		}
		if(strokeStyle.thickness != null) {
			this.element.setAttribute("stroke-width",strokeStyle.thickness == null ? "null" : "" + strokeStyle.thickness);
		}
		return this;
	}
	,fill: function(fillStyle) {
		if(fillStyle.color != null) {
			this.element.setAttribute("fill",fillStyle.color);
		}
		return this;
	}
	,__class__: haxe_ui_backend_html5_svg_SVGRectBuilder
};
var haxe_ui_backend_html5_svg_SVGTextBuilder = function() {
	this.element = null;
	this.element = window.document.createElementNS("http://www.w3.org/2000/svg","text");
};
$hxClasses["haxe.ui.backend.html5.svg.SVGTextBuilder"] = haxe_ui_backend_html5_svg_SVGTextBuilder;
haxe_ui_backend_html5_svg_SVGTextBuilder.__name__ = "haxe.ui.backend.html5.svg.SVGTextBuilder";
haxe_ui_backend_html5_svg_SVGTextBuilder.prototype = {
	element: null
	,id: function(value) {
		this.element.id = value;
		return this;
	}
	,value: function(value) {
		this.element.textContent = value;
		return this;
	}
	,position: function(x,y) {
		this.element.setAttribute("x",x == null ? "null" : "" + x);
		this.element.setAttribute("y",y == null ? "null" : "" + y);
		return this;
	}
	,offset: function(x,y) {
		this.element.setAttribute("dx",x == null ? "null" : "" + x);
		this.element.setAttribute("dy",y == null ? "null" : "" + y);
		return this;
	}
	,stroke: function(strokeStyle) {
		if(strokeStyle.color != null) {
			this.element.setAttribute("stroke",strokeStyle.color);
		}
		if(strokeStyle.thickness != null) {
			this.element.setAttribute("stroke-width",strokeStyle.thickness == null ? "null" : "" + strokeStyle.thickness);
		}
		return this;
	}
	,fill: function(fillStyle) {
		if(fillStyle.color != null) {
			this.element.setAttribute("fill",fillStyle.color);
		}
		return this;
	}
	,font: function(fontStyle) {
		if(fontStyle.size != null) {
			this.element.setAttribute("font-size",fontStyle.size == null ? "null" : "" + fontStyle.size);
		}
		if(fontStyle.family != null) {
			this.element.setAttribute("font-family",fontStyle.family);
		}
		if(fontStyle.anchor != null) {
			this.element.setAttribute("text-anchor",fontStyle.anchor);
		}
	}
	,__class__: haxe_ui_backend_html5_svg_SVGTextBuilder
};
var haxe_ui_backend_html5_text_ITextMeasurer = function() { };
$hxClasses["haxe.ui.backend.html5.text.ITextMeasurer"] = haxe_ui_backend_html5_text_ITextMeasurer;
haxe_ui_backend_html5_text_ITextMeasurer.__name__ = "haxe.ui.backend.html5.text.ITextMeasurer";
haxe_ui_backend_html5_text_ITextMeasurer.__isInterface__ = true;
haxe_ui_backend_html5_text_ITextMeasurer.prototype = {
	measureText: null
	,__class__: haxe_ui_backend_html5_text_ITextMeasurer
};
var haxe_ui_backend_html5_text__$TextMeasurer_DivTextMeasurer = function() {
	this._div = null;
	this._div = window.document.createElement("div");
	this._div.style.position = "absolute";
	this._div.style.top = "-99999px";
	this._div.style.left = "-99999px";
	window.document.body.appendChild(this._div);
};
$hxClasses["haxe.ui.backend.html5.text._TextMeasurer.DivTextMeasurer"] = haxe_ui_backend_html5_text__$TextMeasurer_DivTextMeasurer;
haxe_ui_backend_html5_text__$TextMeasurer_DivTextMeasurer.__name__ = "haxe.ui.backend.html5.text._TextMeasurer.DivTextMeasurer";
haxe_ui_backend_html5_text__$TextMeasurer_DivTextMeasurer.__interfaces__ = [haxe_ui_backend_html5_text_ITextMeasurer];
haxe_ui_backend_html5_text__$TextMeasurer_DivTextMeasurer.prototype = {
	_div: null
	,measureText: function(options) {
		this._div.style.fontFamily = options.fontFamily;
		this._div.style.fontSize = options.fontSize;
		this._div.style.whiteSpace = options.whiteSpace;
		this._div.style.wordBreak = options.wordBreak;
		if(options.width != null) {
			this._div.style.width = "" + options.width + "px";
		} else {
			this._div.style.width = "";
		}
		if(options.isHtml == false) {
			this._div.textContent = options.text;
		} else {
			this._div.innerHTML = options.text;
		}
		return { width : this._div.clientWidth, height : this._div.clientHeight};
	}
	,__class__: haxe_ui_backend_html5_text__$TextMeasurer_DivTextMeasurer
};
var haxe_ui_backend_html5_text_TextMeasurer = function() { };
$hxClasses["haxe.ui.backend.html5.text.TextMeasurer"] = haxe_ui_backend_html5_text_TextMeasurer;
haxe_ui_backend_html5_text_TextMeasurer.__name__ = "haxe.ui.backend.html5.text.TextMeasurer";
haxe_ui_backend_html5_text_TextMeasurer.__properties__ = {get_instance:"get_instance"};
haxe_ui_backend_html5_text_TextMeasurer.get_instance = function() {
	if(haxe_ui_backend_html5_text_TextMeasurer._instance == null) {
		haxe_ui_backend_html5_text_TextMeasurer._instance = new haxe_ui_backend_html5_text__$TextMeasurer_DivTextMeasurer();
	}
	return haxe_ui_backend_html5_text_TextMeasurer._instance;
};
var haxe_ui_backend_html5_util_FontDetect = function() {
};
$hxClasses["haxe.ui.backend.html5.util.FontDetect"] = haxe_ui_backend_html5_util_FontDetect;
haxe_ui_backend_html5_util_FontDetect.__name__ = "haxe.ui.backend.html5.util.FontDetect";
haxe_ui_backend_html5_util_FontDetect.init = function() {
	if(haxe_ui_backend_html5_util_FontDetect._initialized == true) {
		return;
	}
	haxe_ui_backend_html5_util_FontDetect._initialized = true;
	var body = window.document.body;
	var firstChild = window.document.body.firstChild;
	var div = window.document.createElement("div");
	div.id = "fontdetectHelper";
	haxe_ui_backend_html5_util_FontDetect.span = window.document.createElement("span");
	haxe_ui_backend_html5_util_FontDetect.span.innerText = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";
	div.appendChild(haxe_ui_backend_html5_util_FontDetect.span);
	body.insertBefore(div,firstChild);
	div.style.position = "absolute";
	div.style.visibility = "hidden";
	div.style.top = "-200px";
	div.style.left = "-100000px";
	div.style.width = "100000px";
	div.style.height = "200px";
	div.style.fontSize = "100px";
};
haxe_ui_backend_html5_util_FontDetect.onFontLoaded = function(cssFontName,onLoad,onFail,options) {
	if(cssFontName == null) {
		return;
	}
	var msInterval = 10;
	if(options != null && options.msInterval != null) {
		msInterval = options.msInterval;
	}
	var msTimeout = 2000;
	if(options != null && options.msTimeout != null) {
		msTimeout = options.msTimeout;
	}
	if(onLoad == null && onFail == null) {
		return;
	}
	if(haxe_ui_backend_html5_util_FontDetect._initialized == false) {
		haxe_ui_backend_html5_util_FontDetect.init();
	}
	if(haxe_ui_backend_html5_util_FontDetect.isFontLoaded(cssFontName)) {
		if(onLoad != null) {
			onLoad(cssFontName);
		}
		return;
	}
	var utStart = new Date().getTime();
	var idInterval = 0;
	idInterval = window.setInterval(function() {
		if(haxe_ui_backend_html5_util_FontDetect.isFontLoaded(cssFontName)) {
			window.clearInterval(idInterval);
			if(onLoad != null) {
				onLoad(cssFontName);
			}
			return;
		} else {
			var utNow = new Date().getTime();
			if(utNow - utStart > msTimeout) {
				window.clearInterval(idInterval);
				if(onFail != null) {
					onFail(cssFontName);
				}
			}
		}
	},msInterval);
};
haxe_ui_backend_html5_util_FontDetect.isFontLoaded = function(cssFontName) {
	var wThisFont = 0;
	var wPrevFont = 0;
	if(haxe_ui_backend_html5_util_FontDetect._initialized == false) {
		haxe_ui_backend_html5_util_FontDetect.init();
	}
	var _g = 0;
	var _g1 = haxe_ui_backend_html5_util_FontDetect._aFallbackFonts.length;
	while(_g < _g1) {
		var ix = _g++;
		haxe_ui_backend_html5_util_FontDetect.span.style.fontFamily = cssFontName + "," + haxe_ui_backend_html5_util_FontDetect._aFallbackFonts[ix];
		wThisFont = haxe_ui_backend_html5_util_FontDetect.span.offsetWidth;
		if(ix > 0 && wThisFont != wPrevFont) {
			return false;
		}
		wPrevFont = wThisFont;
	}
	return true;
};
haxe_ui_backend_html5_util_FontDetect.prototype = {
	__class__: haxe_ui_backend_html5_util_FontDetect
};
var haxe_ui_backend_html5_util_StyleSheetHelper = function() {
};
$hxClasses["haxe.ui.backend.html5.util.StyleSheetHelper"] = haxe_ui_backend_html5_util_StyleSheetHelper;
haxe_ui_backend_html5_util_StyleSheetHelper.__name__ = "haxe.ui.backend.html5.util.StyleSheetHelper";
haxe_ui_backend_html5_util_StyleSheetHelper.getValidStyleSheet = function() {
	if(haxe_ui_backend_html5_util_StyleSheetHelper._sheet != null) {
		return haxe_ui_backend_html5_util_StyleSheetHelper._sheet;
	}
	var sheet = null;
	var _g = 0;
	var _g1 = window.document.styleSheets;
	while(_g < _g1.length) {
		var test = _g1[_g];
		++_g;
		if(test.ownerNode == null || test.disabled == true) {
			continue;
		}
		var css = js_Boot.__cast(test , CSSStyleSheet);
		if(css.ownerNode.nodeName == "STYLE" && css.href == null) {
			try {
				var r = css.cssRules;
				sheet = css;
				break;
			} catch( _g2 ) {
				haxe_NativeStackTrace.lastError = _g2;
			}
		}
	}
	if(sheet == null) {
		var styleElement = window.document.createElement("style");
		styleElement.appendChild(window.document.createTextNode(""));
		window.document.head.appendChild(styleElement);
		sheet = js_Boot.__cast(styleElement.sheet , CSSStyleSheet);
	}
	haxe_ui_backend_html5_util_StyleSheetHelper._sheet = sheet;
	return sheet;
};
haxe_ui_backend_html5_util_StyleSheetHelper.prototype = {
	__class__: haxe_ui_backend_html5_util_StyleSheetHelper
};
var haxe_ui_behaviours_Behaviour = function(component) {
	this.config = null;
	this._component = component;
};
$hxClasses["haxe.ui.behaviours.Behaviour"] = haxe_ui_behaviours_Behaviour;
haxe_ui_behaviours_Behaviour.__name__ = "haxe.ui.behaviours.Behaviour";
haxe_ui_behaviours_Behaviour.prototype = {
	config: null
	,_component: null
	,id: null
	,set: function(value) {
	}
	,setDynamic: function(value) {
		this.set(haxe_ui_util_Variant.fromDynamic(value));
	}
	,detatch: function() {
	}
	,get: function() {
		return null;
	}
	,getDynamic: function() {
		return haxe_ui_util_Variant.toDynamic(this.get());
	}
	,update: function() {
	}
	,call: function(param) {
		return null;
	}
	,getConfigValue: function(name,defaultValue) {
		if(this.config == null) {
			return defaultValue;
		}
		if(Object.prototype.hasOwnProperty.call(this.config.h,name) == false) {
			return defaultValue;
		}
		return this.config.h[name];
	}
	,getConfigValueBool: function(name,defaultValue) {
		if(defaultValue == null) {
			defaultValue = false;
		}
		var v = defaultValue;
		var s = this.getConfigValue(name);
		if(s != null) {
			v = s == "true";
		}
		return v;
	}
	,__class__: haxe_ui_behaviours_Behaviour
};
var haxe_ui_behaviours_Behaviours = function(component) {
	this._actualUpdateOrder = null;
	this._updateOrder = [];
	this._instances = new haxe_ds_StringMap();
	this._registry = new haxe_ds_StringMap();
	this._component = component;
};
$hxClasses["haxe.ui.behaviours.Behaviours"] = haxe_ui_behaviours_Behaviours;
haxe_ui_behaviours_Behaviours.__name__ = "haxe.ui.behaviours.Behaviours";
haxe_ui_behaviours_Behaviours.prototype = {
	_component: null
	,_registry: null
	,_instances: null
	,register: function(id,cls,defaultValue) {
		var info = { id : id, cls : cls, defaultValue : defaultValue, isSet : false};
		this._registry.h[id] = info;
		HxOverrides.remove(this._updateOrder,id);
		this._updateOrder.push(id);
		this._actualUpdateOrder = null;
	}
	,isRegistered: function(id) {
		return Object.prototype.hasOwnProperty.call(this._registry.h,id);
	}
	,replaceNative: function() {
		if(this._component.get_native() == false || this._component.get_hasNativeEntry() == false) {
			return;
		}
		var ids = [];
		var h = this._registry.h;
		var id_h = h;
		var id_keys = Object.keys(h);
		var id_length = id_keys.length;
		var id_current = 0;
		while(id_current < id_length) {
			var id = id_keys[id_current++];
			ids.push(id);
		}
		var _g = 0;
		while(_g < ids.length) {
			var id = ids[_g];
			++_g;
			var nativeProps = this._component.getNativeConfigProperties(".behaviour[id=" + id + "]");
			if(nativeProps != null && Object.prototype.hasOwnProperty.call(nativeProps.h,"class")) {
				var registered = this._registry.h[id];
				var name = nativeProps.h["class"];
				var info = { id : id, cls : $hxClasses[name], defaultValue : registered.defaultValue, config : nativeProps, isSet : false};
				this._registry.h[id] = info;
			}
		}
	}
	,validateData: function() {
		var _g = 0;
		var _g1 = this.get_actualUpdateOrder();
		while(_g < _g1.length) {
			var key = _g1[_g];
			++_g;
			var b = this._instances.h[key];
			if(js_Boot.__implements(b,haxe_ui_behaviours_IValidatingBehaviour)) {
				(js_Boot.__cast(b , haxe_ui_behaviours_IValidatingBehaviour)).validate();
			}
		}
	}
	,_updateOrder: null
	,get_updateOrder: function() {
		return this._updateOrder;
	}
	,set_updateOrder: function(value) {
		this._updateOrder = value;
		this._actualUpdateOrder = null;
		return value;
	}
	,_actualUpdateOrder: null
	,actualUpdateOrder: null
	,get_actualUpdateOrder: function() {
		if(this._actualUpdateOrder == null) {
			this._actualUpdateOrder = this._updateOrder.slice();
			var h = this._instances.h;
			var key_h = h;
			var key_keys = Object.keys(h);
			var key_length = key_keys.length;
			var key_current = 0;
			while(key_current < key_length) {
				var key = key_keys[key_current++];
				if(this._actualUpdateOrder.indexOf(key) == -1) {
					this._actualUpdateOrder.push(key);
				}
			}
		}
		return this._actualUpdateOrder;
	}
	,update: function() {
		var _g = 0;
		var _g1 = this.get_actualUpdateOrder();
		while(_g < _g1.length) {
			var key = _g1[_g];
			++_g;
			var b = this._instances.h[key];
			if(b != null) {
				b.update();
			}
		}
	}
	,find: function(id,create) {
		if(create == null) {
			create = true;
		}
		var b = this._instances.h[id];
		if(b == null && create == true) {
			var info = this._registry.h[id];
			if(info != null) {
				b = Type.createInstance(info.cls,[this._component]);
				if(b != null) {
					b.config = info.config;
					b.id = id;
					this._instances.h[id] = b;
					this._actualUpdateOrder = null;
				} else {
					var c = js_Boot.getClass(this._component);
					haxe_Log.trace("WARNING: problem creating behaviour class '" + Std.string(info.cls) + "' for '" + c.__name__ + ":" + id + "'",{ fileName : "haxe/ui/behaviours/Behaviours.hx", lineNumber : 140, className : "haxe.ui.behaviours.Behaviours", methodName : "find"});
				}
			}
		}
		if(b == null) {
			throw haxe_Exception.thrown("behaviour " + id + " not found");
		}
		return b;
	}
	,_cache: null
	,cache: function() {
		this._cache = new haxe_ds_StringMap();
		var h = this._registry.h;
		var registeredKey_h = h;
		var registeredKey_keys = Object.keys(h);
		var registeredKey_length = registeredKey_keys.length;
		var registeredKey_current = 0;
		while(registeredKey_current < registeredKey_length) {
			var registeredKey = registeredKey_keys[registeredKey_current++];
			var v = this._registry.h[registeredKey].defaultValue;
			var instance = this._instances.h[registeredKey];
			if(instance != null) {
				v = instance.get();
			}
			if(v != null) {
				this._cache.h[registeredKey] = v;
			}
		}
	}
	,dispose: function() {
		this._component = null;
		this._registry = null;
		var h = this._instances.h;
		var key_h = h;
		var key_keys = Object.keys(h);
		var key_length = key_keys.length;
		var key_current = 0;
		while(key_current < key_length) {
			var key = key_keys[key_current++];
			var inst = this._instances.h[key];
			inst._component = null;
		}
		this._instances = null;
		this._cache = null;
		this._actualUpdateOrder = null;
		this._updateOrder = null;
	}
	,detatch: function() {
		var h = this._instances.h;
		var b_h = h;
		var b_keys = Object.keys(h);
		var b_length = b_keys.length;
		var b_current = 0;
		while(b_current < b_length) {
			var b = b_h[b_keys[b_current++]];
			b.detatch();
		}
		this._instances = new haxe_ds_StringMap();
	}
	,restore: function() {
		if(this._cache == null) {
			return;
		}
		var _g = 0;
		var _g1 = this.get_actualUpdateOrder();
		while(_g < _g1.length) {
			var key = _g1[_g];
			++_g;
			var v = this._cache.h[key];
			if(v != null) {
				this.set(key,v);
			}
		}
		this._cache = null;
	}
	,lock: function() {
	}
	,unlock: function() {
	}
	,setDynamic: function(id,value) {
		this.lock();
		var b = this.find(id);
		var changed = null;
		if(((b) instanceof haxe_ui_behaviours_ValueBehaviour)) {
			var v = haxe_ui_util_Variant.toDynamic((js_Boot.__cast(b , haxe_ui_behaviours_ValueBehaviour))._value);
			changed = v != value;
		}
		b.setDynamic(value);
		var info = this._registry.h[id];
		info.isSet = true;
		this.unlock();
		this.performAutoDispatch(b,changed);
	}
	,set: function(id,value) {
		this.lock();
		var b = this.find(id);
		var changed = null;
		if(((b) instanceof haxe_ui_behaviours_ValueBehaviour)) {
			var v = (js_Boot.__cast(b , haxe_ui_behaviours_ValueBehaviour))._value;
			changed = haxe_ui_util_Variant.neq(v,value);
		}
		b.set(value);
		var info = this._registry.h[id];
		info.isSet = true;
		this.unlock();
		this.performAutoDispatch(b,changed);
	}
	,softSet: function(id,value) {
		var b = this.find(id);
		if(((b) instanceof haxe_ui_behaviours_ValueBehaviour)) {
			(js_Boot.__cast(b , haxe_ui_behaviours_ValueBehaviour))._value = value;
		}
	}
	,ready: function() {
		if(this._autoDispatch == null) {
			return;
		}
		var b = this._autoDispatch.keys();
		while(b.hasNext()) {
			var b1 = b.next();
			var changed = this._autoDispatch.h[b1.__id__];
			this.performAutoDispatch(b1,changed);
		}
		this._autoDispatch = null;
	}
	,_autoDispatch: null
	,performAutoDispatch: function(b,changed) {
		if(this._component.get_isReady() == false) {
			if(this._autoDispatch == null) {
				this._autoDispatch = new haxe_ds_ObjectMap();
			}
			this._autoDispatch.set(b,changed);
			return;
		}
		var autoDispatch = b.getConfigValue("autoDispatch",null);
		if(autoDispatch != null) {
			var arr = autoDispatch.split(".");
			var eventName = arr.pop().toLowerCase();
			var cls = arr.join(".");
			var event = Type.createInstance($hxClasses[cls],[eventName]);
			if(eventName != "change") {
				b._component.dispatch(event);
			} else if(changed == true || changed == null) {
				b._component.dispatch(event);
			}
		}
	}
	,get: function(id) {
		this.lock();
		var b = this.find(id);
		var v = null;
		if(b != null) {
			var info = this._registry.h[id];
			if(info.isSet == false && info.defaultValue != null && js_Boot.getClass(b) == haxe_ui_behaviours_DefaultBehaviour) {
				v = info.defaultValue;
			} else {
				v = b.get();
			}
		}
		this.unlock();
		return v;
	}
	,getDynamic: function(id) {
		this.lock();
		var b = this.find(id);
		var v = null;
		if(b != null) {
			v = b.getDynamic();
		}
		this.unlock();
		return v;
	}
	,call: function(id,param) {
		return this.find(id).call(param);
	}
	,applyDefaults: function() {
		var order = this._updateOrder.slice();
		var h = this._registry.h;
		var key_h = h;
		var key_keys = Object.keys(h);
		var key_length = key_keys.length;
		var key_current = 0;
		while(key_current < key_length) {
			var key = key_keys[key_current++];
			if(order.indexOf(key) == -1) {
				order.push(key);
			}
		}
		var _g = 0;
		while(_g < order.length) {
			var key = order[_g];
			++_g;
			var r = this._registry.h[key];
			if(r.defaultValue != null) {
				this.set(key,r.defaultValue);
			}
		}
	}
	,__class__: haxe_ui_behaviours_Behaviours
	,__properties__: {get_actualUpdateOrder:"get_actualUpdateOrder",set_updateOrder:"set_updateOrder",get_updateOrder:"get_updateOrder"}
};
var haxe_ui_behaviours_ValueBehaviour = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.behaviours.ValueBehaviour"] = haxe_ui_behaviours_ValueBehaviour;
haxe_ui_behaviours_ValueBehaviour.__name__ = "haxe.ui.behaviours.ValueBehaviour";
haxe_ui_behaviours_ValueBehaviour.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_behaviours_ValueBehaviour.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	_previousValue: null
	,_value: null
	,get: function() {
		return this._value;
	}
	,set: function(value) {
		if(haxe_ui_util_Variant.eq(value,this._value)) {
			return;
		}
		this._previousValue = this._value;
		this._value = value;
	}
	,__class__: haxe_ui_behaviours_ValueBehaviour
});
var haxe_ui_behaviours_IValidatingBehaviour = function() { };
$hxClasses["haxe.ui.behaviours.IValidatingBehaviour"] = haxe_ui_behaviours_IValidatingBehaviour;
haxe_ui_behaviours_IValidatingBehaviour.__name__ = "haxe.ui.behaviours.IValidatingBehaviour";
haxe_ui_behaviours_IValidatingBehaviour.__isInterface__ = true;
haxe_ui_behaviours_IValidatingBehaviour.prototype = {
	validate: null
	,__class__: haxe_ui_behaviours_IValidatingBehaviour
};
var haxe_ui_behaviours_DataBehaviour = function(component) {
	haxe_ui_behaviours_ValueBehaviour.call(this,component);
};
$hxClasses["haxe.ui.behaviours.DataBehaviour"] = haxe_ui_behaviours_DataBehaviour;
haxe_ui_behaviours_DataBehaviour.__name__ = "haxe.ui.behaviours.DataBehaviour";
haxe_ui_behaviours_DataBehaviour.__interfaces__ = [haxe_ui_behaviours_IValidatingBehaviour];
haxe_ui_behaviours_DataBehaviour.__super__ = haxe_ui_behaviours_ValueBehaviour;
haxe_ui_behaviours_DataBehaviour.prototype = $extend(haxe_ui_behaviours_ValueBehaviour.prototype,{
	_dataInvalid: null
	,set: function(value) {
		if(haxe_ui_util_Variant.eq(value,this.get())) {
			return;
		}
		this._previousValue = this._value;
		this._value = value;
		this.invalidateData();
	}
	,validate: function() {
		if(this._dataInvalid) {
			this._dataInvalid = false;
			this.validateData();
		}
	}
	,invalidateData: function() {
		this._dataInvalid = true;
		this._component.invalidateComponent("data",false);
	}
	,validateData: function() {
	}
	,__class__: haxe_ui_behaviours_DataBehaviour
});
var haxe_ui_behaviours_DefaultBehaviour = function(component) {
	this._value = null;
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.behaviours.DefaultBehaviour"] = haxe_ui_behaviours_DefaultBehaviour;
haxe_ui_behaviours_DefaultBehaviour.__name__ = "haxe.ui.behaviours.DefaultBehaviour";
haxe_ui_behaviours_DefaultBehaviour.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_behaviours_DefaultBehaviour.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	_value: null
	,get: function() {
		return this._value;
	}
	,set: function(value) {
		if(haxe_ui_util_Variant.eq(value,this._value)) {
			return;
		}
		this._value = value;
		haxe_ui_behaviours_Behaviour.prototype.set.call(this,value);
	}
	,__class__: haxe_ui_behaviours_DefaultBehaviour
});
var haxe_ui_behaviours_InvalidatingBehaviour = function(component) {
	haxe_ui_behaviours_ValueBehaviour.call(this,component);
};
$hxClasses["haxe.ui.behaviours.InvalidatingBehaviour"] = haxe_ui_behaviours_InvalidatingBehaviour;
haxe_ui_behaviours_InvalidatingBehaviour.__name__ = "haxe.ui.behaviours.InvalidatingBehaviour";
haxe_ui_behaviours_InvalidatingBehaviour.__super__ = haxe_ui_behaviours_ValueBehaviour;
haxe_ui_behaviours_InvalidatingBehaviour.prototype = $extend(haxe_ui_behaviours_ValueBehaviour.prototype,{
	get: function() {
		return this._value;
	}
	,set: function(value) {
		if(haxe_ui_util_Variant.eq(value,this._value)) {
			return;
		}
		haxe_ui_behaviours_ValueBehaviour.prototype.set.call(this,value);
		this._component.invalidateComponent();
	}
	,__class__: haxe_ui_behaviours_InvalidatingBehaviour
});
var haxe_ui_behaviours_LayoutBehaviour = function(component) {
	haxe_ui_behaviours_ValueBehaviour.call(this,component);
};
$hxClasses["haxe.ui.behaviours.LayoutBehaviour"] = haxe_ui_behaviours_LayoutBehaviour;
haxe_ui_behaviours_LayoutBehaviour.__name__ = "haxe.ui.behaviours.LayoutBehaviour";
haxe_ui_behaviours_LayoutBehaviour.__super__ = haxe_ui_behaviours_ValueBehaviour;
haxe_ui_behaviours_LayoutBehaviour.prototype = $extend(haxe_ui_behaviours_ValueBehaviour.prototype,{
	set: function(value) {
		if(haxe_ui_util_Variant.eq(value,this.get())) {
			return;
		}
		haxe_ui_behaviours_ValueBehaviour.prototype.set.call(this,value);
		var _this = this._component;
		if(!(_this._layout == null || _this._layoutLocked == true)) {
			_this.invalidateComponent("layout",false);
		}
	}
	,__class__: haxe_ui_behaviours_LayoutBehaviour
});
var haxe_ui_core_IValueComponent = function() { };
$hxClasses["haxe.ui.core.IValueComponent"] = haxe_ui_core_IValueComponent;
haxe_ui_core_IValueComponent.__name__ = "haxe.ui.core.IValueComponent";
haxe_ui_core_IValueComponent.__isInterface__ = true;
haxe_ui_core_IValueComponent.prototype = {
	get_value: null
	,set_value: null
	,__class__: haxe_ui_core_IValueComponent
	,__properties__: {set_value:"set_value",get_value:"get_value"}
};
var haxe_ui_focus_IFocusable = function() { };
$hxClasses["haxe.ui.focus.IFocusable"] = haxe_ui_focus_IFocusable;
haxe_ui_focus_IFocusable.__name__ = "haxe.ui.focus.IFocusable";
haxe_ui_focus_IFocusable.__isInterface__ = true;
haxe_ui_focus_IFocusable.prototype = {
	get_focus: null
	,set_focus: null
	,get_allowFocus: null
	,set_allowFocus: null
	,get_autoFocus: null
	,set_autoFocus: null
	,get_disabled: null
	,set_disabled: null
	,__class__: haxe_ui_focus_IFocusable
	,__properties__: {set_disabled:"set_disabled",get_disabled:"get_disabled",set_autoFocus:"set_autoFocus",get_autoFocus:"get_autoFocus",set_allowFocus:"set_allowFocus",get_allowFocus:"get_allowFocus",set_focus:"set_focus",get_focus:"get_focus"}
};
var haxe_ui_core_InteractiveComponent = function() {
	this._validators = null;
	this._autoFocus = true;
	this._allowFocus = true;
	this._focus = false;
	this.actionRepeatInterval = 100;
	haxe_ui_core_Component.call(this);
};
$hxClasses["haxe.ui.core.InteractiveComponent"] = haxe_ui_core_InteractiveComponent;
haxe_ui_core_InteractiveComponent.__name__ = "haxe.ui.core.InteractiveComponent";
haxe_ui_core_InteractiveComponent.__interfaces__ = [haxe_ui_core_IValueComponent,haxe_ui_focus_IFocusable];
haxe_ui_core_InteractiveComponent.__super__ = haxe_ui_core_Component;
haxe_ui_core_InteractiveComponent.prototype = $extend(haxe_ui_core_Component.prototype,{
	actionRepeatInterval: null
	,_focus: null
	,get_focus: function() {
		return this._focus;
	}
	,set_focus: function(value) {
		if(this._focus == value || this.get_allowFocus() == false) {
			return value;
		}
		this._focus = value;
		var eventType = null;
		if(this._focus == true) {
			eventType = "focusin";
			haxe_ui_focus_FocusManager.get_instance().set_focus(js_Boot.__cast(this , haxe_ui_focus_IFocusable));
			var scrollview = this.findScroller();
			if(scrollview != null) {
				scrollview.ensureVisible(this);
			}
		} else {
			eventType = "focusout";
			haxe_ui_focus_FocusManager.get_instance().set_focus(null);
		}
		this.invalidateComponent("data",false);
		this.dispatch(new haxe_ui_events_FocusEvent(eventType));
		return value;
	}
	,_allowFocus: null
	,get_allowFocus: function() {
		return this._allowFocus;
	}
	,set_allowFocus: function(value) {
		if(this._allowFocus == value) {
			return value;
		}
		this._allowFocus = value;
		var _g = 0;
		var _g1 = this._children == null ? [] : this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(js_Boot.__implements(child,haxe_ui_focus_IFocusable)) {
				(js_Boot.__cast(child , haxe_ui_focus_IFocusable)).set_allowFocus(value);
			}
		}
		return value;
	}
	,_autoFocus: null
	,get_autoFocus: function() {
		return this._autoFocus;
	}
	,set_autoFocus: function(value) {
		if(this._autoFocus == value) {
			return value;
		}
		this._autoFocus = value;
		var _g = 0;
		var _g1 = this._children == null ? [] : this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(js_Boot.__implements(child,haxe_ui_focus_IFocusable)) {
				(js_Boot.__cast(child , haxe_ui_focus_IFocusable)).set_autoFocus(value);
			}
		}
		return value;
	}
	,findScroller: function() {
		var view = null;
		var ref = this;
		while(ref != null) {
			if(js_Boot.__implements(ref,haxe_ui_core_IScrollView)) {
				view = js_Boot.__cast(ref , haxe_ui_core_IScrollView);
				break;
			}
			ref = ref.parentComponent;
		}
		return view;
	}
	,_validators: null
	,get_validators: function() {
		return this._validators;
	}
	,set_validators: function(value) {
		if(value == null) {
			this.unregisterEvent("change",$bind(this,this._onInteractiveChange));
		}
		this._validators = value;
		if(this._validators != null) {
			this.registerEvent("change",$bind(this,this._onInteractiveChange));
			this.applyValidators();
		}
		return value;
	}
	,applyValidators: function() {
		if(this._validators == null) {
			return;
		}
		var _g = 0;
		var _g1 = this._validators;
		while(_g < _g1.length) {
			var v = _g1[_g];
			++_g;
			if(v == null) {
				continue;
			}
			v.setup(this);
			this.validateComponentValue();
		}
	}
	,validateComponentValue: function() {
		if(this._validators == null) {
			return;
		}
		var _g = 0;
		var _g1 = this._validators;
		while(_g < _g1.length) {
			var v = _g1[_g];
			++_g;
			if(v == null) {
				continue;
			}
			v.validate(this);
		}
	}
	,_onInteractiveChange: function(event) {
		this.validateComponentValue();
	}
	,registerBehaviours: function() {
		haxe_ui_core_Component.prototype.registerBehaviours.call(this);
		this.behaviours.register("allowInteraction",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util_Variant.fromBool(true));
	}
	,get_allowInteraction: function() {
		if(this.behaviours == null) {
			return false;
		}
		return haxe_ui_util_Variant.toBool(this.behaviours.get("allowInteraction"));
	}
	,set_allowInteraction: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("allowInteraction",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"allowInteraction"));
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_Component.prototype.cloneComponent.call(this);
		c.set_allowInteraction(this.get_allowInteraction());
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_core_InteractiveComponent();
	}
	,__class__: haxe_ui_core_InteractiveComponent
	,__properties__: $extend(haxe_ui_core_Component.prototype.__properties__,{set_allowInteraction:"set_allowInteraction",get_allowInteraction:"get_allowInteraction",set_validators:"set_validators",get_validators:"get_validators",set_autoFocus:"set_autoFocus",get_autoFocus:"get_autoFocus",set_allowFocus:"set_allowFocus",get_allowFocus:"get_allowFocus",set_focus:"set_focus",get_focus:"get_focus"})
});
var haxe_ui_components_Button = function() {
	haxe_ui_core_InteractiveComponent.call(this);
};
$hxClasses["haxe.ui.components.Button"] = haxe_ui_components_Button;
haxe_ui_components_Button.__name__ = "haxe.ui.components.Button";
haxe_ui_components_Button.__super__ = haxe_ui_core_InteractiveComponent;
haxe_ui_components_Button.prototype = $extend(haxe_ui_core_InteractiveComponent.prototype,{
	registerBehaviours: function() {
		haxe_ui_core_InteractiveComponent.prototype.registerBehaviours.call(this);
		this.behaviours.register("repeater",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util_Variant.fromBool(false));
		this.behaviours.register("repeatInterval",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util_Variant.fromInt(100));
		this.behaviours.register("easeInRepeater",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util_Variant.fromBool(false));
		this.behaviours.register("remainPressed",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util_Variant.fromBool(false));
		this.behaviours.register("toggle",haxe_ui_components__$Button_ToggleBehaviour);
		this.behaviours.register("selected",haxe_ui_components__$Button_SelectedBehaviour);
		this.behaviours.register("text",haxe_ui_components__$Button_TextBehaviour);
		this.behaviours.register("icon",haxe_ui_components__$Button_IconBehaviour);
		this.behaviours.register("componentGroup",haxe_ui_components__$Button_GroupBehaviour);
	}
	,get_repeater: function() {
		if(this.behaviours == null) {
			return false;
		}
		return haxe_ui_util_Variant.toBool(this.behaviours.get("repeater"));
	}
	,set_repeater: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("repeater",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"repeater"));
		return value;
	}
	,get_repeatInterval: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toInt(this.behaviours.get("repeatInterval"));
	}
	,set_repeatInterval: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("repeatInterval",haxe_ui_util_Variant.fromInt(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"repeatInterval"));
		return value;
	}
	,get_easeInRepeater: function() {
		if(this.behaviours == null) {
			return false;
		}
		return haxe_ui_util_Variant.toBool(this.behaviours.get("easeInRepeater"));
	}
	,set_easeInRepeater: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("easeInRepeater",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"easeInRepeater"));
		return value;
	}
	,get_remainPressed: function() {
		if(this.behaviours == null) {
			return false;
		}
		return haxe_ui_util_Variant.toBool(this.behaviours.get("remainPressed"));
	}
	,set_remainPressed: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("remainPressed",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"remainPressed"));
		return value;
	}
	,get_toggle: function() {
		if(this.behaviours == null) {
			return false;
		}
		return haxe_ui_util_Variant.toBool(this.behaviours.get("toggle"));
	}
	,set_toggle: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("toggle",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"toggle"));
		return value;
	}
	,get_selected: function() {
		if(this.behaviours == null) {
			return false;
		}
		return haxe_ui_util_Variant.toBool(this.behaviours.get("selected"));
	}
	,set_selected: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("selected",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"selected"));
		return value;
	}
	,get_icon: function() {
		if(this.behaviours == null) {
			return null;
		}
		return this.behaviours.get("icon");
	}
	,set_icon: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("icon",value);
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"icon"));
		return value;
	}
	,get_componentGroup: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("componentGroup"));
	}
	,set_componentGroup: function(value) {
		var _g = Type.typeof(value);
		if(_g._hx_index == 6) {
			if(_g.c == String) {
				if(value != null && StringTools.startsWith(value,"{{") && StringTools.endsWith(value,"}}")) {
					haxe_ui_locale_LocaleManager.get_instance().registerComponent(this,"componentGroup",null,value);
					return value;
				}
			}
		}
		this.behaviours.set("componentGroup",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"componentGroup"));
		return value;
	}
	,get_value: function() {
		return this.get_text();
	}
	,set_value: function(value) {
		var _g = Type.typeof(value);
		switch(_g._hx_index) {
		case 1:case 2:case 3:
			this.set_text(Std.string(value));
			break;
		case 7:
			if(_g.e == haxe_ui_util_VariantType) {
				var v = value;
				this.set_text(haxe_ui_util_Variant.toString(v));
			} else {
				this.set_text(value);
			}
			break;
		default:
			this.set_text(value);
		}
		return value;
	}
	,get_iconPosition: function() {
		if(this.get_customStyle().iconPosition != null) {
			return this.get_customStyle().iconPosition;
		}
		if(this.get_style() == null || this.get_style().iconPosition == null) {
			return null;
		}
		return this.get_style().iconPosition;
	}
	,set_iconPosition: function(value) {
		if(this.get_customStyle().iconPosition == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().iconPosition = null;
		} else {
			this.get_customStyle().iconPosition = value;
		}
		this.invalidateComponent("style",false);
		if(!(this._layout == null || this._layoutLocked == true)) {
			this.invalidateComponent("layout",false);
		}
		return value;
	}
	,get_fontSize: function() {
		if(this.get_customStyle().fontSize != null) {
			return this.get_customStyle().fontSize;
		}
		if(this.get_style() == null || this.get_style().fontSize == null) {
			return null;
		}
		return this.get_style().fontSize;
	}
	,set_fontSize: function(value) {
		if(this.get_customStyle().fontSize == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().fontSize = null;
		} else {
			this.get_customStyle().fontSize = value;
		}
		this.invalidateComponent("style",false);
		if(!(this._layout == null || this._layoutLocked == true)) {
			this.invalidateComponent("layout",false);
		}
		return value;
	}
	,get_textAlign: function() {
		if(this.get_customStyle().textAlign != null) {
			return this.get_customStyle().textAlign;
		}
		if(this.get_style() == null || this.get_style().textAlign == null) {
			return null;
		}
		return this.get_style().textAlign;
	}
	,set_textAlign: function(value) {
		if(this.get_customStyle().textAlign == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().textAlign = null;
		} else {
			this.get_customStyle().textAlign = value;
		}
		this.invalidateComponent("style",false);
		if(!(this._layout == null || this._layoutLocked == true)) {
			this.invalidateComponent("layout",false);
		}
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_InteractiveComponent.prototype.cloneComponent.call(this);
		c.set_repeater(this.get_repeater());
		c.set_repeatInterval(this.get_repeatInterval());
		c.set_easeInRepeater(this.get_easeInRepeater());
		c.set_remainPressed(this.get_remainPressed());
		c.set_toggle(this.get_toggle());
		c.set_selected(this.get_selected());
		if(this.get_icon() != null) {
			c.set_icon(this.get_icon());
		}
		if(this.get_componentGroup() != null) {
			c.set_componentGroup(this.get_componentGroup());
		}
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_components_Button();
	}
	,registerComposite: function() {
		haxe_ui_core_InteractiveComponent.prototype.registerComposite.call(this);
		this._internalEventsClass = haxe_ui_components_ButtonEvents;
		this._compositeBuilderClass = haxe_ui_components_ButtonBuilder;
		this._defaultLayoutClass = haxe_ui_components_ButtonLayout;
	}
	,__class__: haxe_ui_components_Button
	,__properties__: $extend(haxe_ui_core_InteractiveComponent.prototype.__properties__,{set_textAlign:"set_textAlign",get_textAlign:"get_textAlign",set_fontSize:"set_fontSize",get_fontSize:"get_fontSize",set_iconPosition:"set_iconPosition",get_iconPosition:"get_iconPosition",set_componentGroup:"set_componentGroup",get_componentGroup:"get_componentGroup",set_icon:"set_icon",get_icon:"get_icon",set_selected:"set_selected",get_selected:"get_selected",set_toggle:"set_toggle",get_toggle:"get_toggle",set_remainPressed:"set_remainPressed",get_remainPressed:"get_remainPressed",set_easeInRepeater:"set_easeInRepeater",get_easeInRepeater:"get_easeInRepeater",set_repeatInterval:"set_repeatInterval",get_repeatInterval:"get_repeatInterval",set_repeater:"set_repeater",get_repeater:"get_repeater"})
});
var haxe_ui_layouts_ILayout = function() { };
$hxClasses["haxe.ui.layouts.ILayout"] = haxe_ui_layouts_ILayout;
haxe_ui_layouts_ILayout.__name__ = "haxe.ui.layouts.ILayout";
haxe_ui_layouts_ILayout.__isInterface__ = true;
var haxe_ui_layouts_Layout = function() {
};
$hxClasses["haxe.ui.layouts.Layout"] = haxe_ui_layouts_Layout;
haxe_ui_layouts_Layout.__name__ = "haxe.ui.layouts.Layout";
haxe_ui_layouts_Layout.__interfaces__ = [haxe_ui_layouts_ILayout];
haxe_ui_layouts_Layout.prototype = {
	_component: null
	,get_component: function() {
		return this._component;
	}
	,set_component: function(value) {
		this._component = value;
		if(this._component != null) {
			var _this = this._component;
			if(!(_this._layout == null || _this._layoutLocked == true)) {
				_this.invalidateComponent("layout",false);
			}
		}
		return value;
	}
	,findComponent: function(criteria,type,recursive,searchType) {
		if(searchType == null) {
			searchType = "id";
		}
		if(this._component == null) {
			return null;
		}
		return this._component.findComponent(criteria,type,recursive,searchType);
	}
	,findComponents: function(styleName,type,maxDepth) {
		if(maxDepth == null) {
			maxDepth = 5;
		}
		if(this._component == null) {
			return null;
		}
		return this._component.findComponents(styleName,type,maxDepth);
	}
	,refresh: function() {
		if(this._component != null && this._component.get_isReady() == true) {
			this.resizeChildren();
			this._component.handlePreReposition();
			this.repositionChildren();
			this._component.handlePostReposition();
		}
	}
	,autoSize: function() {
		if(this.get_component().get_isReady() == false) {
			return false;
		}
		var calculatedWidth = null;
		var calculatedHeight = null;
		if(this.get_component().get_autoWidth() == true || this.get_component().get_autoHeight() == true) {
			var size = this.calcAutoSize();
			if(this.get_component().get_autoWidth() == true) {
				calculatedWidth = size.width;
			}
			if(this.get_component().get_autoHeight() == true) {
				calculatedHeight = size.height;
			}
			this.get_component().resizeComponent(calculatedWidth,calculatedHeight);
		}
		if(calculatedWidth == null) {
			return calculatedHeight != null;
		} else {
			return true;
		}
	}
	,marginTop: function(child) {
		if(child == null || child.get_style() == null || child.get_style().marginTop == null) {
			return 0;
		}
		return child.get_style().marginTop;
	}
	,marginLeft: function(child) {
		if(child == null || child.get_style() == null || child.get_style().marginLeft == null) {
			return 0;
		}
		return child.get_style().marginLeft;
	}
	,marginBottom: function(child) {
		if(child == null || child.get_style() == null || child.get_style().marginBottom == null) {
			return 0;
		}
		return child.get_style().marginBottom;
	}
	,marginRight: function(child) {
		if(child == null || child.get_style() == null || child.get_style().marginRight == null) {
			return 0;
		}
		return child.get_style().marginRight;
	}
	,childPaddingTop: function(child) {
		if(child == null || child.get_style() == null || child.get_style().paddingTop == null) {
			return 0;
		}
		return child.get_style().paddingTop;
	}
	,childPaddingLeft: function(child) {
		if(child == null || child.get_style() == null || child.get_style().paddingLeft == null) {
			return 0;
		}
		return child.get_style().paddingLeft;
	}
	,childPaddingBottom: function(child) {
		if(child == null || child.get_style() == null || child.get_style().paddingBottom == null) {
			return 0;
		}
		return child.get_style().paddingBottom;
	}
	,childPaddingRight: function(child) {
		if(child == null || child.get_style() == null || child.get_style().paddingRight == null) {
			return 0;
		}
		return child.get_style().paddingRight;
	}
	,hidden: function(c) {
		if(c == null) {
			c = this.get_component();
		}
		return c.get_hidden();
	}
	,horizontalAlign: function(child) {
		if(child == null || child.get_style() == null || child.get_style().horizontalAlign == null) {
			return "left";
		}
		return child.get_style().horizontalAlign;
	}
	,verticalAlign: function(child) {
		if(child == null || child.get_style() == null || child.get_style().verticalAlign == null) {
			return "top";
		}
		return child.get_style().verticalAlign;
	}
	,fixedMinWidth: function(child) {
		var fixedMinWidth = false;
		if(child != null && child.get_style() != null && child.get_style().minWidth != null) {
			fixedMinWidth = child.get_componentWidth() <= child.get_style().minWidth;
		}
		return fixedMinWidth;
	}
	,fixedMinHeight: function(child) {
		var fixedMinHeight = false;
		if(child != null && child.get_style() != null && child.get_style().minHeight != null) {
			fixedMinHeight = child.get_componentHeight() <= child.get_style().minHeight;
		}
		return fixedMinHeight;
	}
	,borderSize: null
	,get_borderSize: function() {
		if(this._component.get_style() == null) {
			return 0;
		}
		var n = this._component.get_style().get_fullBorderSize();
		var tmp = n > 0;
		return n;
	}
	,paddingLeft: null
	,get_paddingLeft: function() {
		if(this._component == null || this._component.get_style() == null || this._component.get_style().paddingLeft == null) {
			return 0;
		}
		return this._component.get_style().paddingLeft;
	}
	,paddingTop: null
	,get_paddingTop: function() {
		if(this._component == null || this._component.get_style() == null || this._component.get_style().paddingTop == null) {
			return 0;
		}
		return this._component.get_style().paddingTop;
	}
	,paddingBottom: null
	,get_paddingBottom: function() {
		if(this._component == null || this._component.get_style() == null || this._component.get_style().paddingBottom == null) {
			return 0;
		}
		return this._component.get_style().paddingBottom;
	}
	,paddingRight: null
	,get_paddingRight: function() {
		if(this._component == null || this._component.get_style() == null || this._component.get_style().paddingRight == null) {
			return 0;
		}
		return this._component.get_style().paddingRight;
	}
	,horizontalSpacing: null
	,get_horizontalSpacing: function() {
		if(this._component == null || this._component.get_style() == null || this._component.get_style().horizontalSpacing == null) {
			return 0;
		}
		return this._component.get_style().horizontalSpacing;
	}
	,verticalSpacing: null
	,get_verticalSpacing: function() {
		if(this._component == null || this._component.get_style() == null || this._component.get_style().verticalSpacing == null) {
			return 0;
		}
		return this._component.get_style().verticalSpacing;
	}
	,innerWidth: null
	,innerHeight: null
	,get_innerWidth: function() {
		if(this.get_component() == null) {
			return 0;
		}
		return this.get_component().get_componentWidth() - (this.get_paddingLeft() + this.get_paddingRight());
	}
	,get_innerHeight: function() {
		if(this.get_component() == null) {
			return 0;
		}
		var padding = 0;
		if(this.get_component().get_style() != null && this.get_component().get_style().paddingTop != null) {
			padding = this.get_component().get_style().paddingTop + padding;
		}
		if(this.get_component().get_style() != null && this.get_component().get_style().paddingBottom != null) {
			padding = this.get_component().get_style().paddingBottom + padding;
		}
		var icy = this.get_component().get_componentHeight() - padding;
		return icy;
	}
	,resizeChildren: function() {
	}
	,repositionChildren: function() {
	}
	,usableSize: null
	,get_usableSize: function() {
		var ucx = 0;
		if(this._component.get_componentWidth() != null) {
			ucx = this._component.get_componentWidth();
			ucx -= this.get_paddingLeft() + this.get_paddingRight();
		}
		var ucy = 0;
		if(this._component.get_componentHeight() != null) {
			ucy = this._component.get_componentHeight();
			ucy -= this.get_paddingTop() + this.get_paddingBottom();
		}
		return new haxe_ui_geom_Size(ucx,ucy);
	}
	,usableWidth: null
	,get_usableWidth: function() {
		return this.get_usableSize().width;
	}
	,usableHeight: null
	,get_usableHeight: function() {
		return this.get_usableSize().height;
	}
	,calcAutoWidth: function() {
		return this.calcAutoSize().width;
	}
	,calcAutoHeight: function() {
		return this.calcAutoSize().height;
	}
	,calcAutoSize: function(exclusions) {
		var x1 = 16777215;
		var x2 = 0;
		var y1 = 16777215;
		var y2 = 0;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false || this.excluded(exclusions,child) == true) {
				continue;
			}
			if(child.get_percentWidth() == null) {
				if(child.get_left() < x1) {
					x1 = child.get_left();
				}
				if(child.get_componentWidth() != null && child.get_left() + child.get_componentWidth() > x2) {
					x2 = child.get_left() + child.get_componentWidth();
				}
			}
			if(child.get_percentHeight() == null) {
				if(child.get_top() < y1) {
					y1 = child.get_top();
				}
				if(child.get_componentHeight() != null && child.get_top() + child.get_componentHeight() > y2) {
					y2 = child.get_top() + child.get_componentHeight();
				}
			}
		}
		if(x1 == 16777215) {
			x1 = 0;
		}
		if(y1 == 16777215) {
			y1 = 0;
		}
		var w = x2 - x1 + (this.get_paddingLeft() + this.get_paddingRight());
		var h = y2 - y1 + (this.get_paddingTop() + this.get_paddingBottom());
		if(((this) instanceof haxe_ui_layouts_AbsoluteLayout)) {
			w += x1;
			h += y1;
		}
		return new haxe_ui_geom_Size(w,h);
	}
	,excluded: function(exclusions,child) {
		if(exclusions == null || child == null) {
			return false;
		}
		return exclusions.indexOf(child) != -1;
	}
	,__class__: haxe_ui_layouts_Layout
	,__properties__: {get_usableHeight:"get_usableHeight",get_usableWidth:"get_usableWidth",get_usableSize:"get_usableSize",get_innerHeight:"get_innerHeight",get_innerWidth:"get_innerWidth",get_verticalSpacing:"get_verticalSpacing",get_horizontalSpacing:"get_horizontalSpacing",get_paddingRight:"get_paddingRight",get_paddingBottom:"get_paddingBottom",get_paddingTop:"get_paddingTop",get_paddingLeft:"get_paddingLeft",get_borderSize:"get_borderSize",set_component:"set_component",get_component:"get_component"}
};
var haxe_ui_layouts_DefaultLayout = function() {
	this._roundFullWidths = false;
	this._calcFullHeights = false;
	this._calcFullWidths = false;
	haxe_ui_layouts_Layout.call(this);
};
$hxClasses["haxe.ui.layouts.DefaultLayout"] = haxe_ui_layouts_DefaultLayout;
haxe_ui_layouts_DefaultLayout.__name__ = "haxe.ui.layouts.DefaultLayout";
haxe_ui_layouts_DefaultLayout.__super__ = haxe_ui_layouts_Layout;
haxe_ui_layouts_DefaultLayout.prototype = $extend(haxe_ui_layouts_Layout.prototype,{
	_calcFullWidths: null
	,_calcFullHeights: null
	,_roundFullWidths: null
	,buildWidthRoundingMap: function() {
		var tmp;
		if(this._roundFullWidths != false) {
			var _this = this.get_component();
			tmp = (_this._children == null ? [] : _this._children).length <= 1;
		} else {
			tmp = true;
		}
		if(tmp) {
			return null;
		}
		var map = null;
		var hasNonFullWidth = false;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			if(child.get_percentWidth() == null || child.get_percentWidth() != 100) {
				hasNonFullWidth = true;
				break;
			}
		}
		if(hasNonFullWidth == false) {
			var remainderWidth = this.get_usableWidth();
			var _this = this.get_component();
			var remainderWidth1 = remainderWidth % (_this._children == null ? [] : _this._children).length;
			if(remainderWidth1 != 0) {
				map = new haxe_ds_ObjectMap();
				var _g = 0;
				var _this = this.get_component();
				var _g1 = _this._children == null ? [] : _this._children;
				while(_g < _g1.length) {
					var child = _g1[_g];
					++_g;
					if(child.get_includeInLayout() == false) {
						continue;
					}
					var n = 0;
					if(remainderWidth1 > 0) {
						n = 1;
						--remainderWidth1;
					}
					map.set(child,n);
				}
			}
		}
		return map;
	}
	,resizeChildren: function() {
		var usableSize = this.get_usableSize();
		var percentWidth = 100;
		var percentHeight = 100;
		var fullWidthValue = 100;
		var fullHeightValue = 100;
		if(this._calcFullWidths == true || this._calcFullHeights == true) {
			var n1 = 0;
			var n2 = 0;
			var _g = 0;
			var _this = this.get_component();
			var _g1 = _this._children == null ? [] : _this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				if(child.get_includeInLayout() == false) {
					continue;
				}
				if(this._calcFullWidths == true && child.get_percentWidth() != null && child.get_percentWidth() == 100) {
					++n1;
				}
				if(this._calcFullHeights == true && child.get_percentHeight() != null && child.get_percentHeight() == 100) {
					++n2;
				}
			}
			if(n1 > 0) {
				fullWidthValue = 100 / n1;
			}
			if(n2 > 0) {
				fullHeightValue = 100 / n2;
			}
		}
		var childRoundingWidth = this.buildWidthRoundingMap();
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			var cx = null;
			var cy = null;
			if(child.get_percentWidth() != null) {
				var childPercentWidth = child.get_percentWidth();
				if(childPercentWidth == 100) {
					childPercentWidth = fullWidthValue;
				}
				cx = usableSize.width * childPercentWidth / percentWidth - this.marginLeft(child) - this.marginRight(child);
				if(childRoundingWidth != null && childRoundingWidth.h.__keys__[child.__id__] != null) {
					var roundDirection = childRoundingWidth.h[child.__id__];
					if(roundDirection == 0) {
						cx = Math.floor(cx);
					} else if(roundDirection == 1) {
						cx = Math.ceil(cx);
					}
				}
			}
			if(child.get_percentHeight() != null) {
				var childPercentHeight = child.get_percentHeight();
				if(childPercentHeight == 100) {
					childPercentHeight = fullHeightValue;
				}
				cy = usableSize.height * childPercentHeight / percentHeight - this.marginTop(child) - this.marginBottom(child);
			}
			if(this.fixedMinWidth(child) && child.get_percentWidth() != null) {
				percentWidth -= child.get_percentWidth();
			}
			if(this.fixedMinHeight(child) && child.get_percentHeight() != null) {
				percentHeight -= child.get_percentHeight();
			}
			child.resizeComponent(cx,cy);
		}
	}
	,repositionChildren: function() {
		var usableSize = this.get_usableSize();
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			var xpos = 0;
			var ypos = 0;
			switch(this.horizontalAlign(child)) {
			case "center":
				xpos = (usableSize.width - child.get_componentWidth()) / 2 + this.get_paddingLeft() + this.marginLeft(child) - this.marginRight(child);
				break;
			case "right":
				xpos = this.get_component().get_componentWidth() - (child.get_componentWidth() + this.get_paddingRight() + this.marginRight(child));
				break;
			default:
				xpos = this.get_paddingLeft() + this.marginLeft(child);
			}
			switch(this.verticalAlign(child)) {
			case "bottom":
				ypos = this.get_component().get_componentHeight() - (child.get_componentHeight() + this.get_paddingBottom() + this.marginBottom(child));
				break;
			case "center":
				ypos = (usableSize.height - child.get_componentHeight()) / 2 + this.get_paddingTop() + this.marginTop(child) - this.marginBottom(child);
				break;
			default:
				ypos = this.get_paddingTop() + this.marginTop(child);
			}
			child.moveComponent(xpos,ypos);
		}
	}
	,__class__: haxe_ui_layouts_DefaultLayout
});
var haxe_ui_components_ButtonLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.components.ButtonLayout"] = haxe_ui_components_ButtonLayout;
haxe_ui_components_ButtonLayout.__name__ = "haxe.ui.components.ButtonLayout";
haxe_ui_components_ButtonLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_components_ButtonLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	iconPosition: null
	,get_iconPosition: function() {
		if(this.get_component().get_style() == null || this.get_component().get_style().iconPosition == null) {
			return "left";
		}
		return this.get_component().get_style().iconPosition;
	}
	,resizeChildren: function() {
		haxe_ui_layouts_DefaultLayout.prototype.resizeChildren.call(this);
		if(this._component.get_autoWidth() == false) {
			var label = this.get_component().findComponent(null,haxe_ui_components_Label,false);
			var ucx = this.get_usableSize();
			var cx = ucx.width;
			if(label != null) {
				label.set_width(cx);
			}
			var itemRenderer = this.get_component().findComponent(null,haxe_ui_core_ItemRenderer);
			if(itemRenderer != null) {
				itemRenderer.set_width(cx);
			}
		}
	}
	,get_usableSize: function() {
		var size = haxe_ui_layouts_DefaultLayout.prototype.get_usableSize.call(this);
		var icon = this.get_component().findComponent("button-icon",null,false);
		if(icon != null && (this.get_iconPosition() == "far-right" || this.get_iconPosition() == "far-left" || this.get_iconPosition() == "left" || this.get_iconPosition() == "right")) {
			size.width -= icon.get_width() + this.get_verticalSpacing();
		}
		return size;
	}
	,calcAutoSize: function(exclusions) {
		var exclusions = [];
		var itemRenderer = this.get_component().findComponent(null,haxe_ui_core_ItemRenderer);
		var icon = this.get_component().findComponent("button-icon",null,false);
		var tmp;
		if(itemRenderer != null) {
			var icon1 = this.get_component().findComponent("button-icon",null,false);
			tmp = icon1 != null && (this.get_iconPosition() == "far-right" || this.get_iconPosition() == "far-left" || this.get_iconPosition() == "left" || this.get_iconPosition() == "right");
		} else {
			tmp = false;
		}
		if(tmp) {
			exclusions.push(icon);
		}
		var size = haxe_ui_layouts_DefaultLayout.prototype.calcAutoSize.call(this,exclusions);
		var tmp;
		if(itemRenderer != null) {
			var icon1 = this.get_component().findComponent("button-icon",null,false);
			tmp = icon1 != null && (this.get_iconPosition() == "far-right" || this.get_iconPosition() == "far-left" || this.get_iconPosition() == "left" || this.get_iconPosition() == "right");
		} else {
			tmp = false;
		}
		if(tmp) {
			size.width += icon.get_width() + this.get_verticalSpacing();
		}
		return size;
	}
	,isIconRelevant: function() {
		var icon = this.get_component().findComponent("button-icon",null,false);
		if(icon != null) {
			if(!(this.get_iconPosition() == "far-right" || this.get_iconPosition() == "far-left" || this.get_iconPosition() == "left")) {
				return this.get_iconPosition() == "right";
			} else {
				return true;
			}
		} else {
			return false;
		}
	}
	,repositionChildren: function() {
		haxe_ui_layouts_DefaultLayout.prototype.repositionChildren.call(this);
		var label = this.get_component().findComponent(null,haxe_ui_components_Label,false);
		if(label != null && label.get_hidden() == true) {
			label = null;
		}
		var icon = this.get_component().findComponent("button-icon",null,false);
		if(icon != null && icon.get_hidden() == true) {
			icon = null;
		}
		switch(this.get_iconPosition()) {
		case "far-left":
			if(label != null && icon != null) {
				var x = this.get_paddingLeft();
				if(this.get_iconPosition() == "far-left") {
					icon.set_left(x + this.marginLeft(icon) - this.marginRight(icon));
					x += this.get_horizontalSpacing() + icon.get_componentWidth();
					label.set_left(x + this.marginLeft(label) - this.marginRight(label));
				}
				label.set_top((this.get_component().get_componentHeight() / 2 - label.get_componentHeight() / 2 | 0) + this.marginTop(label) - this.marginBottom(label));
				icon.set_top((this.get_component().get_componentHeight() / 2 - icon.get_componentHeight() / 2 | 0) + this.marginTop(icon) - this.marginBottom(icon));
			} else if(label != null) {
				label.set_left(this.get_paddingLeft());
				label.set_top((this.get_component().get_componentHeight() / 2 - label.get_componentHeight() / 2 | 0) + this.marginTop(label) - this.marginBottom(label));
			} else if(icon != null) {
				icon.set_left(this.get_component().get_componentWidth() / 2 - icon.get_componentWidth() / 2 | 0);
				icon.set_top((this.get_component().get_componentHeight() / 2 - icon.get_componentHeight() / 2 | 0) + this.marginTop(icon) - this.marginBottom(icon));
			}
			break;
		case "far-right":
			if(label != null && icon != null) {
				var cx = label.get_componentWidth() + icon.get_componentWidth() + this.get_horizontalSpacing();
				var x = this.get_component().get_componentWidth() / 2 - cx / 2 | 0;
				if(this.get_iconPosition() == "far-right") {
					if(cx + this.get_paddingLeft() + this.get_paddingRight() < this.get_component().get_componentWidth()) {
						label.set_left(this.get_paddingLeft());
						x += this.get_horizontalSpacing() + label.get_componentWidth();
						icon.set_left(this.get_component().get_componentWidth() - icon.get_componentWidth() - this.get_paddingRight() + this.marginLeft(icon) - this.marginRight(icon));
					} else {
						label.set_left(this.get_paddingLeft());
						x += this.get_horizontalSpacing() + label.get_componentWidth();
						icon.set_left(x + this.marginLeft(icon) - this.marginRight(icon));
					}
				}
				label.set_top((this.get_component().get_componentHeight() / 2 - label.get_componentHeight() / 2 | 0) + this.marginTop(label) - this.marginBottom(label));
				icon.set_top((this.get_component().get_componentHeight() / 2 - icon.get_componentHeight() / 2 | 0) + this.marginTop(icon) - this.marginBottom(icon));
			} else if(label != null) {
				label.set_left(this.get_paddingLeft());
				label.set_top((this.get_component().get_componentHeight() / 2 - label.get_componentHeight() / 2 | 0) + this.marginTop(label) - this.marginBottom(label));
			} else if(icon != null) {
				icon.set_left(this.get_component().get_componentWidth() - icon.get_componentWidth() - this.get_paddingRight() + this.marginLeft(icon) - this.marginRight(icon));
				icon.set_top((this.get_component().get_componentHeight() / 2 - icon.get_componentHeight() / 2 | 0) + this.marginTop(icon) - this.marginBottom(icon));
			}
			break;
		case "left":case "right":
			if(label != null && icon != null) {
				var cx = label.get_componentWidth() + icon.get_componentWidth() + this.get_horizontalSpacing();
				var x = this.get_component().get_componentWidth() / 2 - cx / 2 | 0;
				if((js_Boot.__cast(this.get_component() , haxe_ui_components_Button)).get_textAlign() == "left") {
					x = this.get_paddingLeft();
				}
				if(this.get_iconPosition() == "right") {
					label.set_left(x + this.marginLeft(label) - this.marginRight(label));
					x += this.get_horizontalSpacing() + label.get_componentWidth();
					icon.set_left(x + this.marginLeft(icon) - this.marginRight(icon));
				} else {
					icon.set_left(x + this.marginLeft(icon) - this.marginRight(icon));
					x += this.get_horizontalSpacing() + icon.get_componentWidth();
					label.set_left(x + this.marginLeft(label) - this.marginRight(label));
				}
				label.set_top((this.get_component().get_componentHeight() / 2 - label.get_componentHeight() / 2 | 0) + this.marginTop(label) - this.marginBottom(label));
				icon.set_top((this.get_component().get_componentHeight() / 2 - icon.get_componentHeight() / 2 | 0) + this.marginTop(icon) - this.marginBottom(icon));
			} else if(label != null) {
				label.set_left(this.getTextAlignPos(label,this.get_component().get_componentWidth()));
				label.set_top((this.get_component().get_componentHeight() / 2 - label.get_componentHeight() / 2 | 0) + this.marginTop(label) - this.marginBottom(label));
			} else if(icon != null) {
				icon.set_left(this.get_component().get_componentWidth() / 2 - icon.get_componentWidth() / 2 | 0);
				icon.set_top((this.get_component().get_componentHeight() / 2 - icon.get_componentHeight() / 2 | 0) + this.marginTop(icon) - this.marginBottom(icon));
			}
			break;
		case "bottom":case "top":
			if(label != null && icon != null) {
				var cy = label.get_componentHeight() + icon.get_componentHeight() + this.get_verticalSpacing();
				var y = this.get_component().get_componentHeight() / 2 - cy / 2 | 0;
				if(this.get_iconPosition() == "bottom") {
					label.set_top(y + this.marginTop(label) - this.marginBottom(label));
					y += this.get_verticalSpacing() + label.get_componentHeight();
					icon.set_top(y + this.marginTop(icon) - this.marginBottom(icon));
				} else {
					icon.set_top(y + this.marginTop(icon) - this.marginBottom(icon));
					y += this.get_verticalSpacing() + icon.get_componentHeight();
					label.set_top(y + this.marginTop(label) - this.marginBottom(label));
				}
				label.set_left(this.getTextAlignPos(label,this.get_component().get_componentWidth()));
				icon.set_left((this.get_component().get_componentWidth() / 2 - icon.get_componentWidth() / 2 | 0) + this.marginLeft(icon) - this.marginRight(icon));
			} else if(label != null) {
				label.set_left((this.get_component().get_componentWidth() / 2 - label.get_componentWidth() / 2 | 0) + this.marginLeft(label) - this.marginRight(label));
				label.set_top((this.get_component().get_componentHeight() / 2 - label.get_componentHeight() / 2 | 0) + this.marginTop(label) - this.marginBottom(label));
			} else if(icon != null) {
				icon.set_left((this.get_component().get_componentWidth() / 2 - icon.get_componentWidth() / 2 | 0) + this.marginLeft(icon) - this.marginRight(icon));
				icon.set_top((this.get_component().get_componentHeight() / 2 - icon.get_componentHeight() / 2 | 0) + this.marginTop(icon) - this.marginBottom(icon));
			}
			break;
		}
	}
	,getTextAlignPos: function(label,usableWidth) {
		switch((js_Boot.__cast(this.get_component() , haxe_ui_components_Button)).get_textAlign()) {
		case "left":
			return this.marginLeft(label) + this.get_paddingLeft();
		case "right":
			return usableWidth - label.get_componentWidth() - this.marginRight(label) - this.get_paddingRight();
		default:
			return (usableWidth / 2 - label.get_componentWidth() / 2 | 0) + this.marginLeft(label) - this.marginRight(label);
		}
	}
	,__class__: haxe_ui_components_ButtonLayout
	,__properties__: $extend(haxe_ui_layouts_DefaultLayout.prototype.__properties__,{get_iconPosition:"get_iconPosition"})
});
var haxe_ui_components__$Button_GroupBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Button.GroupBehaviour"] = haxe_ui_components__$Button_GroupBehaviour;
haxe_ui_components__$Button_GroupBehaviour.__name__ = "haxe.ui.components._Button.GroupBehaviour";
haxe_ui_components__$Button_GroupBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Button_GroupBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		haxe_ui_components_ButtonGroups.get_instance().add(haxe_ui_util_Variant.toString(this._value),this._component);
	}
	,__class__: haxe_ui_components__$Button_GroupBehaviour
});
var haxe_ui_components__$Button_TextBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Button.TextBehaviour"] = haxe_ui_components__$Button_TextBehaviour;
haxe_ui_components__$Button_TextBehaviour.__name__ = "haxe.ui.components._Button.TextBehaviour";
haxe_ui_components__$Button_TextBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Button_TextBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	get: function() {
		var itemRenderer = this._component.findComponent(null,haxe_ui_core_ItemRenderer);
		if(itemRenderer == null) {
			return haxe_ui_behaviours_DataBehaviour.prototype.get.call(this);
		} else if(!this._component.get_isReady()) {
			return haxe_ui_behaviours_DataBehaviour.prototype.get.call(this);
		} else {
			var data = itemRenderer.get_data();
			var text = null;
			if(data != null) {
				if(Type.typeof(data) == ValueType.TObject) {
					text = data.text;
					if(text == null) {
						text = data.value;
					}
				} else {
					text = Std.string(data);
				}
			}
			return haxe_ui_util_Variant.fromString(text);
		}
	}
	,validateData: function() {
		var itemRenderer = this._component.findComponent(null,haxe_ui_core_ItemRenderer);
		if(itemRenderer != null) {
			var data = itemRenderer.get_data();
			if(data == null) {
				data = { };
			} else {
				data = Reflect.copy(data);
			}
			data.text = haxe_ui_util_Variant.toString(this._value);
			itemRenderer.set_data(data);
		} else {
			var label = this._component.findComponent(null,haxe_ui_components_Label,false);
			if(label == null) {
				label = new haxe_ui_components_Label();
				label.set_id("button-label");
				label.set_scriptAccess(false);
				this._component.addComponent(label);
				var _this = this._component;
				var force = true;
				if(force == null) {
					force = false;
				}
				_this.invalidateComponent("style",false);
				if(force == true) {
					_this._style = null;
				}
			}
			label.set_text(haxe_ui_util_Variant.toString(this._value));
		}
	}
	,__class__: haxe_ui_components__$Button_TextBehaviour
});
var haxe_ui_components__$Button_IconBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Button.IconBehaviour"] = haxe_ui_components__$Button_IconBehaviour;
haxe_ui_components__$Button_IconBehaviour.__name__ = "haxe.ui.components._Button.IconBehaviour";
haxe_ui_components__$Button_IconBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Button_IconBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var icon = this._component.findComponent("button-icon",null,false);
		if((this._value == null || haxe_ui_util_Variant.get_isNull(this._value)) && icon != null) {
			this._component.get_customStyle().icon = null;
			this._component.removeComponent(icon);
			return;
		}
		if(icon == null) {
			icon = new haxe_ui_components_Image();
			icon.addClass("icon");
			icon.set_id("button-icon");
			icon.set_scriptAccess(false);
			this._component.addComponentAt(icon,0);
			var _this = this._component;
			var force = true;
			if(force == null) {
				force = false;
			}
			_this.invalidateComponent("style",false);
			if(force == true) {
				_this._style = null;
			}
		}
		icon.set_resource(this._value);
	}
	,__class__: haxe_ui_components__$Button_IconBehaviour
});
var haxe_ui_components__$Button_ToggleBehaviour = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Button.ToggleBehaviour"] = haxe_ui_components__$Button_ToggleBehaviour;
haxe_ui_components__$Button_ToggleBehaviour.__name__ = "haxe.ui.components._Button.ToggleBehaviour";
haxe_ui_components__$Button_ToggleBehaviour.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_components__$Button_ToggleBehaviour.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	_value: null
	,get: function() {
		return this._value;
	}
	,set: function(value) {
		if(haxe_ui_util_Variant.eq(this._value,value)) {
			return;
		}
		this._value = value;
		var button = js_Boot.__cast(this._component , haxe_ui_components_Button);
		if(haxe_ui_util_Variant.eq(value,haxe_ui_util_Variant.fromBool(false))) {
			button.set_selected(false);
		}
		button.registerInternalEvents(button._internalEventsClass,true);
	}
	,__class__: haxe_ui_components__$Button_ToggleBehaviour
});
var haxe_ui_components__$Button_SelectedBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Button.SelectedBehaviour"] = haxe_ui_components__$Button_SelectedBehaviour;
haxe_ui_components__$Button_SelectedBehaviour.__name__ = "haxe.ui.components._Button.SelectedBehaviour";
haxe_ui_components__$Button_SelectedBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Button_SelectedBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var button = js_Boot.__cast(this._component , haxe_ui_components_Button);
		if(button.get_toggle() == false) {
			return;
		}
		haxe_ui_components_ButtonGroups.get_instance().setSelection(button,haxe_ui_util_Variant.toBool(this._value));
		if(haxe_ui_util_Variant.eq(this._value,haxe_ui_util_Variant.fromBool(false))) {
			button.removeClass(":down",true,true);
		} else {
			button.addClass(":down",true,true);
		}
		var events = js_Boot.__cast(button._internalEvents , haxe_ui_components_ButtonEvents);
		if(button.hitTest(haxe_ui_core_Screen.get_instance().currentMouseX,haxe_ui_core_Screen.get_instance().currentMouseY)) {
			button.addClass(":hover",true,events.recursiveStyling);
		} else {
			button.removeClass(":hover",true,events.recursiveStyling);
		}
		events.dispatchChanged();
	}
	,__class__: haxe_ui_components__$Button_SelectedBehaviour
});
var haxe_ui_events_Events = function(target) {
	this._target = target;
};
$hxClasses["haxe.ui.events.Events"] = haxe_ui_events_Events;
haxe_ui_events_Events.__name__ = "haxe.ui.events.Events";
haxe_ui_events_Events.prototype = {
	_target: null
	,register: function() {
	}
	,unregister: function() {
	}
	,registerEvent: function(type,listener,priority) {
		if(priority == null) {
			priority = 0;
		}
		if(this.hasEvent(type,listener) == false) {
			this._target.registerEvent(type,listener,priority);
		}
	}
	,hasEvent: function(type,listener) {
		return this._target.hasEvent(type,listener);
	}
	,unregisterEvent: function(type,listener) {
		this._target.unregisterEvent(type,listener);
	}
	,dispatch: function(event) {
		this._target.dispatch(event);
	}
	,__class__: haxe_ui_events_Events
};
var haxe_ui_components_ButtonEvents = function(button) {
	this.recursiveStyling = true;
	this._repeatInterval = 0;
	this._repeater = false;
	this._down = false;
	haxe_ui_events_Events.call(this,button);
	this._button = button;
};
$hxClasses["haxe.ui.components.ButtonEvents"] = haxe_ui_components_ButtonEvents;
haxe_ui_components_ButtonEvents.__name__ = "haxe.ui.components.ButtonEvents";
haxe_ui_components_ButtonEvents.__super__ = haxe_ui_events_Events;
haxe_ui_components_ButtonEvents.prototype = $extend(haxe_ui_events_Events.prototype,{
	_button: null
	,_down: null
	,_repeatTimer: null
	,_repeater: null
	,_repeatInterval: null
	,recursiveStyling: null
	,register: function() {
		if(this.hasEvent("mouseover",$bind(this,this.onMouseOver)) == false) {
			this.registerEvent("mouseover",$bind(this,this.onMouseOver));
		}
		if(this.hasEvent("mouseout",$bind(this,this.onMouseOut)) == false) {
			this.registerEvent("mouseout",$bind(this,this.onMouseOut));
		}
		if(this.hasEvent("mousedown",$bind(this,this.onMouseDown)) == false) {
			this.registerEvent("mousedown",$bind(this,this.onMouseDown));
		}
		if(this.hasEvent("move",$bind(this,this.onMove)) == false) {
			this.registerEvent("move",$bind(this,this.onMove));
		}
		if(this.hasEvent("actionstart",$bind(this,this.onActionStart)) == false) {
			this.registerEvent("actionstart",$bind(this,this.onActionStart));
		}
		if(this.hasEvent("actionend",$bind(this,this.onActionEnd)) == false) {
			this.registerEvent("actionend",$bind(this,this.onActionEnd));
		}
		if(this._button.get_toggle() == true) {
			this.registerEvent("click",$bind(this,this.onMouseClick),100);
		}
	}
	,unregister: function() {
		this.unregisterEvent("mouseover",$bind(this,this.onMouseOver));
		this.unregisterEvent("mouseout",$bind(this,this.onMouseOut));
		this.unregisterEvent("mousedown",$bind(this,this.onMouseDown));
		this.unregisterEvent("click",$bind(this,this.onMouseClick));
		this.unregisterEvent("move",$bind(this,this.onMove));
		this.unregisterEvent("actionstart",$bind(this,this.onActionStart));
		this.unregisterEvent("actionend",$bind(this,this.onActionEnd));
	}
	,onMouseOver: function(event) {
		if(this._button.get_toggle() == true && this._button.classes.indexOf(":down") != -1) {
			return;
		}
		if(event.buttonDown == false || this._down == false) {
			this._button.addClass(":hover",true,this.recursiveStyling);
		} else {
			this._button.addClass(":down",true,this.recursiveStyling);
		}
	}
	,onMouseOut: function(event) {
		if(this._button.get_toggle() == true && this._button.get_selected() == true) {
			return;
		}
		if(this._button.get_remainPressed() == false) {
			this._button.removeClass(":down",true,this.recursiveStyling);
		}
		this._button.removeClass(":hover",true,this.recursiveStyling);
	}
	,onMouseDown: function(event) {
		var _gthis = this;
		this._button.set_focus(true);
		if(this._button.get_repeater() == true && this._repeatInterval == 0) {
			this._repeatInterval = this._button.get_easeInRepeater() ? this._button.get_repeatInterval() * 2 : this._button.get_repeatInterval();
		}
		this._down = true;
		this._button.addClass(":down",true,this.recursiveStyling);
		this._button.get_screen().registerEvent("mouseup",$bind(this,this.onMouseUp));
		if(this._repeater == true && this._repeatInterval == this._button.get_repeatInterval()) {
			this._repeatTimer = new haxe_ui_util_Timer(this._repeatInterval,$bind(this,this.onRepeatTimer));
		} else if(this._button.get_repeater() == true) {
			if(this._repeatTimer != null) {
				this._repeatTimer.stop();
				this._repeatTimer = null;
			}
			haxe_ui_util_Timer.delay(function() {
				if(_gthis._repeater == true && _gthis._repeatTimer == null) {
					if(_gthis._button.get_easeInRepeater() == true && _gthis._repeatInterval > _gthis._button.get_repeatInterval()) {
						var tmp = _gthis._repeatInterval - (_gthis._repeatInterval - _gthis._button.get_repeatInterval()) / 2 | 0;
						_gthis._repeatInterval = tmp;
						_gthis.onRepeatTimer();
					}
					_gthis.onMouseDown(event);
				}
			},this._repeatInterval);
		}
		this._repeater = this._button.get_repeater();
	}
	,onMouseUp: function(event) {
		this._down = this._repeater = false;
		this._repeatInterval = this._button.get_easeInRepeater() ? this._button.get_repeatInterval() * 2 : this._button.get_repeatInterval();
		this._button.get_screen().unregisterEvent("mouseup",$bind(this,this.onMouseUp));
		if(this._button.get_toggle() == true) {
			return;
		}
		this._button.removeClass(":down",true,this.recursiveStyling);
		var over = this._button.hitTest(event.screenX,event.screenY);
		if(event.touchEvent == false && over == true) {
			this._button.addClass(":hover",true,this.recursiveStyling);
		} else if(over == false) {
			this._button.removeClass(":hover",true,this.recursiveStyling);
		}
		if(this._repeatTimer != null) {
			this._repeatTimer.stop();
			this._repeatTimer = null;
		}
	}
	,onMove: function(event) {
		var over = this._button.hitTest(haxe_ui_core_Screen.get_instance().currentMouseX,haxe_ui_core_Screen.get_instance().currentMouseY);
		if(over == true) {
			this._button.addClass(":hover",true,this.recursiveStyling);
		} else if(over == false) {
			this._button.removeClass(":hover",true,this.recursiveStyling);
		}
	}
	,onRepeatTimer: function() {
		if(this._button.classes.indexOf(":hover") != -1 && this._down == true) {
			var event = new haxe_ui_events_MouseEvent("click");
			this._button.dispatch(event);
		}
	}
	,onMouseClick: function(event) {
		this._button.set_selected(!this._button.get_selected());
		if(this._button.get_selected() == false) {
			this._button.removeClass(":down",true,this.recursiveStyling);
		}
		if(this._button.hitTest(event.screenX,event.screenY)) {
			this._button.addClass(":hover",true,this.recursiveStyling);
		}
	}
	,dispatchChanged: function() {
		this._button.dispatch(new haxe_ui_events_UIEvent("change"));
	}
	,press: function() {
		this._down = true;
		if(this._button.get_toggle() == true) {
			this._button.addClass(":down",true,this.recursiveStyling);
		} else {
			this._button.addClass(":down",true,this.recursiveStyling);
		}
	}
	,release: function() {
		if(this._down == true) {
			this._down = false;
			if(this._button.get_toggle() == true) {
				this._button.set_selected(!this._button.get_selected());
				this._button.dispatch(new haxe_ui_events_MouseEvent("click"));
			} else {
				this._button.removeClass(":down",true,this.recursiveStyling);
				this._button.dispatch(new haxe_ui_events_MouseEvent("click"));
			}
		}
	}
	,onActionStart: function(event) {
		switch(event.action) {
		case "actionConfirm":case "actionPress":
			this.press();
			break;
		default:
		}
	}
	,onActionEnd: function(event) {
		switch(event.action) {
		case "actionConfirm":case "actionPress":
			this.release();
			break;
		default:
		}
	}
	,__class__: haxe_ui_components_ButtonEvents
});
var haxe_ui_core_CompositeBuilder = function(component) {
	this._component = component;
};
$hxClasses["haxe.ui.core.CompositeBuilder"] = haxe_ui_core_CompositeBuilder;
haxe_ui_core_CompositeBuilder.__name__ = "haxe.ui.core.CompositeBuilder";
haxe_ui_core_CompositeBuilder.prototype = {
	_component: null
	,create: function() {
	}
	,destroy: function() {
	}
	,onInitialize: function() {
	}
	,onReady: function() {
	}
	,show: function() {
		return false;
	}
	,hide: function() {
		return false;
	}
	,get_numComponents: function() {
		return null;
	}
	,get_cssName: function() {
		return null;
	}
	,addComponent: function(child) {
		return null;
	}
	,addComponentAt: function(child,index) {
		return null;
	}
	,removeComponent: function(child,dispose,invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if(dispose == null) {
			dispose = true;
		}
		return null;
	}
	,removeComponentAt: function(index,dispose,invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if(dispose == null) {
			dispose = true;
		}
		return null;
	}
	,removeAllComponents: function(dispose) {
		if(dispose == null) {
			dispose = true;
		}
		return false;
	}
	,getComponentIndex: function(child) {
		return -2147483648;
	}
	,setComponentIndex: function(child,index) {
		return null;
	}
	,getComponentAt: function(index) {
		return null;
	}
	,validateComponentLayout: function() {
		return false;
	}
	,validateComponentData: function() {
	}
	,applyStyle: function(style) {
	}
	,onComponentAdded: function(child) {
	}
	,onComponentRemoved: function(child) {
	}
	,findComponent: function(criteria,type,recursive,searchType) {
		var _g = 0;
		var _g1 = this.get_numComponents();
		while(_g < _g1) {
			var i = _g++;
			var c = this.getComponentAt(i);
			var match = c.findComponent(criteria,type,recursive,searchType);
			if(match != null) {
				return match;
			}
		}
		return null;
	}
	,findComponents: function(styleName,type,maxDepth) {
		if(maxDepth == null) {
			maxDepth = 5;
		}
		return null;
	}
	,isComponentClipped: null
	,get_isComponentClipped: function() {
		return this._component.get_componentClipRect() != null;
	}
	,__class__: haxe_ui_core_CompositeBuilder
	,__properties__: {get_isComponentClipped:"get_isComponentClipped",get_cssName:"get_cssName",get_numComponents:"get_numComponents"}
};
var haxe_ui_components_ButtonBuilder = function(button) {
	haxe_ui_core_CompositeBuilder.call(this,button);
	this._button = button;
};
$hxClasses["haxe.ui.components.ButtonBuilder"] = haxe_ui_components_ButtonBuilder;
haxe_ui_components_ButtonBuilder.__name__ = "haxe.ui.components.ButtonBuilder";
haxe_ui_components_ButtonBuilder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_components_ButtonBuilder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_button: null
	,onReady: function() {
		haxe_ui_core_CompositeBuilder.prototype.onReady.call(this);
		var renderer = this._button.findComponent(null,haxe_ui_core_ItemRenderer);
		if(renderer != null) {
			if(!this._button.get_autoWidth()) {
				renderer.removeClass("auto-size");
			} else {
				renderer.addClass("auto-size");
			}
		}
	}
	,applyStyle: function(style) {
		haxe_ui_core_CompositeBuilder.prototype.applyStyle.call(this,style);
		var c = this._component.findComponent("button-label",haxe_ui_core_Component,false);
		if(c != null) {
			var invalidate = false;
			if(style.color != null && c.get_customStyle().color != style.color) {
				c.get_customStyle().color = style.color;
				invalidate = true;
			}
			if(style.fontName != null && c.get_customStyle().fontName != style.fontName) {
				c.get_customStyle().fontName = style.fontName;
				invalidate = true;
			}
			if(style.fontSize != null && c.get_customStyle().fontSize != style.fontSize) {
				c.get_customStyle().fontSize = style.fontSize;
				invalidate = true;
			}
			if(style.cursor != null && c.get_customStyle().cursor != style.cursor) {
				c.get_customStyle().cursor = style.cursor;
				invalidate = true;
			}
			if(style.textAlign != null && c.get_customStyle().textAlign != style.textAlign) {
				c.get_customStyle().textAlign = style.textAlign;
				invalidate = true;
			}
			if(style.fontBold != null && c.get_customStyle().fontBold != style.fontBold) {
				c.get_customStyle().fontBold = style.fontBold;
				invalidate = true;
			}
			if(style.fontUnderline != null && c.get_customStyle().fontUnderline != style.fontUnderline) {
				c.get_customStyle().fontUnderline = style.fontUnderline;
				invalidate = true;
			}
			if(style.fontItalic != null && c.get_customStyle().fontItalic != style.fontItalic) {
				c.get_customStyle().fontItalic = style.fontItalic;
				invalidate = true;
			}
			if(invalidate == true) {
				c.invalidateComponent("style",false);
			}
		}
		var c = this._component.findComponent("button-icon",haxe_ui_core_Component,false);
		if(c != null) {
			var invalidate = false;
			if(style.cursor != null && c.get_customStyle().cursor != style.cursor) {
				c.get_customStyle().cursor = style.cursor;
				invalidate = true;
			}
			if(invalidate == true) {
				c.invalidateComponent("style",false);
			}
		}
		var list = this._component.findComponents(null,haxe_ui_components_Label,16777215);
		var _g = 0;
		while(_g < list.length) {
			var c = list[_g];
			++_g;
			var invalidate = false;
			if(style.color != null && c.get_customStyle().color != style.color) {
				c.get_customStyle().color = style.color;
				invalidate = true;
			}
			if(style.fontName != null && c.get_customStyle().fontName != style.fontName) {
				c.get_customStyle().fontName = style.fontName;
				invalidate = true;
			}
			if(style.fontSize != null && c.get_customStyle().fontSize != style.fontSize) {
				c.get_customStyle().fontSize = style.fontSize;
				invalidate = true;
			}
			if(style.cursor != null && c.get_customStyle().cursor != style.cursor) {
				c.get_customStyle().cursor = style.cursor;
				invalidate = true;
			}
			if(style.textAlign != null && c.get_customStyle().textAlign != style.textAlign) {
				c.get_customStyle().textAlign = style.textAlign;
				invalidate = true;
			}
			if(style.fontBold != null && c.get_customStyle().fontBold != style.fontBold) {
				c.get_customStyle().fontBold = style.fontBold;
				invalidate = true;
			}
			if(style.fontUnderline != null && c.get_customStyle().fontUnderline != style.fontUnderline) {
				c.get_customStyle().fontUnderline = style.fontUnderline;
				invalidate = true;
			}
			if(style.fontItalic != null && c.get_customStyle().fontItalic != style.fontItalic) {
				c.get_customStyle().fontItalic = style.fontItalic;
				invalidate = true;
			}
			if(invalidate == true) {
				c.invalidateComponent("style",false);
			}
		}
		if(style.icon != null) {
			this._button.set_icon(style.icon);
		}
	}
	,addComponent: function(child) {
		if(((child) instanceof haxe_ui_core_ItemRenderer)) {
			var existingRenderer = this._component.findComponent(null,haxe_ui_core_ItemRenderer);
			if(existingRenderer != null) {
				this._component.removeComponent(existingRenderer);
			}
			child.addClass("auto-size");
		}
		return null;
	}
	,__class__: haxe_ui_components_ButtonBuilder
});
var haxe_ui_components_ButtonGroups = function() {
	this._groups = new haxe_ds_StringMap();
};
$hxClasses["haxe.ui.components.ButtonGroups"] = haxe_ui_components_ButtonGroups;
haxe_ui_components_ButtonGroups.__name__ = "haxe.ui.components.ButtonGroups";
haxe_ui_components_ButtonGroups.__properties__ = {get_instance:"get_instance"};
haxe_ui_components_ButtonGroups.get_instance = function() {
	if(haxe_ui_components_ButtonGroups._instance == null) {
		haxe_ui_components_ButtonGroups._instance = new haxe_ui_components_ButtonGroups();
	}
	return haxe_ui_components_ButtonGroups._instance;
};
haxe_ui_components_ButtonGroups.prototype = {
	_groups: null
	,get: function(name) {
		return this._groups.h[name];
	}
	,set: function(name,buttons) {
		this._groups.h[name] = buttons;
	}
	,add: function(name,button) {
		var arr = this.get(name);
		if(arr == null) {
			arr = [];
		}
		if(arr.indexOf(button) == -1) {
			arr.push(button);
		}
		this.set(name,arr);
	}
	,remove: function(name,button) {
		var arr = this.get(name);
		if(arr == null) {
			return;
		}
		HxOverrides.remove(arr,button);
		if(arr.length == 0) {
			var _this = this._groups;
			if(Object.prototype.hasOwnProperty.call(_this.h,name)) {
				delete(_this.h[name]);
			}
		}
	}
	,reset: function(name) {
		var arr = this.get(name);
		if(arr == null) {
			return;
		}
		var selection = null;
		var _g = 0;
		while(_g < arr.length) {
			var item = arr[_g];
			++_g;
			if(item.get_selected() == true) {
				selection = item;
				break;
			}
		}
		if(selection == null) {
			return;
		}
		haxe_ui_components_ButtonGroups.get_instance().setSelection(selection,false,true);
	}
	,setSelection: function(button,value,allowDeselection) {
		if(allowDeselection == null) {
			allowDeselection = false;
		}
		if(button.get_componentGroup() != null && value == false && allowDeselection == false) {
			var arr = haxe_ui_components_ButtonGroups.get_instance().get(button.get_componentGroup());
			var hasSelection = false;
			if(arr != null) {
				var _g = 0;
				while(_g < arr.length) {
					var b = arr[_g];
					++_g;
					if(b != button && b.get_selected() == true) {
						hasSelection = true;
						break;
					}
				}
			}
			if(hasSelection == false && allowDeselection == false) {
				button.behaviours.softSet("selected",haxe_ui_util_Variant.fromBool(true));
				return;
			}
		}
		if(button.get_componentGroup() != null && value == true) {
			var arr = haxe_ui_components_ButtonGroups.get_instance().get(button.get_componentGroup());
			if(arr != null) {
				var _g = 0;
				while(_g < arr.length) {
					var b = arr[_g];
					++_g;
					if(b != button) {
						b.set_selected(false);
					}
				}
			}
		}
		if(allowDeselection == true && value == false) {
			button.behaviours.softSet("selected",haxe_ui_util_Variant.fromBool(false));
		}
	}
	,__class__: haxe_ui_components_ButtonGroups
};
var haxe_ui_core_IDataComponent = function() { };
$hxClasses["haxe.ui.core.IDataComponent"] = haxe_ui_core_IDataComponent;
haxe_ui_core_IDataComponent.__name__ = "haxe.ui.core.IDataComponent";
haxe_ui_core_IDataComponent.__isInterface__ = true;
haxe_ui_core_IDataComponent.prototype = {
	get_dataSource: null
	,set_dataSource: null
	,__class__: haxe_ui_core_IDataComponent
	,__properties__: {set_dataSource:"set_dataSource",get_dataSource:"get_dataSource"}
};
var haxe_ui_components_Canvas = function() {
	haxe_ui_core_Component.call(this);
	this.componentGraphics = new haxe_ui_graphics_ComponentGraphics(this);
};
$hxClasses["haxe.ui.components.Canvas"] = haxe_ui_components_Canvas;
haxe_ui_components_Canvas.__name__ = "haxe.ui.components.Canvas";
haxe_ui_components_Canvas.__interfaces__ = [haxe_ui_core_IDataComponent];
haxe_ui_components_Canvas.__super__ = haxe_ui_core_Component;
haxe_ui_components_Canvas.prototype = $extend(haxe_ui_core_Component.prototype,{
	componentGraphics: null
	,validateComponentLayout: function() {
		var b = haxe_ui_core_Component.prototype.validateComponentLayout.call(this);
		this.componentGraphics.resize(this.get_width(),this.get_height());
		return b;
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_Component.prototype.cloneComponent.call(this);
		if(this.get_dataSource() != null) {
			c.set_dataSource(this.get_dataSource());
		}
		var tmp = this.componentGraphics._drawCommands.slice();
		c.componentGraphics._drawCommands = tmp;
		c.componentGraphics.replayDrawCommands();
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,registerBehaviours: function() {
		haxe_ui_core_Component.prototype.registerBehaviours.call(this);
		this.behaviours.register("dataSource",haxe_ui_components__$Canvas_DataSourceBehaviour);
	}
	,get_dataSource: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toDataSource(this.behaviours.get("dataSource"));
	}
	,set_dataSource: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("dataSource",haxe_ui_util_Variant.fromDataSource(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"dataSource"));
		return value;
	}
	,self: function() {
		return new haxe_ui_components_Canvas();
	}
	,__class__: haxe_ui_components_Canvas
	,__properties__: $extend(haxe_ui_core_Component.prototype.__properties__,{set_dataSource:"set_dataSource",get_dataSource:"get_dataSource"})
});
var haxe_ui_components__$Canvas_DataSourceBehaviour = function(canvas) {
	haxe_ui_behaviours_DataBehaviour.call(this,canvas);
	this._canvas = canvas;
};
$hxClasses["haxe.ui.components._Canvas.DataSourceBehaviour"] = haxe_ui_components__$Canvas_DataSourceBehaviour;
haxe_ui_components__$Canvas_DataSourceBehaviour.__name__ = "haxe.ui.components._Canvas.DataSourceBehaviour";
haxe_ui_components__$Canvas_DataSourceBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Canvas_DataSourceBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	_canvas: null
	,validateData: function() {
		if(this._value != null) {
			var ds = haxe_ui_util_Variant.toDataSource(this._value);
			var g = this._canvas.componentGraphics;
			var _g = 0;
			var _g1 = ds.get_size();
			while(_g < _g1) {
				var i = _g++;
				var item = ds.get(i);
				switch(item.id) {
				case "circle":
					var x = parseFloat(item.x);
					var y = parseFloat(item.y);
					var radius = parseFloat(item.radius);
					g.circle(x,y,radius);
					break;
				case "clear":
					g.clear();
					break;
				case "fill-style":case "fillStyle":
					var color = item.color;
					var alpha = item.alpha != null ? parseFloat(item.alpha) : 1;
					g.fillStyle(haxe_ui_util_Color.fromString(color),alpha);
					break;
				case "image":
					var resource = item.resource;
					var x1 = parseFloat(item.x);
					var y1 = parseFloat(item.y);
					var width = parseFloat(item.width);
					var height = parseFloat(item.height);
					g.image(haxe_ui_util_Variant.fromString(resource),x1,y1,width,height);
					break;
				case "line-to":case "lineTo":
					var x2 = item.x != null ? parseFloat(item.x) : 0;
					var y2 = item.y != null ? parseFloat(item.y) : 0;
					g.lineTo(x2,y2);
					break;
				case "move-to":case "moveTo":
					var x3 = item.x != null ? parseFloat(item.x) : 0;
					var y3 = item.y != null ? parseFloat(item.y) : 0;
					g.moveTo(x3,y3);
					break;
				case "rectangle":
					var x4 = item.x != null ? parseFloat(item.x) : 0;
					var y4 = item.y != null ? parseFloat(item.y) : 0;
					var width1 = item.width != null ? parseFloat(item.width) : this._canvas.get_width();
					var height1 = item.height != null ? parseFloat(item.height) : this._canvas.get_height();
					g.rectangle(x4,y4,width1,height1);
					break;
				case "stroke-style":case "strokeStyle":
					var color1 = item.color;
					var thickness = item.thickness != null ? parseFloat(item.thickness) : 1;
					var alpha1 = item.alpha != null ? parseFloat(item.alpha) : 1;
					g.strokeStyle(haxe_ui_util_Color.fromString(color1),thickness,alpha1);
					break;
				default:
					haxe_Log.trace("unrecognised draw command: " + Std.string(item),{ fileName : "haxe/ui/components/Canvas.hx", lineNumber : 90, className : "haxe.ui.components._Canvas.DataSourceBehaviour", methodName : "validateData"});
				}
			}
		}
	}
	,__class__: haxe_ui_components__$Canvas_DataSourceBehaviour
});
var haxe_ui_components_CheckBox = function() {
	haxe_ui_core_InteractiveComponent.call(this);
};
$hxClasses["haxe.ui.components.CheckBox"] = haxe_ui_components_CheckBox;
haxe_ui_components_CheckBox.__name__ = "haxe.ui.components.CheckBox";
haxe_ui_components_CheckBox.__super__ = haxe_ui_core_InteractiveComponent;
haxe_ui_components_CheckBox.prototype = $extend(haxe_ui_core_InteractiveComponent.prototype,{
	registerBehaviours: function() {
		haxe_ui_core_InteractiveComponent.prototype.registerBehaviours.call(this);
		this.behaviours.register("text",haxe_ui_components__$CheckBox_TextBehaviour);
		this.behaviours.register("selected",haxe_ui_components__$CheckBox_SelectedBehaviour);
	}
	,get_selected: function() {
		if(this.behaviours == null) {
			return false;
		}
		return haxe_ui_util_Variant.toBool(this.behaviours.get("selected"));
	}
	,set_selected: function(value) {
		this.behaviours.set("selected",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"selected"));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"value"));
		return value;
	}
	,get_value: function() {
		return this.get_selected();
	}
	,set_value: function(value) {
		var _g = Type.typeof(value);
		switch(_g._hx_index) {
		case 1:case 2:
			this.set_selected(value == 1);
			break;
		case 6:
			if(_g.c == String) {
				this.set_selected(value == "true" || value == "1");
			} else {
				this.set_selected(value);
			}
			break;
		case 7:
			if(_g.e == haxe_ui_util_VariantType) {
				var v = value;
				this.set_selected(haxe_ui_util_Variant.toBool(v));
			} else {
				this.set_selected(value);
			}
			break;
		default:
			this.set_selected(value);
		}
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_InteractiveComponent.prototype.cloneComponent.call(this);
		c.set_selected(this.get_selected());
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_components_CheckBox();
	}
	,registerComposite: function() {
		haxe_ui_core_InteractiveComponent.prototype.registerComposite.call(this);
		this._internalEventsClass = haxe_ui_components__$CheckBox_Events;
		this._compositeBuilderClass = haxe_ui_components_CheckBoxBuilder;
		this._defaultLayoutClass = haxe_ui_components__$CheckBox_CheckBoxLayout;
	}
	,__class__: haxe_ui_components_CheckBox
	,__properties__: $extend(haxe_ui_core_InteractiveComponent.prototype.__properties__,{set_selected:"set_selected",get_selected:"get_selected"})
});
var haxe_ui_components_CheckBoxValue = function() {
	this._down = true;
	haxe_ui_core_InteractiveComponent.call(this);
};
$hxClasses["haxe.ui.components.CheckBoxValue"] = haxe_ui_components_CheckBoxValue;
haxe_ui_components_CheckBoxValue.__name__ = "haxe.ui.components.CheckBoxValue";
haxe_ui_components_CheckBoxValue.__super__ = haxe_ui_core_InteractiveComponent;
haxe_ui_components_CheckBoxValue.prototype = $extend(haxe_ui_core_InteractiveComponent.prototype,{
	onReady: function() {
		this.createIcon();
		this.registerEvent("actionstart",$bind(this,this.onActionStart));
		this.registerEvent("actionend",$bind(this,this.onActionEnd));
	}
	,applyStyle: function(style) {
		haxe_ui_core_InteractiveComponent.prototype.applyStyle.call(this,style);
		var icon = this.findComponent(null,haxe_ui_components_Image);
		if(icon != null) {
			icon.set_resource(style.icon);
		}
	}
	,createIcon: function() {
		var icon = this.findComponent(null,haxe_ui_components_Image);
		if(icon == null && this.parentComponent != null) {
			icon = new haxe_ui_components_Image();
			icon.set_id("" + this.parentComponent.get_cssName() + "-icon");
			icon.addClass("" + this.parentComponent.get_cssName() + "-icon");
			if(this.get_style() != null && this.get_style().icon != null) {
				icon.set_resource(this.get_style().icon);
			}
			this.addComponent(icon);
		}
	}
	,_down: null
	,onActionStart: function(event) {
		switch(event.action) {
		case "actionConfirm":case "actionPress":
			this._down = true;
			break;
		default:
		}
	}
	,onActionEnd: function(event) {
		switch(event.action) {
		case "actionConfirm":case "actionPress":
			if(this._down == true) {
				this._down = false;
				if(this.parentComponent != null) {
					var checkbox = js_Boot.__cast(this.parentComponent , haxe_ui_components_CheckBox);
					checkbox.set_selected(!checkbox.get_selected());
				}
			}
			break;
		default:
		}
	}
	,registerBehaviours: function() {
		haxe_ui_core_InteractiveComponent.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_InteractiveComponent.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_components_CheckBoxValue();
	}
	,__class__: haxe_ui_components_CheckBoxValue
});
var haxe_ui_components__$CheckBox_TextBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._CheckBox.TextBehaviour"] = haxe_ui_components__$CheckBox_TextBehaviour;
haxe_ui_components__$CheckBox_TextBehaviour.__name__ = "haxe.ui.components._CheckBox.TextBehaviour";
haxe_ui_components__$CheckBox_TextBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$CheckBox_TextBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var label = this._component.findComponent(null,haxe_ui_components_Label,false);
		if(label == null) {
			label = new haxe_ui_components_Label();
			label.set_id("" + this._component.get_cssName() + "-label");
			label.addClass("" + this._component.get_cssName() + "-label");
			label.set_scriptAccess(false);
			this._component.addComponent(label);
			var _this = this._component;
			var force = true;
			if(force == null) {
				force = false;
			}
			_this.invalidateComponent("style",false);
			if(force == true) {
				_this._style = null;
			}
		}
		label.set_text(haxe_ui_util_Variant.toString(this._value));
	}
	,__class__: haxe_ui_components__$CheckBox_TextBehaviour
});
var haxe_ui_components__$CheckBox_SelectedBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._CheckBox.SelectedBehaviour"] = haxe_ui_components__$CheckBox_SelectedBehaviour;
haxe_ui_components__$CheckBox_SelectedBehaviour.__name__ = "haxe.ui.components._CheckBox.SelectedBehaviour";
haxe_ui_components__$CheckBox_SelectedBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$CheckBox_SelectedBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var valueComponent = this._component.findComponent(null,haxe_ui_components_CheckBoxValue);
		if(valueComponent == null) {
			return;
		}
		valueComponent.createIcon();
		if(haxe_ui_util_Variant.eq(this._value,haxe_ui_util_Variant.fromBool(true))) {
			valueComponent.addClass(":selected");
		} else {
			valueComponent.removeClass(":selected");
		}
		var event = new haxe_ui_events_UIEvent("change");
		event.previousValue = this._previousValue;
		event.value = this._value;
		this._component.dispatch(event);
	}
	,__class__: haxe_ui_components__$CheckBox_SelectedBehaviour
});
var haxe_ui_components__$CheckBox_Events = function(checkbox) {
	haxe_ui_events_Events.call(this,checkbox);
	this._checkbox = checkbox;
};
$hxClasses["haxe.ui.components._CheckBox.Events"] = haxe_ui_components__$CheckBox_Events;
haxe_ui_components__$CheckBox_Events.__name__ = "haxe.ui.components._CheckBox.Events";
haxe_ui_components__$CheckBox_Events.__super__ = haxe_ui_events_Events;
haxe_ui_components__$CheckBox_Events.prototype = $extend(haxe_ui_events_Events.prototype,{
	_checkbox: null
	,register: function() {
		if(this.hasEvent("mouseover",$bind(this,this.onMouseOver)) == false) {
			this.registerEvent("mouseover",$bind(this,this.onMouseOver));
		}
		if(this.hasEvent("mouseout",$bind(this,this.onMouseOut)) == false) {
			this.registerEvent("mouseout",$bind(this,this.onMouseOut));
		}
		if(this.hasEvent("click",$bind(this,this.onClick)) == false) {
			this.registerEvent("click",$bind(this,this.onClick));
		}
		if(this.hasEvent("mousedown",$bind(this,this.onMouseDown)) == false) {
			this.registerEvent("mousedown",$bind(this,this.onMouseDown));
		}
	}
	,unregister: function() {
		this.unregisterEvent("mouseover",$bind(this,this.onMouseOver));
		this.unregisterEvent("mouseout",$bind(this,this.onMouseOut));
		this.unregisterEvent("click",$bind(this,this.onClick));
		this.unregisterEvent("mousedown",$bind(this,this.onMouseDown));
	}
	,onMouseOver: function(event) {
		this._target.addClass(":hover");
		this._target.findComponent(null,haxe_ui_components_CheckBoxValue).addClass(":hover");
	}
	,onMouseOut: function(event) {
		this._target.removeClass(":hover");
		this._target.findComponent(null,haxe_ui_components_CheckBoxValue).removeClass(":hover");
	}
	,onClick: function(event) {
		this._checkbox.set_selected(!this._checkbox.get_selected());
	}
	,onMouseDown: function(event) {
		this._checkbox.findComponent(null,haxe_ui_components_CheckBoxValue).set_focus(true);
	}
	,__class__: haxe_ui_components__$CheckBox_Events
});
var haxe_ui_components_CheckBoxBuilder = function(checkbox) {
	haxe_ui_core_CompositeBuilder.call(this,checkbox);
	this._checkbox = checkbox;
	this._checkbox.set_allowFocus(false);
};
$hxClasses["haxe.ui.components.CheckBoxBuilder"] = haxe_ui_components_CheckBoxBuilder;
haxe_ui_components_CheckBoxBuilder.__name__ = "haxe.ui.components.CheckBoxBuilder";
haxe_ui_components_CheckBoxBuilder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_components_CheckBoxBuilder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_checkbox: null
	,create: function() {
		if(this._checkbox.findComponent(null,haxe_ui_components_CheckBoxValue) == null) {
			var value = new haxe_ui_components_CheckBoxValue();
			value.set_id("" + this._checkbox.get_cssName() + "-value");
			value.addClass("" + this._checkbox.get_cssName() + "-value");
			value.set_scriptAccess(false);
			this._checkbox.addComponent(value);
		}
	}
	,applyStyle: function(style) {
		var c = this._component.findComponent("" + this._checkbox.get_cssName() + "-label",haxe_ui_core_Component);
		if(c != null) {
			var invalidate = false;
			if(style.color != null && c.get_customStyle().color != style.color) {
				c.get_customStyle().color = style.color;
				invalidate = true;
			}
			if(style.fontName != null && c.get_customStyle().fontName != style.fontName) {
				c.get_customStyle().fontName = style.fontName;
				invalidate = true;
			}
			if(style.fontSize != null && c.get_customStyle().fontSize != style.fontSize) {
				c.get_customStyle().fontSize = style.fontSize;
				invalidate = true;
			}
			if(style.cursor != null && c.get_customStyle().cursor != style.cursor) {
				c.get_customStyle().cursor = style.cursor;
				invalidate = true;
			}
			if(style.textAlign != null && c.get_customStyle().textAlign != style.textAlign) {
				c.get_customStyle().textAlign = style.textAlign;
				invalidate = true;
			}
			if(style.fontBold != null && c.get_customStyle().fontBold != style.fontBold) {
				c.get_customStyle().fontBold = style.fontBold;
				invalidate = true;
			}
			if(style.fontUnderline != null && c.get_customStyle().fontUnderline != style.fontUnderline) {
				c.get_customStyle().fontUnderline = style.fontUnderline;
				invalidate = true;
			}
			if(style.fontItalic != null && c.get_customStyle().fontItalic != style.fontItalic) {
				c.get_customStyle().fontItalic = style.fontItalic;
				invalidate = true;
			}
			if(invalidate == true) {
				c.invalidateComponent("style",false);
			}
		}
	}
	,get_cssName: function() {
		return "checkbox";
	}
	,__class__: haxe_ui_components_CheckBoxBuilder
});
var haxe_ui_layouts_HorizontalLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
	this._calcFullWidths = true;
	this._roundFullWidths = true;
};
$hxClasses["haxe.ui.layouts.HorizontalLayout"] = haxe_ui_layouts_HorizontalLayout;
haxe_ui_layouts_HorizontalLayout.__name__ = "haxe.ui.layouts.HorizontalLayout";
haxe_ui_layouts_HorizontalLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_layouts_HorizontalLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	repositionChildren: function() {
		var xpos = this.get_paddingLeft();
		var usableSize = this.get_usableSize();
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			var ypos = 0;
			switch(this.verticalAlign(child)) {
			case "bottom":
				if(child.get_componentHeight() < this.get_component().get_componentHeight()) {
					ypos = this.get_component().get_componentHeight() - (child.get_componentHeight() + this.get_paddingBottom() + this.marginTop(child));
				}
				break;
			case "center":
				ypos = (usableSize.height - child.get_componentHeight()) / 2 + this.get_paddingTop() + this.marginTop(child) - this.marginBottom(child);
				break;
			default:
				ypos = this.get_paddingTop() + this.marginTop(child);
			}
			child.moveComponent(xpos + this.marginLeft(child),ypos);
			xpos += child.get_componentWidth() + this.get_horizontalSpacing();
		}
	}
	,get_usableSize: function() {
		var size = haxe_ui_layouts_DefaultLayout.prototype.get_usableSize.call(this);
		var _this = this.get_component();
		var visibleChildren = (_this._children == null ? [] : _this._children).length;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				--visibleChildren;
				continue;
			}
			if(child.get_componentWidth() > 0 && (child.get_percentWidth() == null || this.fixedMinWidth(child) == true)) {
				size.width -= child.get_componentWidth() + this.marginLeft(child) + this.marginRight(child);
			}
		}
		if(visibleChildren > 1) {
			size.width -= this.get_horizontalSpacing() * (visibleChildren - 1);
		}
		if(size.width < 0) {
			size.width = 0;
		}
		return size;
	}
	,__class__: haxe_ui_layouts_HorizontalLayout
});
var haxe_ui_components__$CheckBox_CheckBoxLayout = function() {
	haxe_ui_layouts_HorizontalLayout.call(this);
};
$hxClasses["haxe.ui.components._CheckBox.CheckBoxLayout"] = haxe_ui_components__$CheckBox_CheckBoxLayout;
haxe_ui_components__$CheckBox_CheckBoxLayout.__name__ = "haxe.ui.components._CheckBox.CheckBoxLayout";
haxe_ui_components__$CheckBox_CheckBoxLayout.__super__ = haxe_ui_layouts_HorizontalLayout;
haxe_ui_components__$CheckBox_CheckBoxLayout.prototype = $extend(haxe_ui_layouts_HorizontalLayout.prototype,{
	repositionChildren: function() {
		haxe_ui_layouts_HorizontalLayout.prototype.repositionChildren.call(this);
		var icon = this._component.findComponent(null,haxe_ui_components_Image,true);
		if(icon != null) {
			icon.set_left(Math.round(icon.get_left()));
			icon.set_top(Math.round(icon.get_top()));
		}
	}
	,calcAutoSize: function(exclusions) {
		var size = haxe_ui_layouts_HorizontalLayout.prototype.calcAutoSize.call(this,exclusions);
		if(this._component.get_autoWidth() == false) {
			var label = this._component.findComponent(null,haxe_ui_components_Label,false);
			if(label != null) {
				label.set_percentWidth(100);
			}
		}
		return size;
	}
	,__class__: haxe_ui_components__$CheckBox_CheckBoxLayout
});
var haxe_ui_components_Column = function() {
	this._sortDirection = null;
	haxe_ui_components_Button.call(this);
};
$hxClasses["haxe.ui.components.Column"] = haxe_ui_components_Column;
haxe_ui_components_Column.__name__ = "haxe.ui.components.Column";
haxe_ui_components_Column.__super__ = haxe_ui_components_Button;
haxe_ui_components_Column.prototype = $extend(haxe_ui_components_Button.prototype,{
	sortField: null
	,get_sortable: function() {
		return this.classes.indexOf("sortable") != -1;
	}
	,set_sortable: function(value) {
		if(value == true) {
			this.addClass("sortable");
		} else {
			this.removeClass("sortable");
		}
		return value;
	}
	,_sortDirection: null
	,get_sortDirection: function() {
		return this._sortDirection;
	}
	,set_sortDirection: function(value) {
		if(value == this._sortDirection) {
			return value;
		}
		this._sortDirection = value;
		this.set_sortable(true);
		if(this._sortDirection == "asc") {
			this.swapClass("sort-asc","sort-desc");
		} else if(this._sortDirection == "desc") {
			this.swapClass("sort-desc","sort-asc");
		} else if(this.get_sortDirection() == null) {
			this.removeClasses(["sort-asc","sort-desc"]);
		}
		return value;
	}
	,registerComposite: function() {
		haxe_ui_components_Button.prototype.registerComposite.call(this);
		this._internalEventsClass = haxe_ui_components__$Column_Events;
	}
	,registerBehaviours: function() {
		haxe_ui_components_Button.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_components_Button.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_components_Column();
	}
	,__class__: haxe_ui_components_Column
	,__properties__: $extend(haxe_ui_components_Button.prototype.__properties__,{set_sortDirection:"set_sortDirection",get_sortDirection:"get_sortDirection",set_sortable:"set_sortable",get_sortable:"get_sortable"})
});
var haxe_ui_components__$Column_Events = function(column) {
	var _gthis = this;
	haxe_ui_components_ButtonEvents.call(this,column);
	this._column = column;
	this._column.registerEvent("click",$bind(this,this.onColumnClick));
	this._column.registerEvent("ready",function(_) {
		if(_gthis._column.get_sortDirection() != null) {
			var sortEvent = new haxe_ui_events_SortEvent("sortchanged");
			sortEvent.direction = _gthis._column.get_sortDirection();
			_gthis._column.dispatch(sortEvent);
		}
	});
};
$hxClasses["haxe.ui.components._Column.Events"] = haxe_ui_components__$Column_Events;
haxe_ui_components__$Column_Events.__name__ = "haxe.ui.components._Column.Events";
haxe_ui_components__$Column_Events.__super__ = haxe_ui_components_ButtonEvents;
haxe_ui_components__$Column_Events.prototype = $extend(haxe_ui_components_ButtonEvents.prototype,{
	_column: null
	,onMouseDown: function(event) {
		var components = this._column.findComponentsUnderPoint(event.screenX,event.screenY,haxe_ui_core_InteractiveComponent);
		HxOverrides.remove(components,this._column);
		if(components.length == 0) {
			haxe_ui_components_ButtonEvents.prototype.onMouseDown.call(this,event);
		}
	}
	,onColumnClick: function(event) {
		if(this._column.get_sortable() == false) {
			return;
		}
		if(this._column.get_sortDirection() == null) {
			this._column.set_sortDirection("asc");
		} else if(this._column.get_sortDirection() == "asc") {
			this._column.set_sortDirection("desc");
		} else if(this._column.get_sortDirection() == "desc") {
			this._column.set_sortDirection("asc");
		}
		var sortEvent = new haxe_ui_events_SortEvent("sortchanged");
		sortEvent.direction = this._column.get_sortDirection();
		this._column.dispatch(sortEvent);
	}
	,__class__: haxe_ui_components__$Column_Events
});
var haxe_ui_components_Decorator = function() {
	haxe_ui_containers_Box.call(this);
};
$hxClasses["haxe.ui.components.Decorator"] = haxe_ui_components_Decorator;
haxe_ui_components_Decorator.__name__ = "haxe.ui.components.Decorator";
haxe_ui_components_Decorator.__super__ = haxe_ui_containers_Box;
haxe_ui_components_Decorator.prototype = $extend(haxe_ui_containers_Box.prototype,{
	set_icon: function(value) {
		var image = this.findComponent(null,haxe_ui_components_Image);
		if(image == null) {
			image = new haxe_ui_components_Image();
			this.addComponent(image);
		}
		image.set_resource(value);
		return value;
	}
	,registerBehaviours: function() {
		haxe_ui_containers_Box.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_Box.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_components_Decorator();
	}
	,__class__: haxe_ui_components_Decorator
});
var haxe_ui_core_IDirectionalComponent = function() { };
$hxClasses["haxe.ui.core.IDirectionalComponent"] = haxe_ui_core_IDirectionalComponent;
haxe_ui_core_IDirectionalComponent.__name__ = "haxe.ui.core.IDirectionalComponent";
haxe_ui_core_IDirectionalComponent.__isInterface__ = true;
var haxe_ui_components_Scroll = function() {
	haxe_ui_core_InteractiveComponent.call(this);
	this.cascadeActive = true;
};
$hxClasses["haxe.ui.components.Scroll"] = haxe_ui_components_Scroll;
haxe_ui_components_Scroll.__name__ = "haxe.ui.components.Scroll";
haxe_ui_components_Scroll.__interfaces__ = [haxe_ui_core_IDirectionalComponent];
haxe_ui_components_Scroll.__super__ = haxe_ui_core_InteractiveComponent;
haxe_ui_components_Scroll.prototype = $extend(haxe_ui_core_InteractiveComponent.prototype,{
	posFromCoord: function(coord) {
		return haxe_ui_util_Variant.toFloat(this.behaviours.call("posFromCoord",coord));
	}
	,applyPageFromCoord: function(coord) {
		return haxe_ui_util_Variant.toFloat(this.behaviours.call("applyPageFromCoord",coord));
	}
	,createChildren: function() {
		this.createButton("deinc",true).set_repeater(true);
		this.createButton("inc",true).set_repeater(true);
		this.createButton("thumb").set_remainPressed(true);
		this.registerInternalEvents(haxe_ui_components__$Scroll_Events);
	}
	,createButton: function(type,hidden) {
		if(hidden == null) {
			hidden = false;
		}
		var b = this.findComponent("scroll-" + type + "-button",haxe_ui_components_Button);
		if(b == null) {
			b = new haxe_ui_components_Button();
			b.set_hidden(hidden);
			b.set_scriptAccess(false);
			b.get_customStyle().native = false;
			b.set_id("scroll-" + type + "-button");
			b.addClass(type);
			b.set_allowFocus(false);
			this.addComponent(b);
		}
		return b;
	}
	,registerBehaviours: function() {
		haxe_ui_core_InteractiveComponent.prototype.registerBehaviours.call(this);
		this.behaviours.register("min",haxe_ui_components__$Scroll_ScrollMinMaxBehaviour,haxe_ui_util_Variant.fromInt(0));
		this.behaviours.register("max",haxe_ui_components__$Scroll_ScrollMinMaxBehaviour,haxe_ui_util_Variant.fromInt(100));
		this.behaviours.register("pageSize",haxe_ui_behaviours_LayoutBehaviour,haxe_ui_util_Variant.fromInt(0));
		this.behaviours.register("pos",haxe_ui_components__$Scroll_ScrollValueBehaviour,haxe_ui_util_Variant.fromInt(0));
		this.behaviours.register("increment",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util_Variant.fromInt(20));
		this.behaviours.register("thumbSize",haxe_ui_behaviours_DefaultBehaviour,null);
	}
	,get_min: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("min"));
	}
	,set_min: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("min",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"min"));
		return value;
	}
	,get_max: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("max"));
	}
	,set_max: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("max",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"max"));
		return value;
	}
	,get_pageSize: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("pageSize"));
	}
	,set_pageSize: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("pageSize",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"pageSize"));
		return value;
	}
	,get_pos: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("pos"));
	}
	,set_pos: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("pos",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"pos"));
		return value;
	}
	,get_increment: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("increment"));
	}
	,set_increment: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("increment",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"increment"));
		return value;
	}
	,get_thumbSize: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("thumbSize"));
	}
	,set_thumbSize: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("thumbSize",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"thumbSize"));
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_InteractiveComponent.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_components_Scroll();
	}
	,__class__: haxe_ui_components_Scroll
	,__properties__: $extend(haxe_ui_core_InteractiveComponent.prototype.__properties__,{set_thumbSize:"set_thumbSize",get_thumbSize:"get_thumbSize",set_increment:"set_increment",get_increment:"get_increment",set_pos:"set_pos",get_pos:"get_pos",set_pageSize:"set_pageSize",get_pageSize:"get_pageSize",set_max:"set_max",get_max:"get_max",set_min:"set_min",get_min:"get_min"})
});
var haxe_ui_components_HorizontalScroll = function() {
	haxe_ui_components_Scroll.call(this);
};
$hxClasses["haxe.ui.components.HorizontalScroll"] = haxe_ui_components_HorizontalScroll;
haxe_ui_components_HorizontalScroll.__name__ = "haxe.ui.components.HorizontalScroll";
haxe_ui_components_HorizontalScroll.__super__ = haxe_ui_components_Scroll;
haxe_ui_components_HorizontalScroll.prototype = $extend(haxe_ui_components_Scroll.prototype,{
	registerBehaviours: function() {
		haxe_ui_components_Scroll.prototype.registerBehaviours.call(this);
		this.behaviours.register("posFromCoord",haxe_ui_components__$HorizontalScroll_PosFromCoord);
		this.behaviours.register("applyPageFromCoord",haxe_ui_components__$HorizontalScroll_ApplyPageFromCoord);
	}
	,createChildren: function() {
		haxe_ui_components_Scroll.prototype.createChildren.call(this);
		if(this.get_componentWidth() <= 0) {
			this.set_componentWidth(150);
		}
	}
	,createDefaults: function() {
		haxe_ui_components_Scroll.prototype.createDefaults.call(this);
		this._defaultLayoutClass = haxe_ui_components__$HorizontalScroll_HorizontalScrollLayout;
	}
	,cloneComponent: function() {
		var c = haxe_ui_components_Scroll.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_components_HorizontalScroll();
	}
	,__class__: haxe_ui_components_HorizontalScroll
});
var haxe_ui_components__$HorizontalScroll_PosFromCoord = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components._HorizontalScroll.PosFromCoord"] = haxe_ui_components__$HorizontalScroll_PosFromCoord;
haxe_ui_components__$HorizontalScroll_PosFromCoord.__name__ = "haxe.ui.components._HorizontalScroll.PosFromCoord";
haxe_ui_components__$HorizontalScroll_PosFromCoord.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_components__$HorizontalScroll_PosFromCoord.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(pos) {
		var p = js_Boot.__cast(pos , haxe_ui_geom_Point);
		var scroll = js_Boot.__cast(this._component , haxe_ui_components_Scroll);
		var deinc = this._component.findComponent("scroll-deinc-button");
		var thumb = this._component.findComponent("scroll-thumb-button");
		var xpos = p.x;
		var minX = 0;
		if(deinc != null && deinc.get_hidden() == false) {
			minX = deinc.get_width() + scroll.get_layout().get_horizontalSpacing();
		}
		var maxX = scroll.get_layout().get_usableWidth() - thumb.get_width();
		if(deinc != null && deinc.get_hidden() == false) {
			maxX += deinc.get_width() + scroll.get_layout().get_horizontalSpacing();
		}
		if(xpos < minX) {
			xpos = minX;
		} else if(xpos > maxX) {
			xpos = maxX;
		}
		var ucx = scroll.get_layout().get_usableWidth();
		ucx -= thumb.get_width();
		var m = scroll.get_max() - scroll.get_min() | 0;
		var v = xpos - minX;
		var value = scroll.get_min() + v / ucx * m;
		return haxe_ui_util_Variant.fromFloat(value);
	}
	,__class__: haxe_ui_components__$HorizontalScroll_PosFromCoord
});
var haxe_ui_components__$HorizontalScroll_ApplyPageFromCoord = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components._HorizontalScroll.ApplyPageFromCoord"] = haxe_ui_components__$HorizontalScroll_ApplyPageFromCoord;
haxe_ui_components__$HorizontalScroll_ApplyPageFromCoord.__name__ = "haxe.ui.components._HorizontalScroll.ApplyPageFromCoord";
haxe_ui_components__$HorizontalScroll_ApplyPageFromCoord.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_components__$HorizontalScroll_ApplyPageFromCoord.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(pos) {
		var p = js_Boot.__cast(pos , haxe_ui_geom_Point);
		var scroll = js_Boot.__cast(this._component , haxe_ui_components_Scroll);
		var thumb = this._component.findComponent("scroll-thumb-button");
		if(p.x < thumb.get_screenLeft()) {
			scroll.set_pos(scroll.get_pos() - scroll.get_pageSize());
		} else if(p.x > thumb.get_screenLeft() + thumb.get_width()) {
			scroll.set_pos(scroll.get_pos() + scroll.get_pageSize());
		}
		return null;
	}
	,__class__: haxe_ui_components__$HorizontalScroll_ApplyPageFromCoord
});
var haxe_ui_components__$HorizontalScroll_HorizontalScrollLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.components._HorizontalScroll.HorizontalScrollLayout"] = haxe_ui_components__$HorizontalScroll_HorizontalScrollLayout;
haxe_ui_components__$HorizontalScroll_HorizontalScrollLayout.__name__ = "haxe.ui.components._HorizontalScroll.HorizontalScrollLayout";
haxe_ui_components__$HorizontalScroll_HorizontalScrollLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_components__$HorizontalScroll_HorizontalScrollLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	resizeChildren: function() {
		haxe_ui_layouts_DefaultLayout.prototype.resizeChildren.call(this);
		var scroll = js_Boot.__cast(this.get_component() , haxe_ui_components_Scroll);
		var thumb = this.get_component().findComponent("scroll-thumb-button");
		if(thumb != null) {
			if(scroll.get_min() == scroll.get_max()) {
				thumb.hide();
			} else {
				var m = scroll.get_max() - scroll.get_min();
				var ucx = this.get_usableWidth();
				var thumbWidth = scroll.get_pageSize() / m * ucx;
				if(scroll.get_thumbSize() != null) {
					thumbWidth = scroll.get_thumbSize();
				}
				if(thumbWidth < this.get_innerHeight()) {
					thumbWidth = this.get_innerHeight();
				} else if(thumbWidth > ucx) {
					thumbWidth = ucx;
				}
				if(thumbWidth > 0 && isNaN(thumbWidth) == false) {
					thumb.set_width(thumbWidth);
				}
				thumb.show();
			}
		}
	}
	,repositionChildren: function() {
		haxe_ui_layouts_DefaultLayout.prototype.repositionChildren.call(this);
		var deinc = this.get_component().findComponent("scroll-deinc-button");
		var inc = this.get_component().findComponent("scroll-inc-button");
		if(inc != null && this.hidden(inc) == false) {
			inc.set_left(this.get_component().get_width() - inc.get_width() - this.get_paddingRight());
		}
		var scroll = js_Boot.__cast(this.get_component() , haxe_ui_components_Scroll);
		var thumb = this.get_component().findComponent("scroll-thumb-button");
		if(thumb != null) {
			var m = scroll.get_max() - scroll.get_min();
			var u = this.get_usableWidth();
			u -= thumb.get_componentWidth();
			var x = (scroll.get_pos() - scroll.get_min()) / m * u;
			x += this.get_paddingLeft();
			if(deinc != null && this.hidden(deinc) == false) {
				x += deinc.get_width() + this.get_horizontalSpacing();
			}
			thumb.set_left(x);
			thumb.set_top(Math.round(thumb.get_top()));
		}
	}
	,get_usableWidth: function() {
		var ucx = this.get_innerWidth();
		var deinc = this.get_component().findComponent("scroll-deinc-button");
		var inc = this.get_component().findComponent("scroll-inc-button");
		if(deinc != null && this.hidden(deinc) == false) {
			ucx -= deinc.get_width() + this.get_horizontalSpacing();
		}
		if(inc != null && this.hidden(inc) == false) {
			ucx -= inc.get_width() + this.get_horizontalSpacing();
		}
		return ucx;
	}
	,__class__: haxe_ui_components__$HorizontalScroll_HorizontalScrollLayout
});
var haxe_ui_components_Image = function() {
	haxe_ui_core_Component.call(this);
};
$hxClasses["haxe.ui.components.Image"] = haxe_ui_components_Image;
haxe_ui_components_Image.__name__ = "haxe.ui.components.Image";
haxe_ui_components_Image.__super__ = haxe_ui_core_Component;
haxe_ui_components_Image.prototype = $extend(haxe_ui_core_Component.prototype,{
	registerComposite: function() {
		haxe_ui_core_Component.prototype.registerComposite.call(this);
		this._defaultLayoutClass = haxe_ui_components__$Image_ImageLayout;
		this._compositeBuilderClass = haxe_ui_components__$Image_Builder;
	}
	,registerBehaviours: function() {
		haxe_ui_core_Component.prototype.registerBehaviours.call(this);
		this.behaviours.register("resource",haxe_ui_components__$Image_ResourceBehaviour);
		this.behaviours.register("scaleMode",haxe_ui_behaviours_InvalidatingBehaviour,haxe_ui_util_Variant.fromString("fill"));
		this.behaviours.register("imageHorizontalAlign",haxe_ui_behaviours_InvalidatingBehaviour,haxe_ui_util_Variant.fromString("center"));
		this.behaviours.register("imageVerticalAlign",haxe_ui_behaviours_InvalidatingBehaviour,haxe_ui_util_Variant.fromString("center"));
		this.behaviours.register("originalWidth",haxe_ui_behaviours_DefaultBehaviour);
		this.behaviours.register("originalHeight",haxe_ui_behaviours_DefaultBehaviour);
		this.behaviours.register("imageScale",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util_Variant.fromInt(1));
	}
	,get_resource: function() {
		if(this.behaviours == null) {
			return null;
		}
		return this.behaviours.get("resource");
	}
	,set_resource: function(value) {
		this.behaviours.set("resource",value);
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"resource"));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"value"));
		return value;
	}
	,get_scaleMode: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("scaleMode"));
	}
	,set_scaleMode: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("scaleMode",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"scaleMode"));
		return value;
	}
	,get_imageHorizontalAlign: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("imageHorizontalAlign"));
	}
	,set_imageHorizontalAlign: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("imageHorizontalAlign",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"imageHorizontalAlign"));
		return value;
	}
	,get_imageVerticalAlign: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("imageVerticalAlign"));
	}
	,set_imageVerticalAlign: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("imageVerticalAlign",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"imageVerticalAlign"));
		return value;
	}
	,get_originalWidth: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("originalWidth"));
	}
	,set_originalWidth: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("originalWidth",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"originalWidth"));
		return value;
	}
	,get_originalHeight: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("originalHeight"));
	}
	,set_originalHeight: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("originalHeight",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"originalHeight"));
		return value;
	}
	,get_imageScale: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("imageScale"));
	}
	,set_imageScale: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("imageScale",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"imageScale"));
		return value;
	}
	,get_value: function() {
		return this.get_resource();
	}
	,set_value: function(value) {
		this.set_resource(haxe_ui_util_Variant.fromDynamic(value));
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_Component.prototype.cloneComponent.call(this);
		if(this.get_resource() != null) {
			c.set_resource(this.get_resource());
		}
		if(this.get_scaleMode() != null) {
			c.set_scaleMode(this.get_scaleMode());
		}
		if(this.get_imageHorizontalAlign() != null) {
			c.set_imageHorizontalAlign(this.get_imageHorizontalAlign());
		}
		if(this.get_imageVerticalAlign() != null) {
			c.set_imageVerticalAlign(this.get_imageVerticalAlign());
		}
		c.set_originalWidth(this.get_originalWidth());
		c.set_originalHeight(this.get_originalHeight());
		c.set_imageScale(this.get_imageScale());
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_components_Image();
	}
	,__class__: haxe_ui_components_Image
	,__properties__: $extend(haxe_ui_core_Component.prototype.__properties__,{set_imageScale:"set_imageScale",get_imageScale:"get_imageScale",set_originalHeight:"set_originalHeight",get_originalHeight:"get_originalHeight",set_originalWidth:"set_originalWidth",get_originalWidth:"get_originalWidth",set_imageVerticalAlign:"set_imageVerticalAlign",get_imageVerticalAlign:"get_imageVerticalAlign",set_imageHorizontalAlign:"set_imageHorizontalAlign",get_imageHorizontalAlign:"get_imageHorizontalAlign",set_scaleMode:"set_scaleMode",get_scaleMode:"get_scaleMode",set_resource:"set_resource",get_resource:"get_resource"})
});
var haxe_ui_components__$Image_ImageLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.components._Image.ImageLayout"] = haxe_ui_components__$Image_ImageLayout;
haxe_ui_components__$Image_ImageLayout.__name__ = "haxe.ui.components._Image.ImageLayout";
haxe_ui_components__$Image_ImageLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_components__$Image_ImageLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	get_imageScaleMode: function() {
		return (js_Boot.__cast(this._component , haxe_ui_components_Image)).get_scaleMode();
	}
	,get_imageHorizontalAlign: function() {
		return (js_Boot.__cast(this._component , haxe_ui_components_Image)).get_imageHorizontalAlign();
	}
	,get_imageVerticalAlign: function() {
		return (js_Boot.__cast(this._component , haxe_ui_components_Image)).get_imageVerticalAlign();
	}
	,resizeChildren: function() {
		if(this.get_component().hasImageDisplay()) {
			var image = js_Boot.__cast(this._component , haxe_ui_components_Image);
			var imageDisplay = image.getImageDisplay();
			var maxWidth = this.get_usableSize().width;
			var maxHeight = this.get_usableSize().height;
			if(this.get_component().get_autoWidth() == true) {
				maxWidth = -1;
			}
			if(this._component.get_autoHeight() == true) {
				maxHeight = -1;
			}
			var scaleW = maxWidth != -1 ? maxWidth / image.get_originalWidth() : 1;
			var scaleH = maxHeight != -1 ? maxHeight / image.get_originalHeight() : 1;
			scaleW *= image.get_imageScale();
			scaleH *= image.get_imageScale();
			if(this.get_imageScaleMode() != "fill") {
				var scale;
				switch(this.get_imageScaleMode()) {
				case "fitheight":
					scale = scaleH;
					break;
				case "fitinside":
					scale = scaleW < scaleH ? scaleW : scaleH;
					break;
				case "fitoutside":
					scale = scaleW > scaleH ? scaleW : scaleH;
					break;
				case "fitwidth":
					scale = scaleW;
					break;
				default:
					scale = 1;
				}
				imageDisplay.set_imageWidth(image.get_originalWidth() * scale);
				imageDisplay.set_imageHeight(image.get_originalHeight() * scale);
			} else {
				imageDisplay.set_imageWidth(image.get_originalWidth() * scaleW);
				imageDisplay.set_imageHeight(image.get_originalHeight() * scaleH);
			}
		}
	}
	,repositionChildren: function() {
		if(this.get_component().hasImageDisplay()) {
			var image = js_Boot.__cast(this._component , haxe_ui_components_Image);
			var imageDisplay = this._component.getImageDisplay();
			switch(image.get_imageHorizontalAlign()) {
			case "center":
				imageDisplay.set_left((this._component.get_componentWidth() - imageDisplay.get_imageWidth()) / 2);
				break;
			case "left":
				imageDisplay.set_left(this.get_paddingLeft());
				break;
			case "right":
				imageDisplay.set_left(this._component.get_componentWidth() - imageDisplay.get_imageWidth() - this.get_paddingRight());
				break;
			}
			switch(image.get_imageVerticalAlign()) {
			case "bottom":
				imageDisplay.set_top(this._component.get_componentHeight() - imageDisplay.get_imageHeight() - this.get_paddingBottom());
				break;
			case "center":
				imageDisplay.set_top((this._component.get_componentHeight() - imageDisplay.get_imageHeight()) / 2);
				break;
			case "top":
				imageDisplay.set_top(this.get_paddingTop());
				break;
			}
		}
	}
	,calcAutoSize: function(exclusions) {
		var size = haxe_ui_layouts_DefaultLayout.prototype.calcAutoSize.call(this,exclusions);
		if(this.get_component().hasImageDisplay()) {
			size.width += this.get_component().getImageDisplay().get_imageWidth();
			size.height += this.get_component().getImageDisplay().get_imageHeight();
		}
		return size;
	}
	,refresh: function() {
		haxe_ui_layouts_DefaultLayout.prototype.refresh.call(this);
		this.updateClipRect();
	}
	,updateClipRect: function() {
		if(this.get_component().hasImageDisplay()) {
			var usz = this.get_usableSize();
			var imageDisplay = this.get_component().getImageDisplay();
			var rc = imageDisplay.get_imageClipRect();
			if(imageDisplay.get_imageWidth() > usz.width || imageDisplay.get_imageHeight() > usz.height) {
				if(rc == null) {
					rc = new haxe_ui_geom_Rectangle();
				}
				rc.top = this.get_paddingLeft();
				rc.left = this.get_paddingTop();
				rc.width = usz.width;
				rc.height = usz.height;
			} else {
				rc = null;
			}
			imageDisplay.set_imageClipRect(rc);
		}
	}
	,__class__: haxe_ui_components__$Image_ImageLayout
	,__properties__: $extend(haxe_ui_layouts_DefaultLayout.prototype.__properties__,{get_imageVerticalAlign:"get_imageVerticalAlign",get_imageHorizontalAlign:"get_imageHorizontalAlign",get_imageScaleMode:"get_imageScaleMode"})
});
var haxe_ui_components__$Image_ResourceBehaviour = function(component) {
	this._canvasMap = null;
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Image.ResourceBehaviour"] = haxe_ui_components__$Image_ResourceBehaviour;
haxe_ui_components__$Image_ResourceBehaviour.__name__ = "haxe.ui.components._Image.ResourceBehaviour";
haxe_ui_components__$Image_ResourceBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Image_ResourceBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	_canvasMap: null
	,validateData: function() {
		var _gthis = this;
		if(this._value == null || haxe_ui_util_Variant.get_isNull(this._value)) {
			this._component.removeImageDisplay();
			this._component.invalidateComponent();
			return;
		}
		if(haxe_ui_util_Variant.get_isComponent(this._value) && ((haxe_ui_util_Variant.toComponent(this._value)) instanceof haxe_ui_components_Canvas)) {
			var newCanvas = null;
			if(this._canvasMap == null) {
				this._canvasMap = new haxe_ds_StringMap();
			}
			var canvas = haxe_ui_util_Variant.toComponent(this._value);
			if(canvas.get_id() == null) {
				canvas.set_id(haxe_ui_util_GUID.uuid());
			}
			var existingCanvas = this._component.findComponent(null,haxe_ui_components_Canvas,false);
			if(existingCanvas != null && existingCanvas.get_id() == canvas.get_id()) {
				return;
			}
			if(existingCanvas != null) {
				this._component.removeComponent(existingCanvas,false);
			}
			var this1 = this._canvasMap;
			var key = canvas.get_id();
			if(Object.prototype.hasOwnProperty.call(this1.h,key)) {
				var this1 = this._canvasMap;
				var key = canvas.get_id();
				newCanvas = this1.h[key];
			} else {
				newCanvas = haxe_ui_util_Variant.toComponent(this._value).cloneComponent();
				var this1 = this._canvasMap;
				var key = canvas.get_id();
				this1.h[key] = newCanvas;
			}
			this._component.addComponent(newCanvas);
		} else if(haxe_ui_util_Variant.get_isComponent(this._value) && ((haxe_ui_util_Variant.toComponent(this._value)) instanceof haxe_ui_components_Image)) {
			var image = js_Boot.__cast(haxe_ui_util_Variant.toComponent(this._value) , haxe_ui_components_Image);
			this._component.addComponent(image);
		} else {
			haxe_ui_loaders_image_ImageLoader.get_instance().load(this._value,function(imageInfo) {
				if(imageInfo != null) {
					if(_gthis._value == null || haxe_ui_util_Variant.get_isNull(_gthis._value)) {
						_gthis._component.removeImageDisplay();
						_gthis._component.invalidateComponent();
						return;
					}
					var image = js_Boot.__cast(_gthis._component , haxe_ui_components_Image);
					if(image == null) {
						return;
					}
					var display = image.getImageDisplay();
					if(display != null) {
						display.set_imageInfo(imageInfo);
						image.set_originalWidth(imageInfo.width);
						image.set_originalHeight(imageInfo.height);
						if(image.autoSize() == true && image.parentComponent != null) {
							var _this = image.parentComponent;
							if(!(_this._layout == null || _this._layoutLocked == true)) {
								_this.invalidateComponent("layout",false);
							}
						}
						image.invalidateComponent();
						display.validateComponent();
						var event = new haxe_ui_events_UIEvent("change");
						image.dispatch(event);
					}
				}
			});
		}
	}
	,__class__: haxe_ui_components__$Image_ResourceBehaviour
});
var haxe_ui_components__$Image_Builder = function(image) {
	var _gthis = this;
	haxe_ui_core_CompositeBuilder.call(this,image);
	this._image = image;
	this._image.registerEvent("shown",function(_) {
		if(_gthis._image.parentComponent != null) {
			var _this = _gthis._image.parentComponent;
			if(!(_this._layout == null || _this._layoutLocked == true)) {
				_this.invalidateComponent("layout",false);
			}
		}
	});
};
$hxClasses["haxe.ui.components._Image.Builder"] = haxe_ui_components__$Image_Builder;
haxe_ui_components__$Image_Builder.__name__ = "haxe.ui.components._Image.Builder";
haxe_ui_components__$Image_Builder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_components__$Image_Builder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_image: null
	,applyStyle: function(style) {
		if(style.resource != null) {
			this._image.set_resource(style.resource);
		}
	}
	,__class__: haxe_ui_components__$Image_Builder
});
var haxe_ui_components_Label = function() {
	haxe_ui_core_Component.call(this);
};
$hxClasses["haxe.ui.components.Label"] = haxe_ui_components_Label;
haxe_ui_components_Label.__name__ = "haxe.ui.components.Label";
haxe_ui_components_Label.__super__ = haxe_ui_core_Component;
haxe_ui_components_Label.prototype = $extend(haxe_ui_core_Component.prototype,{
	registerComposite: function() {
		haxe_ui_core_Component.prototype.registerComposite.call(this);
		this._compositeBuilderClass = haxe_ui_components__$Label_Builder;
		this._defaultLayoutClass = haxe_ui_components__$Label_LabelLayout;
	}
	,registerBehaviours: function() {
		haxe_ui_core_Component.prototype.registerBehaviours.call(this);
		this.behaviours.register("text",haxe_ui_components__$Label_TextBehaviour);
		this.behaviours.register("htmlText",haxe_ui_components__$Label_HtmlTextBehaviour);
	}
	,get_htmlText: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("htmlText"));
	}
	,set_htmlText: function(value) {
		var _g = Type.typeof(value);
		if(_g._hx_index == 6) {
			if(_g.c == String) {
				if(value != null && StringTools.startsWith(value,"{{") && StringTools.endsWith(value,"}}")) {
					haxe_ui_locale_LocaleManager.get_instance().registerComponent(this,"htmlText",null,value);
					return value;
				}
			}
		}
		this.behaviours.set("htmlText",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"htmlText"));
		return value;
	}
	,get_value: function() {
		return this.get_text();
	}
	,set_value: function(value) {
		var _g = Type.typeof(value);
		switch(_g._hx_index) {
		case 1:case 2:case 3:
			this.set_text(Std.string(value));
			break;
		case 7:
			if(_g.e == haxe_ui_util_VariantType) {
				var v = value;
				this.set_text(haxe_ui_util_Variant.toString(v));
			} else {
				this.set_text(value);
			}
			break;
		default:
			this.set_text(value);
		}
		return value;
	}
	,get_textAlign: function() {
		if(this.get_customStyle().textAlign != null) {
			return this.get_customStyle().textAlign;
		}
		if(this.get_style() == null || this.get_style().textAlign == null) {
			return null;
		}
		return this.get_style().textAlign;
	}
	,set_textAlign: function(value) {
		if(this.get_customStyle().textAlign == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().textAlign = null;
		} else {
			this.get_customStyle().textAlign = value;
		}
		this.invalidateComponent("style",false);
		if(!(this._layout == null || this._layoutLocked == true)) {
			this.invalidateComponent("layout",false);
		}
		return value;
	}
	,get_wordWrap: function() {
		if(this.get_customStyle().wordWrap != null) {
			return this.get_customStyle().wordWrap;
		}
		if(this.get_style() == null || this.get_style().wordWrap == null) {
			return null;
		}
		return this.get_style().wordWrap;
	}
	,set_wordWrap: function(value) {
		if(this.get_customStyle().wordWrap == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().wordWrap = null;
		} else {
			this.get_customStyle().wordWrap = value;
		}
		this.invalidateComponent("style",false);
		if(!(this._layout == null || this._layoutLocked == true)) {
			this.invalidateComponent("layout",false);
		}
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_Component.prototype.cloneComponent.call(this);
		if(this.get_htmlText() != null) {
			c.set_htmlText(this.get_htmlText());
		}
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_components_Label();
	}
	,__class__: haxe_ui_components_Label
	,__properties__: $extend(haxe_ui_core_Component.prototype.__properties__,{set_wordWrap:"set_wordWrap",get_wordWrap:"get_wordWrap",set_textAlign:"set_textAlign",get_textAlign:"get_textAlign",set_htmlText:"set_htmlText",get_htmlText:"get_htmlText"})
});
var haxe_ui_components__$Label_LabelLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.components._Label.LabelLayout"] = haxe_ui_components__$Label_LabelLayout;
haxe_ui_components__$Label_LabelLayout.__name__ = "haxe.ui.components._Label.LabelLayout";
haxe_ui_components__$Label_LabelLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_components__$Label_LabelLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	resizeChildren: function() {
		if(this.get_component().get_autoWidth() == false) {
			this.get_component().getTextDisplay().set_width(this.get_component().get_componentWidth() - this.get_paddingLeft() - this.get_paddingRight());
			var wordWrap = true;
			if(this._component.get_style() != null && this._component.get_style().wordWrap != null) {
				wordWrap = this._component.get_style().wordWrap;
			}
			this.get_component().getTextDisplay().set_wordWrap(wordWrap);
		} else {
			this.get_component().getTextDisplay().set_width(this.get_component().getTextDisplay().get_textWidth());
		}
		if(this.get_component().get_autoHeight() == true) {
			this.get_component().getTextDisplay().set_height(this.get_component().getTextDisplay().get_textHeight());
		} else {
			this.get_component().getTextDisplay().set_height(this.get_component().get_height());
		}
	}
	,repositionChildren: function() {
		if(this.get_component().hasTextDisplay() == true) {
			this.get_component().getTextDisplay().set_left(this.get_paddingLeft());
			this.get_component().getTextDisplay().set_top(this.get_paddingTop());
		}
	}
	,calcAutoSize: function(exclusions) {
		var size = haxe_ui_layouts_DefaultLayout.prototype.calcAutoSize.call(this,exclusions);
		if(this.get_component().hasTextDisplay() == true) {
			size.width += this.get_component().getTextDisplay().get_textWidth();
			size.height += this.get_component().getTextDisplay().get_textHeight();
		}
		return size;
	}
	,textAlign: function(child) {
		if(child == null || child.get_style() == null || child.get_style().textAlign == null) {
			return "left";
		}
		return child.get_style().textAlign;
	}
	,__class__: haxe_ui_components__$Label_LabelLayout
});
var haxe_ui_components__$Label_TextBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Label.TextBehaviour"] = haxe_ui_components__$Label_TextBehaviour;
haxe_ui_components__$Label_TextBehaviour.__name__ = "haxe.ui.components._Label.TextBehaviour";
haxe_ui_components__$Label_TextBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Label_TextBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		if(this._component.getTextDisplay().get_textStyle() != this._component.get_style()) {
			var _this = this._component;
			var force = true;
			if(force == null) {
				force = false;
			}
			_this.invalidateComponent("style",false);
			if(force == true) {
				_this._style = null;
			}
		}
		this._component.getTextDisplay().set_text("" + (this._value == null ? "null" : haxe_ui_util_Variant.toString(this._value)));
		this._component.dispatch(new haxe_ui_events_UIEvent("change"));
	}
	,__class__: haxe_ui_components__$Label_TextBehaviour
});
var haxe_ui_components__$Label_HtmlTextBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Label.HtmlTextBehaviour"] = haxe_ui_components__$Label_HtmlTextBehaviour;
haxe_ui_components__$Label_HtmlTextBehaviour.__name__ = "haxe.ui.components._Label.HtmlTextBehaviour";
haxe_ui_components__$Label_HtmlTextBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Label_HtmlTextBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		if(this._component.getTextDisplay().get_textStyle() != this._component.get_style()) {
			var _this = this._component;
			var force = true;
			if(force == null) {
				force = false;
			}
			_this.invalidateComponent("style",false);
			if(force == true) {
				_this._style = null;
			}
		}
		this._component.getTextDisplay().set_htmlText("" + (this._value == null ? "null" : haxe_ui_util_Variant.toString(this._value)));
		this._component.dispatch(new haxe_ui_events_UIEvent("change"));
	}
	,__class__: haxe_ui_components__$Label_HtmlTextBehaviour
});
var haxe_ui_components__$Label_Builder = function(label) {
	haxe_ui_core_CompositeBuilder.call(this,label);
	this._label = label;
};
$hxClasses["haxe.ui.components._Label.Builder"] = haxe_ui_components__$Label_Builder;
haxe_ui_components__$Label_Builder.__name__ = "haxe.ui.components._Label.Builder";
haxe_ui_components__$Label_Builder.isHtml = function(v) {
	if(v == null) {
		return false;
	} else {
		return v.indexOf("<font ") != -1;
	}
};
haxe_ui_components__$Label_Builder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_components__$Label_Builder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_label: null
	,applyStyle: function(style) {
		if(this._label.hasTextDisplay() == true) {
			this._label.getTextDisplay().set_textStyle(style);
			var tmp;
			if((style.contentType == "auto" || style.contentType == "html") && this._label.getTextDisplay().get_supportsHtml()) {
				var v = Std.string(this._component.get_text());
				tmp = v == null ? false : v.indexOf("<font ") != -1;
			} else {
				tmp = false;
			}
			if(tmp) {
				this._label.set_htmlText(this._label.get_text());
			}
		}
	}
	,get_isComponentClipped: function() {
		var componentClipRect = this._component.get_componentClipRect();
		if(componentClipRect == null) {
			return false;
		}
		return this._label.getTextDisplay().measureTextWidth() > componentClipRect.width;
	}
	,__class__: haxe_ui_components__$Label_Builder
});
var haxe_ui_components_OptionBox = function() {
	haxe_ui_components_CheckBox.call(this);
};
$hxClasses["haxe.ui.components.OptionBox"] = haxe_ui_components_OptionBox;
haxe_ui_components_OptionBox.__name__ = "haxe.ui.components.OptionBox";
haxe_ui_components_OptionBox.__super__ = haxe_ui_components_CheckBox;
haxe_ui_components_OptionBox.prototype = $extend(haxe_ui_components_CheckBox.prototype,{
	resetGroup: function() {
		if(this.behaviours == null) {
			return;
		}
		this.behaviours.call("resetGroup",null);
	}
	,registerComposite: function() {
		haxe_ui_components_CheckBox.prototype.registerComposite.call(this);
		this._compositeBuilderClass = haxe_ui_components_OptionBoxBuilder;
	}
	,registerBehaviours: function() {
		haxe_ui_components_CheckBox.prototype.registerBehaviours.call(this);
		this.behaviours.register("componentGroup",haxe_ui_components__$OptionBox_GroupBehaviour,haxe_ui_util_Variant.fromString("defaultGroup"));
		this.behaviours.register("selected",haxe_ui_components__$OptionBox_SelectedBehaviour);
		this.behaviours.register("selectedOption",haxe_ui_components__$OptionBox_SelectedOptionBehaviour);
		this.behaviours.register("resetGroup",haxe_ui_components__$OptionBox_ResetGroup);
	}
	,get_componentGroup: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("componentGroup"));
	}
	,set_componentGroup: function(value) {
		var _g = Type.typeof(value);
		if(_g._hx_index == 6) {
			if(_g.c == String) {
				if(value != null && StringTools.startsWith(value,"{{") && StringTools.endsWith(value,"}}")) {
					haxe_ui_locale_LocaleManager.get_instance().registerComponent(this,"componentGroup",null,value);
					return value;
				}
			}
		}
		this.behaviours.set("componentGroup",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"componentGroup"));
		return value;
	}
	,get_selectedOption: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toComponent(this.behaviours.get("selectedOption"));
	}
	,set_selectedOption: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("selectedOption",haxe_ui_util_Variant.fromComponent(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"selectedOption"));
		return value;
	}
	,get_value: function() {
		return this.get_selected();
	}
	,set_value: function(value) {
		var _g = Type.typeof(value);
		switch(_g._hx_index) {
		case 1:case 2:
			this.set_selected(value == 1);
			break;
		case 6:
			if(_g.c == String) {
				this.set_selected(value == "true" || value == "1");
			} else {
				this.set_selected(value);
			}
			break;
		case 7:
			if(_g.e == haxe_ui_util_VariantType) {
				var v = value;
				this.set_selected(haxe_ui_util_Variant.toBool(v));
			} else {
				this.set_selected(value);
			}
			break;
		default:
			this.set_selected(value);
		}
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_components_CheckBox.prototype.cloneComponent.call(this);
		if(this.get_componentGroup() != null) {
			c.set_componentGroup(this.get_componentGroup());
		}
		if(this.get_selectedOption() != null) {
			c.set_selectedOption(this.get_selectedOption());
		}
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_components_OptionBox();
	}
	,__class__: haxe_ui_components_OptionBox
	,__properties__: $extend(haxe_ui_components_CheckBox.prototype.__properties__,{set_selectedOption:"set_selectedOption",get_selectedOption:"get_selectedOption",set_componentGroup:"set_componentGroup",get_componentGroup:"get_componentGroup"})
});
var haxe_ui_components__$OptionBox_GroupBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._OptionBox.GroupBehaviour"] = haxe_ui_components__$OptionBox_GroupBehaviour;
haxe_ui_components__$OptionBox_GroupBehaviour.__name__ = "haxe.ui.components._OptionBox.GroupBehaviour";
haxe_ui_components__$OptionBox_GroupBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$OptionBox_GroupBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	set: function(value) {
		haxe_ui_behaviours_DataBehaviour.prototype.set.call(this,value);
		haxe_ui_components_OptionBoxGroups.get_instance().add(haxe_ui_util_Variant.toString(value),this._component);
	}
	,validateData: function() {
		haxe_ui_components_OptionBoxGroups.get_instance().add(haxe_ui_util_Variant.toString(this._value),this._component);
	}
	,__class__: haxe_ui_components__$OptionBox_GroupBehaviour
});
var haxe_ui_components__$OptionBox_SelectedBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._OptionBox.SelectedBehaviour"] = haxe_ui_components__$OptionBox_SelectedBehaviour;
haxe_ui_components__$OptionBox_SelectedBehaviour.__name__ = "haxe.ui.components._OptionBox.SelectedBehaviour";
haxe_ui_components__$OptionBox_SelectedBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$OptionBox_SelectedBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var optionbox = js_Boot.__cast(this._component , haxe_ui_components_OptionBox);
		(js_Boot.__cast(this._component._compositeBuilder , haxe_ui_components_OptionBoxBuilder)).setSelection(optionbox,haxe_ui_util_Variant.toBool(this._value));
	}
	,__class__: haxe_ui_components__$OptionBox_SelectedBehaviour
});
var haxe_ui_components__$OptionBox_SelectedOptionBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._OptionBox.SelectedOptionBehaviour"] = haxe_ui_components__$OptionBox_SelectedOptionBehaviour;
haxe_ui_components__$OptionBox_SelectedOptionBehaviour.__name__ = "haxe.ui.components._OptionBox.SelectedOptionBehaviour";
haxe_ui_components__$OptionBox_SelectedOptionBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$OptionBox_SelectedOptionBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	get: function() {
		var optionbox = js_Boot.__cast(this._component , haxe_ui_components_OptionBox);
		var arr = haxe_ui_components_OptionBoxGroups.get_instance().get(optionbox.get_componentGroup());
		var selectionOption = null;
		if(arr != null) {
			var _g = 0;
			while(_g < arr.length) {
				var test = arr[_g];
				++_g;
				if(test.get_selected() == true) {
					selectionOption = test;
					break;
				}
			}
		}
		return haxe_ui_util_Variant.fromComponent(selectionOption);
	}
	,__class__: haxe_ui_components__$OptionBox_SelectedOptionBehaviour
});
var haxe_ui_components__$OptionBox_ResetGroup = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components._OptionBox.ResetGroup"] = haxe_ui_components__$OptionBox_ResetGroup;
haxe_ui_components__$OptionBox_ResetGroup.__name__ = "haxe.ui.components._OptionBox.ResetGroup";
haxe_ui_components__$OptionBox_ResetGroup.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_components__$OptionBox_ResetGroup.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(param) {
		var optionbox = js_Boot.__cast(this._component , haxe_ui_components_OptionBox);
		haxe_ui_components_OptionBoxGroups.get_instance().reset(optionbox.get_componentGroup());
		return null;
	}
	,__class__: haxe_ui_components__$OptionBox_ResetGroup
});
var haxe_ui_components_OptionBoxBuilder = function(checkbox) {
	haxe_ui_components_CheckBoxBuilder.call(this,checkbox);
};
$hxClasses["haxe.ui.components.OptionBoxBuilder"] = haxe_ui_components_OptionBoxBuilder;
haxe_ui_components_OptionBoxBuilder.__name__ = "haxe.ui.components.OptionBoxBuilder";
haxe_ui_components_OptionBoxBuilder.__super__ = haxe_ui_components_CheckBoxBuilder;
haxe_ui_components_OptionBoxBuilder.prototype = $extend(haxe_ui_components_CheckBoxBuilder.prototype,{
	get_cssName: function() {
		return "optionbox";
	}
	,setSelection: function(optionbox,value,allowDeselection) {
		if(allowDeselection == null) {
			allowDeselection = false;
		}
		if(optionbox.get_componentGroup() != null && value == false && allowDeselection == false) {
			var arr = haxe_ui_components_OptionBoxGroups.get_instance().get(optionbox.get_componentGroup());
			var hasSelection = false;
			if(arr != null) {
				var _g = 0;
				while(_g < arr.length) {
					var option = arr[_g];
					++_g;
					if(option != optionbox && option.get_selected() == true) {
						hasSelection = true;
						break;
					}
				}
			}
			if(hasSelection == false && allowDeselection == false) {
				optionbox.behaviours.softSet("selected",haxe_ui_util_Variant.fromBool(true));
				return;
			}
		}
		if(optionbox.get_componentGroup() != null && value == true) {
			var arr = haxe_ui_components_OptionBoxGroups.get_instance().get(optionbox.get_componentGroup());
			if(arr != null) {
				var _g = 0;
				while(_g < arr.length) {
					var option = arr[_g];
					++_g;
					if(option != optionbox) {
						option.set_selected(false);
					}
				}
			}
		}
		if(allowDeselection == true && value == false) {
			optionbox.behaviours.softSet("selected",haxe_ui_util_Variant.fromBool(false));
		}
		var valueComponent = optionbox.findComponent("optionbox-value",haxe_ui_components_CheckBoxValue);
		if(valueComponent == null) {
			return;
		}
		valueComponent.createIcon();
		if(value == true) {
			valueComponent.addClass(":selected");
			optionbox.dispatch(new haxe_ui_events_UIEvent("change"));
		} else {
			valueComponent.removeClass(":selected");
		}
	}
	,destroy: function() {
		haxe_ui_components_CheckBoxBuilder.prototype.destroy.call(this);
		var optionbox = js_Boot.__cast(this._component , haxe_ui_components_OptionBox);
		haxe_ui_components_OptionBoxGroups.get_instance().remove(optionbox.get_componentGroup(),optionbox);
	}
	,__class__: haxe_ui_components_OptionBoxBuilder
});
var haxe_ui_components_OptionBoxGroups = function() {
	this._groups = new haxe_ds_StringMap();
};
$hxClasses["haxe.ui.components.OptionBoxGroups"] = haxe_ui_components_OptionBoxGroups;
haxe_ui_components_OptionBoxGroups.__name__ = "haxe.ui.components.OptionBoxGroups";
haxe_ui_components_OptionBoxGroups.__properties__ = {get_instance:"get_instance"};
haxe_ui_components_OptionBoxGroups.get_instance = function() {
	if(haxe_ui_components_OptionBoxGroups._instance == null) {
		haxe_ui_components_OptionBoxGroups._instance = new haxe_ui_components_OptionBoxGroups();
	}
	return haxe_ui_components_OptionBoxGroups._instance;
};
haxe_ui_components_OptionBoxGroups.prototype = {
	_groups: null
	,get: function(name) {
		return this._groups.h[name];
	}
	,set: function(name,options) {
		this._groups.h[name] = options;
	}
	,add: function(name,optionbox) {
		var arr = this.get(name);
		if(arr == null) {
			arr = [];
		}
		if(arr.indexOf(optionbox) == -1) {
			arr.push(optionbox);
		}
		this.set(name,arr);
	}
	,remove: function(name,optionbox) {
		var arr = this.get(name);
		if(arr == null) {
			return;
		}
		HxOverrides.remove(arr,optionbox);
		if(arr.length == 0) {
			var _this = this._groups;
			if(Object.prototype.hasOwnProperty.call(_this.h,name)) {
				delete(_this.h[name]);
			}
		}
	}
	,reset: function(name) {
		var arr = this.get(name);
		if(arr == null) {
			return;
		}
		var selection = null;
		var _g = 0;
		while(_g < arr.length) {
			var item = arr[_g];
			++_g;
			if(item.get_selected() == true) {
				selection = item;
				break;
			}
		}
		if(selection == null) {
			return;
		}
		(js_Boot.__cast(selection._compositeBuilder , haxe_ui_components_OptionBoxBuilder)).setSelection(selection,false,true);
	}
	,__class__: haxe_ui_components_OptionBoxGroups
};
var haxe_ui_components__$Scroll_Events = function(scroll) {
	haxe_ui_events_Events.call(this,scroll);
	this._scroll = scroll;
	this._deincButton = this._scroll.findComponent("scroll-deinc-button");
	this._incButton = this._scroll.findComponent("scroll-inc-button");
	this._thumb = this._scroll.findComponent("scroll-thumb-button");
};
$hxClasses["haxe.ui.components._Scroll.Events"] = haxe_ui_components__$Scroll_Events;
haxe_ui_components__$Scroll_Events.__name__ = "haxe.ui.components._Scroll.Events";
haxe_ui_components__$Scroll_Events.__super__ = haxe_ui_events_Events;
haxe_ui_components__$Scroll_Events.prototype = $extend(haxe_ui_events_Events.prototype,{
	_scroll: null
	,_deincButton: null
	,_incButton: null
	,_thumb: null
	,register: function() {
		if(this.hasEvent("mousedown",$bind(this,this.onMouseDown)) == false) {
			this.registerEvent("mousedown",$bind(this,this.onMouseDown));
		}
		if(this._deincButton != null && this._deincButton.hasEvent("click",$bind(this,this.onDeinc)) == false) {
			this._deincButton.registerEvent("click",$bind(this,this.onDeinc));
		}
		if(this._incButton != null && this._incButton.hasEvent("click",$bind(this,this.onInc)) == false) {
			this._incButton.registerEvent("click",$bind(this,this.onInc));
		}
		if(this._thumb != null && this._thumb.hasEvent("mousedown",$bind(this,this.onThumbMouseDown)) == false) {
			this._thumb.registerEvent("mousedown",$bind(this,this.onThumbMouseDown));
		}
	}
	,unregister: function() {
		this.unregisterEvent("mousedown",$bind(this,this.onMouseDown));
		if(this._deincButton != null) {
			this._deincButton.unregisterEvent("click",$bind(this,this.onDeinc));
		}
		if(this._incButton != null) {
			this._incButton.unregisterEvent("click",$bind(this,this.onInc));
		}
		if(this._thumb != null) {
			this._thumb.unregisterEvent("mousedown",$bind(this,this.onThumbMouseDown));
		}
	}
	,onMouseDown: function(event) {
		var componentOffset = this._scroll.getComponentOffset();
		if(this._deincButton.hitTest(event.screenX - componentOffset.x,event.screenY - componentOffset.y) == false && this._incButton.hitTest(event.screenX - componentOffset.x,event.screenY - componentOffset.y) == false) {
			this._scroll.applyPageFromCoord(new haxe_ui_geom_Point(event.screenX - componentOffset.x,event.screenY - componentOffset.y));
		}
	}
	,onDeinc: function(event) {
		var fh = this._scroll;
		fh.set_pos(fh.get_pos() - this._scroll.get_increment());
	}
	,onInc: function(event) {
		var fh = this._scroll;
		fh.set_pos(fh.get_pos() + this._scroll.get_increment());
	}
	,_mouseDownOffset: null
	,onThumbMouseDown: function(event) {
		this._mouseDownOffset = new haxe_ui_geom_Point();
		var tmp = event.screenX - this._thumb.get_left();
		var tmp1 = this._scroll.get_layout().get_paddingLeft();
		this._mouseDownOffset.x = tmp + tmp1;
		var tmp = event.screenY - this._thumb.get_top();
		var tmp1 = this._scroll.get_layout().get_paddingTop();
		this._mouseDownOffset.y = tmp + tmp1;
		this._scroll.get_screen().registerEvent("mouseup",$bind(this,this.onScreenMouseUp));
		this._scroll.get_screen().registerEvent("mousemove",$bind(this,this.onScreenMouseMove));
	}
	,onScreenMouseUp: function(event) {
		this._mouseDownOffset = null;
		this._scroll.get_screen().unregisterEvent("mouseup",$bind(this,this.onScreenMouseUp));
		this._scroll.get_screen().unregisterEvent("mousemove",$bind(this,this.onScreenMouseMove));
	}
	,onScreenMouseMove: function(event) {
		if(this._mouseDownOffset == null) {
			return;
		}
		var coord = new haxe_ui_geom_Point(event.screenX - this._mouseDownOffset.x,event.screenY - this._mouseDownOffset.y);
		this._scroll.set_pos(this._scroll.posFromCoord(coord));
	}
	,__class__: haxe_ui_components__$Scroll_Events
});
var haxe_ui_components__$Scroll_ScrollValueBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Scroll.ScrollValueBehaviour"] = haxe_ui_components__$Scroll_ScrollValueBehaviour;
haxe_ui_components__$Scroll_ScrollValueBehaviour.__name__ = "haxe.ui.components._Scroll.ScrollValueBehaviour";
haxe_ui_components__$Scroll_ScrollValueBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Scroll_ScrollValueBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	set: function(value) {
		if(haxe_ui_util_Variant.eq(value,this.get())) {
			return;
		}
		haxe_ui_behaviours_DataBehaviour.prototype.set.call(this,value);
		var _this = this._component;
		if(!(_this._layout == null || _this._layoutLocked == true)) {
			_this.invalidateComponent("layout",false);
		}
	}
	,validateData: function() {
		var scroll = js_Boot.__cast(this._component , haxe_ui_components_Scroll);
		var pos = scroll.get_pos();
		var min = scroll.get_min();
		var max = scroll.get_max();
		if(pos < min) {
			scroll.set_pos(min);
		} else if(pos > max) {
			scroll.set_pos(max);
		}
		var changeEvent = new haxe_ui_events_UIEvent("change");
		scroll.dispatch(changeEvent);
		var scrollEvent = new haxe_ui_events_ScrollEvent("scrollscroll");
		scroll.dispatch(scrollEvent);
	}
	,__class__: haxe_ui_components__$Scroll_ScrollValueBehaviour
});
var haxe_ui_components__$Scroll_ScrollMinMaxBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Scroll.ScrollMinMaxBehaviour"] = haxe_ui_components__$Scroll_ScrollMinMaxBehaviour;
haxe_ui_components__$Scroll_ScrollMinMaxBehaviour.__name__ = "haxe.ui.components._Scroll.ScrollMinMaxBehaviour";
haxe_ui_components__$Scroll_ScrollMinMaxBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Scroll_ScrollMinMaxBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	set: function(value) {
		if(haxe_ui_util_Variant.eq(value,this.get())) {
			return;
		}
		haxe_ui_behaviours_DataBehaviour.prototype.set.call(this,value);
		var _this = this._component;
		if(!(_this._layout == null || _this._layoutLocked == true)) {
			_this.invalidateComponent("layout",false);
		}
	}
	,validateData: function() {
		var scroll = js_Boot.__cast(this._component , haxe_ui_components_Scroll);
		var pos = scroll.get_pos();
		var min = scroll.get_min();
		var max = scroll.get_max();
		if(pos < min) {
			scroll.set_pos(min);
		} else if(pos > max) {
			scroll.set_pos(max);
		}
		var changeEvent = new haxe_ui_events_UIEvent("change");
		scroll.dispatch(changeEvent);
	}
	,__class__: haxe_ui_components__$Scroll_ScrollMinMaxBehaviour
});
var haxe_ui_components_TextArea = function() {
	haxe_ui_core_InteractiveComponent.call(this);
};
$hxClasses["haxe.ui.components.TextArea"] = haxe_ui_components_TextArea;
haxe_ui_components_TextArea.__name__ = "haxe.ui.components.TextArea";
haxe_ui_components_TextArea.__interfaces__ = [haxe_ui_focus_IFocusable];
haxe_ui_components_TextArea.__super__ = haxe_ui_core_InteractiveComponent;
haxe_ui_components_TextArea.prototype = $extend(haxe_ui_core_InteractiveComponent.prototype,{
	scrollToTop: function() {
		if(this.behaviours == null) {
			return null;
		}
		return this.behaviours.call("scrollToTop",null);
	}
	,scrollToBottom: function() {
		if(this.behaviours == null) {
			return null;
		}
		return this.behaviours.call("scrollToBottom",null);
	}
	,invalidateComponentScroll: function() {
		this.invalidateComponent("scroll");
	}
	,validateComponentInternal: function(nextFrame) {
		if(nextFrame == null) {
			nextFrame = true;
		}
		var dataInvalid = this.isComponentInvalid("data");
		var scrollInvalid = this.isComponentInvalid("scroll");
		var layoutInvalid = this.isComponentInvalid("layout");
		haxe_ui_core_InteractiveComponent.prototype.validateComponentInternal.call(this,nextFrame);
		if(scrollInvalid || layoutInvalid || dataInvalid) {
			if(this._compositeBuilder != null) {
				(js_Boot.__cast(this._compositeBuilder , haxe_ui_components__$TextArea_TextAreaBuilder)).checkScrolls();
			}
		}
	}
	,registerBehaviours: function() {
		haxe_ui_core_InteractiveComponent.prototype.registerBehaviours.call(this);
		this.behaviours.register("text",haxe_ui_components__$TextArea_TextBehaviour);
		this.behaviours.register("htmlText",haxe_ui_components__$TextArea_HtmlTextBehaviour);
		this.behaviours.register("placeholder",haxe_ui_components__$TextArea_PlaceholderBehaviour);
		this.behaviours.register("wrap",haxe_ui_components__$TextArea_WrapBehaviour,haxe_ui_util_Variant.fromBool(true));
		this.behaviours.register("dataSource",haxe_ui_components__$TextArea_DataSourceBehaviour);
		this.behaviours.register("autoScrollToBottom",haxe_ui_behaviours_DefaultBehaviour);
		this.behaviours.register("scrollToTop",haxe_ui_components__$TextArea_ScrollToTop);
		this.behaviours.register("scrollToBottom",haxe_ui_components__$TextArea_ScrollToBottom);
	}
	,get_htmlText: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("htmlText"));
	}
	,set_htmlText: function(value) {
		var _g = Type.typeof(value);
		if(_g._hx_index == 6) {
			if(_g.c == String) {
				if(value != null && StringTools.startsWith(value,"{{") && StringTools.endsWith(value,"}}")) {
					haxe_ui_locale_LocaleManager.get_instance().registerComponent(this,"htmlText",null,value);
					return value;
				}
			}
		}
		this.behaviours.set("htmlText",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"htmlText"));
		return value;
	}
	,get_placeholder: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("placeholder"));
	}
	,set_placeholder: function(value) {
		var _g = Type.typeof(value);
		if(_g._hx_index == 6) {
			if(_g.c == String) {
				if(value != null && StringTools.startsWith(value,"{{") && StringTools.endsWith(value,"}}")) {
					haxe_ui_locale_LocaleManager.get_instance().registerComponent(this,"placeholder",null,value);
					return value;
				}
			}
		}
		this.behaviours.set("placeholder",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"placeholder"));
		return value;
	}
	,get_wrap: function() {
		if(this.behaviours == null) {
			return false;
		}
		return haxe_ui_util_Variant.toBool(this.behaviours.get("wrap"));
	}
	,set_wrap: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("wrap",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"wrap"));
		return value;
	}
	,get_dataSource: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toDataSource(this.behaviours.get("dataSource"));
	}
	,set_dataSource: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("dataSource",haxe_ui_util_Variant.fromDataSource(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"dataSource"));
		return value;
	}
	,get_autoScrollToBottom: function() {
		if(this.behaviours == null) {
			return false;
		}
		return haxe_ui_util_Variant.toBool(this.behaviours.get("autoScrollToBottom"));
	}
	,set_autoScrollToBottom: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("autoScrollToBottom",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"autoScrollToBottom"));
		return value;
	}
	,get_value: function() {
		return this.get_text();
	}
	,set_value: function(value) {
		var _g = Type.typeof(value);
		switch(_g._hx_index) {
		case 1:case 2:case 3:
			this.set_text(Std.string(value));
			break;
		case 7:
			if(_g.e == haxe_ui_util_VariantType) {
				var v = value;
				this.set_text(haxe_ui_util_Variant.toString(v));
			} else {
				this.set_text(value);
			}
			break;
		default:
			this.set_text(value);
		}
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_InteractiveComponent.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_components_TextArea();
	}
	,registerComposite: function() {
		haxe_ui_core_InteractiveComponent.prototype.registerComposite.call(this);
		this._internalEventsClass = haxe_ui_components__$TextArea_Events;
		this._compositeBuilderClass = haxe_ui_components__$TextArea_TextAreaBuilder;
		this._defaultLayoutClass = haxe_ui_components__$TextArea_TextAreaLayout;
	}
	,__class__: haxe_ui_components_TextArea
	,__properties__: $extend(haxe_ui_core_InteractiveComponent.prototype.__properties__,{set_autoScrollToBottom:"set_autoScrollToBottom",get_autoScrollToBottom:"get_autoScrollToBottom",set_dataSource:"set_dataSource",get_dataSource:"get_dataSource",set_wrap:"set_wrap",get_wrap:"get_wrap",set_placeholder:"set_placeholder",get_placeholder:"get_placeholder",set_htmlText:"set_htmlText",get_htmlText:"get_htmlText"})
});
var haxe_ui_components__$TextArea_TextAreaLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.components._TextArea.TextAreaLayout"] = haxe_ui_components__$TextArea_TextAreaLayout;
haxe_ui_components__$TextArea_TextAreaLayout.__name__ = "haxe.ui.components._TextArea.TextAreaLayout";
haxe_ui_components__$TextArea_TextAreaLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_components__$TextArea_TextAreaLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	repositionChildren: function() {
		var hscroll = this.get_component().findComponent(null,haxe_ui_components_HorizontalScroll,false);
		var vscroll = this.get_component().findComponent(null,haxe_ui_components_VerticalScroll,false);
		var ucx = this.get_innerWidth();
		var ucy = this.get_innerHeight();
		if(hscroll != null && this.hidden(hscroll) == false) {
			hscroll.set_left(this.get_paddingLeft());
			hscroll.set_top(ucy - hscroll.get_componentHeight() + this.get_paddingBottom());
		}
		if(vscroll != null && this.hidden(vscroll) == false) {
			vscroll.set_left(ucx - vscroll.get_componentWidth() + this.get_paddingRight());
			vscroll.set_top(this.get_paddingTop());
		}
		if(this.get_component().hasTextInput() == true) {
			this.get_component().getTextInput().set_left(this.get_paddingLeft() + 2);
			this.get_component().getTextInput().set_top(this.get_paddingTop() + 2);
		}
	}
	,resizeChildren: function() {
		haxe_ui_layouts_DefaultLayout.prototype.resizeChildren.call(this);
		var hscroll = this.get_component().findComponent(null,haxe_ui_components_HorizontalScroll,false);
		var vscroll = this.get_component().findComponent(null,haxe_ui_components_VerticalScroll,false);
		var usableSize = this.get_usableSize();
		if(hscroll != null && this.hidden(hscroll) == false) {
			hscroll.set_width(usableSize.width);
		}
		if(vscroll != null && this.hidden(vscroll) == false) {
			vscroll.set_height(usableSize.height);
		}
		if(this.get_component().hasTextInput() == true) {
			var size = usableSize;
			this.get_component().getTextInput().set_width(size.width - 4);
			this.get_component().getTextInput().set_height(size.height - 4);
		}
	}
	,get_usableSize: function() {
		var size = haxe_ui_layouts_DefaultLayout.prototype.get_usableSize.call(this);
		var hscroll = this.get_component().findComponent(null,haxe_ui_components_HorizontalScroll,false);
		var vscroll = this.get_component().findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(hscroll != null && this.hidden(hscroll) == false) {
			size.height -= hscroll.get_componentHeight();
		}
		if(vscroll != null && this.hidden(vscroll) == false) {
			size.width -= vscroll.get_componentWidth();
		}
		return size;
	}
	,__class__: haxe_ui_components__$TextArea_TextAreaLayout
});
var haxe_ui_components__$TextArea_DataSourceBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TextArea.DataSourceBehaviour"] = haxe_ui_components__$TextArea_DataSourceBehaviour;
haxe_ui_components__$TextArea_DataSourceBehaviour.__name__ = "haxe.ui.components._TextArea.DataSourceBehaviour";
haxe_ui_components__$TextArea_DataSourceBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$TextArea_DataSourceBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	set: function(value) {
		this._value = value;
		this._component.getTextInput().set_dataSource(haxe_ui_util_Variant.toDataSource(value));
	}
	,get: function() {
		if(this._value == null || haxe_ui_util_Variant.get_isNull(this._value)) {
			this._value = haxe_ui_util_Variant.fromDataSource(new haxe_ui_data_ArrayDataSource());
			this.set(this._value);
		}
		return this._value;
	}
	,__class__: haxe_ui_components__$TextArea_DataSourceBehaviour
});
var haxe_ui_components__$TextArea_PlaceholderBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TextArea.PlaceholderBehaviour"] = haxe_ui_components__$TextArea_PlaceholderBehaviour;
haxe_ui_components__$TextArea_PlaceholderBehaviour.__name__ = "haxe.ui.components._TextArea.PlaceholderBehaviour";
haxe_ui_components__$TextArea_PlaceholderBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$TextArea_PlaceholderBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var textarea = js_Boot.__cast(this._component , haxe_ui_components_TextArea);
		haxe_ui_components__$TextArea_TextAreaHelper.validateText(textarea,textarea.get_text());
	}
	,__class__: haxe_ui_components__$TextArea_PlaceholderBehaviour
});
var haxe_ui_components__$TextArea_TextBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TextArea.TextBehaviour"] = haxe_ui_components__$TextArea_TextBehaviour;
haxe_ui_components__$TextArea_TextBehaviour.__name__ = "haxe.ui.components._TextArea.TextBehaviour";
haxe_ui_components__$TextArea_TextBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$TextArea_TextBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var textarea = js_Boot.__cast(this._component , haxe_ui_components_TextArea);
		var text = this._value != null ? haxe_ui_util_Variant.toString(this._value) : "";
		haxe_ui_components__$TextArea_TextAreaHelper.validateText(textarea,text);
		if(textarea.get_autoScrollToBottom() == true) {
			textarea.scrollToBottom();
		}
	}
	,__class__: haxe_ui_components__$TextArea_TextBehaviour
});
var haxe_ui_components__$TextArea_HtmlTextBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TextArea.HtmlTextBehaviour"] = haxe_ui_components__$TextArea_HtmlTextBehaviour;
haxe_ui_components__$TextArea_HtmlTextBehaviour.__name__ = "haxe.ui.components._TextArea.HtmlTextBehaviour";
haxe_ui_components__$TextArea_HtmlTextBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$TextArea_HtmlTextBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var textarea = js_Boot.__cast(this._component , haxe_ui_components_TextArea);
		var htmlText = this._value != null ? haxe_ui_util_Variant.toString(this._value) : "";
		haxe_ui_components__$TextArea_TextAreaHelper.validateHtmlText(textarea,htmlText);
		if(textarea.get_autoScrollToBottom() == true) {
			textarea.scrollToBottom();
		}
	}
	,__class__: haxe_ui_components__$TextArea_HtmlTextBehaviour
});
var haxe_ui_components__$TextArea_WrapBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TextArea.WrapBehaviour"] = haxe_ui_components__$TextArea_WrapBehaviour;
haxe_ui_components__$TextArea_WrapBehaviour.__name__ = "haxe.ui.components._TextArea.WrapBehaviour";
haxe_ui_components__$TextArea_WrapBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$TextArea_WrapBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var textarea = js_Boot.__cast(this._component , haxe_ui_components_TextArea);
		textarea.getTextInput().set_wordWrap(haxe_ui_util_Variant.toBool(this._value));
	}
	,__class__: haxe_ui_components__$TextArea_WrapBehaviour
});
var haxe_ui_components__$TextArea_ScrollToTop = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TextArea.ScrollToTop"] = haxe_ui_components__$TextArea_ScrollToTop;
haxe_ui_components__$TextArea_ScrollToTop.__name__ = "haxe.ui.components._TextArea.ScrollToTop";
haxe_ui_components__$TextArea_ScrollToTop.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_components__$TextArea_ScrollToTop.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(param) {
		var vscroll = this._component.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(vscroll != null) {
			vscroll.set_pos(0);
		}
		return null;
	}
	,__class__: haxe_ui_components__$TextArea_ScrollToTop
});
var haxe_ui_components__$TextArea_ScrollToBottom = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TextArea.ScrollToBottom"] = haxe_ui_components__$TextArea_ScrollToBottom;
haxe_ui_components__$TextArea_ScrollToBottom.__name__ = "haxe.ui.components._TextArea.ScrollToBottom";
haxe_ui_components__$TextArea_ScrollToBottom.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_components__$TextArea_ScrollToBottom.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(param) {
		var vscroll = this._component.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(vscroll != null) {
			vscroll.set_pos(vscroll.get_max());
		}
		return null;
	}
	,__class__: haxe_ui_components__$TextArea_ScrollToBottom
});
var haxe_ui_components__$TextArea_TextAreaHelper = function() { };
$hxClasses["haxe.ui.components._TextArea.TextAreaHelper"] = haxe_ui_components__$TextArea_TextAreaHelper;
haxe_ui_components__$TextArea_TextAreaHelper.__name__ = "haxe.ui.components._TextArea.TextAreaHelper";
haxe_ui_components__$TextArea_TextAreaHelper.validateText = function(textarea,text) {
	if(text == null) {
		text = "";
	}
	var placeholderVisible = text.length == 0;
	if(textarea.get_placeholder() != null) {
		if(textarea.get_focus() == false) {
			if(text.length == 0) {
				text = textarea.get_placeholder();
				textarea.addClass(":empty");
			} else if(text != textarea.get_placeholder()) {
				textarea.removeClass(":empty");
			}
		} else {
			textarea.removeClass(":empty");
			if(text == textarea.get_placeholder()) {
				text = "";
			}
		}
	} else if(placeholderVisible == true) {
		textarea.removeClass(":empty");
	}
	textarea.getTextInput().set_text("" + text);
	textarea.getTextInput().invalidateComponent("measure");
	if(!(textarea._layout == null || textarea._layoutLocked == true)) {
		textarea.invalidateComponent("layout",false);
	}
};
haxe_ui_components__$TextArea_TextAreaHelper.validateHtmlText = function(textarea,htmlText) {
	if(htmlText == null) {
		htmlText = "";
	}
	var placeholderVisible = htmlText.length == 0;
	if(textarea.get_placeholder() != null) {
		if(textarea.get_focus() == false) {
			if(htmlText.length == 0) {
				htmlText = textarea.get_placeholder();
				textarea.addClass(":empty");
			} else if(htmlText != textarea.get_placeholder()) {
				textarea.removeClass(":empty");
			}
		} else {
			textarea.removeClass(":empty");
			if(htmlText == textarea.get_placeholder()) {
				htmlText = "";
			}
		}
	} else if(placeholderVisible == true) {
		textarea.removeClass(":empty");
	}
	textarea.getTextInput().set_htmlText("" + htmlText);
	textarea.getTextInput().invalidateComponent("measure");
	if(!(textarea._layout == null || textarea._layoutLocked == true)) {
		textarea.invalidateComponent("layout",false);
	}
};
var haxe_ui_components__$TextArea_Events = function(textarea) {
	haxe_ui_events_Events.call(this,textarea);
	this._textarea = textarea;
};
$hxClasses["haxe.ui.components._TextArea.Events"] = haxe_ui_components__$TextArea_Events;
haxe_ui_components__$TextArea_Events.__name__ = "haxe.ui.components._TextArea.Events";
haxe_ui_components__$TextArea_Events.__super__ = haxe_ui_events_Events;
haxe_ui_components__$TextArea_Events.prototype = $extend(haxe_ui_events_Events.prototype,{
	_textarea: null
	,register: function() {
		var _gthis = this;
		if(this._textarea.getTextInput().get_data().onChangedCallback == null) {
			this._textarea.getTextInput().set_multiline(true);
			this._textarea.getTextInput().get_data().onChangedCallback = function() {
				if(_gthis._textarea.classes.indexOf(":empty") != -1 == false) {
					var text = _gthis._textarea.getTextInput().get_text();
					if(text == null) {
						text = "";
					}
					_gthis._textarea.set_text(text);
					_gthis._textarea.dispatch(new haxe_ui_events_UIEvent("change"));
					if(_gthis._textarea.get_style().autoHeight == true) {
						var maxHeight = _gthis._textarea.get_style().maxHeight;
						var newHeight = _gthis._textarea.getTextInput().get_textHeight() + 8;
						if(maxHeight == null || newHeight < maxHeight) {
							_gthis._textarea.set_height(newHeight);
						}
					}
					(js_Boot.__cast(_gthis._textarea._compositeBuilder , haxe_ui_components__$TextArea_TextAreaBuilder)).checkScrolls();
				}
			};
		}
		if(this._textarea.getTextInput().get_data().onScrollCallback == null) {
			this._textarea.getTextInput().get_data().onScrollCallback = function() {
				var hscroll = _gthis._textarea.findComponent(null,haxe_ui_components_HorizontalScroll,false);
				if(hscroll != null) {
					hscroll.set_pos(_gthis._textarea.getTextInput().get_hscrollPos());
				}
				var vscroll = _gthis._textarea.findComponent(null,haxe_ui_components_VerticalScroll,false);
				if(vscroll != null) {
					vscroll.set_pos(_gthis._textarea.getTextInput().get_vscrollPos());
				}
			};
		}
		var hscroll = this._textarea.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		if(hscroll != null && hscroll.hasEvent("change",$bind(this,this.onScrollChange)) == false) {
			hscroll.registerEvent("change",$bind(this,this.onScrollChange));
		}
		var vscroll = this._textarea.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(vscroll != null && vscroll.hasEvent("change",$bind(this,this.onScrollChange)) == false) {
			vscroll.registerEvent("change",$bind(this,this.onScrollChange));
		}
		if(this.hasEvent("mousewheel",$bind(this,this.onMouseWheel)) == false) {
			this.registerEvent("mousewheel",$bind(this,this.onMouseWheel));
		}
		if(this.hasEvent("mousedown",$bind(this,this.onMouseDown)) == false) {
			this.registerEvent("mousedown",$bind(this,this.onMouseDown));
		}
		if(this.hasEvent("focusin",$bind(this,this.onFocusChange)) == false) {
			this.registerEvent("focusin",$bind(this,this.onFocusChange));
		}
		if(this.hasEvent("focusout",$bind(this,this.onFocusChange)) == false) {
			this.registerEvent("focusout",$bind(this,this.onFocusChange));
		}
	}
	,unregister: function() {
		this._textarea.getTextInput().get_data().onChangedCallback = null;
		this._textarea.getTextInput().get_data().onScrollCallback = null;
		var hscroll = this._textarea.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		if(hscroll != null) {
			hscroll.unregisterEvent("change",$bind(this,this.onScrollChange));
		}
		var vscroll = this._textarea.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(vscroll != null) {
			vscroll.unregisterEvent("change",$bind(this,this.onScrollChange));
		}
		this.unregisterEvent("mousewheel",$bind(this,this.onMouseWheel));
		this.unregisterEvent("mousedown",$bind(this,this.onMouseDown));
		this.unregisterEvent("focusin",$bind(this,this.onFocusChange));
		this.unregisterEvent("focusout",$bind(this,this.onFocusChange));
	}
	,onMouseWheel: function(event) {
		if(this._textarea.getTextInput().get_data().vscrollNativeWheel == true) {
			return;
		}
		var vscroll = this._textarea.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(vscroll != null) {
			event.cancel();
			var step = 20;
			if(this._textarea.getTextInput().get_data().vscrollPageStep != null) {
				step = this._textarea.getTextInput().get_data().vscrollPageStep;
			} else {
				step = Math.ceil((this._textarea.getTextInput().get_textStyle().fontSize + 1) / 10) * 10;
			}
			if(event.delta > 0) {
				vscroll.set_pos(vscroll.get_pos() - step);
			} else if(event.delta < 0) {
				vscroll.set_pos(vscroll.get_pos() + step);
			}
		}
	}
	,onScrollChange: function(event) {
		if(this._textarea.get_style().autoHeight == true) {
			var maxHeight = this._textarea.get_style().maxHeight;
			var newHeight = this._textarea.getTextInput().get_textHeight() + 8;
			if(maxHeight == null || newHeight < maxHeight) {
				this._textarea.set_height(newHeight);
			}
			if(maxHeight != null && newHeight > maxHeight) {
				this._textarea.set_height(maxHeight);
			}
		}
		var hscroll = this._textarea.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		if(hscroll != null) {
			this._textarea.getTextInput().set_hscrollPos(hscroll.get_pos());
		}
		var vscroll = this._textarea.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(vscroll != null) {
			this._textarea.getTextInput().set_vscrollPos(vscroll.get_pos());
		}
	}
	,onMouseDown: function(event) {
		this._textarea.set_focus(true);
	}
	,onFocusChange: function(event) {
		if(this._textarea.get_focus() == true) {
			this._textarea.getTextInput().focus();
		} else {
			this._textarea.getTextInput().blur();
		}
		haxe_ui_components__$TextArea_TextAreaHelper.validateText(this._textarea,this._textarea.get_text());
	}
	,__class__: haxe_ui_components__$TextArea_Events
});
var haxe_ui_components__$TextArea_TextAreaBuilder = function(textarea) {
	haxe_ui_core_CompositeBuilder.call(this,textarea);
	this._textarea = textarea;
};
$hxClasses["haxe.ui.components._TextArea.TextAreaBuilder"] = haxe_ui_components__$TextArea_TextAreaBuilder;
haxe_ui_components__$TextArea_TextAreaBuilder.__name__ = "haxe.ui.components._TextArea.TextAreaBuilder";
haxe_ui_components__$TextArea_TextAreaBuilder.isHtml = function(v) {
	if(v == null) {
		return false;
	} else {
		return v.indexOf("<font ") != -1;
	}
};
haxe_ui_components__$TextArea_TextAreaBuilder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_components__$TextArea_TextAreaBuilder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_textarea: null
	,checkScrolls: function() {
		if(this._textarea.get_native() == true) {
			return;
		}
		var textInput = this._textarea.getTextInput();
		var hscroll = this._component.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		if(textInput.get_textWidth() - textInput.get_width() > 1) {
			if(hscroll == null) {
				hscroll = this.createHScroll();
			}
			hscroll.set_max(textInput.get_hscrollMax());
			hscroll.set_pos(textInput.get_hscrollPos());
			hscroll.set_pageSize(textInput.get_hscrollPageSize());
		} else if(hscroll != null) {
			this._component.removeComponent(hscroll);
		}
		var vscroll = this._component.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(textInput.get_textHeight() - textInput.get_height() > 1) {
			if(vscroll == null) {
				vscroll = this.createVScroll();
			}
			vscroll.set_max(textInput.get_vscrollMax());
			vscroll.set_pos(textInput.get_vscrollPos());
			vscroll.set_pageSize(textInput.get_vscrollPageSize());
			if(this._textarea.get_autoScrollToBottom() == true) {
				this._textarea.scrollToBottom();
			}
		} else if(vscroll != null) {
			this._component.removeComponent(vscroll);
		}
	}
	,createHScroll: function() {
		var hscroll = new haxe_ui_components_HorizontalScroll();
		hscroll.set_percentWidth(100);
		hscroll.set_id("textarea-hscroll");
		hscroll.set_allowFocus(false);
		hscroll.set_scriptAccess(false);
		this._component.addComponent(hscroll);
		this._component.registerInternalEvents(null,true);
		return hscroll;
	}
	,createVScroll: function() {
		var vscroll = new haxe_ui_components_VerticalScroll();
		if(this._textarea.getTextInput().get_data().vscrollPageStep != null) {
			vscroll.set_increment(this._textarea.getTextInput().get_data().vscrollPageStep);
		}
		vscroll.set_percentHeight(100);
		vscroll.set_id("textarea-vscroll");
		vscroll.set_allowFocus(false);
		vscroll.set_scriptAccess(false);
		this._component.addComponent(vscroll);
		this._component.registerInternalEvents(null,true);
		return vscroll;
	}
	,applyStyle: function(style) {
		haxe_ui_core_CompositeBuilder.prototype.applyStyle.call(this,style);
		if(this._textarea.hasTextInput() == true) {
			this._textarea.getTextInput().set_textStyle(style);
			var tmp;
			if((style.contentType == "auto" || style.contentType == "html") && this._textarea.getTextInput().get_supportsHtml()) {
				var v = Std.string(this._textarea.get_text());
				tmp = v == null ? false : v.indexOf("<font ") != -1;
			} else {
				tmp = false;
			}
			if(tmp) {
				this._textarea.set_htmlText(this._textarea.get_text());
			}
		}
	}
	,__class__: haxe_ui_components__$TextArea_TextAreaBuilder
});
var haxe_ui_components_TextField = function() {
	haxe_ui_core_InteractiveComponent.call(this);
};
$hxClasses["haxe.ui.components.TextField"] = haxe_ui_components_TextField;
haxe_ui_components_TextField.__name__ = "haxe.ui.components.TextField";
haxe_ui_components_TextField.__super__ = haxe_ui_core_InteractiveComponent;
haxe_ui_components_TextField.prototype = $extend(haxe_ui_core_InteractiveComponent.prototype,{
	registerBehaviours: function() {
		haxe_ui_core_InteractiveComponent.prototype.registerBehaviours.call(this);
		this.behaviours.register("password",haxe_ui_components__$TextField_PasswordBehaviour);
		this.behaviours.register("maxChars",haxe_ui_components__$TextField_MaxCharsBehaviour,haxe_ui_util_Variant.fromInt(-1));
		this.behaviours.register("restrictChars",haxe_ui_components__$TextField_RestrictCharsBehaviour);
		this.behaviours.register("placeholder",haxe_ui_components__$TextField_PlaceholderBehaviour);
		this.behaviours.register("text",haxe_ui_components__$TextField_TextBehaviour);
		this.behaviours.register("htmlText",haxe_ui_components__$TextField_HtmlTextBehaviour);
		this.behaviours.register("icon",haxe_ui_components__$TextField_IconBehaviour);
		this.behaviours.register("caretIndex",haxe_ui_components__$TextField_CaretIndexBehaviour);
		this.behaviours.register("selectionStartIndex",haxe_ui_components__$TextField_SelectionStartIndexBehaviour);
		this.behaviours.register("selectionEndIndex",haxe_ui_components__$TextField_SelectionEndIndexBehaviour);
	}
	,get_password: function() {
		if(this.behaviours == null) {
			return false;
		}
		return haxe_ui_util_Variant.toBool(this.behaviours.get("password"));
	}
	,set_password: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("password",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"password"));
		return value;
	}
	,get_maxChars: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toInt(this.behaviours.get("maxChars"));
	}
	,set_maxChars: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("maxChars",haxe_ui_util_Variant.fromInt(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"maxChars"));
		return value;
	}
	,get_restrictChars: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("restrictChars"));
	}
	,set_restrictChars: function(value) {
		var _g = Type.typeof(value);
		if(_g._hx_index == 6) {
			if(_g.c == String) {
				if(value != null && StringTools.startsWith(value,"{{") && StringTools.endsWith(value,"}}")) {
					haxe_ui_locale_LocaleManager.get_instance().registerComponent(this,"restrictChars",null,value);
					return value;
				}
			}
		}
		this.behaviours.set("restrictChars",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"restrictChars"));
		return value;
	}
	,get_placeholder: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("placeholder"));
	}
	,set_placeholder: function(value) {
		var _g = Type.typeof(value);
		if(_g._hx_index == 6) {
			if(_g.c == String) {
				if(value != null && StringTools.startsWith(value,"{{") && StringTools.endsWith(value,"}}")) {
					haxe_ui_locale_LocaleManager.get_instance().registerComponent(this,"placeholder",null,value);
					return value;
				}
			}
		}
		this.behaviours.set("placeholder",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"placeholder"));
		return value;
	}
	,get_htmlText: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("htmlText"));
	}
	,set_htmlText: function(value) {
		var _g = Type.typeof(value);
		if(_g._hx_index == 6) {
			if(_g.c == String) {
				if(value != null && StringTools.startsWith(value,"{{") && StringTools.endsWith(value,"}}")) {
					haxe_ui_locale_LocaleManager.get_instance().registerComponent(this,"htmlText",null,value);
					return value;
				}
			}
		}
		this.behaviours.set("htmlText",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"htmlText"));
		return value;
	}
	,get_icon: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("icon"));
	}
	,set_icon: function(value) {
		var _g = Type.typeof(value);
		if(_g._hx_index == 6) {
			if(_g.c == String) {
				if(value != null && StringTools.startsWith(value,"{{") && StringTools.endsWith(value,"}}")) {
					haxe_ui_locale_LocaleManager.get_instance().registerComponent(this,"icon",null,value);
					return value;
				}
			}
		}
		this.behaviours.set("icon",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"icon"));
		return value;
	}
	,get_caretIndex: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toInt(this.behaviours.get("caretIndex"));
	}
	,set_caretIndex: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("caretIndex",haxe_ui_util_Variant.fromInt(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"caretIndex"));
		return value;
	}
	,get_selectionStartIndex: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toInt(this.behaviours.get("selectionStartIndex"));
	}
	,set_selectionStartIndex: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("selectionStartIndex",haxe_ui_util_Variant.fromInt(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"selectionStartIndex"));
		return value;
	}
	,get_selectionEndIndex: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toInt(this.behaviours.get("selectionEndIndex"));
	}
	,set_selectionEndIndex: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("selectionEndIndex",haxe_ui_util_Variant.fromInt(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"selectionEndIndex"));
		return value;
	}
	,get_value: function() {
		return this.get_text();
	}
	,set_value: function(value) {
		var _g = Type.typeof(value);
		switch(_g._hx_index) {
		case 1:case 2:case 3:
			this.set_text(Std.string(value));
			break;
		case 7:
			if(_g.e == haxe_ui_util_VariantType) {
				var v = value;
				this.set_text(haxe_ui_util_Variant.toString(v));
			} else {
				this.set_text(value);
			}
			break;
		default:
			this.set_text(value);
		}
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_InteractiveComponent.prototype.cloneComponent.call(this);
		c.set_password(this.get_password());
		c.set_maxChars(this.get_maxChars());
		if(this.get_restrictChars() != null) {
			c.set_restrictChars(this.get_restrictChars());
		}
		if(this.get_placeholder() != null) {
			c.set_placeholder(this.get_placeholder());
		}
		if(this.get_htmlText() != null) {
			c.set_htmlText(this.get_htmlText());
		}
		if(this.get_icon() != null) {
			c.set_icon(this.get_icon());
		}
		c.set_caretIndex(this.get_caretIndex());
		c.set_selectionStartIndex(this.get_selectionStartIndex());
		c.set_selectionEndIndex(this.get_selectionEndIndex());
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_components_TextField();
	}
	,registerComposite: function() {
		haxe_ui_core_InteractiveComponent.prototype.registerComposite.call(this);
		this._internalEventsClass = haxe_ui_components__$TextField_Events;
		this._compositeBuilderClass = haxe_ui_components__$TextField_Builder;
		this._defaultLayoutClass = haxe_ui_components__$TextField_TextFieldLayout;
	}
	,__class__: haxe_ui_components_TextField
	,__properties__: $extend(haxe_ui_core_InteractiveComponent.prototype.__properties__,{set_selectionEndIndex:"set_selectionEndIndex",get_selectionEndIndex:"get_selectionEndIndex",set_selectionStartIndex:"set_selectionStartIndex",get_selectionStartIndex:"get_selectionStartIndex",set_caretIndex:"set_caretIndex",get_caretIndex:"get_caretIndex",set_icon:"set_icon",get_icon:"get_icon",set_htmlText:"set_htmlText",get_htmlText:"get_htmlText",set_placeholder:"set_placeholder",get_placeholder:"get_placeholder",set_restrictChars:"set_restrictChars",get_restrictChars:"get_restrictChars",set_maxChars:"set_maxChars",get_maxChars:"get_maxChars",set_password:"set_password",get_password:"get_password"})
});
var haxe_ui_components__$TextField_TextFieldLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.components._TextField.TextFieldLayout"] = haxe_ui_components__$TextField_TextFieldLayout;
haxe_ui_components__$TextField_TextFieldLayout.__name__ = "haxe.ui.components._TextField.TextFieldLayout";
haxe_ui_components__$TextField_TextFieldLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_components__$TextField_TextFieldLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	iconPosition: null
	,get_iconPosition: function() {
		if(this.get_component().get_style().iconPosition == null) {
			return "left";
		}
		return this.get_component().get_style().iconPosition;
	}
	,repositionChildren: function() {
		var icon = this.get_component().findComponent(null,haxe_ui_components_Image,false);
		var xpos = this.get_paddingLeft();
		if(icon != null) {
			switch(this.get_iconPosition()) {
			case "left":
				icon.set_left(xpos);
				icon.set_top(this.get_component().get_componentHeight() / 2 - icon.get_componentHeight() / 2);
				xpos += icon.get_componentWidth() + this.get_horizontalSpacing();
				break;
			case "right":
				icon.set_left(this.get_component().get_componentWidth() - icon.get_componentWidth() - this.get_paddingRight());
				icon.set_top(this.get_component().get_componentHeight() / 2 - icon.get_componentHeight() / 2);
				break;
			}
		}
		var decorator = this.findComponent(null,haxe_ui_components_Decorator);
		if(decorator != null) {
			decorator.set_left(this._component.get_width() - decorator.get_width() - this.get_borderSize());
			decorator.set_top(this.get_borderSize());
		}
		if(this.get_component().hasTextInput() == true) {
			this.get_component().getTextInput().set_left(xpos);
			this.get_component().getTextInput().set_top(this.get_paddingTop() + this.get_component().get_componentHeight() / 2 - (this.get_component().getTextInput().get_height() + this.get_paddingTop() + this.get_paddingBottom()) / 2);
		}
	}
	,resizeChildren: function() {
		haxe_ui_layouts_DefaultLayout.prototype.resizeChildren.call(this);
		var offset = 0;
		var decorator = this.findComponent(null,haxe_ui_components_Decorator);
		if(decorator != null) {
			var cy = this._component.get_height() - this.get_borderSize() * 2;
			decorator.set_height(cy);
			offset = decorator.get_width();
		}
		if(this.get_component().hasTextInput() == true) {
			var size = this.get_usableSize();
			this.get_component().getTextInput().set_width(size.width - offset);
			this.get_component().getTextInput().set_height(size.height);
		}
	}
	,calcAutoSize: function(exclusions) {
		var size = haxe_ui_layouts_DefaultLayout.prototype.calcAutoSize.call(this,exclusions);
		if(this.get_component().hasTextInput() == true) {
			if(this.get_component().getTextInput().get_textWidth() + this.get_paddingLeft() + this.get_paddingRight() > size.width) {
				size.width = this.get_component().getTextInput().get_textWidth() + this.get_paddingLeft() + this.get_paddingRight();
			}
			if(this.get_component().getTextInput().get_textHeight() + this.get_paddingTop() + this.get_paddingBottom() > size.height) {
				size.height = this.get_component().getTextInput().get_textHeight() + this.get_paddingTop() + this.get_paddingBottom();
			}
		}
		return size;
	}
	,get_usableSize: function() {
		var size = haxe_ui_layouts_DefaultLayout.prototype.get_usableSize.call(this);
		var icon = this.get_component().findComponent(null,haxe_ui_components_Image,false);
		if(icon != null) {
			size.width -= icon.get_componentWidth() + this.get_horizontalSpacing();
		}
		return size;
	}
	,__class__: haxe_ui_components__$TextField_TextFieldLayout
	,__properties__: $extend(haxe_ui_layouts_DefaultLayout.prototype.__properties__,{get_iconPosition:"get_iconPosition"})
});
var haxe_ui_components__$TextField_PasswordBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TextField.PasswordBehaviour"] = haxe_ui_components__$TextField_PasswordBehaviour;
haxe_ui_components__$TextField_PasswordBehaviour.__name__ = "haxe.ui.components._TextField.PasswordBehaviour";
haxe_ui_components__$TextField_PasswordBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$TextField_PasswordBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	originalValue: null
	,validateData: function() {
		if(this.originalValue == null) {
			this.originalValue = this._value;
		}
		var textfield = js_Boot.__cast(this._component , haxe_ui_components_TextField);
		textfield.getTextInput().set_password(haxe_ui_util_Variant.toBool(this._value));
	}
	,__class__: haxe_ui_components__$TextField_PasswordBehaviour
});
var haxe_ui_components__$TextField_MaxCharsBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TextField.MaxCharsBehaviour"] = haxe_ui_components__$TextField_MaxCharsBehaviour;
haxe_ui_components__$TextField_MaxCharsBehaviour.__name__ = "haxe.ui.components._TextField.MaxCharsBehaviour";
haxe_ui_components__$TextField_MaxCharsBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$TextField_MaxCharsBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var textfield = js_Boot.__cast(this._component , haxe_ui_components_TextField);
		haxe_ui_components__$TextField_TextFieldHelper.validateText(textfield,textfield.get_text());
	}
	,__class__: haxe_ui_components__$TextField_MaxCharsBehaviour
});
var haxe_ui_components__$TextField_RestrictCharsBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TextField.RestrictCharsBehaviour"] = haxe_ui_components__$TextField_RestrictCharsBehaviour;
haxe_ui_components__$TextField_RestrictCharsBehaviour.__name__ = "haxe.ui.components._TextField.RestrictCharsBehaviour";
haxe_ui_components__$TextField_RestrictCharsBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$TextField_RestrictCharsBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	regexp: null
	,validateData: function() {
		var excludeEReg = new EReg("\\^(.-.|.)","gu");
		var excludeChars = "";
		var includeChars = excludeEReg.map(haxe_ui_util_Variant.toString(this._value),function(ereg) {
			excludeChars += ereg.matched(1);
			return "";
		});
		var testRegexpParts = [];
		if(includeChars.length > 0) {
			testRegexpParts.push("[^" + (this._value == null ? "null" : haxe_ui_util_Variant.toString(this._value)) + "]");
		}
		if(excludeChars.length > 0) {
			testRegexpParts.push("[" + excludeChars + "]");
		}
		this.regexp = new EReg("(" + testRegexpParts.join(" | ") + ")","g");
		var textfield = js_Boot.__cast(this._component , haxe_ui_components_TextField);
		haxe_ui_components__$TextField_TextFieldHelper.validateText(textfield,textfield.get_text());
	}
	,__class__: haxe_ui_components__$TextField_RestrictCharsBehaviour
});
var haxe_ui_components__$TextField_PlaceholderBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TextField.PlaceholderBehaviour"] = haxe_ui_components__$TextField_PlaceholderBehaviour;
haxe_ui_components__$TextField_PlaceholderBehaviour.__name__ = "haxe.ui.components._TextField.PlaceholderBehaviour";
haxe_ui_components__$TextField_PlaceholderBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$TextField_PlaceholderBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var textfield = js_Boot.__cast(this._component , haxe_ui_components_TextField);
		haxe_ui_components__$TextField_TextFieldHelper.validateText(textfield,textfield.get_text());
	}
	,__class__: haxe_ui_components__$TextField_PlaceholderBehaviour
});
var haxe_ui_components__$TextField_TextBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TextField.TextBehaviour"] = haxe_ui_components__$TextField_TextBehaviour;
haxe_ui_components__$TextField_TextBehaviour.__name__ = "haxe.ui.components._TextField.TextBehaviour";
haxe_ui_components__$TextField_TextBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$TextField_TextBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var textfield = js_Boot.__cast(this._component , haxe_ui_components_TextField);
		haxe_ui_components__$TextField_TextFieldHelper.validateText(textfield,haxe_ui_util_Variant.toString(this._value));
		if(this._value != null && haxe_ui_util_Variant.neq(this._value,haxe_ui_util_Variant.fromString(""))) {
			this._value = haxe_ui_util_Variant.fromString(textfield.getTextInput().get_text());
		}
	}
	,__class__: haxe_ui_components__$TextField_TextBehaviour
});
var haxe_ui_components__$TextField_HtmlTextBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TextField.HtmlTextBehaviour"] = haxe_ui_components__$TextField_HtmlTextBehaviour;
haxe_ui_components__$TextField_HtmlTextBehaviour.__name__ = "haxe.ui.components._TextField.HtmlTextBehaviour";
haxe_ui_components__$TextField_HtmlTextBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$TextField_HtmlTextBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var textfield = js_Boot.__cast(this._component , haxe_ui_components_TextField);
		haxe_ui_components__$TextField_TextFieldHelper.validateHtmlText(textfield,haxe_ui_util_Variant.toString(this._value));
		if(this._value != null && haxe_ui_util_Variant.neq(this._value,haxe_ui_util_Variant.fromString(""))) {
			this._value = haxe_ui_util_Variant.fromString(textfield.getTextInput().get_htmlText());
		}
	}
	,__class__: haxe_ui_components__$TextField_HtmlTextBehaviour
});
var haxe_ui_components__$TextField_IconBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TextField.IconBehaviour"] = haxe_ui_components__$TextField_IconBehaviour;
haxe_ui_components__$TextField_IconBehaviour.__name__ = "haxe.ui.components._TextField.IconBehaviour";
haxe_ui_components__$TextField_IconBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$TextField_IconBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var textfield = js_Boot.__cast(this._component , haxe_ui_components_TextField);
		var icon = textfield.findComponent(null,haxe_ui_components_Image,false);
		if((this._value == null || haxe_ui_util_Variant.get_isNull(this._value)) && icon != null) {
			textfield.removeComponent(icon);
		} else {
			if(icon == null) {
				icon = new haxe_ui_components_Image();
				icon.set_id("textfield-icon");
				icon.addClass("icon");
				icon.set_scriptAccess(false);
				textfield.addComponentAt(icon,0);
			}
			icon.set_resource(haxe_ui_util_Variant.fromString(haxe_ui_util_Variant.toString(this._value)));
		}
	}
	,__class__: haxe_ui_components__$TextField_IconBehaviour
});
var haxe_ui_components__$TextField_CaretIndexBehaviour = function(component) {
	haxe_ui_behaviours_ValueBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TextField.CaretIndexBehaviour"] = haxe_ui_components__$TextField_CaretIndexBehaviour;
haxe_ui_components__$TextField_CaretIndexBehaviour.__name__ = "haxe.ui.components._TextField.CaretIndexBehaviour";
haxe_ui_components__$TextField_CaretIndexBehaviour.__super__ = haxe_ui_behaviours_ValueBehaviour;
haxe_ui_components__$TextField_CaretIndexBehaviour.prototype = $extend(haxe_ui_behaviours_ValueBehaviour.prototype,{
	get: function() {
		return haxe_ui_util_Variant.fromInt(this._component.getTextInput().get_caretIndex());
	}
	,set: function(value) {
		haxe_ui_behaviours_ValueBehaviour.prototype.set.call(this,value);
		this._component.syncComponentValidation();
		this._component.getTextInput().set_caretIndex(haxe_ui_util_Variant.toInt(value));
	}
	,__class__: haxe_ui_components__$TextField_CaretIndexBehaviour
});
var haxe_ui_components__$TextField_SelectionStartIndexBehaviour = function(component) {
	haxe_ui_behaviours_ValueBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TextField.SelectionStartIndexBehaviour"] = haxe_ui_components__$TextField_SelectionStartIndexBehaviour;
haxe_ui_components__$TextField_SelectionStartIndexBehaviour.__name__ = "haxe.ui.components._TextField.SelectionStartIndexBehaviour";
haxe_ui_components__$TextField_SelectionStartIndexBehaviour.__super__ = haxe_ui_behaviours_ValueBehaviour;
haxe_ui_components__$TextField_SelectionStartIndexBehaviour.prototype = $extend(haxe_ui_behaviours_ValueBehaviour.prototype,{
	get: function() {
		return haxe_ui_util_Variant.fromInt(this._component.getTextInput().get_selectionStartIndex());
	}
	,set: function(value) {
		haxe_ui_behaviours_ValueBehaviour.prototype.set.call(this,value);
		this._component.syncComponentValidation();
		this._component.getTextInput().set_selectionStartIndex(haxe_ui_util_Variant.toInt(value));
	}
	,__class__: haxe_ui_components__$TextField_SelectionStartIndexBehaviour
});
var haxe_ui_components__$TextField_SelectionEndIndexBehaviour = function(component) {
	haxe_ui_behaviours_ValueBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TextField.SelectionEndIndexBehaviour"] = haxe_ui_components__$TextField_SelectionEndIndexBehaviour;
haxe_ui_components__$TextField_SelectionEndIndexBehaviour.__name__ = "haxe.ui.components._TextField.SelectionEndIndexBehaviour";
haxe_ui_components__$TextField_SelectionEndIndexBehaviour.__super__ = haxe_ui_behaviours_ValueBehaviour;
haxe_ui_components__$TextField_SelectionEndIndexBehaviour.prototype = $extend(haxe_ui_behaviours_ValueBehaviour.prototype,{
	get: function() {
		return haxe_ui_util_Variant.fromInt(this._component.getTextInput().get_selectionEndIndex());
	}
	,set: function(value) {
		haxe_ui_behaviours_ValueBehaviour.prototype.set.call(this,value);
		this._component.syncComponentValidation();
		this._component.getTextInput().set_selectionEndIndex(haxe_ui_util_Variant.toInt(value));
	}
	,__class__: haxe_ui_components__$TextField_SelectionEndIndexBehaviour
});
var haxe_ui_components__$TextField_TextFieldHelper = function() { };
$hxClasses["haxe.ui.components._TextField.TextFieldHelper"] = haxe_ui_components__$TextField_TextFieldHelper;
haxe_ui_components__$TextField_TextFieldHelper.__name__ = "haxe.ui.components._TextField.TextFieldHelper";
haxe_ui_components__$TextField_TextFieldHelper.validateText = function(textfield,text) {
	if(text == null) {
		text = "";
	}
	var placeholderVisible = text.length == 0;
	var password = (js_Boot.__cast(textfield.behaviours.find("password") , haxe_ui_components__$TextField_PasswordBehaviour)).originalValue;
	var regexp = (js_Boot.__cast(textfield.behaviours.find("restrictChars") , haxe_ui_components__$TextField_RestrictCharsBehaviour)).regexp;
	if(textfield.get_maxChars() > 0 && text.length > textfield.get_maxChars() && placeholderVisible == false) {
		text = HxOverrides.substr(text,0,textfield.get_maxChars());
	}
	if(regexp != null) {
		text = text.replace(regexp.r,"");
	}
	if(textfield.get_placeholder() != null) {
		if(textfield.get_focus() == false) {
			if(text.length == 0) {
				text = textfield.get_placeholder();
				textfield.set_password(false);
				textfield.addClass(":empty");
			} else if(text != textfield.get_placeholder()) {
				textfield.set_password(haxe_ui_util_Variant.toBool(password));
				textfield.removeClass(":empty");
			}
		} else {
			textfield.removeClass(":empty");
			textfield.set_password(haxe_ui_util_Variant.toBool(password));
		}
	} else {
		textfield.set_password(haxe_ui_util_Variant.toBool(password));
		if(placeholderVisible == true) {
			textfield.removeClass(":empty");
		}
	}
	textfield.getTextInput().set_text("" + text);
	if(!(textfield._layout == null || textfield._layoutLocked == true)) {
		textfield.invalidateComponent("layout",false);
	}
};
haxe_ui_components__$TextField_TextFieldHelper.validateHtmlText = function(textfield,htmlText) {
	if(htmlText == null) {
		htmlText = "";
	}
	var placeholderVisible = htmlText.length == 0;
	var password = (js_Boot.__cast(textfield.behaviours.find("password") , haxe_ui_components__$TextField_PasswordBehaviour)).originalValue;
	var regexp = (js_Boot.__cast(textfield.behaviours.find("restrictChars") , haxe_ui_components__$TextField_RestrictCharsBehaviour)).regexp;
	if(textfield.get_maxChars() > 0 && htmlText.length > textfield.get_maxChars() && placeholderVisible == false) {
		htmlText = HxOverrides.substr(htmlText,0,textfield.get_maxChars());
	}
	if(regexp != null) {
		htmlText = htmlText.replace(regexp.r,"");
	}
	if(textfield.get_placeholder() != null) {
		if(textfield.get_focus() == false) {
			if(htmlText.length == 0) {
				htmlText = textfield.get_placeholder();
				textfield.set_password(false);
				textfield.addClass(":empty");
			} else if(htmlText != textfield.get_placeholder()) {
				textfield.set_password(haxe_ui_util_Variant.toBool(password));
				textfield.removeClass(":empty");
			}
		} else {
			textfield.removeClass(":empty");
			textfield.set_password(haxe_ui_util_Variant.toBool(password));
		}
	} else {
		textfield.set_password(haxe_ui_util_Variant.toBool(password));
		if(placeholderVisible == true) {
			textfield.removeClass(":empty");
		}
	}
	textfield.getTextInput().set_htmlText("" + htmlText);
	if(!(textfield._layout == null || textfield._layoutLocked == true)) {
		textfield.invalidateComponent("layout",false);
	}
};
var haxe_ui_components__$TextField_Events = function(textfield) {
	haxe_ui_events_Events.call(this,textfield);
	this._textfield = textfield;
};
$hxClasses["haxe.ui.components._TextField.Events"] = haxe_ui_components__$TextField_Events;
haxe_ui_components__$TextField_Events.__name__ = "haxe.ui.components._TextField.Events";
haxe_ui_components__$TextField_Events.__super__ = haxe_ui_events_Events;
haxe_ui_components__$TextField_Events.prototype = $extend(haxe_ui_events_Events.prototype,{
	_textfield: null
	,register: function() {
		var _gthis = this;
		if(this._textfield.getTextInput().get_data().onChangedCallback == null) {
			this._textfield.getTextInput().set_multiline(false);
			this._textfield.getTextInput().get_data().onChangedCallback = function() {
				if(_gthis._textfield.classes.indexOf(":empty") != -1 == false) {
					_gthis._textfield.set_text(_gthis._textfield.getTextInput().get_text());
					_gthis._textfield.dispatch(new haxe_ui_events_UIEvent("change"));
				}
			};
		}
		this.registerEvent("mousedown",$bind(this,this.onMouseDown));
		this.registerEvent("focusin",$bind(this,this.onFocusChange));
		this.registerEvent("focusout",$bind(this,this.onFocusChange));
		this.registerEvent("keyup",$bind(this,this.onKeyUp));
	}
	,unregister: function() {
		this._textfield.getTextInput().get_data().onChangedCallback = null;
		this.unregisterEvent("mousedown",$bind(this,this.onMouseDown));
		this.unregisterEvent("focusin",$bind(this,this.onFocusChange));
		this.unregisterEvent("focusout",$bind(this,this.onFocusChange));
		this.unregisterEvent("keyup",$bind(this,this.onKeyUp));
	}
	,onMouseDown: function(event) {
		this._textfield.set_focus(true);
	}
	,onFocusChange: function(event) {
		if(this._textfield.get_focus() == true) {
			this._textfield.getTextInput().focus();
		} else {
			this._textfield.getTextInput().blur();
		}
		haxe_ui_components__$TextField_TextFieldHelper.validateText(this._textfield,this._textfield.get_text());
	}
	,onKeyUp: function(event) {
		if(event.keyCode == haxe_ui_core_Platform.get_instance().getKeyCode("enter")) {
			event.cancel();
			this._textfield.dispatch(new haxe_ui_events_UIEvent("submit",true));
		}
	}
	,__class__: haxe_ui_components__$TextField_Events
});
var haxe_ui_components__$TextField_Builder = function(textfield) {
	haxe_ui_core_CompositeBuilder.call(this,textfield);
	this._textfield = textfield;
};
$hxClasses["haxe.ui.components._TextField.Builder"] = haxe_ui_components__$TextField_Builder;
haxe_ui_components__$TextField_Builder.__name__ = "haxe.ui.components._TextField.Builder";
haxe_ui_components__$TextField_Builder.isHtml = function(v) {
	if(v == null) {
		return false;
	} else {
		return v.indexOf("<font ") != -1;
	}
};
haxe_ui_components__$TextField_Builder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_components__$TextField_Builder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_textfield: null
	,applyStyle: function(style) {
		if(style.icon != null) {
			this._textfield.set_icon(haxe_ui_util_Variant.toString(style.icon));
		}
		if(this._textfield.hasTextInput() == true) {
			this._textfield.getTextInput().set_textStyle(style);
			var tmp;
			if((style.contentType == "auto" || style.contentType == "html") && this._textfield.getTextInput().get_supportsHtml()) {
				var v = Std.string(this._textfield.get_text());
				tmp = v == null ? false : v.indexOf("<font ") != -1;
			} else {
				tmp = false;
			}
			if(tmp) {
				this._textfield.set_htmlText(this._textfield.get_text());
			}
		}
	}
	,__class__: haxe_ui_components__$TextField_Builder
});
var haxe_ui_components_VerticalScroll = function() {
	haxe_ui_components_Scroll.call(this);
};
$hxClasses["haxe.ui.components.VerticalScroll"] = haxe_ui_components_VerticalScroll;
haxe_ui_components_VerticalScroll.__name__ = "haxe.ui.components.VerticalScroll";
haxe_ui_components_VerticalScroll.__super__ = haxe_ui_components_Scroll;
haxe_ui_components_VerticalScroll.prototype = $extend(haxe_ui_components_Scroll.prototype,{
	registerBehaviours: function() {
		haxe_ui_components_Scroll.prototype.registerBehaviours.call(this);
		this.behaviours.register("posFromCoord",haxe_ui_components__$VerticalScroll_PosFromCoord);
		this.behaviours.register("applyPageFromCoord",haxe_ui_components__$VerticalScroll_ApplyPageFromCoord);
	}
	,createChildren: function() {
		haxe_ui_components_Scroll.prototype.createChildren.call(this);
		if(this.get_componentHeight() <= 0) {
			this.set_componentHeight(150);
		}
	}
	,createDefaults: function() {
		haxe_ui_components_Scroll.prototype.createDefaults.call(this);
		this._defaultLayoutClass = haxe_ui_components__$VerticalScroll_VerticalScrollLayout;
	}
	,cloneComponent: function() {
		var c = haxe_ui_components_Scroll.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_components_VerticalScroll();
	}
	,__class__: haxe_ui_components_VerticalScroll
});
var haxe_ui_components__$VerticalScroll_PosFromCoord = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components._VerticalScroll.PosFromCoord"] = haxe_ui_components__$VerticalScroll_PosFromCoord;
haxe_ui_components__$VerticalScroll_PosFromCoord.__name__ = "haxe.ui.components._VerticalScroll.PosFromCoord";
haxe_ui_components__$VerticalScroll_PosFromCoord.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_components__$VerticalScroll_PosFromCoord.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(pos) {
		var p = js_Boot.__cast(pos , haxe_ui_geom_Point);
		var scroll = js_Boot.__cast(this._component , haxe_ui_components_Scroll);
		var deinc = this._component.findComponent("scroll-deinc-button");
		var thumb = this._component.findComponent("scroll-thumb-button");
		var ypos = p.y;
		var minY = 0;
		if(deinc != null && deinc.get_hidden() == false) {
			minY = deinc.get_height() + scroll.get_layout().get_verticalSpacing();
		}
		var maxY = scroll.get_layout().get_usableHeight() - thumb.get_height();
		if(deinc != null && deinc.get_hidden() == false) {
			maxY += deinc.get_height() + scroll.get_layout().get_verticalSpacing();
		}
		if(ypos < minY) {
			ypos = minY;
		} else if(ypos > maxY) {
			ypos = maxY;
		}
		var ucy = scroll.get_layout().get_usableHeight();
		ucy -= thumb.get_height();
		var m = scroll.get_max() - scroll.get_min() | 0;
		var v = ypos - minY;
		var value = scroll.get_min() + v / ucy * m;
		return haxe_ui_util_Variant.fromFloat(value);
	}
	,__class__: haxe_ui_components__$VerticalScroll_PosFromCoord
});
var haxe_ui_components__$VerticalScroll_ApplyPageFromCoord = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components._VerticalScroll.ApplyPageFromCoord"] = haxe_ui_components__$VerticalScroll_ApplyPageFromCoord;
haxe_ui_components__$VerticalScroll_ApplyPageFromCoord.__name__ = "haxe.ui.components._VerticalScroll.ApplyPageFromCoord";
haxe_ui_components__$VerticalScroll_ApplyPageFromCoord.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_components__$VerticalScroll_ApplyPageFromCoord.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(pos) {
		var p = js_Boot.__cast(pos , haxe_ui_geom_Point);
		var scroll = js_Boot.__cast(this._component , haxe_ui_components_Scroll);
		var thumb = this._component.findComponent("scroll-thumb-button");
		if(p.y < thumb.get_screenTop()) {
			scroll.set_pos(scroll.get_pos() - scroll.get_pageSize());
		} else if(p.y > thumb.get_screenTop() + thumb.get_height()) {
			scroll.set_pos(scroll.get_pos() + scroll.get_pageSize());
		}
		return null;
	}
	,__class__: haxe_ui_components__$VerticalScroll_ApplyPageFromCoord
});
var haxe_ui_components__$VerticalScroll_VerticalScrollLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.components._VerticalScroll.VerticalScrollLayout"] = haxe_ui_components__$VerticalScroll_VerticalScrollLayout;
haxe_ui_components__$VerticalScroll_VerticalScrollLayout.__name__ = "haxe.ui.components._VerticalScroll.VerticalScrollLayout";
haxe_ui_components__$VerticalScroll_VerticalScrollLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_components__$VerticalScroll_VerticalScrollLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	resizeChildren: function() {
		haxe_ui_layouts_DefaultLayout.prototype.resizeChildren.call(this);
		var scroll = js_Boot.__cast(this.get_component() , haxe_ui_components_Scroll);
		var thumb = this.get_component().findComponent("scroll-thumb-button");
		if(thumb != null) {
			if(scroll.get_min() == scroll.get_max()) {
				thumb.hide();
			} else {
				var m = scroll.get_max() - scroll.get_min();
				var ucy = this.get_usableHeight();
				var thumbHeight = scroll.get_pageSize() / m * ucy;
				if(scroll.get_thumbSize() != null) {
					thumbHeight = scroll.get_thumbSize();
				}
				if(thumbHeight < this.get_innerWidth()) {
					thumbHeight = this.get_innerWidth();
				} else if(thumbHeight > ucy) {
					thumbHeight = ucy;
				}
				if(thumbHeight > 0 && isNaN(thumbHeight) == false) {
					thumb.set_height(thumbHeight);
				}
				thumb.show();
			}
		}
	}
	,repositionChildren: function() {
		haxe_ui_layouts_DefaultLayout.prototype.repositionChildren.call(this);
		var deinc = this.get_component().findComponent("scroll-deinc-button");
		var inc = this.get_component().findComponent("scroll-inc-button");
		if(inc != null && this.hidden(inc) == false) {
			inc.set_top(this.get_component().get_height() - inc.get_height() - this.get_paddingBottom());
		}
		var scroll = js_Boot.__cast(this.get_component() , haxe_ui_components_Scroll);
		var thumb = this.get_component().findComponent("scroll-thumb-button");
		if(thumb != null) {
			var m = scroll.get_max() - scroll.get_min();
			var u = this.get_usableHeight();
			u -= thumb.get_height();
			var y = (scroll.get_pos() - scroll.get_min()) / m * u;
			y += this.get_paddingTop();
			if(deinc != null && this.hidden(deinc) == false) {
				y += deinc.get_height() + this.get_verticalSpacing();
			}
			thumb.set_left(Math.round(thumb.get_left()));
			thumb.set_top(y);
		}
	}
	,get_usableHeight: function() {
		var ucy = this.get_innerHeight();
		var deinc = this.get_component().findComponent("scroll-deinc-button");
		var inc = this.get_component().findComponent("scroll-inc-button");
		if(deinc != null && this.hidden(deinc) == false) {
			ucy -= deinc.get_height() + this.get_verticalSpacing();
		}
		if(inc != null && this.hidden(inc) == false) {
			ucy -= inc.get_height() + this.get_verticalSpacing();
		}
		return ucy;
	}
	,__class__: haxe_ui_components__$VerticalScroll_VerticalScrollLayout
});
var haxe_ui_containers_Grid = function() {
	this._columns = -1;
	haxe_ui_containers_Box.call(this);
	if(this._columns == -1) {
		this.set_columns(2);
	}
};
$hxClasses["haxe.ui.containers.Grid"] = haxe_ui_containers_Grid;
haxe_ui_containers_Grid.__name__ = "haxe.ui.containers.Grid";
haxe_ui_containers_Grid.__super__ = haxe_ui_containers_Box;
haxe_ui_containers_Grid.prototype = $extend(haxe_ui_containers_Box.prototype,{
	_columns: null
	,get_columns: function() {
		return (js_Boot.__cast(this._layout , haxe_ui_layouts_VerticalGridLayout)).get_columns();
	}
	,set_columns: function(value) {
		if(this._layout == null) {
			this.set_layout(this.createLayout());
		}
		(js_Boot.__cast(this._layout , haxe_ui_layouts_VerticalGridLayout)).set_columns(value);
		this._columns = value;
		return value;
	}
	,createDefaults: function() {
		haxe_ui_containers_Box.prototype.createDefaults.call(this);
		this._defaultLayoutClass = haxe_ui_layouts_VerticalGridLayout;
	}
	,registerBehaviours: function() {
		haxe_ui_containers_Box.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_Box.prototype.cloneComponent.call(this);
		c.set_columns(this.get_columns());
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_Grid();
	}
	,__class__: haxe_ui_containers_Grid
	,__properties__: $extend(haxe_ui_containers_Box.prototype.__properties__,{set_columns:"set_columns",get_columns:"get_columns"})
});
var haxe_ui_containers_Group = function() {
	haxe_ui_containers_Box.call(this);
};
$hxClasses["haxe.ui.containers.Group"] = haxe_ui_containers_Group;
haxe_ui_containers_Group.__name__ = "haxe.ui.containers.Group";
haxe_ui_containers_Group.__super__ = haxe_ui_containers_Box;
haxe_ui_containers_Group.prototype = $extend(haxe_ui_containers_Box.prototype,{
	resetGroup: function() {
		if(this.behaviours == null) {
			return;
		}
		this.behaviours.call("resetGroup",null);
	}
	,registerBehaviours: function() {
		haxe_ui_containers_Box.prototype.registerBehaviours.call(this);
		this.behaviours.register("selectedOption",haxe_ui_containers__$Group_SelectedOptionBehaviour);
		this.behaviours.register("componentGroup",haxe_ui_behaviours_DataBehaviour,haxe_ui_util_Variant.fromString("group" + haxe_ui_util_GUID.uuid()));
		this.behaviours.register("resetGroup",haxe_ui_containers__$Group_ResetGroup);
	}
	,get_selectedOption: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toComponent(this.behaviours.get("selectedOption"));
	}
	,set_selectedOption: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("selectedOption",haxe_ui_util_Variant.fromComponent(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"selectedOption"));
		return value;
	}
	,get_componentGroup: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("componentGroup"));
	}
	,set_componentGroup: function(value) {
		var _g = Type.typeof(value);
		if(_g._hx_index == 6) {
			if(_g.c == String) {
				if(value != null && StringTools.startsWith(value,"{{") && StringTools.endsWith(value,"}}")) {
					haxe_ui_locale_LocaleManager.get_instance().registerComponent(this,"componentGroup",null,value);
					return value;
				}
			}
		}
		this.behaviours.set("componentGroup",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"componentGroup"));
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_Box.prototype.cloneComponent.call(this);
		if(this.get_selectedOption() != null) {
			c.set_selectedOption(this.get_selectedOption());
		}
		if(this.get_componentGroup() != null) {
			c.set_componentGroup(this.get_componentGroup());
		}
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_Group();
	}
	,registerComposite: function() {
		haxe_ui_containers_Box.prototype.registerComposite.call(this);
		this._compositeBuilderClass = haxe_ui_containers__$Group_Builder;
	}
	,__class__: haxe_ui_containers_Group
	,__properties__: $extend(haxe_ui_containers_Box.prototype.__properties__,{set_componentGroup:"set_componentGroup",get_componentGroup:"get_componentGroup",set_selectedOption:"set_selectedOption",get_selectedOption:"get_selectedOption"})
});
var haxe_ui_containers__$Group_SelectedOptionBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._Group.SelectedOptionBehaviour"] = haxe_ui_containers__$Group_SelectedOptionBehaviour;
haxe_ui_containers__$Group_SelectedOptionBehaviour.__name__ = "haxe.ui.containers._Group.SelectedOptionBehaviour";
haxe_ui_containers__$Group_SelectedOptionBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$Group_SelectedOptionBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	get: function() {
		var optionbox = this._component.findComponent(null,haxe_ui_components_OptionBox,false);
		var arr = haxe_ui_components_OptionBoxGroups.get_instance().get(optionbox.get_componentGroup());
		var selectionOption = null;
		if(arr != null) {
			var _g = 0;
			while(_g < arr.length) {
				var test = arr[_g];
				++_g;
				if(test.get_selected() == true) {
					selectionOption = test;
					break;
				}
			}
		}
		return haxe_ui_util_Variant.fromComponent(selectionOption);
	}
	,__class__: haxe_ui_containers__$Group_SelectedOptionBehaviour
});
var haxe_ui_containers__$Group_ResetGroup = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._Group.ResetGroup"] = haxe_ui_containers__$Group_ResetGroup;
haxe_ui_containers__$Group_ResetGroup.__name__ = "haxe.ui.containers._Group.ResetGroup";
haxe_ui_containers__$Group_ResetGroup.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_containers__$Group_ResetGroup.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(param) {
		(js_Boot.__cast(this._component._compositeBuilder , haxe_ui_containers__$Group_Builder)).applyInitialValues();
		return null;
	}
	,__class__: haxe_ui_containers__$Group_ResetGroup
});
var haxe_ui_containers__$Group_Builder = function(group) {
	this._initialResets = null;
	this._initialValues = null;
	haxe_ui_core_CompositeBuilder.call(this,group);
	this._group = group;
	this._component.set_layout(new haxe_ui_layouts_HorizontalLayout());
};
$hxClasses["haxe.ui.containers._Group.Builder"] = haxe_ui_containers__$Group_Builder;
haxe_ui_containers__$Group_Builder.__name__ = "haxe.ui.containers._Group.Builder";
haxe_ui_containers__$Group_Builder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_containers__$Group_Builder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_group: null
	,addComponent: function(child) {
		this.childAdd(child);
		return haxe_ui_core_CompositeBuilder.prototype.addComponent.call(this,child);
	}
	,addComponentAt: function(child,index) {
		this.childAdd(child);
		return haxe_ui_core_CompositeBuilder.prototype.addComponentAt.call(this,child,index);
	}
	,childAdd: function(child) {
		if(((child) instanceof haxe_ui_core_InteractiveComponent)) {
			this.processGroupChild(child);
		} else {
			var interactiveChildren = child.findComponents(null,haxe_ui_core_InteractiveComponent);
			var _g = 0;
			while(_g < interactiveChildren.length) {
				var interactiveChild = interactiveChildren[_g];
				++_g;
				this.processGroupChild(interactiveChild);
			}
		}
	}
	,processGroupChild: function(child) {
		if(((child) instanceof haxe_ui_components_OptionBox)) {
			if(this._group.get_componentGroup() == null) {
				this._group.set_componentGroup("group" + haxe_ui_util_GUID.uuid());
			}
			var optionbox = js_Boot.__cast(child , haxe_ui_components_OptionBox);
			if(optionbox.get_componentGroup() == null || optionbox.get_componentGroup() == "defaultGroup") {
				optionbox.set_componentGroup(this._group.get_componentGroup());
			}
		}
		this.cacheInitalValue(child);
		if(child.hasEvent("change",$bind(this,this.childChangeHandler)) == false) {
			child.registerEvent("change",$bind(this,this.childChangeHandler));
		}
	}
	,_initialValues: null
	,_initialResets: null
	,cacheInitalValue: function(c) {
		if(((c) instanceof haxe_ui_components_OptionBox)) {
			if(this._initialResets == null) {
				this._initialResets = new haxe_ds_StringMap();
			}
			var optionbox = js_Boot.__cast(c , haxe_ui_components_OptionBox);
			if(optionbox.get_selected() == true) {
				var this1 = this._initialResets;
				var key = optionbox.get_componentGroup();
				var _this = this1;
				if(Object.prototype.hasOwnProperty.call(_this.h,key)) {
					delete(_this.h[key]);
				}
				if(this._initialValues == null) {
					this._initialValues = new haxe_ds_ObjectMap();
				}
				this._initialValues.set(c,haxe_ui_util_Variant.fromDynamic(c.get_value()));
			} else {
				var this1 = this._initialResets;
				var key = optionbox.get_componentGroup();
				this1.h[key] = true;
			}
		} else {
			if(this._initialValues == null) {
				this._initialValues = new haxe_ds_ObjectMap();
			}
			this._initialValues.set(c,haxe_ui_util_Variant.fromDynamic(c.get_value()));
		}
	}
	,applyInitialValues: function() {
		if(this._initialValues != null) {
			var c = this._initialValues.keys();
			while(c.hasNext()) {
				var c1 = c.next();
				var v = this._initialValues.h[c1.__id__];
				c1.set_value(v);
			}
		}
		if(this._initialResets != null) {
			var h = this._initialResets.h;
			var k_h = h;
			var k_keys = Object.keys(h);
			var k_length = k_keys.length;
			var k_current = 0;
			while(k_current < k_length) {
				var k = k_keys[k_current++];
				haxe_ui_components_OptionBoxGroups.get_instance().reset(k);
			}
		}
	}
	,childChangeHandler: function(e) {
		this._group.dispatch(e.clone());
		this._group.dispatch(new haxe_ui_events_UIEvent("propertychange",false,"selectedOption"));
	}
	,__class__: haxe_ui_containers__$Group_Builder
});
var haxe_ui_containers_HBox = function() {
	haxe_ui_containers_Box.call(this);
	this.set_layout(new haxe_ui_layouts_HorizontalLayout());
};
$hxClasses["haxe.ui.containers.HBox"] = haxe_ui_containers_HBox;
haxe_ui_containers_HBox.__name__ = "haxe.ui.containers.HBox";
haxe_ui_containers_HBox.__super__ = haxe_ui_containers_Box;
haxe_ui_containers_HBox.prototype = $extend(haxe_ui_containers_Box.prototype,{
	get_continuous: function() {
		return ((this._layout) instanceof haxe_ui_layouts_HorizontalContinuousLayout);
	}
	,set_continuous: function(value) {
		if(value == true) {
			this.set_layout(new haxe_ui_layouts_HorizontalContinuousLayout());
		} else {
			this.set_layout(new haxe_ui_layouts_HorizontalLayout());
		}
		return value;
	}
	,registerBehaviours: function() {
		haxe_ui_containers_Box.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_Box.prototype.cloneComponent.call(this);
		c.set_continuous(this.get_continuous());
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_HBox();
	}
	,__class__: haxe_ui_containers_HBox
	,__properties__: $extend(haxe_ui_containers_Box.prototype.__properties__,{set_continuous:"set_continuous",get_continuous:"get_continuous"})
});
var haxe_ui_containers_Header = function() {
	haxe_ui_containers_HBox.call(this);
	this.set_layout(new haxe_ui_containers__$Header_Layout());
};
$hxClasses["haxe.ui.containers.Header"] = haxe_ui_containers_Header;
haxe_ui_containers_Header.__name__ = "haxe.ui.containers.Header";
haxe_ui_containers_Header.__super__ = haxe_ui_containers_HBox;
haxe_ui_containers_Header.prototype = $extend(haxe_ui_containers_HBox.prototype,{
	registerComposite: function() {
		haxe_ui_containers_HBox.prototype.registerComposite.call(this);
		this._defaultLayoutClass = haxe_ui_containers__$Header_Layout;
		this._compositeBuilderClass = haxe_ui_containers__$Header_Builder;
	}
	,registerBehaviours: function() {
		haxe_ui_containers_HBox.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_HBox.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_Header();
	}
	,__class__: haxe_ui_containers_Header
});
var haxe_ui_containers__$Header_Builder = function(header) {
	haxe_ui_core_CompositeBuilder.call(this,header);
	this._header = header;
};
$hxClasses["haxe.ui.containers._Header.Builder"] = haxe_ui_containers__$Header_Builder;
haxe_ui_containers__$Header_Builder.__name__ = "haxe.ui.containers._Header.Builder";
haxe_ui_containers__$Header_Builder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_containers__$Header_Builder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_header: null
	,addComponent: function(child) {
		this.addEventListeners(child);
		return null;
	}
	,addComponentAt: function(child,index) {
		this.addEventListeners(child);
		return null;
	}
	,addEventListeners: function(c) {
		if(!((c) instanceof haxe_ui_components_Column)) {
			return;
		}
		var column = js_Boot.__cast(c , haxe_ui_components_Column);
		column.registerEvent("sortchanged",$bind(this,this.onSortChanged));
	}
	,onSortChanged: function(e) {
		var _g = 0;
		var _this = this._header;
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			if(e.target == c) {
				this._header.dispatch(e);
			} else {
				(js_Boot.__cast(c , haxe_ui_components_Column)).set_sortDirection(null);
			}
		}
	}
	,__class__: haxe_ui_containers__$Header_Builder
});
var haxe_ui_containers__$Header_Layout = function() {
	haxe_ui_layouts_HorizontalLayout.call(this);
};
$hxClasses["haxe.ui.containers._Header.Layout"] = haxe_ui_containers__$Header_Layout;
haxe_ui_containers__$Header_Layout.__name__ = "haxe.ui.containers._Header.Layout";
haxe_ui_containers__$Header_Layout.__super__ = haxe_ui_layouts_HorizontalLayout;
haxe_ui_containers__$Header_Layout.prototype = $extend(haxe_ui_layouts_HorizontalLayout.prototype,{
	resizeChildren: function() {
		haxe_ui_layouts_HorizontalLayout.prototype.resizeChildren.call(this);
		var max = 0;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			if(child.get_height() > max) {
				max = child.get_height();
			}
		}
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			if(!((child) instanceof haxe_ui_components_Column)) {
				continue;
			}
			if(child.get_text() == null || child.get_text().length == 0 || child.get_height() < max) {
				child.set_height(max);
			}
		}
	}
	,__class__: haxe_ui_containers__$Header_Layout
});
var haxe_ui_containers_IVirtualContainer = function() { };
$hxClasses["haxe.ui.containers.IVirtualContainer"] = haxe_ui_containers_IVirtualContainer;
haxe_ui_containers_IVirtualContainer.__name__ = "haxe.ui.containers.IVirtualContainer";
haxe_ui_containers_IVirtualContainer.__isInterface__ = true;
haxe_ui_containers_IVirtualContainer.prototype = {
	get_itemWidth: null
	,set_itemWidth: null
	,get_itemHeight: null
	,set_itemHeight: null
	,get_itemCount: null
	,set_itemCount: null
	,get_variableItemSize: null
	,set_variableItemSize: null
	,get_virtual: null
	,set_virtual: null
	,get_hscrollPos: null
	,set_hscrollPos: null
	,get_hscrollMax: null
	,set_hscrollMax: null
	,get_hscrollPageSize: null
	,set_hscrollPageSize: null
	,get_vscrollPos: null
	,set_vscrollPos: null
	,get_vscrollMax: null
	,set_vscrollMax: null
	,get_vscrollPageSize: null
	,set_vscrollPageSize: null
	,get_itemRenderer: null
	,set_itemRenderer: null
	,get_itemRendererClass: null
	,set_itemRendererClass: null
	,__class__: haxe_ui_containers_IVirtualContainer
	,__properties__: {set_itemRendererClass:"set_itemRendererClass",get_itemRendererClass:"get_itemRendererClass",set_itemRenderer:"set_itemRenderer",get_itemRenderer:"get_itemRenderer",set_vscrollPageSize:"set_vscrollPageSize",get_vscrollPageSize:"get_vscrollPageSize",set_vscrollMax:"set_vscrollMax",get_vscrollMax:"get_vscrollMax",set_vscrollPos:"set_vscrollPos",get_vscrollPos:"get_vscrollPos",set_hscrollPageSize:"set_hscrollPageSize",get_hscrollPageSize:"get_hscrollPageSize",set_hscrollMax:"set_hscrollMax",get_hscrollMax:"get_hscrollMax",set_hscrollPos:"set_hscrollPos",get_hscrollPos:"get_hscrollPos",set_virtual:"set_virtual",get_virtual:"get_virtual",set_variableItemSize:"set_variableItemSize",get_variableItemSize:"get_variableItemSize",set_itemCount:"set_itemCount",get_itemCount:"get_itemCount",set_itemHeight:"set_itemHeight",get_itemHeight:"get_itemHeight",set_itemWidth:"set_itemWidth",get_itemWidth:"get_itemWidth"}
};
var haxe_ui_core_IScrollView = function() { };
$hxClasses["haxe.ui.core.IScrollView"] = haxe_ui_core_IScrollView;
haxe_ui_core_IScrollView.__name__ = "haxe.ui.core.IScrollView";
haxe_ui_core_IScrollView.__isInterface__ = true;
haxe_ui_core_IScrollView.prototype = {
	ensureVisible: null
	,__class__: haxe_ui_core_IScrollView
};
var haxe_ui_containers_ScrollView = function() {
	haxe_ui_core_InteractiveComponent.call(this);
};
$hxClasses["haxe.ui.containers.ScrollView"] = haxe_ui_containers_ScrollView;
haxe_ui_containers_ScrollView.__name__ = "haxe.ui.containers.ScrollView";
haxe_ui_containers_ScrollView.__interfaces__ = [haxe_ui_core_IScrollView];
haxe_ui_containers_ScrollView.__super__ = haxe_ui_core_InteractiveComponent;
haxe_ui_containers_ScrollView.prototype = $extend(haxe_ui_core_InteractiveComponent.prototype,{
	ensureVisible: function(component) {
		if(this.behaviours == null) {
			return;
		}
		this.behaviours.call("ensureVisible",component);
	}
	,validateComponentInternal: function(nextFrame) {
		if(nextFrame == null) {
			nextFrame = true;
		}
		if(this.get_native() == true) {
			haxe_ui_core_InteractiveComponent.prototype.validateComponentInternal.call(this,nextFrame);
			return;
		}
		var scrollInvalid = this.isComponentInvalid("scroll");
		var layoutInvalid = this.isComponentInvalid("layout");
		haxe_ui_core_InteractiveComponent.prototype.validateComponentInternal.call(this,nextFrame);
		if(scrollInvalid || layoutInvalid) {
			(js_Boot.__cast(this._compositeBuilder , haxe_ui_containers_ScrollViewBuilder)).checkScrolls();
			(js_Boot.__cast(this._compositeBuilder , haxe_ui_containers_ScrollViewBuilder)).updateScrollRect();
		}
	}
	,get_isScroller: function() {
		return true;
	}
	,registerBehaviours: function() {
		haxe_ui_core_InteractiveComponent.prototype.registerBehaviours.call(this);
		this.behaviours.register("virtual",haxe_ui_containers__$ScrollView_Virtual);
		this.behaviours.register("contentLayoutName",haxe_ui_containers__$ScrollView_ContentLayoutName,haxe_ui_util_Variant.fromString("vertical"));
		this.behaviours.register("contentWidth",haxe_ui_containers__$ScrollView_ContentWidth);
		this.behaviours.register("percentContentWidth",haxe_ui_containers__$ScrollView_PercentContentWidth);
		this.behaviours.register("contentHeight",haxe_ui_containers__$ScrollView_ContentHeight);
		this.behaviours.register("percentContentHeight",haxe_ui_containers__$ScrollView_PercentContentHeight);
		this.behaviours.register("hscrollPos",haxe_ui_containers__$ScrollView_HScrollPos);
		this.behaviours.register("hscrollMax",haxe_ui_containers__$ScrollView_HScrollMax);
		this.behaviours.register("hscrollPageSize",haxe_ui_containers__$ScrollView_HScrollPageSize);
		this.behaviours.register("hscrollThumbSize",haxe_ui_containers__$ScrollView_HScrollThumbSize);
		this.behaviours.register("vscrollPos",haxe_ui_containers__$ScrollView_VScrollPos);
		this.behaviours.register("vscrollMax",haxe_ui_containers__$ScrollView_VScrollMax);
		this.behaviours.register("vscrollPageSize",haxe_ui_containers__$ScrollView_VScrollPageSize);
		this.behaviours.register("vscrollThumbSize",haxe_ui_containers__$ScrollView_VScrollThumbSize);
		this.behaviours.register("thumbSize",haxe_ui_containers__$ScrollView_ThumbSize);
		this.behaviours.register("scrollMode",haxe_ui_containers__$ScrollView_ScrollModeBehaviour,haxe_ui_util_Variant.fromString("drag"));
		this.behaviours.register("scrollPolicy",haxe_ui_containers__$ScrollView_ScrollPolicyBehaviour);
		this.behaviours.register("horizontalScrollPolicy",haxe_ui_containers__$ScrollView_HScrollPolicyBehaviour);
		this.behaviours.register("verticalScrollPolicy",haxe_ui_containers__$ScrollView_VScrollPolicyBehaviour);
		this.behaviours.register("contents",haxe_ui_containers__$ScrollView_GetContents);
		this.behaviours.register("autoHideScrolls",haxe_ui_behaviours_DefaultBehaviour);
		this.behaviours.register("allowAutoScroll",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util_Variant.fromBool(true));
		this.behaviours.register("ensureVisible",haxe_ui_containers__$ScrollView_EnsureVisible);
	}
	,get_virtual: function() {
		if(this.behaviours == null) {
			return false;
		}
		return haxe_ui_util_Variant.toBool(this.behaviours.get("virtual"));
	}
	,set_virtual: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("virtual",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"virtual"));
		return value;
	}
	,get_contentLayoutName: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("contentLayoutName"));
	}
	,set_contentLayoutName: function(value) {
		var _g = Type.typeof(value);
		if(_g._hx_index == 6) {
			if(_g.c == String) {
				if(value != null && StringTools.startsWith(value,"{{") && StringTools.endsWith(value,"}}")) {
					haxe_ui_locale_LocaleManager.get_instance().registerComponent(this,"contentLayoutName",null,value);
					return value;
				}
			}
		}
		this.behaviours.set("contentLayoutName",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"contentLayoutName"));
		return value;
	}
	,get_contentWidth: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("contentWidth"));
	}
	,set_contentWidth: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("contentWidth",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"contentWidth"));
		return value;
	}
	,get_percentContentWidth: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("percentContentWidth"));
	}
	,set_percentContentWidth: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("percentContentWidth",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"percentContentWidth"));
		return value;
	}
	,get_contentHeight: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("contentHeight"));
	}
	,set_contentHeight: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("contentHeight",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"contentHeight"));
		return value;
	}
	,get_percentContentHeight: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("percentContentHeight"));
	}
	,set_percentContentHeight: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("percentContentHeight",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"percentContentHeight"));
		return value;
	}
	,get_hscrollPos: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("hscrollPos"));
	}
	,set_hscrollPos: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("hscrollPos",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"hscrollPos"));
		return value;
	}
	,get_hscrollMax: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("hscrollMax"));
	}
	,set_hscrollMax: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("hscrollMax",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"hscrollMax"));
		return value;
	}
	,get_hscrollPageSize: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("hscrollPageSize"));
	}
	,set_hscrollPageSize: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("hscrollPageSize",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"hscrollPageSize"));
		return value;
	}
	,get_hscrollThumbSize: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("hscrollThumbSize"));
	}
	,set_hscrollThumbSize: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("hscrollThumbSize",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"hscrollThumbSize"));
		return value;
	}
	,get_vscrollPos: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("vscrollPos"));
	}
	,set_vscrollPos: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("vscrollPos",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"vscrollPos"));
		return value;
	}
	,get_vscrollMax: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("vscrollMax"));
	}
	,set_vscrollMax: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("vscrollMax",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"vscrollMax"));
		return value;
	}
	,get_vscrollPageSize: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("vscrollPageSize"));
	}
	,set_vscrollPageSize: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("vscrollPageSize",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"vscrollPageSize"));
		return value;
	}
	,get_vscrollThumbSize: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("vscrollThumbSize"));
	}
	,set_vscrollThumbSize: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("vscrollThumbSize",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"vscrollThumbSize"));
		return value;
	}
	,get_thumbSize: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("thumbSize"));
	}
	,set_thumbSize: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("thumbSize",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"thumbSize"));
		return value;
	}
	,get_scrollMode: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("scrollMode"));
	}
	,set_scrollMode: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("scrollMode",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"scrollMode"));
		return value;
	}
	,get_scrollPolicy: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("scrollPolicy"));
	}
	,set_scrollPolicy: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("scrollPolicy",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"scrollPolicy"));
		return value;
	}
	,get_horizontalScrollPolicy: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("horizontalScrollPolicy"));
	}
	,set_horizontalScrollPolicy: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("horizontalScrollPolicy",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"horizontalScrollPolicy"));
		return value;
	}
	,get_verticalScrollPolicy: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("verticalScrollPolicy"));
	}
	,set_verticalScrollPolicy: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("verticalScrollPolicy",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"verticalScrollPolicy"));
		return value;
	}
	,get_contents: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toComponent(this.behaviours.get("contents"));
	}
	,set_contents: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("contents",haxe_ui_util_Variant.fromComponent(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"contents"));
		return value;
	}
	,get_autoHideScrolls: function() {
		if(this.behaviours == null) {
			return false;
		}
		return haxe_ui_util_Variant.toBool(this.behaviours.get("autoHideScrolls"));
	}
	,set_autoHideScrolls: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("autoHideScrolls",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"autoHideScrolls"));
		return value;
	}
	,get_allowAutoScroll: function() {
		if(this.behaviours == null) {
			return false;
		}
		return haxe_ui_util_Variant.toBool(this.behaviours.get("allowAutoScroll"));
	}
	,set_allowAutoScroll: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("allowAutoScroll",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"allowAutoScroll"));
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_InteractiveComponent.prototype.cloneComponent.call(this);
		c.set_virtual(this.get_virtual());
		if(this.get_contentLayoutName() != null) {
			c.set_contentLayoutName(this.get_contentLayoutName());
		}
		if(this.get_contentWidth() != null) {
			c.set_contentWidth(this.get_contentWidth());
		}
		if(this.get_percentContentWidth() != null) {
			c.set_percentContentWidth(this.get_percentContentWidth());
		}
		if(this.get_contentHeight() != null) {
			c.set_contentHeight(this.get_contentHeight());
		}
		if(this.get_percentContentHeight() != null) {
			c.set_percentContentHeight(this.get_percentContentHeight());
		}
		c.set_hscrollPos(this.get_hscrollPos());
		c.set_hscrollMax(this.get_hscrollMax());
		c.set_hscrollPageSize(this.get_hscrollPageSize());
		if(this.get_hscrollThumbSize() != null) {
			c.set_hscrollThumbSize(this.get_hscrollThumbSize());
		}
		c.set_vscrollPos(this.get_vscrollPos());
		c.set_vscrollMax(this.get_vscrollMax());
		c.set_vscrollPageSize(this.get_vscrollPageSize());
		if(this.get_vscrollThumbSize() != null) {
			c.set_vscrollThumbSize(this.get_vscrollThumbSize());
		}
		if(this.get_thumbSize() != null) {
			c.set_thumbSize(this.get_thumbSize());
		}
		if(this.get_scrollMode() != null) {
			c.set_scrollMode(this.get_scrollMode());
		}
		if(this.get_scrollPolicy() != null) {
			c.set_scrollPolicy(this.get_scrollPolicy());
		}
		if(this.get_horizontalScrollPolicy() != null) {
			c.set_horizontalScrollPolicy(this.get_horizontalScrollPolicy());
		}
		if(this.get_verticalScrollPolicy() != null) {
			c.set_verticalScrollPolicy(this.get_verticalScrollPolicy());
		}
		if(this.get_contents() != null) {
			c.set_contents(this.get_contents());
		}
		c.set_autoHideScrolls(this.get_autoHideScrolls());
		c.set_allowAutoScroll(this.get_allowAutoScroll());
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_ScrollView();
	}
	,registerComposite: function() {
		haxe_ui_core_InteractiveComponent.prototype.registerComposite.call(this);
		this._internalEventsClass = haxe_ui_containers_ScrollViewEvents;
		this._compositeBuilderClass = haxe_ui_containers_ScrollViewBuilder;
		this._defaultLayoutClass = haxe_ui_layouts_ScrollViewLayout;
	}
	,_internal__onScroll: null
	,onScroll: null
	,set_onScroll: function(value) {
		if(this._internal__onScroll != null) {
			this.unregisterEvent("scrollscroll",this._internal__onScroll);
			this._internal__onScroll = null;
		}
		if(value != null) {
			this._internal__onScroll = value;
			this.registerEvent("scrollscroll",value);
		}
		return value;
	}
	,__class__: haxe_ui_containers_ScrollView
	,__properties__: $extend(haxe_ui_core_InteractiveComponent.prototype.__properties__,{set_onScroll:"set_onScroll",set_allowAutoScroll:"set_allowAutoScroll",get_allowAutoScroll:"get_allowAutoScroll",set_autoHideScrolls:"set_autoHideScrolls",get_autoHideScrolls:"get_autoHideScrolls",set_contents:"set_contents",get_contents:"get_contents",set_verticalScrollPolicy:"set_verticalScrollPolicy",get_verticalScrollPolicy:"get_verticalScrollPolicy",set_horizontalScrollPolicy:"set_horizontalScrollPolicy",get_horizontalScrollPolicy:"get_horizontalScrollPolicy",set_scrollPolicy:"set_scrollPolicy",get_scrollPolicy:"get_scrollPolicy",set_scrollMode:"set_scrollMode",get_scrollMode:"get_scrollMode",set_thumbSize:"set_thumbSize",get_thumbSize:"get_thumbSize",set_vscrollThumbSize:"set_vscrollThumbSize",get_vscrollThumbSize:"get_vscrollThumbSize",set_vscrollPageSize:"set_vscrollPageSize",get_vscrollPageSize:"get_vscrollPageSize",set_vscrollMax:"set_vscrollMax",get_vscrollMax:"get_vscrollMax",set_vscrollPos:"set_vscrollPos",get_vscrollPos:"get_vscrollPos",set_hscrollThumbSize:"set_hscrollThumbSize",get_hscrollThumbSize:"get_hscrollThumbSize",set_hscrollPageSize:"set_hscrollPageSize",get_hscrollPageSize:"get_hscrollPageSize",set_hscrollMax:"set_hscrollMax",get_hscrollMax:"get_hscrollMax",set_hscrollPos:"set_hscrollPos",get_hscrollPos:"get_hscrollPos",set_percentContentHeight:"set_percentContentHeight",get_percentContentHeight:"get_percentContentHeight",set_contentHeight:"set_contentHeight",get_contentHeight:"get_contentHeight",set_percentContentWidth:"set_percentContentWidth",get_percentContentWidth:"get_percentContentWidth",set_contentWidth:"set_contentWidth",get_contentWidth:"get_contentWidth",set_contentLayoutName:"set_contentLayoutName",get_contentLayoutName:"get_contentLayoutName",set_virtual:"set_virtual",get_virtual:"get_virtual"})
});
var haxe_ui_containers__$ScrollView_EnsureVisible = function(component) {
	haxe_ui_behaviours_DefaultBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._ScrollView.EnsureVisible"] = haxe_ui_containers__$ScrollView_EnsureVisible;
haxe_ui_containers__$ScrollView_EnsureVisible.__name__ = "haxe.ui.containers._ScrollView.EnsureVisible";
haxe_ui_containers__$ScrollView_EnsureVisible.__super__ = haxe_ui_behaviours_DefaultBehaviour;
haxe_ui_containers__$ScrollView_EnsureVisible.prototype = $extend(haxe_ui_behaviours_DefaultBehaviour.prototype,{
	call: function(param) {
		var scrollview = js_Boot.__cast(this._component , haxe_ui_containers_ScrollView);
		if(scrollview.get_allowAutoScroll() == false) {
			return null;
		}
		var c = js_Boot.__cast(param , haxe_ui_core_Component);
		if(c == scrollview) {
			return null;
		}
		var hscroll = scrollview.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		var hscrollPos = 0;
		if(hscroll != null) {
			hscrollPos = hscroll.get_pos();
		}
		var vscroll = scrollview.findComponent(null,haxe_ui_components_VerticalScroll,false);
		var vscrollPos = 0;
		if(vscroll != null) {
			vscrollPos = vscroll.get_pos();
		}
		var componentScreenRect = new haxe_ui_geom_Rectangle(c.get_screenLeft(),c.get_screenTop(),c.get_width(),c.get_height());
		var componentRect = new haxe_ui_geom_Rectangle(c.get_screenLeft() + hscrollPos,c.get_screenTop() + vscrollPos,c.get_width(),c.get_height());
		var scrollRect = new haxe_ui_geom_Rectangle(scrollview.get_screenLeft(),scrollview.get_screenTop(),scrollview.get_width(),scrollview.get_height());
		var scrollRectFixed = scrollRect.copy();
		var usableSize = scrollview.get_layout().get_usableSize();
		scrollRectFixed.width = usableSize.width;
		scrollRectFixed.height = usableSize.height;
		if(scrollRectFixed.containsRect(componentScreenRect)) {
			return null;
		}
		var newHScrollPos = hscrollPos;
		var newVScrollPos = vscrollPos;
		var fixedRight = componentRect.get_right() - scrollRect.left;
		var fixedLeft = componentRect.left - scrollRect.left;
		var fixedBottom = componentRect.get_bottom() - scrollRect.top;
		var fixedTop = componentRect.top - scrollRect.top;
		var offsetLeft = 1;
		var offsetTop = 1;
		if(scrollRectFixed.containsPoint(componentScreenRect.get_right(),componentScreenRect.top) == false) {
			newHScrollPos = fixedRight - usableSize.width + (this.calcOffset(c,"right") - offsetLeft);
		} else if(scrollRectFixed.containsPoint(componentScreenRect.left,componentScreenRect.top) == false) {
			newHScrollPos = fixedLeft - (this.calcOffset(c,"left") + offsetLeft);
		}
		if(scrollRectFixed.containsPoint(componentScreenRect.left,componentScreenRect.get_bottom()) == false) {
			newVScrollPos = fixedBottom - usableSize.height + (this.calcOffset(c,"bottom") - offsetTop);
		} else if(scrollRectFixed.containsPoint(componentScreenRect.left,componentScreenRect.top) == false) {
			newVScrollPos = fixedTop - (this.calcOffset(c,"top") + offsetTop);
		}
		if(hscroll != null) {
			hscroll.set_pos(newHScrollPos);
		}
		if(vscroll != null) {
			vscroll.set_pos(newVScrollPos);
		}
		return null;
	}
	,calcOffset: function(c,which) {
		var p = 0;
		var r = c.parentComponent;
		while(r != null) {
			if(r.get_style() != null) {
				switch(which) {
				case "bottom":
					if(r.get_paddingBottom() != null) {
						p += r.get_paddingBottom();
					}
					break;
				case "left":
					if(r.get_paddingLeft() != null) {
						p += r.get_paddingLeft();
					}
					break;
				case "right":
					if(r.get_paddingRight() != null) {
						p += r.get_paddingRight();
					}
					break;
				case "top":
					if(r.get_paddingTop() != null) {
						p += r.get_paddingTop();
					}
					break;
				}
			}
			r = r.parentComponent;
			if(r == this._component) {
				break;
			}
		}
		return p;
	}
	,__class__: haxe_ui_containers__$ScrollView_EnsureVisible
});
var haxe_ui_containers__$ScrollView_Virtual = function(component) {
	haxe_ui_behaviours_DefaultBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._ScrollView.Virtual"] = haxe_ui_containers__$ScrollView_Virtual;
haxe_ui_containers__$ScrollView_Virtual.__name__ = "haxe.ui.containers._ScrollView.Virtual";
haxe_ui_containers__$ScrollView_Virtual.__super__ = haxe_ui_behaviours_DefaultBehaviour;
haxe_ui_containers__$ScrollView_Virtual.prototype = $extend(haxe_ui_behaviours_DefaultBehaviour.prototype,{
	set: function(value) {
		haxe_ui_behaviours_DefaultBehaviour.prototype.set.call(this,value);
		if(this._component._compositeBuilder != null) {
			(js_Boot.__cast(this._component._compositeBuilder , haxe_ui_containers_ScrollViewBuilder)).onVirtualChanged();
		}
	}
	,__class__: haxe_ui_containers__$ScrollView_Virtual
});
var haxe_ui_containers__$ScrollView_ContentLayoutName = function(component) {
	haxe_ui_behaviours_DefaultBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._ScrollView.ContentLayoutName"] = haxe_ui_containers__$ScrollView_ContentLayoutName;
haxe_ui_containers__$ScrollView_ContentLayoutName.__name__ = "haxe.ui.containers._ScrollView.ContentLayoutName";
haxe_ui_containers__$ScrollView_ContentLayoutName.__super__ = haxe_ui_behaviours_DefaultBehaviour;
haxe_ui_containers__$ScrollView_ContentLayoutName.prototype = $extend(haxe_ui_behaviours_DefaultBehaviour.prototype,{
	set: function(value) {
		haxe_ui_behaviours_DefaultBehaviour.prototype.set.call(this,value);
		var builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_containers_ScrollViewBuilder);
		if(builder != null && haxe_ui_util_Variant.fromString(builder._contentsLayoutName) != value) {
			builder._contentsLayoutName = haxe_ui_util_Variant.toString(value);
			builder._contents.set_layout(haxe_ui_layouts_LayoutFactory.createFromName(haxe_ui_util_Variant.toString(value)));
		}
	}
	,__class__: haxe_ui_containers__$ScrollView_ContentLayoutName
});
var haxe_ui_containers__$ScrollView_ContentWidth = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._ScrollView.ContentWidth"] = haxe_ui_containers__$ScrollView_ContentWidth;
haxe_ui_containers__$ScrollView_ContentWidth.__name__ = "haxe.ui.containers._ScrollView.ContentWidth";
haxe_ui_containers__$ScrollView_ContentWidth.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_containers__$ScrollView_ContentWidth.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	get: function() {
		var contents = this._component.findComponent("scrollview-contents",null,false,"css");
		if(contents == null) {
			return null;
		}
		return haxe_ui_util_Variant.fromFloat(contents.get_width());
	}
	,set: function(value) {
		var contents = this._component.findComponent("scrollview-contents",null,false,"css");
		if(contents != null) {
			contents.set_percentWidth(null);
			contents.set_width(haxe_ui_util_Variant.toFloat(value));
		}
	}
	,__class__: haxe_ui_containers__$ScrollView_ContentWidth
});
var haxe_ui_containers__$ScrollView_PercentContentWidth = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._ScrollView.PercentContentWidth"] = haxe_ui_containers__$ScrollView_PercentContentWidth;
haxe_ui_containers__$ScrollView_PercentContentWidth.__name__ = "haxe.ui.containers._ScrollView.PercentContentWidth";
haxe_ui_containers__$ScrollView_PercentContentWidth.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_containers__$ScrollView_PercentContentWidth.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	get: function() {
		var contents = this._component.findComponent("scrollview-contents",null,false,"css");
		if(contents == null) {
			return null;
		}
		return haxe_ui_util_Variant.fromFloat(contents.get_percentWidth());
	}
	,set: function(value) {
		var contents = this._component.findComponent("scrollview-contents",null,false,"css");
		if(contents != null) {
			contents.set_componentWidth(null);
			contents.set_percentWidth(haxe_ui_util_Variant.toFloat(value));
		}
	}
	,__class__: haxe_ui_containers__$ScrollView_PercentContentWidth
});
var haxe_ui_containers__$ScrollView_ContentHeight = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._ScrollView.ContentHeight"] = haxe_ui_containers__$ScrollView_ContentHeight;
haxe_ui_containers__$ScrollView_ContentHeight.__name__ = "haxe.ui.containers._ScrollView.ContentHeight";
haxe_ui_containers__$ScrollView_ContentHeight.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_containers__$ScrollView_ContentHeight.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	get: function() {
		var contents = this._component.findComponent("scrollview-contents",null,false,"css");
		if(contents == null) {
			return null;
		}
		return haxe_ui_util_Variant.fromFloat(contents.get_height());
	}
	,set: function(value) {
		var contents = this._component.findComponent("scrollview-contents",null,false,"css");
		if(contents != null) {
			contents.set_percentHeight(null);
			contents.set_height(haxe_ui_util_Variant.toFloat(value));
		}
	}
	,__class__: haxe_ui_containers__$ScrollView_ContentHeight
});
var haxe_ui_containers__$ScrollView_PercentContentHeight = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._ScrollView.PercentContentHeight"] = haxe_ui_containers__$ScrollView_PercentContentHeight;
haxe_ui_containers__$ScrollView_PercentContentHeight.__name__ = "haxe.ui.containers._ScrollView.PercentContentHeight";
haxe_ui_containers__$ScrollView_PercentContentHeight.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_containers__$ScrollView_PercentContentHeight.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	get: function() {
		var contents = this._component.findComponent("scrollview-contents",null,false,"css");
		if(contents == null) {
			return null;
		}
		return haxe_ui_util_Variant.fromFloat(contents.get_percentHeight());
	}
	,set: function(value) {
		var contents = this._component.findComponent("scrollview-contents",null,false,"css");
		if(contents != null) {
			contents.set_componentHeight(null);
			contents.set_percentHeight(haxe_ui_util_Variant.toFloat(value));
		}
	}
	,__class__: haxe_ui_containers__$ScrollView_PercentContentHeight
});
var haxe_ui_containers__$ScrollView_HScrollPos = function(scrollview) {
	haxe_ui_behaviours_DataBehaviour.call(this,scrollview);
	this._scrollview = scrollview;
};
$hxClasses["haxe.ui.containers._ScrollView.HScrollPos"] = haxe_ui_containers__$ScrollView_HScrollPos;
haxe_ui_containers__$ScrollView_HScrollPos.__name__ = "haxe.ui.containers._ScrollView.HScrollPos";
haxe_ui_containers__$ScrollView_HScrollPos.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$ScrollView_HScrollPos.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	_scrollview: null
	,get: function() {
		var hscroll = this._scrollview.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		if(hscroll == null) {
			return haxe_ui_util_Variant.fromInt(0);
		}
		return haxe_ui_util_Variant.fromFloat(hscroll.get_pos());
	}
	,validateData: function() {
		var hscroll = this._scrollview.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		if(this._scrollview.get_virtual() == true) {
			if(hscroll == null) {
				hscroll = (js_Boot.__cast(this._scrollview._compositeBuilder , haxe_ui_containers_ScrollViewBuilder)).createHScroll();
			}
			if(hscroll != null) {
				hscroll.set_pos(haxe_ui_util_Variant.toFloat(this._value));
			}
		} else if(hscroll != null) {
			hscroll.set_pos(haxe_ui_util_Variant.toFloat(this._value));
		}
	}
	,__class__: haxe_ui_containers__$ScrollView_HScrollPos
});
var haxe_ui_containers__$ScrollView_VScrollPos = function(scrollview) {
	haxe_ui_behaviours_DataBehaviour.call(this,scrollview);
	this._scrollview = scrollview;
};
$hxClasses["haxe.ui.containers._ScrollView.VScrollPos"] = haxe_ui_containers__$ScrollView_VScrollPos;
haxe_ui_containers__$ScrollView_VScrollPos.__name__ = "haxe.ui.containers._ScrollView.VScrollPos";
haxe_ui_containers__$ScrollView_VScrollPos.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$ScrollView_VScrollPos.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	_scrollview: null
	,get: function() {
		var vscroll = this._scrollview.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(vscroll == null) {
			return haxe_ui_util_Variant.fromInt(0);
		}
		return haxe_ui_util_Variant.fromFloat(vscroll.get_pos());
	}
	,validateData: function() {
		var vscroll = this._scrollview.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(this._scrollview.get_virtual() == true) {
			if(vscroll == null) {
				vscroll = (js_Boot.__cast(this._scrollview._compositeBuilder , haxe_ui_containers_ScrollViewBuilder)).createVScroll();
			}
			if(vscroll != null) {
				vscroll.set_pos(haxe_ui_util_Variant.toFloat(this._value));
			}
		} else if(vscroll != null) {
			vscroll.set_pos(haxe_ui_util_Variant.toFloat(this._value));
		}
	}
	,__class__: haxe_ui_containers__$ScrollView_VScrollPos
});
var haxe_ui_containers__$ScrollView_HScrollMax = function(scrollview) {
	haxe_ui_behaviours_DataBehaviour.call(this,scrollview);
	this._scrollview = scrollview;
};
$hxClasses["haxe.ui.containers._ScrollView.HScrollMax"] = haxe_ui_containers__$ScrollView_HScrollMax;
haxe_ui_containers__$ScrollView_HScrollMax.__name__ = "haxe.ui.containers._ScrollView.HScrollMax";
haxe_ui_containers__$ScrollView_HScrollMax.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$ScrollView_HScrollMax.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	_scrollview: null
	,get: function() {
		var hscroll = this._scrollview.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		if(hscroll == null) {
			return haxe_ui_util_Variant.fromInt(0);
		}
		return haxe_ui_util_Variant.fromFloat(hscroll.get_max());
	}
	,validateData: function() {
		if(this._scrollview.get_virtual() == true) {
			var hscroll = this._scrollview.findComponent(null,haxe_ui_components_HorizontalScroll,false);
			if(haxe_ui_util_Variant.gt(this._value,haxe_ui_util_Variant.fromInt(0))) {
				if(hscroll == null) {
					hscroll = (js_Boot.__cast(this._scrollview._compositeBuilder , haxe_ui_containers_ScrollViewBuilder)).createHScroll();
				}
			} else if(hscroll != null) {
				(js_Boot.__cast(this._scrollview._compositeBuilder , haxe_ui_containers_ScrollViewBuilder)).destroyHScroll();
			}
			if(hscroll != null) {
				hscroll.set_max(haxe_ui_util_Variant.toFloat(this._value));
			}
		}
	}
	,__class__: haxe_ui_containers__$ScrollView_HScrollMax
});
var haxe_ui_containers__$ScrollView_VScrollMax = function(scrollview) {
	haxe_ui_behaviours_DataBehaviour.call(this,scrollview);
	this._scrollview = scrollview;
};
$hxClasses["haxe.ui.containers._ScrollView.VScrollMax"] = haxe_ui_containers__$ScrollView_VScrollMax;
haxe_ui_containers__$ScrollView_VScrollMax.__name__ = "haxe.ui.containers._ScrollView.VScrollMax";
haxe_ui_containers__$ScrollView_VScrollMax.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$ScrollView_VScrollMax.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	_scrollview: null
	,get: function() {
		var vscroll = this._scrollview.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(vscroll == null) {
			return haxe_ui_util_Variant.fromInt(0);
		}
		return haxe_ui_util_Variant.fromFloat(vscroll.get_max());
	}
	,validateData: function() {
		if(this._scrollview.get_virtual() == true) {
			var vscroll = this._scrollview.findComponent(null,haxe_ui_components_VerticalScroll,false);
			if(haxe_ui_util_Variant.gt(this._value,haxe_ui_util_Variant.fromInt(0))) {
				if(vscroll == null) {
					vscroll = (js_Boot.__cast(this._scrollview._compositeBuilder , haxe_ui_containers_ScrollViewBuilder)).createVScroll();
				}
			} else if(vscroll != null) {
				(js_Boot.__cast(this._scrollview._compositeBuilder , haxe_ui_containers_ScrollViewBuilder)).destroyVScroll();
			}
			if(vscroll != null) {
				vscroll.set_max(haxe_ui_util_Variant.toFloat(this._value));
			}
		}
	}
	,__class__: haxe_ui_containers__$ScrollView_VScrollMax
});
var haxe_ui_containers__$ScrollView_HScrollPageSize = function(scrollview) {
	haxe_ui_behaviours_DataBehaviour.call(this,scrollview);
	this._scrollview = scrollview;
};
$hxClasses["haxe.ui.containers._ScrollView.HScrollPageSize"] = haxe_ui_containers__$ScrollView_HScrollPageSize;
haxe_ui_containers__$ScrollView_HScrollPageSize.__name__ = "haxe.ui.containers._ScrollView.HScrollPageSize";
haxe_ui_containers__$ScrollView_HScrollPageSize.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$ScrollView_HScrollPageSize.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	_scrollview: null
	,validateData: function() {
		if(this._scrollview.get_virtual() == true) {
			var hscroll = this._scrollview.findComponent(null,haxe_ui_components_HorizontalScroll,false);
			if(hscroll == null) {
				hscroll = (js_Boot.__cast(this._scrollview._compositeBuilder , haxe_ui_containers_ScrollViewBuilder)).createHScroll();
			}
			if(hscroll != null) {
				hscroll.set_pageSize(haxe_ui_util_Variant.toFloat(this._value));
			}
		}
	}
	,__class__: haxe_ui_containers__$ScrollView_HScrollPageSize
});
var haxe_ui_containers__$ScrollView_HScrollThumbSize = function(scrollview) {
	haxe_ui_behaviours_DataBehaviour.call(this,scrollview);
	this._scrollview = scrollview;
};
$hxClasses["haxe.ui.containers._ScrollView.HScrollThumbSize"] = haxe_ui_containers__$ScrollView_HScrollThumbSize;
haxe_ui_containers__$ScrollView_HScrollThumbSize.__name__ = "haxe.ui.containers._ScrollView.HScrollThumbSize";
haxe_ui_containers__$ScrollView_HScrollThumbSize.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$ScrollView_HScrollThumbSize.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	_scrollview: null
	,validateData: function() {
		if(this._scrollview.get_virtual() == true) {
			var hscroll = this._scrollview.findComponent(null,haxe_ui_components_HorizontalScroll,false);
			if(hscroll == null) {
				hscroll = (js_Boot.__cast(this._scrollview._compositeBuilder , haxe_ui_containers_ScrollViewBuilder)).createHScroll();
			}
			if(hscroll != null) {
				hscroll.set_thumbSize(haxe_ui_util_Variant.toFloat(this._value));
			}
		}
	}
	,__class__: haxe_ui_containers__$ScrollView_HScrollThumbSize
});
var haxe_ui_containers__$ScrollView_VScrollPageSize = function(scrollview) {
	haxe_ui_behaviours_DataBehaviour.call(this,scrollview);
	this._scrollview = scrollview;
};
$hxClasses["haxe.ui.containers._ScrollView.VScrollPageSize"] = haxe_ui_containers__$ScrollView_VScrollPageSize;
haxe_ui_containers__$ScrollView_VScrollPageSize.__name__ = "haxe.ui.containers._ScrollView.VScrollPageSize";
haxe_ui_containers__$ScrollView_VScrollPageSize.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$ScrollView_VScrollPageSize.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	_scrollview: null
	,validateData: function() {
		if(this._scrollview.get_virtual() == true) {
			var vscroll = this._scrollview.findComponent(null,haxe_ui_components_VerticalScroll,false);
			if(vscroll == null) {
				vscroll = (js_Boot.__cast(this._scrollview._compositeBuilder , haxe_ui_containers_ScrollViewBuilder)).createVScroll();
			}
			if(vscroll != null) {
				vscroll.set_pageSize(haxe_ui_util_Variant.toFloat(this._value));
			}
		}
	}
	,__class__: haxe_ui_containers__$ScrollView_VScrollPageSize
});
var haxe_ui_containers__$ScrollView_VScrollThumbSize = function(scrollview) {
	haxe_ui_behaviours_DataBehaviour.call(this,scrollview);
	this._scrollview = scrollview;
};
$hxClasses["haxe.ui.containers._ScrollView.VScrollThumbSize"] = haxe_ui_containers__$ScrollView_VScrollThumbSize;
haxe_ui_containers__$ScrollView_VScrollThumbSize.__name__ = "haxe.ui.containers._ScrollView.VScrollThumbSize";
haxe_ui_containers__$ScrollView_VScrollThumbSize.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$ScrollView_VScrollThumbSize.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	_scrollview: null
	,validateData: function() {
		if(this._scrollview.get_virtual() == true) {
			var vscroll = this._scrollview.findComponent(null,haxe_ui_components_VerticalScroll,false);
			if(vscroll == null) {
				vscroll = (js_Boot.__cast(this._scrollview._compositeBuilder , haxe_ui_containers_ScrollViewBuilder)).createVScroll();
			}
			if(vscroll != null) {
				vscroll.set_thumbSize(haxe_ui_util_Variant.toFloat(this._value));
			}
		}
	}
	,__class__: haxe_ui_containers__$ScrollView_VScrollThumbSize
});
var haxe_ui_containers__$ScrollView_ThumbSize = function(scrollview) {
	haxe_ui_behaviours_DataBehaviour.call(this,scrollview);
	this._scrollview = scrollview;
};
$hxClasses["haxe.ui.containers._ScrollView.ThumbSize"] = haxe_ui_containers__$ScrollView_ThumbSize;
haxe_ui_containers__$ScrollView_ThumbSize.__name__ = "haxe.ui.containers._ScrollView.ThumbSize";
haxe_ui_containers__$ScrollView_ThumbSize.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$ScrollView_ThumbSize.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	_scrollview: null
	,validateData: function() {
		this._scrollview.set_hscrollThumbSize(haxe_ui_util_Variant.toFloat(this._value));
		this._scrollview.set_vscrollThumbSize(haxe_ui_util_Variant.toFloat(this._value));
	}
	,__class__: haxe_ui_containers__$ScrollView_ThumbSize
});
var haxe_ui_containers__$ScrollView_ScrollModeBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._ScrollView.ScrollModeBehaviour"] = haxe_ui_containers__$ScrollView_ScrollModeBehaviour;
haxe_ui_containers__$ScrollView_ScrollModeBehaviour.__name__ = "haxe.ui.containers._ScrollView.ScrollModeBehaviour";
haxe_ui_containers__$ScrollView_ScrollModeBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$ScrollView_ScrollModeBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		this._component.registerInternalEvents(null,true);
	}
	,__class__: haxe_ui_containers__$ScrollView_ScrollModeBehaviour
});
var haxe_ui_containers__$ScrollView_ScrollPolicyBehaviour = function(scrollview) {
	haxe_ui_behaviours_DataBehaviour.call(this,scrollview);
	this._scrollview = scrollview;
};
$hxClasses["haxe.ui.containers._ScrollView.ScrollPolicyBehaviour"] = haxe_ui_containers__$ScrollView_ScrollPolicyBehaviour;
haxe_ui_containers__$ScrollView_ScrollPolicyBehaviour.__name__ = "haxe.ui.containers._ScrollView.ScrollPolicyBehaviour";
haxe_ui_containers__$ScrollView_ScrollPolicyBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$ScrollView_ScrollPolicyBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	_scrollview: null
	,validateData: function() {
		this._scrollview.set_horizontalScrollPolicy(haxe_ui_util_Variant.toString(this._value));
		this._scrollview.set_verticalScrollPolicy(haxe_ui_util_Variant.toString(this._value));
	}
	,__class__: haxe_ui_containers__$ScrollView_ScrollPolicyBehaviour
});
var haxe_ui_containers__$ScrollView_HScrollPolicyBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._ScrollView.HScrollPolicyBehaviour"] = haxe_ui_containers__$ScrollView_HScrollPolicyBehaviour;
haxe_ui_containers__$ScrollView_HScrollPolicyBehaviour.__name__ = "haxe.ui.containers._ScrollView.HScrollPolicyBehaviour";
haxe_ui_containers__$ScrollView_HScrollPolicyBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$ScrollView_HScrollPolicyBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	__class__: haxe_ui_containers__$ScrollView_HScrollPolicyBehaviour
});
var haxe_ui_containers__$ScrollView_VScrollPolicyBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._ScrollView.VScrollPolicyBehaviour"] = haxe_ui_containers__$ScrollView_VScrollPolicyBehaviour;
haxe_ui_containers__$ScrollView_VScrollPolicyBehaviour.__name__ = "haxe.ui.containers._ScrollView.VScrollPolicyBehaviour";
haxe_ui_containers__$ScrollView_VScrollPolicyBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$ScrollView_VScrollPolicyBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	__class__: haxe_ui_containers__$ScrollView_VScrollPolicyBehaviour
});
var haxe_ui_containers__$ScrollView_GetContents = function(component) {
	haxe_ui_behaviours_DefaultBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._ScrollView.GetContents"] = haxe_ui_containers__$ScrollView_GetContents;
haxe_ui_containers__$ScrollView_GetContents.__name__ = "haxe.ui.containers._ScrollView.GetContents";
haxe_ui_containers__$ScrollView_GetContents.__super__ = haxe_ui_behaviours_DefaultBehaviour;
haxe_ui_containers__$ScrollView_GetContents.prototype = $extend(haxe_ui_behaviours_DefaultBehaviour.prototype,{
	get: function() {
		var contents = this._component.findComponent("scrollview-contents",null,false,"css");
		return haxe_ui_util_Variant.fromComponent(contents);
	}
	,__class__: haxe_ui_containers__$ScrollView_GetContents
});
var haxe_ui_containers_ScrollViewEvents = function(scrollview) {
	this._fadeTimer = null;
	this._containerEventsPaused = false;
	this._lastMousePos = null;
	this._movementThreshold = 3;
	this._inertia = null;
	haxe_ui_events_Events.call(this,scrollview);
	this._scrollview = scrollview;
};
$hxClasses["haxe.ui.containers.ScrollViewEvents"] = haxe_ui_containers_ScrollViewEvents;
haxe_ui_containers_ScrollViewEvents.__name__ = "haxe.ui.containers.ScrollViewEvents";
haxe_ui_containers_ScrollViewEvents.__super__ = haxe_ui_events_Events;
haxe_ui_containers_ScrollViewEvents.prototype = $extend(haxe_ui_events_Events.prototype,{
	_scrollview: null
	,register: function() {
		var contents = this._scrollview.findComponent("scrollview-contents",null,false,"css");
		if(contents != null && contents.hasEvent("resize",$bind(this,this.onContentsResized)) == false) {
			contents.registerEvent("resize",$bind(this,this.onContentsResized));
		}
		var hscroll = this._scrollview.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		if(hscroll != null && hscroll.hasEvent("change",$bind(this,this.onHScroll)) == false) {
			hscroll.registerEvent("change",$bind(this,this.onHScroll));
		}
		if(hscroll != null && hscroll.hasEvent("scrollscroll",$bind(this,this.onHScrollScroll)) == false) {
			hscroll.registerEvent("scrollscroll",$bind(this,this.onHScrollScroll));
		}
		var vscroll = this._scrollview.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(vscroll != null && vscroll.hasEvent("change",$bind(this,this.onVScroll)) == false) {
			vscroll.registerEvent("change",$bind(this,this.onVScroll));
		}
		if(vscroll != null && vscroll.hasEvent("scrollscroll",$bind(this,this.onVScrollScroll)) == false) {
			vscroll.registerEvent("scrollscroll",$bind(this,this.onVScrollScroll));
		}
		if(this._scrollview.get_scrollMode() == "drag" || this._scrollview.get_scrollMode() == "inertial") {
			this.registerEvent("mousedown",$bind(this,this.onMouseDown));
		} else if(this.hasEvent("mousedown",$bind(this,this.onMouseDown)) == false) {
			this.unregisterEvent("mousedown",$bind(this,this.onMouseDown));
		}
		if(this._scrollview.hasEvent("shown") == false) {
			this.registerEvent("shown",$bind(this,this.onShown));
		}
		this.registerEvent("mousewheel",$bind(this,this.onMouseWheel));
		this.registerEvent("actionstart",$bind(this,this.onActionStart),-100);
	}
	,unregister: function() {
		var contents = this._scrollview.findComponent("scrollview-contents",null,false,"css");
		if(contents != null) {
			contents.unregisterEvent("resize",$bind(this,this.onContentsResized));
		}
		var hscroll = this._scrollview.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		if(hscroll != null) {
			hscroll.unregisterEvent("change",$bind(this,this.onHScroll));
			hscroll.unregisterEvent("scrollscroll",$bind(this,this.onHScrollScroll));
		}
		var vscroll = this._scrollview.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(vscroll != null) {
			vscroll.unregisterEvent("change",$bind(this,this.onVScroll));
			vscroll.unregisterEvent("scrollscroll",$bind(this,this.onVScrollScroll));
		}
		this.unregisterEvent("mousedown",$bind(this,this.onMouseDown));
		this.unregisterEvent("mousewheel",$bind(this,this.onMouseWheel));
		this.unregisterEvent("shown",$bind(this,this.onShown));
		this.unregisterEvent("actionstart",$bind(this,this.onActionStart));
	}
	,onShown: function(event) {
		var _this = this._scrollview;
		if(!(_this._layout == null || _this._layoutLocked == true)) {
			_this.invalidateComponent("layout",false);
		}
		var hscroll = this._scrollview.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		if(hscroll != null) {
			if(!(hscroll._layout == null || hscroll._layoutLocked == true)) {
				hscroll.invalidateComponent("layout",false);
			}
		}
		var vscroll = this._scrollview.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(vscroll != null) {
			if(!(vscroll._layout == null || vscroll._layoutLocked == true)) {
				vscroll.invalidateComponent("layout",false);
			}
		}
	}
	,onContentsResized: function(event) {
		this._scrollview.invalidateComponent("scroll");
	}
	,onHScroll: function(event) {
		this._scrollview.invalidateComponent("scroll");
		this._target.dispatch(new haxe_ui_events_ScrollEvent("scrollchange"));
	}
	,onHScrollScroll: function(event) {
		this._target.dispatch(new haxe_ui_events_ScrollEvent("scrollscroll"));
	}
	,onVScroll: function(event) {
		this._scrollview.invalidateComponent("scroll");
		this._target.dispatch(new haxe_ui_events_ScrollEvent("scrollchange"));
	}
	,onVScrollScroll: function(event) {
		this._target.dispatch(new haxe_ui_events_ScrollEvent("scrollscroll"));
	}
	,_offset: null
	,_inertia: null
	,onMouseDown: function(event) {
		var hscroll = this._scrollview.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		var vscroll = this._scrollview.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(hscroll == null && vscroll == null) {
			return;
		}
		this._scrollview.addClass(":down");
		this._lastMousePos = new haxe_ui_geom_Point(event.screenX,event.screenY);
		var componentOffset = this._scrollview.getComponentOffset();
		var under = this._scrollview.findComponentsUnderPoint(event.screenX - componentOffset.x,event.screenY - componentOffset.y);
		var _g = 0;
		while(_g < under.length) {
			var c = under[_g];
			++_g;
			if(c.hasTextInput() || ((c) instanceof haxe_ui_components_Scroll)) {
				return;
			}
		}
		this._offset = new haxe_ui_geom_Point();
		if(hscroll != null) {
			var tmp = hscroll.get_pos();
			this._offset.x = tmp + event.screenX;
		}
		if(vscroll != null) {
			var tmp = vscroll.get_pos();
			this._offset.y = tmp + event.screenY;
		}
		if(this._scrollview.get_scrollMode() == "inertial") {
			if(this._inertia == null) {
				this._inertia = { screen : new haxe_ui_geom_Point(), target : new haxe_ui_geom_Point(), amplitude : new haxe_ui_geom_Point(), direction : new haxe_ui_geom_Point(), timestamp : 0};
			}
			this._inertia.target.x = this._scrollview.get_hscrollPos();
			this._inertia.target.y = this._scrollview.get_vscrollPos();
			this._inertia.amplitude.x = 0;
			this._inertia.amplitude.y = 0;
			this._inertia.screen.x = event.screenX;
			this._inertia.screen.y = event.screenY;
			this._inertia.timestamp = HxOverrides.now() / 1000;
		}
		haxe_ui_core_Screen.get_instance().registerEvent("mousemove",$bind(this,this.onMouseMove));
		haxe_ui_core_Screen.get_instance().registerEvent("mouseup",$bind(this,this.onMouseUp));
	}
	,_movementThreshold: null
	,_lastMousePos: null
	,onMouseMove: function(event) {
		event.cancel();
		var hscroll = this._scrollview.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		if(hscroll != null) {
			hscroll.set_pos(this._offset.x - event.screenX);
			var distX = Math.abs(event.screenX - this._lastMousePos.x);
			if(distX > haxe_ui_Toolkit.get_scaleX()) {
				this.pauseContainerEvents();
			}
		}
		var vscroll = this._scrollview.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(vscroll != null) {
			vscroll.set_pos(this._offset.y - event.screenY);
			var distY = Math.abs(event.screenY - this._lastMousePos.y);
			if(distY > haxe_ui_Toolkit.get_scaleY()) {
				this.pauseContainerEvents();
			}
		}
		this._lastMousePos = new haxe_ui_geom_Point(event.screenX,event.screenY);
	}
	,_containerEventsPaused: null
	,pauseContainerEvents: function() {
		if(this._containerEventsPaused == true) {
			return;
		}
		this._containerEventsPaused = true;
		this.onContainerEventsStatusChanged();
	}
	,resumeContainerEvents: function() {
		if(this._containerEventsPaused == false) {
			return;
		}
		this._containerEventsPaused = false;
		this.onContainerEventsStatusChanged();
	}
	,onContainerEventsStatusChanged: function() {
		this._scrollview.findComponent("scrollview-contents",haxe_ui_core_Component,true,"css").disableInteractivity(this._containerEventsPaused);
		if(this._containerEventsPaused == true) {
			this._scrollview.findComponent("scrollview-contents",haxe_ui_core_Component,true,"css").removeClass(":hover",true,true);
		}
		var hscroll = this._scrollview.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		var vscroll = this._scrollview.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(hscroll != null || vscroll != null) {
			if(this._scrollview.get_autoHideScrolls() == true) {
				if(this._containerEventsPaused == true) {
					if(hscroll != null) {
						hscroll.fadeIn();
					}
					if(vscroll != null) {
						vscroll.fadeIn();
					}
				} else {
					if(hscroll != null) {
						hscroll.fadeOut();
					}
					if(vscroll != null) {
						vscroll.fadeOut();
					}
				}
			}
		}
	}
	,onMouseUp: function(event) {
		haxe_ui_core_Screen.get_instance().unregisterEvent("mousemove",$bind(this,this.onMouseMove));
		haxe_ui_core_Screen.get_instance().unregisterEvent("mouseup",$bind(this,this.onMouseUp));
		if(this._scrollview.get_scrollMode() == "inertial") {
			var now = HxOverrides.now() / 1000;
			var elapsed = (now - this._inertia.timestamp) * 1000;
			var deltaX = Math.abs(this._inertia.screen.x - event.screenX);
			var deltaY = Math.abs(this._inertia.screen.y - event.screenY);
			this._inertia.direction.x = this._inertia.screen.x - event.screenX < 0 ? 0 : 1;
			var velocityX = deltaX / elapsed;
			var v = 1000 * deltaX / (1 + elapsed);
			velocityX = 0.8 * v + 0.2 * velocityX;
			this._inertia.direction.y = this._inertia.screen.y - event.screenY < 0 ? 0 : 1;
			var velocityY = deltaY / elapsed;
			var v = 1000 * deltaY / (1 + elapsed);
			velocityY = 0.8 * v + 0.2 * velocityY;
			if(velocityX <= 75 && velocityY <= 75) {
				this.dispatch(new haxe_ui_events_ScrollEvent("scrollstop"));
				haxe_ui_Toolkit.callLater($bind(this,this.resumeContainerEvents));
				return;
			}
			this._inertia.timestamp = HxOverrides.now() / 1000;
			var hscroll = this._scrollview.findComponent(null,haxe_ui_components_HorizontalScroll,false);
			if(hscroll != null) {
				this._inertia.amplitude.x = 0.8 * velocityX;
			}
			if(this._inertia.direction.x == 0) {
				var tmp = this._scrollview.get_hscrollPos() - this._inertia.amplitude.x;
				this._inertia.target.x = Math.round(tmp);
			} else {
				var tmp = this._scrollview.get_hscrollPos() + this._inertia.amplitude.x;
				this._inertia.target.x = Math.round(tmp);
			}
			var vscroll = this._scrollview.findComponent(null,haxe_ui_components_VerticalScroll,false);
			if(vscroll != null) {
				this._inertia.amplitude.y = 0.8 * velocityY;
			}
			if(this._inertia.direction.y == 0) {
				var tmp = this._scrollview.get_vscrollPos() - this._inertia.amplitude.y;
				this._inertia.target.y = Math.round(tmp);
			} else {
				var tmp = this._scrollview.get_vscrollPos() + this._inertia.amplitude.y;
				this._inertia.target.y = Math.round(tmp);
			}
			if(this._scrollview.get_hscrollPos() == this._inertia.target.x && this._scrollview.get_vscrollPos() == this._inertia.target.y) {
				this.dispatch(new haxe_ui_events_ScrollEvent("scrollstop"));
				haxe_ui_Toolkit.callLater($bind(this,this.resumeContainerEvents));
				return;
			}
			if(this._scrollview.get_hscrollPos() == this._inertia.target.x) {
				this._inertia.amplitude.x = 0;
			}
			if(this._scrollview.get_vscrollPos() == this._inertia.target.y) {
				this._inertia.amplitude.y = 0;
			}
			haxe_ui_Toolkit.callLater($bind(this,this.inertialScroll));
		} else {
			this._scrollview.removeClass(":down");
			this.dispatch(new haxe_ui_events_ScrollEvent("scrollstop"));
			haxe_ui_Toolkit.callLater($bind(this,this.resumeContainerEvents));
		}
	}
	,inertialScroll: function() {
		var elapsed = (HxOverrides.now() / 1000 - this._inertia.timestamp) * 1000;
		var finishedX = false;
		if(this._inertia.amplitude.x != 0) {
			var deltaX = -this._inertia.amplitude.x * Math.exp(-elapsed / 325);
			if(deltaX > 0.5 || deltaX < -0.5) {
				var oldPos = this._scrollview.get_hscrollPos();
				var newPos = 0;
				if(this._inertia.direction.x == 0) {
					newPos = this._inertia.target.x - deltaX;
				} else {
					newPos = this._inertia.target.x + deltaX;
				}
				if(newPos < 0) {
					newPos = 0;
				} else if(newPos > this._scrollview.get_hscrollMax()) {
					newPos = this._scrollview.get_hscrollMax();
				}
				this._scrollview.set_hscrollPos(newPos);
				finishedX = newPos == oldPos || newPos == 0 || newPos == this._scrollview.get_hscrollMax();
			} else {
				finishedX = true;
			}
		} else {
			finishedX = true;
		}
		var finishedY = false;
		if(this._inertia.amplitude.y != 0) {
			var deltaY = -this._inertia.amplitude.y * Math.exp(-elapsed / 325);
			if(deltaY > 0.5 || deltaY < -0.5) {
				var oldPos = this._scrollview.get_vscrollPos();
				var newPos = 0;
				if(this._inertia.direction.y == 0) {
					newPos = this._inertia.target.y - deltaY;
				} else {
					newPos = this._inertia.target.y + deltaY;
				}
				if(newPos < 0) {
					newPos = 0;
				} else if(newPos > this._scrollview.get_vscrollMax()) {
					newPos = this._scrollview.get_vscrollMax();
				}
				this._scrollview.set_vscrollPos(newPos);
				finishedY = newPos == oldPos || newPos == 0 || newPos == this._scrollview.get_vscrollMax();
			} else {
				finishedY = true;
			}
		} else {
			finishedY = true;
		}
		if(finishedX == true && finishedY == true) {
			this.dispatch(new haxe_ui_events_ScrollEvent("scrollstop"));
			haxe_ui_Toolkit.callLater($bind(this,this.resumeContainerEvents));
		} else {
			haxe_ui_Toolkit.callLater($bind(this,this.inertialScroll));
		}
	}
	,_fadeTimer: null
	,onMouseWheel: function(event) {
		var _gthis = this;
		var primaryType = haxe_ui_components_VerticalScroll;
		var secondaryType = haxe_ui_components_HorizontalScroll;
		if(event.shiftKey) {
			primaryType = haxe_ui_components_HorizontalScroll;
			secondaryType = haxe_ui_components_VerticalScroll;
		}
		var scroll = this._scrollview.findComponent(null,primaryType,false);
		if(scroll == null) {
			scroll = this._scrollview.findComponent(null,secondaryType,false);
		}
		if(scroll != null) {
			if(this._scrollview.get_autoHideScrolls() == true && this._fadeTimer == null) {
				scroll.fadeIn();
			}
			event.cancel();
			var amount = 50;
			if(event.delta > 0) {
				scroll.set_pos(scroll.get_pos() - amount);
			} else if(event.delta < 0) {
				scroll.set_pos(scroll.get_pos() + amount);
			}
			if(this._scrollview.get_autoHideScrolls() == true) {
				if(this._fadeTimer != null) {
					this._fadeTimer.stop();
					this._fadeTimer = null;
				}
				this._fadeTimer = new haxe_ui_util_Timer(300,function() {
					scroll.fadeOut();
					_gthis._fadeTimer.stop();
					_gthis._fadeTimer = null;
				});
			}
		}
	}
	,onActionStart: function(event) {
		switch(event.action) {
		case "actionDown":
			var fh = this._scrollview;
			fh.set_vscrollPos(fh.get_vscrollPos() + 1);
			event.repeater = true;
			break;
		case "actionLeft":
			var fh = this._scrollview;
			fh.set_hscrollPos(fh.get_hscrollPos() - 1);
			event.repeater = true;
			break;
		case "actionRight":
			var fh = this._scrollview;
			fh.set_hscrollPos(fh.get_hscrollPos() + 1);
			event.repeater = true;
			break;
		case "actionUp":
			var fh = this._scrollview;
			fh.set_vscrollPos(fh.get_vscrollPos() - 1);
			event.repeater = true;
			break;
		default:
		}
	}
	,__class__: haxe_ui_containers_ScrollViewEvents
});
var haxe_ui_containers_ScrollViewBuilder = function(scrollview) {
	haxe_ui_core_CompositeBuilder.call(this,scrollview);
	this._scrollview = scrollview;
	this._scrollview.cascadeActive = true;
};
$hxClasses["haxe.ui.containers.ScrollViewBuilder"] = haxe_ui_containers_ScrollViewBuilder;
haxe_ui_containers_ScrollViewBuilder.__name__ = "haxe.ui.containers.ScrollViewBuilder";
haxe_ui_containers_ScrollViewBuilder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_containers_ScrollViewBuilder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_scrollview: null
	,_contents: null
	,_contentsLayoutName: null
	,create: function() {
		var contentLayoutName = this._scrollview.get_contentLayoutName();
		if(contentLayoutName == null) {
			contentLayoutName = "vertical";
		}
		this.createContentContainer(contentLayoutName);
	}
	,destroy: function() {
	}
	,get_numComponents: function() {
		return this._contents.get_numComponents();
	}
	,addComponent: function(child) {
		if(((child) instanceof haxe_ui_components_HorizontalScroll) == false && ((child) instanceof haxe_ui_components_VerticalScroll) == false && child.classes.indexOf("scrollview-contents") != -1 == false) {
			return this._contents.addComponent(child);
		}
		return null;
	}
	,addComponentAt: function(child,index) {
		if(((child) instanceof haxe_ui_components_HorizontalScroll) == false && ((child) instanceof haxe_ui_components_VerticalScroll) == false && child.classes.indexOf("scrollview-contents") != -1 == false) {
			return this._contents.addComponentAt(child,index);
		}
		return null;
	}
	,removeComponent: function(child,dispose,invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if(dispose == null) {
			dispose = true;
		}
		if(((child) instanceof haxe_ui_components_HorizontalScroll) == false && ((child) instanceof haxe_ui_components_VerticalScroll) == false && child.classes.indexOf("scrollview-contents") != -1 == false) {
			return this._contents.removeComponent(child,dispose,invalidate);
		}
		return null;
	}
	,removeAllComponents: function(dispose) {
		if(dispose == null) {
			dispose = true;
		}
		this._contents.removeAllComponents(dispose);
		return true;
	}
	,removeComponentAt: function(index,dispose,invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if(dispose == null) {
			dispose = true;
		}
		return this._contents.removeComponentAt(index,dispose,invalidate);
	}
	,getComponentIndex: function(child) {
		return this._contents.getComponentIndex(child);
	}
	,setComponentIndex: function(child,index) {
		if(((child) instanceof haxe_ui_components_HorizontalScroll) == false && ((child) instanceof haxe_ui_components_VerticalScroll) == false && child.classes.indexOf("scrollview-contents") != -1 == false) {
			return this._contents.setComponentIndex(child,index);
		}
		return null;
	}
	,getComponentAt: function(index) {
		return this._contents.getComponentAt(index);
	}
	,createContentContainer: function(layoutName) {
		if(this._contents == null) {
			this._contents = new haxe_ui_containers_Box();
			this._contents.addClass("scrollview-contents");
			this._contents.set_id("scrollview-contents");
			this._contents.set_layout(haxe_ui_layouts_LayoutFactory.createFromName(layoutName));
			this._component.addComponent(this._contents);
			this._contentsLayoutName = layoutName;
		}
	}
	,horizontalConstraintModifier: function() {
		return 0;
	}
	,verticalConstraintModifier: function() {
		return 0;
	}
	,checkScrolls: function() {
		if(this._component.get_isNativeScroller() == true) {
			return;
		}
		var usableSize = this._component.get_layout().get_usableSize();
		if(this.get_virtualHorizontal() == false && usableSize.width > 0) {
			var horizontalConstraint = this._contents;
			var hscroll = this._component.findComponent(null,haxe_ui_components_HorizontalScroll,false);
			var vcw = horizontalConstraint.get_width() + this.horizontalConstraintModifier();
			if(vcw > usableSize.width) {
				if(hscroll == null) {
					hscroll = this.createHScroll();
				}
				hscroll.set_max(vcw - usableSize.width);
				if(this._scrollview.get_hscrollThumbSize() == null) {
					hscroll.set_pageSize(usableSize.width / vcw * hscroll.get_max());
				}
				hscroll.syncComponentValidation();
			} else if(this._scrollview.get_horizontalScrollPolicy() == "always") {
				if(hscroll == null) {
					hscroll = this.createHScroll();
				}
				hscroll.set_max(0);
				hscroll.set_pageSize(0);
			} else if(this._scrollview.get_horizontalScrollPolicy() != "always" && hscroll != null) {
				this.destroyHScroll();
			}
		}
		if(this.get_virtualVertical() == false && usableSize.height > 0) {
			var verticalConstraint = this._contents;
			var vscroll = this._component.findComponent(null,haxe_ui_components_VerticalScroll,false);
			var vch = verticalConstraint.get_height() + this.verticalConstraintModifier();
			if(vch > usableSize.height) {
				if(vscroll == null) {
					vscroll = this.createVScroll();
				}
				vscroll.set_max(vch - usableSize.height);
				if(this._scrollview.get_vscrollThumbSize() == null) {
					vscroll.set_pageSize(usableSize.height / vch * vscroll.get_max());
				}
				vscroll.syncComponentValidation();
			} else if(this._scrollview.get_verticalScrollPolicy() == "always") {
				if(vscroll == null) {
					vscroll = this.createVScroll();
				}
				vscroll.set_max(0);
				vscroll.set_pageSize(0);
			} else if(this._scrollview.get_verticalScrollPolicy() != "always" && vscroll != null) {
				this.destroyVScroll();
			}
		}
	}
	,createHScroll: function() {
		if(this._component.get_isNativeScroller() == true) {
			return null;
		}
		var usableSize = this._component.get_layout().get_usableSize();
		var horizontalConstraint = this._contents;
		var hscroll = this._component.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		var vcw = horizontalConstraint.get_width() + this.horizontalConstraintModifier();
		if(usableSize.width <= 0) {
			return hscroll;
		}
		if(vcw > usableSize.width && hscroll == null || this._scrollview.get_horizontalScrollPolicy() == "always") {
			hscroll = new haxe_ui_components_HorizontalScroll();
			hscroll.set_scriptAccess(false);
			hscroll.set_includeInLayout(!this._scrollview.get_autoHideScrolls());
			hscroll.set_hidden(this._scrollview.get_autoHideScrolls());
			hscroll.set_percentWidth(100);
			hscroll.set_allowFocus(false);
			hscroll.set_id("scrollview-hscroll");
			if(this._scrollview.get_hscrollThumbSize() != null) {
				hscroll.set_thumbSize(this._scrollview.get_hscrollThumbSize());
			}
			this._component.addComponent(hscroll);
			this._component.registerInternalEvents(null,true);
		}
		if(this._scrollview.get_horizontalScrollPolicy() == "never") {
			hscroll.set_includeInLayout(false);
			hscroll.set_hidden(true);
		} else if(this._scrollview.get_horizontalScrollPolicy() == "always") {
			hscroll.set_includeInLayout(true);
			hscroll.set_hidden(false);
		}
		return hscroll;
	}
	,createVScroll: function() {
		if(this._component.get_isNativeScroller() == true) {
			return null;
		}
		var usableSize = this._component.get_layout().get_usableSize();
		var verticalConstraint = this._contents;
		var vscroll = this._component.findComponent(null,haxe_ui_components_VerticalScroll,false);
		var vch = verticalConstraint.get_height() + this.verticalConstraintModifier();
		if(usableSize.height <= 0) {
			return vscroll;
		}
		if(vch > usableSize.height && vscroll == null || this._scrollview.get_verticalScrollPolicy() == "always") {
			vscroll = new haxe_ui_components_VerticalScroll();
			vscroll.set_scriptAccess(false);
			vscroll.set_includeInLayout(!this._scrollview.get_autoHideScrolls());
			vscroll.set_hidden(this._scrollview.get_autoHideScrolls());
			vscroll.set_percentHeight(100);
			vscroll.set_allowFocus(false);
			vscroll.set_id("scrollview-vscroll");
			if(this._scrollview.get_vscrollThumbSize() != null) {
				vscroll.set_thumbSize(this._scrollview.get_vscrollThumbSize());
			}
			this._component.addComponent(vscroll);
			this._component.registerInternalEvents(null,true);
		}
		if(this._scrollview.get_verticalScrollPolicy() == "never") {
			vscroll.set_includeInLayout(false);
			vscroll.set_hidden(true);
		} else if(this._scrollview.get_verticalScrollPolicy() == "always") {
			vscroll.set_includeInLayout(true);
			vscroll.set_hidden(false);
		}
		return vscroll;
	}
	,destroyHScroll: function() {
		var hscroll = this._component.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		if(hscroll != null) {
			this._component.removeComponent(hscroll);
		}
	}
	,destroyVScroll: function() {
		var vscroll = this._component.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(vscroll != null) {
			this._component.removeComponent(vscroll);
		}
	}
	,updateScrollRect: function() {
		if(this._contents == null) {
			return;
		}
		var usableSize = this._component.get_layout().get_usableSize();
		var clipCX = usableSize.width - this.horizontalConstraintModifier();
		if(clipCX > this._contents.get_width()) {
			clipCX = this._contents.get_width() + this.horizontalConstraintModifier();
		}
		var clipCY = usableSize.height - this.verticalConstraintModifier();
		if(clipCY > this._contents.get_height()) {
			clipCY = this._contents.get_height() + this.verticalConstraintModifier();
		}
		var xpos = 0;
		var ypos = 0;
		if(this.get_virtualHorizontal() == false) {
			var hscroll = this._component.findComponent(null,haxe_ui_components_HorizontalScroll,false);
			if(hscroll != null) {
				xpos = hscroll.get_pos();
			}
		} else if(this._contents.get_componentClipRect() != null) {
			clipCX = this._contents.get_componentClipRect().width;
		}
		if(this.get_virtualVertical() == false) {
			var vscroll = this._component.findComponent(null,haxe_ui_components_VerticalScroll,false);
			if(vscroll != null) {
				ypos = vscroll.get_pos();
			}
		} else if(this._contents.get_componentClipRect() != null) {
			clipCY = this._contents.get_componentClipRect().height;
		}
		var newClipRect = new haxe_ui_geom_Rectangle(Math.round(xpos),Math.round(ypos),Math.round(clipCX),Math.round(clipCY));
		this._contents.set_componentClipRect(newClipRect);
		this._contents.walkComponents(function(c) {
			if(c.hasEvent("move")) {
				c.dispatch(new haxe_ui_events_UIEvent("move"));
			}
			return true;
		});
	}
	,virtualHorizontal: null
	,get_virtualHorizontal: function() {
		return this._scrollview.get_virtual();
	}
	,virtualVertical: null
	,get_virtualVertical: function() {
		return this._scrollview.get_virtual();
	}
	,onVirtualChanged: function() {
	}
	,applyStyle: function(style) {
		haxe_ui_core_CompositeBuilder.prototype.applyStyle.call(this,style);
		if(style.mode == "mobile") {
			this._scrollview.set_autoHideScrolls(true);
		}
		if(style.contentWidth != null && style.contentWidth != this._scrollview.get_contentWidth()) {
			this._scrollview.set_contentWidth(style.contentWidth);
		} else if(style.contentWidthPercent != null && style.contentWidthPercent != this._scrollview.get_percentContentWidth()) {
			this._scrollview.set_percentContentWidth(style.contentWidthPercent);
		}
		if(style.contentHeight != null && style.contentHeight != this._scrollview.get_contentHeight()) {
			this._scrollview.set_contentHeight(style.contentHeight);
		} else if(style.contentHeightPercent != null && style.contentHeightPercent != this._scrollview.get_percentContentHeight()) {
			this._scrollview.set_percentContentHeight(style.contentHeightPercent);
		}
	}
	,__class__: haxe_ui_containers_ScrollViewBuilder
	,__properties__: $extend(haxe_ui_core_CompositeBuilder.prototype.__properties__,{get_virtualVertical:"get_virtualVertical",get_virtualHorizontal:"get_virtualHorizontal"})
});
var haxe_ui_containers_TableView = function() {
	haxe_ui_containers_ScrollView.call(this);
};
$hxClasses["haxe.ui.containers.TableView"] = haxe_ui_containers_TableView;
haxe_ui_containers_TableView.__name__ = "haxe.ui.containers.TableView";
haxe_ui_containers_TableView.__interfaces__ = [haxe_ui_containers_IVirtualContainer,haxe_ui_core_IDataComponent];
haxe_ui_containers_TableView.__super__ = haxe_ui_containers_ScrollView;
haxe_ui_containers_TableView.prototype = $extend(haxe_ui_containers_ScrollView.prototype,{
	clearContents: function(clearHeader) {
		if(clearHeader == null) {
			clearHeader = false;
		}
		if(this.behaviours == null) {
			return null;
		}
		return this.behaviours.call("clearContents",clearHeader);
	}
	,addColumn: function(text) {
		return haxe_ui_util_Variant.toComponent(this.behaviours.call("addColumn",text));
	}
	,removeColumn: function(text) {
		if(this.behaviours == null) {
			return null;
		}
		return this.behaviours.call("removeColumn",text);
	}
	,_itemRendererClass: null
	,get_itemRendererClass: function() {
		return this._itemRendererClass;
	}
	,set_itemRendererClass: function(value) {
		if(this._itemRendererClass != value) {
			this._itemRendererClass = value;
			if(!(this._layout == null || this._layoutLocked == true)) {
				this.invalidateComponent("layout",false);
			}
		}
		return value;
	}
	,_itemRenderer: null
	,get_itemRenderer: function() {
		return this._itemRenderer;
	}
	,set_itemRenderer: function(value) {
		if(this._itemRenderer != value) {
			this._itemRenderer = value;
			if(!(this._layout == null || this._layoutLocked == true)) {
				this.invalidateComponent("layout",false);
			}
		}
		return value;
	}
	,registerComposite: function() {
		haxe_ui_containers_ScrollView.prototype.registerComposite.call(this);
		this._internalEventsClass = haxe_ui_containers__$TableView_Events;
		this._compositeBuilderClass = haxe_ui_containers__$TableView_Builder;
		this._defaultLayoutClass = haxe_ui_containers__$TableView_Layout;
	}
	,_internal__onComponentEvent: null
	,onComponentEvent: null
	,set_onComponentEvent: function(value) {
		if(this._internal__onComponentEvent != null) {
			this.unregisterEvent("itemcomponentevent",this._internal__onComponentEvent);
			this._internal__onComponentEvent = null;
		}
		if(value != null) {
			this._internal__onComponentEvent = value;
			this.registerEvent("itemcomponentevent",value);
		}
		return value;
	}
	,_internal__onSortChanged: null
	,onSortChanged: null
	,set_onSortChanged: function(value) {
		if(this._internal__onSortChanged != null) {
			this.unregisterEvent("sortchanged",this._internal__onSortChanged);
			this._internal__onSortChanged = null;
		}
		if(value != null) {
			this._internal__onSortChanged = value;
			this.registerEvent("sortchanged",value);
		}
		return value;
	}
	,registerBehaviours: function() {
		haxe_ui_containers_ScrollView.prototype.registerBehaviours.call(this);
		this.behaviours.register("dataSource",haxe_ui_containers__$TableView_DataSourceBehaviour);
		this.behaviours.register("itemWidth",haxe_ui_behaviours_LayoutBehaviour,haxe_ui_util_Variant.fromInt(-1));
		this.behaviours.register("itemHeight",haxe_ui_behaviours_LayoutBehaviour,haxe_ui_util_Variant.fromInt(-1));
		this.behaviours.register("itemCount",haxe_ui_behaviours_LayoutBehaviour,haxe_ui_util_Variant.fromInt(-1));
		this.behaviours.register("variableItemSize",haxe_ui_behaviours_LayoutBehaviour,haxe_ui_util_Variant.fromBool(false));
		this.behaviours.register("selectedIndex",haxe_ui_containers__$TableView_SelectedIndexBehaviour,haxe_ui_util_Variant.fromInt(-1));
		this.behaviours.register("selectedItem",haxe_ui_containers__$TableView_SelectedItemBehaviour);
		this.behaviours.register("selectedIndices",haxe_ui_containers__$TableView_SelectedIndicesBehaviour);
		this.behaviours.register("selectedItems",haxe_ui_containers__$TableView_SelectedItemsBehaviour);
		this.behaviours.register("selectionMode",haxe_ui_containers__$TableView_SelectionModeBehaviour,haxe_ui_util_Variant.fromString("one-item"));
		this.behaviours.register("longPressSelectionTime",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util_Variant.fromInt(500));
		this.behaviours.register("header",haxe_ui_containers__$TableView_GetHeader);
		this.behaviours.register("clearContents",haxe_ui_containers__$TableView_ClearTable);
		this.behaviours.register("addColumn",haxe_ui_containers__$TableView_AddColumn);
		this.behaviours.register("removeColumn",haxe_ui_containers__$TableView_RemoveColumn);
	}
	,get_dataSource: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toDataSource(this.behaviours.get("dataSource"));
	}
	,set_dataSource: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("dataSource",haxe_ui_util_Variant.fromDataSource(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"dataSource"));
		return value;
	}
	,get_itemWidth: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("itemWidth"));
	}
	,set_itemWidth: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("itemWidth",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"itemWidth"));
		return value;
	}
	,get_itemHeight: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("itemHeight"));
	}
	,set_itemHeight: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("itemHeight",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"itemHeight"));
		return value;
	}
	,get_itemCount: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toInt(this.behaviours.get("itemCount"));
	}
	,set_itemCount: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("itemCount",haxe_ui_util_Variant.fromInt(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"itemCount"));
		return value;
	}
	,get_variableItemSize: function() {
		if(this.behaviours == null) {
			return false;
		}
		return haxe_ui_util_Variant.toBool(this.behaviours.get("variableItemSize"));
	}
	,set_variableItemSize: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("variableItemSize",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"variableItemSize"));
		return value;
	}
	,get_selectedIndex: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toInt(this.behaviours.get("selectedIndex"));
	}
	,set_selectedIndex: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("selectedIndex",haxe_ui_util_Variant.fromInt(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"selectedIndex"));
		return value;
	}
	,get_selectedItem: function() {
		return this.behaviours.getDynamic("selectedItem");
	}
	,set_selectedItem: function(value) {
		this.behaviours.setDynamic("selectedItem",value);
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"selectedItem"));
		return value;
	}
	,get_selectedIndices: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toArray(this.behaviours.get("selectedIndices"));
	}
	,set_selectedIndices: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("selectedIndices",haxe_ui_util_Variant.fromArray(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"selectedIndices"));
		return value;
	}
	,get_selectedItems: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toArray(this.behaviours.get("selectedItems"));
	}
	,set_selectedItems: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("selectedItems",haxe_ui_util_Variant.fromArray(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"selectedItems"));
		return value;
	}
	,get_selectionMode: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("selectionMode"));
	}
	,set_selectionMode: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("selectionMode",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"selectionMode"));
		return value;
	}
	,get_longPressSelectionTime: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toInt(this.behaviours.get("longPressSelectionTime"));
	}
	,set_longPressSelectionTime: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("longPressSelectionTime",haxe_ui_util_Variant.fromInt(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"longPressSelectionTime"));
		return value;
	}
	,get_header: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toComponent(this.behaviours.get("header"));
	}
	,set_header: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("header",haxe_ui_util_Variant.fromComponent(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"header"));
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_ScrollView.prototype.cloneComponent.call(this);
		if(this.get_itemRendererClass() != null) {
			c.set_itemRendererClass(this.get_itemRendererClass());
		}
		if(this.get_itemRenderer() != null) {
			c.set_itemRenderer(this.get_itemRenderer());
		}
		if(this.get_dataSource() != null) {
			c.set_dataSource(this.get_dataSource());
		}
		c.set_itemWidth(this.get_itemWidth());
		c.set_itemHeight(this.get_itemHeight());
		c.set_itemCount(this.get_itemCount());
		c.set_variableItemSize(this.get_variableItemSize());
		c.set_selectedIndex(this.get_selectedIndex());
		if(this.get_selectedItem() != null) {
			c.set_selectedItem(this.get_selectedItem());
		}
		if(this.get_selectedIndices() != null) {
			c.set_selectedIndices(this.get_selectedIndices());
		}
		if(this.get_selectedItems() != null) {
			c.set_selectedItems(this.get_selectedItems());
		}
		if(this.get_selectionMode() != null) {
			c.set_selectionMode(this.get_selectionMode());
		}
		c.set_longPressSelectionTime(this.get_longPressSelectionTime());
		if(this.get_header() != null) {
			c.set_header(this.get_header());
		}
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_TableView();
	}
	,__class__: haxe_ui_containers_TableView
	,__properties__: $extend(haxe_ui_containers_ScrollView.prototype.__properties__,{set_header:"set_header",get_header:"get_header",set_longPressSelectionTime:"set_longPressSelectionTime",get_longPressSelectionTime:"get_longPressSelectionTime",set_selectionMode:"set_selectionMode",get_selectionMode:"get_selectionMode",set_selectedItems:"set_selectedItems",get_selectedItems:"get_selectedItems",set_selectedIndices:"set_selectedIndices",get_selectedIndices:"get_selectedIndices",set_selectedItem:"set_selectedItem",get_selectedItem:"get_selectedItem",set_selectedIndex:"set_selectedIndex",get_selectedIndex:"get_selectedIndex",set_variableItemSize:"set_variableItemSize",get_variableItemSize:"get_variableItemSize",set_itemCount:"set_itemCount",get_itemCount:"get_itemCount",set_itemHeight:"set_itemHeight",get_itemHeight:"get_itemHeight",set_itemWidth:"set_itemWidth",get_itemWidth:"get_itemWidth",set_dataSource:"set_dataSource",get_dataSource:"get_dataSource",set_onSortChanged:"set_onSortChanged",set_onComponentEvent:"set_onComponentEvent",set_itemRenderer:"set_itemRenderer",get_itemRenderer:"get_itemRenderer",set_itemRendererClass:"set_itemRendererClass",get_itemRendererClass:"get_itemRendererClass"})
});
var haxe_ui_core_ItemRenderer = function() {
	this._fieldList = null;
	this.itemIndex = -1;
	this._allowHover = true;
	this.autoRegisterInteractiveEvents = true;
	haxe_ui_containers_Box.call(this);
	this.registerEvent("mouseover",$bind(this,this._onItemMouseOver));
	this.registerEvent("mouseout",$bind(this,this._onItemMouseOut));
	this.registerEvent("mousedown",$bind(this,this._onItemMouseDown));
	this.registerEvent("mouseup",$bind(this,this._onItemMouseUp));
};
$hxClasses["haxe.ui.core.ItemRenderer"] = haxe_ui_core_ItemRenderer;
haxe_ui_core_ItemRenderer.__name__ = "haxe.ui.core.ItemRenderer";
haxe_ui_core_ItemRenderer.__super__ = haxe_ui_containers_Box;
haxe_ui_core_ItemRenderer.prototype = $extend(haxe_ui_containers_Box.prototype,{
	autoRegisterInteractiveEvents: null
	,_onItemMouseOver: function(event) {
		this.addClass(":hover");
	}
	,_onItemMouseOut: function(event) {
		this.removeClass(":hover");
	}
	,_onItemMouseDown: function(event) {
		this.addClass(":down");
	}
	,_onItemMouseUp: function(event) {
		this.removeClass(":down");
	}
	,_allowHover: null
	,get_allowHover: function() {
		return this._allowHover;
	}
	,set_allowHover: function(value) {
		if(this._allowHover == value) {
			return value;
		}
		this._allowHover = value;
		if(this._allowHover == true) {
			this.registerEvent("mouseover",$bind(this,this._onItemMouseOver));
			this.registerEvent("mouseout",$bind(this,this._onItemMouseOut));
		} else {
			this.unregisterEvent("mouseover",$bind(this,this._onItemMouseOver));
			this.unregisterEvent("mouseout",$bind(this,this._onItemMouseOut));
		}
		return value;
	}
	,_data: null
	,get_data: function() {
		return this._data;
	}
	,set_data: function(value) {
		this._data = value;
		this.invalidateComponent("data",false);
		return value;
	}
	,itemIndex: null
	,_fieldList: null
	,validateComponentData: function() {
		if(this._data != null && (this._fieldList == null || this._fieldList.length == 0)) {
			var _g = Type.typeof(this._data);
			switch(_g._hx_index) {
			case 4:
				if(typeof(this._data) == "string" == false) {
					var fieldList = Reflect.fields(this._data);
					if(js_Boot.getClass(this._data) != null) {
						var instanceFields = Type.getInstanceFields(js_Boot.getClass(this._data));
						var _g1 = 0;
						while(_g1 < instanceFields.length) {
							var i = instanceFields[_g1];
							++_g1;
							if(fieldList.indexOf(i) == -1 && Reflect.isFunction(Reflect.getProperty(this._data,i)) == false) {
								fieldList.push(i);
							} else if(StringTools.startsWith(i,"get_") && fieldList.indexOf(HxOverrides.substr(i,4,null)) == -1 && Reflect.isFunction(Reflect.getProperty(this._data,i)) == true) {
								fieldList.push(HxOverrides.substr(i,4,null));
							}
						}
						this._fieldList = fieldList;
					}
				} else {
					this._fieldList = ["text"];
				}
				break;
			case 6:
				var _g1 = _g.c;
				if(typeof(this._data) == "string" == false) {
					var fieldList = Reflect.fields(this._data);
					if(js_Boot.getClass(this._data) != null) {
						var instanceFields = Type.getInstanceFields(js_Boot.getClass(this._data));
						var _g = 0;
						while(_g < instanceFields.length) {
							var i = instanceFields[_g];
							++_g;
							if(fieldList.indexOf(i) == -1 && Reflect.isFunction(Reflect.getProperty(this._data,i)) == false) {
								fieldList.push(i);
							} else if(StringTools.startsWith(i,"get_") && fieldList.indexOf(HxOverrides.substr(i,4,null)) == -1 && Reflect.isFunction(Reflect.getProperty(this._data,i)) == true) {
								fieldList.push(HxOverrides.substr(i,4,null));
							}
						}
						this._fieldList = fieldList;
					}
				} else {
					this._fieldList = ["text"];
				}
				break;
			default:
				this._fieldList = ["text"];
			}
		}
		this.updateValues(this._data,this._fieldList);
		if(this.autoRegisterInteractiveEvents) {
			var components = this.findComponents(null,haxe_ui_core_InteractiveComponent);
			var _g = 0;
			while(_g < components.length) {
				var c = components[_g];
				++_g;
				if(c.hasEvent("click",$bind(this,this.onItemClick)) == false) {
					c.registerEvent("click",$bind(this,this.onItemClick));
				}
				if(c.hasEvent("change",$bind(this,this.onItemChange)) == false) {
					c.registerEvent("change",$bind(this,this.onItemChange));
				}
			}
		}
		this.onDataChanged(this._data);
	}
	,onDataChanged: function(data) {
		this._data = data;
	}
	,onItemChange: function(event) {
		if(this.itemIndex < 0) {
			return;
		}
		var v = event.target.get_value();
		if(this._data != null && event.target.get_id() != null) {
			Reflect.setProperty(this._data,event.target.get_id(),v);
		}
		var e = new haxe_ui_events_ItemEvent("itemcomponentevent");
		e.bubble = true;
		e.source = event.target;
		e.sourceEvent = event;
		e.itemIndex = this.itemIndex;
		e.data = this._data;
		this.dispatch(e);
		var e2 = new haxe_ui_events_ItemEvent("itemcomponentchangeevent");
		e2.bubble = true;
		e2.source = event.target;
		e2.sourceEvent = event;
		e2.itemIndex = this.itemIndex;
		e2.data = this._data;
		this.dispatch(e2);
	}
	,onItemClick: function(event) {
		if(this.itemIndex < 0) {
			return;
		}
		var e = new haxe_ui_events_ItemEvent("itemcomponentevent");
		e.bubble = true;
		e.source = event.target;
		e.sourceEvent = event;
		e.itemIndex = this.itemIndex;
		e.data = this._data;
		this.dispatch(e);
		var e2 = new haxe_ui_events_ItemEvent("itemcomponentclickevent");
		e2.bubble = true;
		e2.source = event.target;
		e2.sourceEvent = event;
		e2.itemIndex = this.itemIndex;
		e2.data = this._data;
		this.dispatch(e2);
	}
	,updateValues: function(value,fieldList) {
		if(fieldList == null) {
			fieldList = Reflect.fields(value);
		}
		var valueObject = null;
		var _g = Type.typeof(value);
		switch(_g._hx_index) {
		case 4:
			if(typeof(value) == "string" == false) {
				valueObject = value;
			} else {
				valueObject = { text : value};
			}
			break;
		case 6:
			var _g1 = _g.c;
			if(typeof(value) == "string" == false) {
				valueObject = value;
			} else {
				valueObject = { text : value};
			}
			break;
		default:
			valueObject = { text : value};
		}
		var _g = 0;
		while(_g < fieldList.length) {
			var f = fieldList[_g];
			++_g;
			var v = Reflect.getProperty(valueObject,f);
			var c = this.findComponent(f,null,true);
			if(c != null && v != null) {
				var propValue = haxe_ui_util_TypeConverter.convertTo(v,haxe_ui_core_TypeMap.getTypeInfo(c.get_className(),"value"));
				c.set_value(propValue);
				if(this.autoRegisterInteractiveEvents) {
					if(((c) instanceof haxe_ui_core_InteractiveComponent) || ((c) instanceof haxe_ui_core_ItemRenderer)) {
						if(c.hasEvent("change",$bind(this,this.onItemChange)) == false) {
							c.registerEvent("change",$bind(this,this.onItemChange));
						}
						if(c.hasEvent("click",$bind(this,this.onItemClick)) == false) {
							c.registerEvent("click",$bind(this,this.onItemClick));
						}
					}
				}
				c.show();
			} else if(c != null) {
				c.hide();
			} else if(f != "id" && f != "layout") {
				try {
					Reflect.setProperty(this,f,v);
				} catch( _g1 ) {
					haxe_NativeStackTrace.lastError = _g1;
				}
			} else if(Type.typeof(v) == ValueType.TObject) {
				this.updateValues(v);
			}
		}
	}
	,registerBehaviours: function() {
		haxe_ui_containers_Box.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_Box.prototype.cloneComponent.call(this);
		c.set_allowHover(this.get_allowHover());
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_core_ItemRenderer();
	}
	,__class__: haxe_ui_core_ItemRenderer
	,__properties__: $extend(haxe_ui_containers_Box.prototype.__properties__,{set_data:"set_data",get_data:"get_data",set_allowHover:"set_allowHover",get_allowHover:"get_allowHover"})
});
var haxe_ui_containers__$TableView_CompoundItemRenderer = function() {
	haxe_ui_core_ItemRenderer.call(this);
	this.set_layout(haxe_ui_layouts_LayoutFactory.createFromName("horizontal"));
	this.set_styleString("spacing: 2px;");
	this.removeClass("itemrenderer");
};
$hxClasses["haxe.ui.containers._TableView.CompoundItemRenderer"] = haxe_ui_containers__$TableView_CompoundItemRenderer;
haxe_ui_containers__$TableView_CompoundItemRenderer.__name__ = "haxe.ui.containers._TableView.CompoundItemRenderer";
haxe_ui_containers__$TableView_CompoundItemRenderer.__super__ = haxe_ui_core_ItemRenderer;
haxe_ui_containers__$TableView_CompoundItemRenderer.prototype = $extend(haxe_ui_core_ItemRenderer.prototype,{
	onDataChanged: function(data) {
		var renderers = this.findComponents(null,haxe_ui_core_ItemRenderer);
		var _g = 0;
		while(_g < renderers.length) {
			var r = renderers[_g];
			++_g;
			r.onDataChanged(data);
		}
	}
	,_onItemMouseOver: function(event) {
		this.addClass(":hover");
		var _g = 0;
		var _g1 = this.findComponents(null,haxe_ui_core_ItemRenderer);
		while(_g < _g1.length) {
			var i = _g1[_g];
			++_g;
			i.addClass(":hover");
		}
	}
	,_onItemMouseOut: function(event) {
		this.removeClass(":hover");
		var _g = 0;
		var _g1 = this.findComponents(null,haxe_ui_core_ItemRenderer);
		while(_g < _g1.length) {
			var i = _g1[_g];
			++_g;
			i.removeClass(":hover");
		}
	}
	,_onItemMouseDown: function(event) {
		this.addClass(":down");
		var _g = 0;
		var _g1 = this.findComponents(null,haxe_ui_core_ItemRenderer);
		while(_g < _g1.length) {
			var i = _g1[_g];
			++_g;
			i.addClass(":down");
		}
	}
	,_onItemMouseUp: function(event) {
		this.removeClass(":down");
		var _g = 0;
		var _g1 = this.findComponents(null,haxe_ui_core_ItemRenderer);
		while(_g < _g1.length) {
			var i = _g1[_g];
			++_g;
			i.removeClass(":down");
		}
	}
	,registerBehaviours: function() {
		haxe_ui_core_ItemRenderer.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_ItemRenderer.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_containers__$TableView_CompoundItemRenderer();
	}
	,__class__: haxe_ui_containers__$TableView_CompoundItemRenderer
});
var haxe_ui_containers__$TableView_Events = function(tableview) {
	haxe_ui_containers_ScrollViewEvents.call(this,tableview);
	this._tableview = tableview;
};
$hxClasses["haxe.ui.containers._TableView.Events"] = haxe_ui_containers__$TableView_Events;
haxe_ui_containers__$TableView_Events.__name__ = "haxe.ui.containers._TableView.Events";
haxe_ui_containers__$TableView_Events.__super__ = haxe_ui_containers_ScrollViewEvents;
haxe_ui_containers__$TableView_Events.prototype = $extend(haxe_ui_containers_ScrollViewEvents.prototype,{
	_tableview: null
	,register: function() {
		haxe_ui_containers_ScrollViewEvents.prototype.register.call(this);
		this.registerEvent("scrollchange",$bind(this,this.onScrollChange));
		this.registerEvent("renderercreated",$bind(this,this.onRendererCreated));
		this.registerEvent("rendererdestroyed",$bind(this,this.onRendererDestroyed));
	}
	,unregister: function() {
		haxe_ui_containers_ScrollViewEvents.prototype.unregister.call(this);
		this.unregisterEvent("scrollchange",$bind(this,this.onScrollChange));
		this.unregisterEvent("renderercreated",$bind(this,this.onRendererCreated));
		this.unregisterEvent("rendererdestroyed",$bind(this,this.onRendererDestroyed));
	}
	,onScrollChange: function(e) {
		if(this._tableview.get_virtual()) {
			var _this = this._tableview;
			if(!(_this._layout == null || _this._layoutLocked == true)) {
				_this.invalidateComponent("layout",false);
			}
		}
		var header = this._tableview.findComponent(null,haxe_ui_containers_Header,true);
		if(header == null) {
			return;
		}
		var vscroll = this._tableview.findComponent(null,haxe_ui_components_VerticalScroll);
		if(vscroll != null && vscroll.get_hidden() == false) {
			header.addClass("scrolling");
			header.invalidateComponent(null,true);
		} else {
			header.removeClass("scrolling");
			header.invalidateComponent(null,true);
		}
		var usableWidth = this._tableview.get_layout().get_usableWidth();
		var rc = new haxe_ui_geom_Rectangle(this._tableview.get_hscrollPos(),1,usableWidth,header.get_height());
		header.set_componentClipRect(rc);
	}
	,onRendererCreated: function(e) {
		var instance = js_Boot.__cast(e.data , haxe_ui_core_ItemRenderer);
		instance.registerEvent("mousedown",$bind(this,this.onRendererMouseDown));
		instance.registerEvent("click",$bind(this,this.onRendererClick));
		instance.registerEvent("rightclick",$bind(this,this.onRendererClick));
		if(this._tableview.get_selectedIndices().indexOf(instance.itemIndex) != -1) {
			var builder = js_Boot.__cast(this._tableview._compositeBuilder , haxe_ui_containers__$TableView_Builder);
			builder.addItemRendererClass(instance,":selected");
		}
	}
	,onRendererDestroyed: function(e) {
		var instance = js_Boot.__cast(e.data , haxe_ui_core_ItemRenderer);
		instance.unregisterEvent("mousedown",$bind(this,this.onRendererMouseDown));
		instance.unregisterEvent("click",$bind(this,this.onRendererClick));
		instance.unregisterEvent("rightclick",$bind(this,this.onRendererClick));
		if(this._tableview.get_selectedIndices().indexOf(instance.itemIndex) != -1) {
			var builder = js_Boot.__cast(this._tableview._compositeBuilder , haxe_ui_containers__$TableView_Builder);
			builder.addItemRendererClass(instance,":selected",false);
		}
	}
	,onRendererMouseDown: function(e) {
		if(this._tableview.get_selectionMode() == "multiple-long-press") {
			if(this._tableview.get_selectedIndices().length == 0) {
				this.startLongPressSelection(e);
			}
		}
	}
	,startLongPressSelection: function(e) {
		var _gthis = this;
		var timerClick = null;
		var currentMouseX = e.screenX;
		var currentMouseY = e.screenY;
		var renderer = js_Boot.__cast(e.target , haxe_ui_core_ItemRenderer);
		var __onMouseMove = null;
		var __onMouseUp = null;
		var __onMouseClick = null;
		__onMouseMove = function(_e) {
			currentMouseX = _e.screenX;
			currentMouseY = _e.screenY;
		};
		__onMouseUp = function(_e) {
			if(timerClick != null) {
				timerClick.stop();
				timerClick = null;
			}
			renderer.get_screen().unregisterEvent("mousemove",__onMouseMove);
			renderer.get_screen().unregisterEvent("mouseup",__onMouseUp);
		};
		__onMouseClick = function(_e) {
			_e.cancel();
			renderer.unregisterEvent("click",__onMouseClick);
		};
		renderer.get_screen().registerEvent("mousemove",__onMouseMove);
		renderer.get_screen().registerEvent("mouseup",__onMouseUp);
		timerClick = haxe_Timer.delay(function() {
			if(timerClick != null) {
				timerClick = null;
				var timerClick1;
				if(renderer.hitTest(currentMouseX,currentMouseY)) {
					var x1 = e.screenX;
					var y1 = e.screenY;
					timerClick1 = Math.sqrt((x1 - currentMouseX) * (x1 - currentMouseX) + (y1 - currentMouseY) * (y1 - currentMouseY)) < 2 * haxe_ui_Toolkit.pixelsPerRem;
				} else {
					timerClick1 = false;
				}
				if(timerClick1) {
					_gthis.toggleSelection(renderer);
					renderer.registerEvent("click",__onMouseClick,1);
				}
			}
		},this._tableview.get_longPressSelectionTime());
	}
	,onContainerEventsStatusChanged: function() {
		haxe_ui_containers_ScrollViewEvents.prototype.onContainerEventsStatusChanged.call(this);
		if(this._containerEventsPaused == true) {
			this._tableview.findComponent("tableview-contents",haxe_ui_core_Component,true,"css").removeClass(":hover",true,true);
		} else {
			var tmp = this._lastMousePos != null;
		}
	}
	,onRendererClick: function(e) {
		if(this._containerEventsPaused == true) {
			return;
		}
		var components = e.target.findComponentsUnderPoint(e.screenX,e.screenY);
		var _g = 0;
		while(_g < components.length) {
			var component = components[_g];
			++_g;
			if(((component) instanceof haxe_ui_core_InteractiveComponent) && (js_Boot.__cast(component , haxe_ui_core_InteractiveComponent)).get_allowInteraction() == true) {
				return;
			}
		}
		var renderer = js_Boot.__cast(e.target , haxe_ui_core_ItemRenderer);
		switch(this._tableview.get_selectionMode()) {
		case "disabled":
			break;
		case "multiple-click-modifier-key":case "multiple-modifier-key":
			if(e.ctrlKey == true) {
				this.toggleSelection(renderer);
			} else if(e.shiftKey == true) {
				var selectedIndices = this._tableview.get_selectedIndices();
				var fromIndex = selectedIndices.length > 0 ? selectedIndices[selectedIndices.length - 1] : 0;
				var toIndex = renderer.itemIndex;
				if(fromIndex < toIndex) {
					var _g = 0;
					while(_g < selectedIndices.length) {
						var i = selectedIndices[_g];
						++_g;
						if(i < fromIndex) {
							fromIndex = i;
						}
					}
				} else {
					var tmp = fromIndex;
					fromIndex = toIndex;
					toIndex = tmp;
				}
				this.selectRange(fromIndex,toIndex);
			} else if(this._tableview.get_selectionMode() == "multiple-click-modifier-key") {
				this._tableview.set_selectedIndex(renderer.itemIndex);
			}
			break;
		case "multiple-long-press":
			var selectedIndices = this._tableview.get_selectedIndices();
			if(selectedIndices.length > 0) {
				this.toggleSelection(renderer);
			}
			break;
		case "one-item":
			this._tableview.set_selectedIndex(renderer.itemIndex);
			break;
		case "one-item-repeated":
			this._tableview.set_selectedIndices([renderer.itemIndex]);
			break;
		default:
		}
	}
	,toggleSelection: function(renderer) {
		var itemIndex = renderer.itemIndex;
		var selectedIndices = this._tableview.get_selectedIndices().slice();
		var index = selectedIndices.indexOf(itemIndex);
		if(index == -1) {
			selectedIndices.push(itemIndex);
		} else {
			selectedIndices.splice(index,1);
		}
		this._tableview.set_selectedIndices(selectedIndices);
	}
	,selectRange: function(fromIndex,toIndex) {
		var tmp = this._tableview;
		var _g = [];
		var _g1 = fromIndex;
		var _g2 = toIndex + 1;
		while(_g1 < _g2) {
			var i = _g1++;
			_g.push(i);
		}
		tmp.set_selectedIndices(_g);
	}
	,__class__: haxe_ui_containers__$TableView_Events
});
var haxe_ui_containers__$TableView_Builder = function(tableview) {
	haxe_ui_containers_ScrollViewBuilder.call(this,tableview);
	this._tableview = tableview;
};
$hxClasses["haxe.ui.containers._TableView.Builder"] = haxe_ui_containers__$TableView_Builder;
haxe_ui_containers__$TableView_Builder.__name__ = "haxe.ui.containers._TableView.Builder";
haxe_ui_containers__$TableView_Builder.__super__ = haxe_ui_containers_ScrollViewBuilder;
haxe_ui_containers__$TableView_Builder.prototype = $extend(haxe_ui_containers_ScrollViewBuilder.prototype,{
	_tableview: null
	,_header: null
	,create: function() {
		this.createContentContainer(this._tableview.get_virtual() ? "absolute" : "vertical");
	}
	,onInitialize: function() {
		if(this._header == null) {
			return;
		}
		if(this._tableview.get_itemRenderer() == null) {
			this.buildDefaultRenderer();
		} else {
			this.fillExistingRenderer();
		}
	}
	,onReady: function() {
		if(this._header == null) {
			return;
		}
		if(this._tableview.get_itemRenderer() == null) {
			this.buildDefaultRenderer();
		} else {
			this.fillExistingRenderer();
		}
		var _this = this._component;
		if(!(_this._layout == null || _this._layoutLocked == true)) {
			_this.invalidateComponent("layout",false);
		}
	}
	,createContentContainer: function(layoutName) {
		if(this._contents == null) {
			haxe_ui_containers_ScrollViewBuilder.prototype.createContentContainer.call(this,layoutName);
			this._contents.addClass("tableview-contents");
		}
	}
	,addComponent: function(child) {
		var r = null;
		if(((child) instanceof haxe_ui_core_ItemRenderer)) {
			var itemRenderer = this._tableview.get_itemRenderer();
			if(itemRenderer == null) {
				itemRenderer = new haxe_ui_containers__$TableView_CompoundItemRenderer();
				this._tableview.set_itemRenderer(itemRenderer);
			}
			itemRenderer.addComponent(child);
			return child;
		} else if(((child) instanceof haxe_ui_containers_Header)) {
			this._header = js_Boot.__cast(child , haxe_ui_containers_Header);
			this._header.registerEvent("componentadded",$bind(this,this.onColumnAdded));
			this._header.registerEvent("sortchanged",$bind(this,this.onSortChanged));
			r = null;
		} else {
			r = haxe_ui_containers_ScrollViewBuilder.prototype.addComponent.call(this,child);
		}
		return r;
	}
	,onColumnAdded: function(e) {
		if(this._tableview.get_itemRenderer() == null) {
			this.buildDefaultRenderer();
		} else {
			this.fillExistingRenderer();
		}
		var _this = this._component;
		if(!(_this._layout == null || _this._layoutLocked == true)) {
			_this.invalidateComponent("layout",false);
		}
	}
	,onSortChanged: function(e) {
		this._tableview.dispatch(e);
		if(e.canceled == false) {
			var column = js_Boot.__cast(e.target , haxe_ui_components_Column);
			var field = column.get_id();
			if(column.sortField != null) {
				field = column.sortField;
			}
			this._tableview.get_dataSource().sort(field,e.direction);
		}
	}
	,removeComponent: function(child,dispose,invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if(dispose == null) {
			dispose = true;
		}
		if(((child) instanceof haxe_ui_containers_Header) == true) {
			this._header = null;
			return null;
		}
		return haxe_ui_containers_ScrollViewBuilder.prototype.removeComponent.call(this,child,dispose,invalidate);
	}
	,createRenderer: function(id) {
		var itemRenderer = null;
		if(this._tableview.get_itemRendererClass() == null) {
			itemRenderer = new haxe_ui_core_ItemRenderer();
		} else {
			itemRenderer = Type.createInstance(this._tableview.get_itemRendererClass(),[]);
		}
		if((itemRenderer._children == null ? [] : itemRenderer._children).length == 0) {
			var label = new haxe_ui_components_Label();
			label.set_id(id);
			label.set_percentWidth(100);
			label.set_verticalAlign("center");
			itemRenderer.addComponent(label);
		}
		return itemRenderer;
	}
	,buildDefaultRenderer: function() {
		var r = new haxe_ui_containers__$TableView_CompoundItemRenderer();
		if(this._header != null) {
			var _g = 0;
			var _g1 = this._header.findComponents(null,haxe_ui_components_Column);
			while(_g < _g1.length) {
				var column = _g1[_g];
				++_g;
				if(column.get_id() == null) {
					continue;
				}
				var itemRenderer = this.createRenderer(column.get_id());
				if(itemRenderer.get_id() == null) {
					itemRenderer.set_id(column.get_id() + "Renderer");
				}
				r.addComponent(itemRenderer);
			}
		}
		this._tableview.set_itemRenderer(r);
	}
	,fillExistingRenderer: function() {
		var i = 0;
		var _g = 0;
		var _g1 = this._header.findComponents(null,haxe_ui_components_Column);
		while(_g < _g1.length) {
			var column = _g1[_g];
			++_g;
			if(column.get_id() == null) {
				continue;
			}
			var existing = this._tableview.get_itemRenderer().findComponent(column.get_id(),haxe_ui_core_ItemRenderer,true);
			if(existing == null) {
				var temp = this._tableview.get_itemRenderer().findComponent(column.get_id(),haxe_ui_core_Component,true);
				if(temp != null) {
					if(((temp) instanceof haxe_ui_core_ItemRenderer)) {
						existing = js_Boot.__cast(temp , haxe_ui_core_ItemRenderer);
					} else {
						existing = temp.findAncestor(null,haxe_ui_core_ItemRenderer);
					}
					this._tableview.get_itemRenderer().setComponentIndex(existing,i);
				} else {
					var itemRenderer = this.createRenderer(column.get_id());
					this._tableview.get_itemRenderer().addComponentAt(itemRenderer,i);
				}
			} else {
				this._tableview.get_itemRenderer().setComponentIndex(existing,i);
			}
			++i;
		}
	}
	,verticalConstraintModifier: function() {
		if(this._header == null) {
			return 0;
		}
		return this._header.get_height();
	}
	,onVirtualChanged: function() {
		this._contents.set_layoutName(this._tableview.get_virtual() ? "absolute" : "vertical");
	}
	,get_virtualHorizontal: function() {
		return false;
	}
	,addItemRendererClass: function(child,className,add) {
		if(add == null) {
			add = true;
		}
		child.walkComponents(function(c) {
			if(((c) instanceof haxe_ui_core_ItemRenderer)) {
				if(add == true) {
					c.addClass(className);
				} else {
					c.removeClass(className);
				}
			} else {
				c.invalidateComponent("style",false);
			}
			return true;
		});
	}
	,__class__: haxe_ui_containers__$TableView_Builder
});
var haxe_ui_layouts_ScrollViewLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.layouts.ScrollViewLayout"] = haxe_ui_layouts_ScrollViewLayout;
haxe_ui_layouts_ScrollViewLayout.__name__ = "haxe.ui.layouts.ScrollViewLayout";
haxe_ui_layouts_ScrollViewLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_layouts_ScrollViewLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	repositionChildren: function() {
		var contents = this.get_component().findComponent("scrollview-contents",null,false,"css");
		if(contents == null) {
			return;
		}
		var hscroll = this.get_component().findComponent(null,haxe_ui_components_HorizontalScroll,false);
		var vscroll = this.get_component().findComponent(null,haxe_ui_components_VerticalScroll,false);
		var borderSize = this.get_borderSize();
		if(hscroll != null && this.hidden(hscroll) == false) {
			hscroll.moveComponent(this.get_paddingLeft() + borderSize,this.get_component().get_componentHeight() - hscroll.get_componentHeight() - this.get_paddingBottom() + this.marginTop(hscroll) - borderSize);
		}
		if(vscroll != null && this.hidden(vscroll) == false) {
			vscroll.moveComponent(this.get_component().get_componentWidth() - vscroll.get_componentWidth() - this.get_paddingRight() + this.marginLeft(vscroll) - borderSize,this.get_paddingTop() + borderSize);
		}
		var contents = this.get_component().findComponent("scrollview-contents",null,false,"css");
		if(contents != null) {
			contents.moveComponent(this.get_paddingLeft() + borderSize,this.get_paddingTop() + borderSize);
		}
	}
	,resizeChildren: function() {
		haxe_ui_layouts_DefaultLayout.prototype.resizeChildren.call(this);
		var scrollview = js_Boot.__cast(this._component , haxe_ui_containers_ScrollView);
		var hscroll = this.get_component().findComponent(null,haxe_ui_components_HorizontalScroll,false);
		var vscroll = this.get_component().findComponent(null,haxe_ui_components_VerticalScroll,false);
		var usableSize = this.get_usableSize();
		var percentWidth = 100;
		var percentHeight = 100;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child != hscroll && child != vscroll) {
				continue;
			}
			var cx = null;
			var cy = null;
			if(child.get_percentWidth() != null) {
				cx = usableSize.width * child.get_percentWidth() / percentWidth - this.marginLeft(child) - this.marginRight(child);
			}
			if(child.get_percentHeight() != null) {
				cy = usableSize.height * child.get_percentHeight() / percentHeight - this.marginTop(child) - this.marginBottom(child);
			}
			if(this.fixedMinWidth(child) && child.get_percentWidth() != null) {
				percentWidth -= child.get_percentWidth();
			}
			if(this.fixedMinHeight(child) && child.get_percentHeight() != null) {
				percentHeight -= child.get_percentHeight();
			}
			if(scrollview.get_autoHideScrolls() == true) {
				if(child == hscroll && vscroll != null && vscroll.get_hidden() == false) {
					cx -= vscroll.get_width();
				} else if(child == vscroll && hscroll != null && hscroll.get_hidden() == false) {
					cy -= hscroll.get_height();
				}
			}
			child.resizeComponent(cx,cy);
		}
	}
	,get_usableSize: function() {
		var size = haxe_ui_layouts_DefaultLayout.prototype.get_usableSize.call(this);
		var hscroll = this.get_component().findComponent(null,haxe_ui_components_HorizontalScroll,false);
		var vscroll = this.get_component().findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(hscroll != null && hscroll.get_includeInLayout() == true && this.hidden(hscroll) == false) {
			size.height -= hscroll.get_componentHeight() - this.marginTop(hscroll);
		}
		if(vscroll != null && vscroll.get_includeInLayout() == true && this.hidden(vscroll) == false) {
			size.width -= vscroll.get_componentWidth() - this.marginLeft(vscroll);
		}
		if((js_Boot.__cast(this.get_component() , haxe_ui_containers_ScrollView)).get_native() == true || this._component.get_isNativeScroller() == true) {
			var contents = this.get_component().findComponent("scrollview-contents",null,false,"css");
			if(contents != null) {
				if(contents.get_componentWidth() > size.width) {
					size.height -= haxe_ui_core_Platform.get_hscrollHeight();
				}
				if(contents.get_componentHeight() > size.height) {
					size.width -= haxe_ui_core_Platform.get_vscrollWidth();
				}
			}
		}
		var borderSize = this.get_borderSize();
		size.width -= borderSize * 2;
		size.height -= borderSize * 2;
		return size;
	}
	,calcAutoSize: function(exclusions) {
		var hscroll = this.get_component().findComponent(null,haxe_ui_components_HorizontalScroll,false);
		var vscroll = this.get_component().findComponent(null,haxe_ui_components_VerticalScroll,false);
		var size = haxe_ui_layouts_DefaultLayout.prototype.calcAutoSize.call(this,[hscroll,vscroll]);
		if(hscroll != null && hscroll.get_hidden() == false) {
			size.height += hscroll.get_componentHeight();
		}
		if(vscroll != null && vscroll.get_hidden() == false) {
			size.width += vscroll.get_componentWidth();
		}
		if((js_Boot.__cast(this.get_component() , haxe_ui_containers_ScrollView)).get_native() == true || this._component.get_isNativeScroller() == true) {
			var contents = this.get_component().findComponent("scrollview-contents",null,false,"css");
			if(contents != null) {
				if(contents.get_width() > this.get_component().get_width()) {
					size.height += haxe_ui_core_Platform.get_hscrollHeight();
				}
				if(contents.get_height() > this.get_component().get_height()) {
					size.width += haxe_ui_core_Platform.get_vscrollWidth();
				}
			}
		}
		size.width += this.get_borderSize() * 2;
		size.height += this.get_borderSize() * 2;
		return size;
	}
	,__class__: haxe_ui_layouts_ScrollViewLayout
});
var haxe_ui_layouts_VirtualLayout = function() {
	this._lastItemRenderer = null;
	this._firstPass = true;
	this._sizeCache = [];
	this._rendererPool = [];
	this._lastIndex = -1;
	this._firstIndex = -1;
	haxe_ui_layouts_ScrollViewLayout.call(this);
};
$hxClasses["haxe.ui.layouts.VirtualLayout"] = haxe_ui_layouts_VirtualLayout;
haxe_ui_layouts_VirtualLayout.__name__ = "haxe.ui.layouts.VirtualLayout";
haxe_ui_layouts_VirtualLayout.__super__ = haxe_ui_layouts_ScrollViewLayout;
haxe_ui_layouts_VirtualLayout.prototype = $extend(haxe_ui_layouts_ScrollViewLayout.prototype,{
	_firstIndex: null
	,_lastIndex: null
	,_rendererPool: null
	,_sizeCache: null
	,contents: null
	,get_contents: function() {
		if(this.contents == null) {
			this.contents = this.findComponent("scrollview-contents",null,false,"css");
		}
		return this.contents;
	}
	,get_dataSource: function() {
		return (js_Boot.__cast(this._component , haxe_ui_core_IDataComponent)).get_dataSource();
	}
	,itemWidth: null
	,get_itemWidth: function() {
		var comp = js_Boot.__cast(this._component , haxe_ui_containers_IVirtualContainer);
		if(comp.get_itemWidth() > 0) {
			return comp.get_itemWidth();
		}
		var _this = this.get_contents();
		var childComponents = _this._children == null ? [] : _this._children;
		var result = 0;
		if(childComponents.length > 0) {
			result = childComponents[0].get_width();
			if(result <= 0) {
				childComponents[0].syncComponentValidation();
				result = childComponents[0].get_width();
			}
		}
		if(result > 0) {
			comp.set_itemWidth(result);
		} else {
			result = 1;
		}
		return result;
	}
	,_firstPass: null
	,itemHeight: null
	,get_itemHeight: function() {
		var comp = js_Boot.__cast(this._component , haxe_ui_containers_IVirtualContainer);
		if(comp.get_itemHeight() > 0) {
			return comp.get_itemHeight();
		}
		var _this = this.get_contents();
		var childComponents = _this._children == null ? [] : _this._children;
		var result = 0;
		if(childComponents.length > 0) {
			result = childComponents[0].get_height();
			if(result <= 0) {
				childComponents[0].syncComponentValidation();
				result = childComponents[0].get_height();
			}
		}
		if(result <= 0) {
			result = 25;
		} else if(comp.get_virtual() == true) {
			if(this._firstPass == false) {
				comp.set_itemHeight(result);
				haxe_Log.trace("NOTE: since no itemHeight was not specified it was guessed as " + result + "px",{ fileName : "haxe/ui/layouts/VirtualLayout.hx", lineNumber : 87, className : "haxe.ui.layouts.VirtualLayout", methodName : "get_itemHeight"});
			}
			if(this._firstPass == true) {
				this._firstPass = false;
			}
		}
		return result;
	}
	,itemCount: null
	,get_itemCount: function() {
		var comp = js_Boot.__cast(this._component , haxe_ui_containers_IVirtualContainer);
		if(comp.get_itemCount() >= 0) {
			return comp.get_itemCount();
		} else {
			return 0;
		}
	}
	,refresh: function() {
		this.refreshData();
		haxe_ui_layouts_ScrollViewLayout.prototype.refresh.call(this);
	}
	,refreshData: function() {
		if(this.get_dataSource() == null) {
			return;
		}
		var comp = js_Boot.__cast(this._component , haxe_ui_containers_IVirtualContainer);
		if(comp.get_virtual() == false) {
			this.refreshNonVirtualData();
		} else {
			this.refreshVirtualData();
		}
	}
	,_lastItemRenderer: null
	,refreshNonVirtualData: function() {
		var comp = js_Boot.__cast(this._component , haxe_ui_containers_IVirtualContainer);
		if(comp.get_itemRenderer() != this._lastItemRenderer) {
			this._lastItemRenderer = comp.get_itemRenderer();
			this.get_contents().removeAllComponents();
		}
		var dataSource = this.get_dataSource();
		var contents = this.get_contents();
		var _g = 0;
		var _g1 = dataSource.get_size();
		while(_g < _g1) {
			var n = _g++;
			var data = dataSource.get(n);
			var item = null;
			if(n < (contents._children == null ? [] : contents._children).length) {
				item = js_Boot.__cast((contents._children == null ? [] : contents._children)[n] , haxe_ui_core_ItemRenderer);
				if(item.get_data() == data) {
					item.invalidateComponent("data",false);
					continue;
				}
				var cls = this.itemClass(n,data);
				if(!js_Boot.__instanceof(item,cls)) {
					this.removeRenderer(item);
					item = this.getRenderer(cls,n);
					contents.addComponentAt(item,n);
				}
			} else {
				var cls1 = this.itemClass(n,data);
				item = this.getRenderer(cls1,n);
				contents.addComponent(item);
			}
			var className = n % 2 == 0 ? "even" : "odd";
			if(item.classes.indexOf(className) == -1) {
				var inverseClassName = n % 2 == 0 ? "odd" : "even";
				item.removeClass(inverseClassName);
				item.addClass(className);
			}
			item.itemIndex = n;
			item.set_data(data);
		}
		while(dataSource.get_size() < (contents._children == null ? [] : contents._children).length) {
			var item = js_Boot.__cast((contents._children == null ? [] : contents._children)[(contents._children == null ? [] : contents._children).length - 1] , haxe_ui_core_ItemRenderer);
			this.removeRenderer(item);
		}
	}
	,refreshVirtualData: function() {
		var comp = js_Boot.__cast(this._component , haxe_ui_containers_IVirtualContainer);
		if(comp.get_itemRenderer() != this._lastItemRenderer) {
			this._lastItemRenderer = comp.get_itemRenderer();
			this.get_contents().removeAllComponents();
			this._rendererPool = [];
		}
		this.removeInvisibleRenderers();
		this.calculateRangeVisible();
		this.updateScroll();
		var dataSource = this.get_dataSource();
		var i = 0;
		var _g = this._firstIndex;
		var _g1 = this._lastIndex;
		while(_g < _g1) {
			var n = _g++;
			var data = dataSource.get(n);
			var item = null;
			var cls = this.itemClass(n,data);
			var _this = this.get_contents();
			if((_this._children == null ? [] : _this._children).length <= i) {
				item = this.getRenderer(cls,n);
				this.get_contents().addComponent(item);
			} else {
				var _this1 = this.get_contents();
				item = js_Boot.__cast((_this1._children == null ? [] : _this1._children)[i] , haxe_ui_core_ItemRenderer);
				if(!js_Boot.__instanceof(item,cls)) {
					item = this.getRenderer(cls,n);
					this.get_contents().addComponentAt(item,i);
				} else if(item.itemIndex != n) {
					if(this._component.hasEvent("rendererdestroyed")) {
						this._component.dispatch(new haxe_ui_events_UIEvent("rendererdestroyed",null,item));
					}
					this._component.setComponentIndex(item,i);
					item.itemIndex = n;
					if(this._component.hasEvent("renderercreated")) {
						this._component.dispatch(new haxe_ui_events_UIEvent("renderercreated",null,item));
					}
				}
			}
			var className = n % 2 == 0 ? "even" : "odd";
			if(item.classes.indexOf(className) == -1) {
				var inverseClassName = n % 2 == 0 ? "odd" : "even";
				item.removeClass(inverseClassName);
				item.addClass(className);
			}
			item.set_data(data);
			++i;
		}
		while(true) {
			var _this = this.get_contents();
			if(!((_this._children == null ? [] : _this._children).length > i)) {
				break;
			}
			var _this1 = this.get_contents();
			var tmp = _this1._children == null ? [] : _this1._children;
			var _this2 = this.get_contents();
			this.removeRenderer(js_Boot.__cast(tmp[(_this2._children == null ? [] : _this2._children).length - 1] , haxe_ui_core_ItemRenderer),false);
		}
	}
	,calculateRangeVisible: function() {
	}
	,updateScroll: function() {
	}
	,itemClass: function(index,data) {
		var comp = js_Boot.__cast(this._component , haxe_ui_containers_IVirtualContainer);
		if(comp.get_itemRendererClass() != null) {
			return comp.get_itemRendererClass();
		} else if(comp.get_itemRenderer() != null) {
			return js_Boot.getClass(comp.get_itemRenderer());
		} else {
			return haxe_ui_core_BasicItemRenderer;
		}
	}
	,getRenderer: function(cls,index) {
		var instance = null;
		var comp = js_Boot.__cast(this._component , haxe_ui_containers_IVirtualContainer);
		if(comp.get_virtual() == true) {
			var _g = 0;
			var _g1 = this._rendererPool.length;
			while(_g < _g1) {
				var i = _g++;
				var renderer = this._rendererPool[i];
				if(js_Boot.__instanceof(renderer,cls)) {
					this._rendererPool.splice(i,1);
					instance = renderer;
					break;
				}
			}
		}
		if(instance == null) {
			if(comp.get_itemRenderer() != null && js_Boot.getClass(comp.get_itemRenderer()) == cls) {
				instance = comp.get_itemRenderer().cloneComponent();
				instance.handleVisibility(true);
			} else {
				instance = Type.createInstance(cls,[]);
			}
		}
		instance.itemIndex = index;
		if(this._component.hasEvent("renderercreated")) {
			this._component.dispatch(new haxe_ui_events_UIEvent("renderercreated",null,instance));
		}
		if(this._component.get_hidden() == false) {
			instance.handleVisibility(true);
		}
		return js_Boot.__cast(instance , haxe_ui_core_ItemRenderer);
	}
	,removeRenderer: function(renderer,dispose) {
		if(dispose == null) {
			dispose = true;
		}
		this._component.removeComponent(renderer,dispose);
		var comp = js_Boot.__cast(this._component , haxe_ui_containers_IVirtualContainer);
		if(comp.get_virtual() == true) {
			this._rendererPool.push(js_Boot.__cast(renderer , haxe_ui_core_ItemRenderer));
		}
		if(this._component.hasEvent("rendererdestroyed")) {
			this._component.dispatch(new haxe_ui_events_UIEvent("rendererdestroyed",null,renderer));
		}
		renderer.itemIndex = -1;
	}
	,removeInvisibleRenderers: function() {
		var contents = this.get_contents();
		if(this._firstIndex >= 0) {
			while((contents._children == null ? [] : contents._children).length > 0 && !this.isRendererVisible((contents._children == null ? [] : contents._children)[0])) {
				this.removeRenderer(js_Boot.__cast((contents._children == null ? [] : contents._children)[0] , haxe_ui_core_ItemRenderer),false);
				++this._firstIndex;
			}
		}
		if(this._lastIndex >= 0) {
			while((contents._children == null ? [] : contents._children).length > 0 && !this.isRendererVisible((contents._children == null ? [] : contents._children)[(contents._children == null ? [] : contents._children).length - 1])) {
				this.removeRenderer(js_Boot.__cast((contents._children == null ? [] : contents._children)[(contents._children == null ? [] : contents._children).length - 1] , haxe_ui_core_ItemRenderer),false);
				--this._lastIndex;
			}
		}
	}
	,isRendererVisible: function(renderer) {
		if(renderer == null) {
			return false;
		}
		if(renderer.get_top() < this._component.get_componentHeight() && renderer.get_top() + renderer.get_componentHeight() >= 0 && renderer.get_left() < this._component.get_componentWidth()) {
			return renderer.get_left() + renderer.get_componentWidth() >= 0;
		} else {
			return false;
		}
	}
	,isIndexVisible: function(index) {
		if(index >= this._firstIndex) {
			return index <= this._lastIndex;
		} else {
			return false;
		}
	}
	,__class__: haxe_ui_layouts_VirtualLayout
	,__properties__: $extend(haxe_ui_layouts_ScrollViewLayout.prototype.__properties__,{get_itemCount:"get_itemCount",get_itemHeight:"get_itemHeight",get_itemWidth:"get_itemWidth",get_dataSource:"get_dataSource",get_contents:"get_contents"})
});
var haxe_ui_layouts_VerticalVirtualLayout = function() {
	haxe_ui_layouts_VirtualLayout.call(this);
};
$hxClasses["haxe.ui.layouts.VerticalVirtualLayout"] = haxe_ui_layouts_VerticalVirtualLayout;
haxe_ui_layouts_VerticalVirtualLayout.__name__ = "haxe.ui.layouts.VerticalVirtualLayout";
haxe_ui_layouts_VerticalVirtualLayout.__super__ = haxe_ui_layouts_VirtualLayout;
haxe_ui_layouts_VerticalVirtualLayout.prototype = $extend(haxe_ui_layouts_VirtualLayout.prototype,{
	repositionChildren: function() {
		haxe_ui_layouts_VirtualLayout.prototype.repositionChildren.call(this);
		var comp = js_Boot.__cast(this._component , haxe_ui_containers_IVirtualContainer);
		var itemHeight = this.get_itemHeight();
		var contents = this.get_contents();
		var verticalSpacing = contents.get_layout().get_verticalSpacing();
		if(comp.get_virtual() == true) {
			var n = this._firstIndex;
			if(comp.get_variableItemSize() == true) {
				var pos = -comp.get_vscrollPos();
				var _g = 0;
				var _g1 = this._lastIndex;
				while(_g < _g1) {
					var i = _g++;
					if(i >= this._firstIndex) {
						var c = contents.getComponentAt(i - this._firstIndex);
						c.set_top(pos);
					}
					var size = this._sizeCache[i];
					pos += (size != null && size != 0 ? size : itemHeight) + verticalSpacing;
				}
			} else {
				var _g = 0;
				var _g1 = contents._children == null ? [] : contents._children;
				while(_g < _g1.length) {
					var child = _g1[_g];
					++_g;
					child.set_top(n * (itemHeight + verticalSpacing) - comp.get_vscrollPos());
					++n;
				}
			}
		}
	}
	,verticalConstraintModifier: function() {
		return 0;
	}
	,calculateRangeVisible: function() {
		var comp = js_Boot.__cast(this._component , haxe_ui_containers_IVirtualContainer);
		var verticalSpacing = this.get_contents().get_layout().get_verticalSpacing();
		var itemHeight = this.get_itemHeight();
		var visibleItemsCount = 0;
		var contentsHeight = 0;
		if(this.get_contents().get_autoHeight() == true) {
			var itemCount = this.get_itemCount();
			if(itemCount > 0 || this._component.get_autoHeight() == true) {
				contentsHeight = itemCount * itemHeight - this.verticalConstraintModifier();
			} else {
				contentsHeight = this._component.get_height() - this.verticalConstraintModifier();
			}
		} else {
			contentsHeight = this.get_contents().get_height() - this.verticalConstraintModifier();
		}
		if(contentsHeight > this._component.get_height() - this.verticalConstraintModifier()) {
			contentsHeight = this._component.get_height() - this.verticalConstraintModifier();
		}
		if(comp.get_variableItemSize() == true) {
			var totalSize = 0;
			var requireInvalidation = false;
			var newFirstIndex = -1;
			var _g = 0;
			var _g1 = this.get_dataSource().get_size();
			while(_g < _g1) {
				var i = _g++;
				var size = this._sizeCache[i];
				if(size == null || size == 0) {
					if(i >= this._firstIndex && i <= this._lastIndex) {
						var c = this.get_contents().getComponentAt(i - this._firstIndex);
						if(c != null && c.get_componentHeight() > 0) {
							this._sizeCache[i] = c.get_componentHeight();
							size = c.get_componentHeight();
						} else {
							requireInvalidation = true;
							size = itemHeight;
						}
					} else {
						requireInvalidation = true;
						size = itemHeight;
					}
				}
				size += verticalSpacing;
				if(newFirstIndex == -1) {
					if(totalSize + size > comp.get_vscrollPos()) {
						newFirstIndex = i;
						totalSize += size - comp.get_vscrollPos();
						++visibleItemsCount;
					} else {
						totalSize += size;
					}
				} else if(totalSize + size > contentsHeight) {
					break;
				} else {
					++visibleItemsCount;
					totalSize += size;
				}
			}
			if(requireInvalidation == true) {
				var _this = this._component;
				if(!(_this._layout == null || _this._layoutLocked == true)) {
					_this.invalidateComponent("layout",false);
				}
			}
			this._firstIndex = newFirstIndex;
		} else {
			visibleItemsCount = Math.ceil(contentsHeight / (itemHeight + verticalSpacing));
			this._firstIndex = comp.get_vscrollPos() / (itemHeight + verticalSpacing) | 0;
		}
		if(this._firstIndex < 0) {
			this._firstIndex = 0;
		}
		var rc = new haxe_ui_geom_Rectangle(0,0,this.get_contents().get_width(),contentsHeight - (this.get_paddingTop() + this.get_paddingBottom()) - this.get_borderSize() * 2);
		this.get_contents().set_componentClipRect(rc);
		this._lastIndex = this._firstIndex + visibleItemsCount + 1;
		if(this._lastIndex > this.get_dataSource().get_size()) {
			this._lastIndex = this.get_dataSource().get_size();
		}
	}
	,updateScroll: function() {
		var comp = js_Boot.__cast(this._component , haxe_ui_containers_IVirtualContainer);
		var usableSize = this.get_usableSize();
		var dataSize = this.get_dataSource().get_size();
		var verticalSpacing = this.get_contents().get_layout().get_verticalSpacing();
		var scrollMax = 0;
		var itemHeight = this.get_itemHeight();
		if(comp.get_variableItemSize() == true) {
			scrollMax = -usableSize.height;
			var _g = 0;
			var _g1 = this.get_dataSource().get_size();
			while(_g < _g1) {
				var i = _g++;
				var size = this._sizeCache[i];
				if(size == null || size == 0) {
					size = itemHeight;
				}
				scrollMax += size + verticalSpacing + this.verticalConstraintModifier();
			}
		} else {
			scrollMax = dataSize * itemHeight + (dataSize - 1) * verticalSpacing - usableSize.height + this.verticalConstraintModifier();
		}
		if(scrollMax < 0) {
			scrollMax = 0;
		}
		comp.set_vscrollMax(scrollMax);
		comp.set_vscrollPageSize(usableSize.height / (scrollMax + usableSize.height) * scrollMax);
	}
	,calcAutoSize: function(exclusions) {
		var size = haxe_ui_layouts_VirtualLayout.prototype.calcAutoSize.call(this,exclusions);
		var comp = js_Boot.__cast(this._component , haxe_ui_containers_IVirtualContainer);
		if(comp.get_itemCount() > 0 && this._component.get_autoHeight() == true) {
			var contents = this._component.findComponent("scrollview-contents",null,false);
			var contentsPadding = 0;
			if(contents != null) {
				var layout = contents.get_layout();
				if(layout != null) {
					contentsPadding = layout.get_paddingTop() + layout.get_paddingBottom();
				}
			}
			size.height = this.get_itemHeight() * comp.get_itemCount() + this.get_paddingTop() + this.get_paddingBottom() + contentsPadding + this.get_borderSize() * 2;
		}
		return size;
	}
	,__class__: haxe_ui_layouts_VerticalVirtualLayout
});
var haxe_ui_containers__$TableView_Layout = function() {
	haxe_ui_layouts_VerticalVirtualLayout.call(this);
};
$hxClasses["haxe.ui.containers._TableView.Layout"] = haxe_ui_containers__$TableView_Layout;
haxe_ui_containers__$TableView_Layout.__name__ = "haxe.ui.containers._TableView.Layout";
haxe_ui_containers__$TableView_Layout.__super__ = haxe_ui_layouts_VerticalVirtualLayout;
haxe_ui_containers__$TableView_Layout.prototype = $extend(haxe_ui_layouts_VerticalVirtualLayout.prototype,{
	itemClass: function(index,data) {
		return haxe_ui_containers__$TableView_CompoundItemRenderer;
	}
	,repositionChildren: function() {
		var header = this.findComponent(null,haxe_ui_containers_Header,true);
		if(header == null) {
			return;
		}
		haxe_ui_layouts_VerticalVirtualLayout.prototype.repositionChildren.call(this);
		header.set_left(this.get_paddingLeft() + this.get_borderSize());
		header.set_top(this.get_paddingTop() + this.get_borderSize());
		var vscroll = this._component.findComponent(null,haxe_ui_components_VerticalScroll);
		if(vscroll != null && vscroll.get_hidden() == false) {
			header.addClass("scrolling");
			header.invalidateComponent(null,true);
		} else {
			header.removeClass("scrolling");
			header.invalidateComponent(null,true);
		}
		var rc = new haxe_ui_geom_Rectangle((js_Boot.__cast(this._component , haxe_ui_containers_ScrollView)).get_hscrollPos(),1,this.get_usableWidth(),header.get_height());
		header.set_componentClipRect(rc);
		var data = this.findComponent("tableview-contents",haxe_ui_containers_Box,true,"css");
		if(data != null) {
			var _g = 0;
			var _g1 = data._children == null ? [] : data._children;
			while(_g < _g1.length) {
				var item = _g1[_g];
				++_g;
				var headerChildComponents = header.findComponents(null,haxe_ui_components_Column);
				var _g2 = 0;
				while(_g2 < headerChildComponents.length) {
					var column = headerChildComponents[_g2];
					++_g2;
					if(column.get_id() == null) {
						continue;
					}
					var isLast = headerChildComponents.indexOf(column) == headerChildComponents.length - 1;
					var itemRenderer = item.findComponent(column.get_id(),haxe_ui_core_Component);
					if(itemRenderer != null && ((itemRenderer) instanceof haxe_ui_core_ItemRenderer) == false) {
						itemRenderer = itemRenderer.findAncestor(null,haxe_ui_core_ItemRenderer);
					}
					if(itemRenderer != null) {
						itemRenderer.set_percentWidth(null);
						if(isLast == false) {
							itemRenderer.set_width(column.get_width() - item.get_layout().get_horizontalSpacing());
						} else {
							itemRenderer.set_width(column.get_width());
						}
					}
				}
			}
			var modifier = 0;
			if(header.get_height() > 0) {
				modifier = 1;
			}
			data.set_left(this.get_paddingLeft() + this.get_borderSize());
			data.set_top(header.get_top() + header.get_height() - modifier);
			data.set_componentWidth(header.get_width());
		}
	}
	,resizeChildren: function() {
		var header = this.findComponent(null,haxe_ui_containers_Header,true);
		if(header == null) {
			return;
		}
		haxe_ui_layouts_VerticalVirtualLayout.prototype.resizeChildren.call(this);
	}
	,verticalConstraintModifier: function() {
		var header = this.findComponent(null,haxe_ui_containers_Header,true);
		if(header == null) {
			return 0;
		}
		return header.get_height();
	}
	,calcAutoSize: function(exclusions) {
		var size = haxe_ui_layouts_VerticalVirtualLayout.prototype.calcAutoSize.call(this);
		size.height += 1;
		return size;
	}
	,__class__: haxe_ui_containers__$TableView_Layout
});
var haxe_ui_containers__$TableView_DataSourceBehaviour = function(component) {
	this._firstPass = true;
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TableView.DataSourceBehaviour"] = haxe_ui_containers__$TableView_DataSourceBehaviour;
haxe_ui_containers__$TableView_DataSourceBehaviour.__name__ = "haxe.ui.containers._TableView.DataSourceBehaviour";
haxe_ui_containers__$TableView_DataSourceBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$TableView_DataSourceBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	_firstPass: null
	,set: function(value) {
		var _gthis = this;
		haxe_ui_behaviours_DataBehaviour.prototype.set.call(this,value);
		var dataSource = haxe_ui_util_Variant.toDataSource(this._value);
		if(dataSource != null) {
			dataSource.transformer = new haxe_ui_data_transformation_NativeTypeTransformer();
			dataSource.onDataSourceChange = function() {
				var _this = _gthis._component;
				if(!(_this._layout == null || _this._layoutLocked == true)) {
					_this.invalidateComponent("layout",false);
				}
				if(_gthis._firstPass == true) {
					_gthis._firstPass = false;
					var _this = _gthis._component;
					if(!(_this._layout == null || _this._layoutLocked == true)) {
						_this.invalidateComponent("layout",false);
					}
				}
			};
			var _this = this._component;
			if(!(_this._layout == null || _this._layoutLocked == true)) {
				_this.invalidateComponent("layout",false);
			}
		} else {
			var _this = this._component;
			if(!(_this._layout == null || _this._layoutLocked == true)) {
				_this.invalidateComponent("layout",false);
			}
		}
	}
	,get: function() {
		if(this._value == null || haxe_ui_util_Variant.get_isNull(this._value)) {
			this._value = haxe_ui_util_Variant.fromDataSource(new haxe_ui_data_ArrayDataSource());
			this.set(this._value);
		}
		return this._value;
	}
	,__class__: haxe_ui_containers__$TableView_DataSourceBehaviour
});
var haxe_ui_containers__$TableView_SelectedIndexBehaviour = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TableView.SelectedIndexBehaviour"] = haxe_ui_containers__$TableView_SelectedIndexBehaviour;
haxe_ui_containers__$TableView_SelectedIndexBehaviour.__name__ = "haxe.ui.containers._TableView.SelectedIndexBehaviour";
haxe_ui_containers__$TableView_SelectedIndexBehaviour.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_containers__$TableView_SelectedIndexBehaviour.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	get: function() {
		var tableView = js_Boot.__cast(this._component , haxe_ui_containers_TableView);
		var selectedIndices = tableView.get_selectedIndices();
		if(selectedIndices != null && selectedIndices.length > 0) {
			return haxe_ui_util_Variant.fromInt(selectedIndices[selectedIndices.length - 1]);
		} else {
			return haxe_ui_util_Variant.fromInt(-1);
		}
	}
	,set: function(value) {
		var tableView = js_Boot.__cast(this._component , haxe_ui_containers_TableView);
		tableView.set_selectedIndices(haxe_ui_util_Variant.neq(value,haxe_ui_util_Variant.fromInt(-1)) ? [haxe_ui_util_Variant.toInt(value)] : null);
	}
	,__class__: haxe_ui_containers__$TableView_SelectedIndexBehaviour
});
var haxe_ui_containers__$TableView_SelectedItemBehaviour = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TableView.SelectedItemBehaviour"] = haxe_ui_containers__$TableView_SelectedItemBehaviour;
haxe_ui_containers__$TableView_SelectedItemBehaviour.__name__ = "haxe.ui.containers._TableView.SelectedItemBehaviour";
haxe_ui_containers__$TableView_SelectedItemBehaviour.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_containers__$TableView_SelectedItemBehaviour.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	getDynamic: function() {
		var tableView = js_Boot.__cast(this._component , haxe_ui_containers_TableView);
		var selectedIndices = tableView.get_selectedIndices();
		if(selectedIndices.length > 0) {
			return tableView.get_dataSource().get(selectedIndices[selectedIndices.length - 1]);
		} else {
			return null;
		}
	}
	,set: function(value) {
		var tableView = js_Boot.__cast(this._component , haxe_ui_containers_TableView);
		var index = tableView.get_dataSource().indexOf(value);
		if(index != -1 && tableView.get_selectedIndices().indexOf(index) == -1) {
			tableView.set_selectedIndices([index]);
		}
	}
	,__class__: haxe_ui_containers__$TableView_SelectedItemBehaviour
});
var haxe_ui_containers__$TableView_SelectedIndicesBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TableView.SelectedIndicesBehaviour"] = haxe_ui_containers__$TableView_SelectedIndicesBehaviour;
haxe_ui_containers__$TableView_SelectedIndicesBehaviour.__name__ = "haxe.ui.containers._TableView.SelectedIndicesBehaviour";
haxe_ui_containers__$TableView_SelectedIndicesBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$TableView_SelectedIndicesBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	get: function() {
		if(haxe_ui_util_Variant.get_isNull(this._value)) {
			return haxe_ui_util_Variant.fromArray([]);
		} else {
			return this._value;
		}
	}
	,validateData: function() {
		var tableView = js_Boot.__cast(this._component , haxe_ui_containers_TableView);
		var selectedIndices = tableView.get_selectedIndices();
		var contents = this._component.findComponent("scrollview-contents",null,false,"css");
		var itemToEnsure = null;
		var builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_containers__$TableView_Builder);
		var _g = 0;
		var _g1 = contents._children == null ? [] : contents._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(selectedIndices.indexOf((js_Boot.__cast(child , haxe_ui_core_ItemRenderer)).itemIndex) != -1) {
				itemToEnsure = js_Boot.__cast(child , haxe_ui_core_ItemRenderer);
				builder.addItemRendererClass(child,":selected");
			} else {
				builder.addItemRendererClass(child,":selected",false);
			}
		}
		if(itemToEnsure != null && tableView.get_virtual() == false) {
			var vscroll = tableView.findComponent(null,haxe_ui_components_VerticalScroll);
			if(vscroll != null) {
				var vpos = vscroll.get_pos();
				var contents = tableView.findComponent("tableview-contents",null,null,"css");
				if(itemToEnsure.get_top() + itemToEnsure.get_height() > vpos + contents.get_componentClipRect().height) {
					vscroll.set_pos(itemToEnsure.get_top() + itemToEnsure.get_height() - contents.get_componentClipRect().height);
				} else if(itemToEnsure.get_top() < vpos) {
					vscroll.set_pos(itemToEnsure.get_top());
				}
			}
		}
		if(tableView.get_selectedIndex() != -1 && tableView.get_selectedIndices().length != 0) {
			this._component.dispatch(new haxe_ui_events_UIEvent("change"));
		}
	}
	,__class__: haxe_ui_containers__$TableView_SelectedIndicesBehaviour
});
var haxe_ui_containers__$TableView_SelectedItemsBehaviour = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TableView.SelectedItemsBehaviour"] = haxe_ui_containers__$TableView_SelectedItemsBehaviour;
haxe_ui_containers__$TableView_SelectedItemsBehaviour.__name__ = "haxe.ui.containers._TableView.SelectedItemsBehaviour";
haxe_ui_containers__$TableView_SelectedItemsBehaviour.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_containers__$TableView_SelectedItemsBehaviour.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	get: function() {
		var tableView = js_Boot.__cast(this._component , haxe_ui_containers_TableView);
		var selectedIndices = tableView.get_selectedIndices();
		if(selectedIndices != null && selectedIndices.length > 0) {
			var selectedItems = [];
			var _g = 0;
			while(_g < selectedIndices.length) {
				var i = selectedIndices[_g];
				++_g;
				if(i < 0 || i >= tableView.get_dataSource().get_size()) {
					continue;
				}
				var data = tableView.get_dataSource().get(i);
				selectedItems.push(data);
			}
			return haxe_ui_util_Variant.fromArray(selectedItems);
		} else {
			return haxe_ui_util_Variant.fromArray([]);
		}
	}
	,set: function(value) {
		var tableView = js_Boot.__cast(this._component , haxe_ui_containers_TableView);
		var selectedItems = haxe_ui_util_Variant.toArray(value);
		if(selectedItems != null && selectedItems.length > 0) {
			var selectedIndices = [];
			var index;
			var _g = 0;
			while(_g < selectedItems.length) {
				var item = selectedItems[_g];
				++_g;
				index = tableView.get_dataSource().indexOf(item);
				if(index != -1) {
					selectedIndices.push(index);
				}
			}
			tableView.set_selectedIndices(selectedIndices);
		} else {
			tableView.set_selectedIndices([]);
		}
	}
	,__class__: haxe_ui_containers__$TableView_SelectedItemsBehaviour
});
var haxe_ui_containers__$TableView_SelectionModeBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TableView.SelectionModeBehaviour"] = haxe_ui_containers__$TableView_SelectionModeBehaviour;
haxe_ui_containers__$TableView_SelectionModeBehaviour.__name__ = "haxe.ui.containers._TableView.SelectionModeBehaviour";
haxe_ui_containers__$TableView_SelectionModeBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$TableView_SelectionModeBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var tableView = js_Boot.__cast(this._component , haxe_ui_containers_TableView);
		var selectedIndices = tableView.get_selectedIndices();
		if(selectedIndices.length == 0) {
			return;
		}
		var selectionMode = this._value;
		switch(selectionMode) {
		case "disabled":
			tableView.set_selectedIndices(null);
			break;
		case "one-item":
			if(selectedIndices.length > 1) {
				tableView.set_selectedIndices([selectedIndices[0]]);
			}
			break;
		default:
		}
	}
	,__class__: haxe_ui_containers__$TableView_SelectionModeBehaviour
});
var haxe_ui_containers__$TableView_GetHeader = function(component) {
	haxe_ui_behaviours_DefaultBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TableView.GetHeader"] = haxe_ui_containers__$TableView_GetHeader;
haxe_ui_containers__$TableView_GetHeader.__name__ = "haxe.ui.containers._TableView.GetHeader";
haxe_ui_containers__$TableView_GetHeader.__super__ = haxe_ui_behaviours_DefaultBehaviour;
haxe_ui_containers__$TableView_GetHeader.prototype = $extend(haxe_ui_behaviours_DefaultBehaviour.prototype,{
	get: function() {
		var header = this._component.findComponent(null,haxe_ui_containers_Header);
		return haxe_ui_util_Variant.fromComponent(header);
	}
	,__class__: haxe_ui_containers__$TableView_GetHeader
});
var haxe_ui_containers__$TableView_ClearTable = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TableView.ClearTable"] = haxe_ui_containers__$TableView_ClearTable;
haxe_ui_containers__$TableView_ClearTable.__name__ = "haxe.ui.containers._TableView.ClearTable";
haxe_ui_containers__$TableView_ClearTable.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_containers__$TableView_ClearTable.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(param) {
		if(param == true) {
			if((js_Boot.__cast(this._component , haxe_ui_containers_TableView)).get_itemRenderer() != null) {
				(js_Boot.__cast(this._component , haxe_ui_containers_TableView)).get_itemRenderer().removeAllComponents();
			}
			var header = this._component.findComponent(null,haxe_ui_containers_Header);
			if(header != null) {
				header.removeAllComponents();
			}
		}
		var contents = this._component.findComponent("tableview-contents",haxe_ui_containers_Box,true,"css");
		if(contents != null) {
			contents.removeAllComponents();
		}
		return null;
	}
	,__class__: haxe_ui_containers__$TableView_ClearTable
});
var haxe_ui_containers__$TableView_AddColumn = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TableView.AddColumn"] = haxe_ui_containers__$TableView_AddColumn;
haxe_ui_containers__$TableView_AddColumn.__name__ = "haxe.ui.containers._TableView.AddColumn";
haxe_ui_containers__$TableView_AddColumn.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_containers__$TableView_AddColumn.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(param) {
		var header = this._component.findComponent(null,haxe_ui_containers_Header);
		if(header == null) {
			header = new haxe_ui_containers_Header();
			this._component.addComponent(header);
		}
		var column = new haxe_ui_components_Column();
		column.set_text(param);
		var columnId = param;
		columnId = StringTools.replace(columnId," ","_");
		columnId = StringTools.replace(columnId,"*","");
		column.set_id(columnId);
		header.addComponent(column);
		return haxe_ui_util_Variant.fromComponent(column);
	}
	,__class__: haxe_ui_containers__$TableView_AddColumn
});
var haxe_ui_containers__$TableView_RemoveColumn = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TableView.RemoveColumn"] = haxe_ui_containers__$TableView_RemoveColumn;
haxe_ui_containers__$TableView_RemoveColumn.__name__ = "haxe.ui.containers._TableView.RemoveColumn";
haxe_ui_containers__$TableView_RemoveColumn.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_containers__$TableView_RemoveColumn.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(param) {
		var header = this._component.findComponent(null,haxe_ui_containers_Header);
		if(header == null) {
			return null;
		}
		var _g = 0;
		var _g1 = header.findComponents(null,haxe_ui_components_Column);
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			if(c.get_id() == null) {
				continue;
			}
			if(c.get_text() == param) {
				header.removeComponent(c);
				break;
			}
		}
		return null;
	}
	,__class__: haxe_ui_containers__$TableView_RemoveColumn
});
var haxe_ui_containers_VBox = function() {
	haxe_ui_containers_Box.call(this);
	this.set_layout(new haxe_ui_layouts_VerticalLayout());
};
$hxClasses["haxe.ui.containers.VBox"] = haxe_ui_containers_VBox;
haxe_ui_containers_VBox.__name__ = "haxe.ui.containers.VBox";
haxe_ui_containers_VBox.__super__ = haxe_ui_containers_Box;
haxe_ui_containers_VBox.prototype = $extend(haxe_ui_containers_Box.prototype,{
	registerBehaviours: function() {
		haxe_ui_containers_Box.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_Box.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_VBox();
	}
	,__class__: haxe_ui_containers_VBox
});
var haxe_ui_containers_dialogs_DialogButton = {};
haxe_ui_containers_dialogs_DialogButton.bitOr = function(lhs,rhs) {
	var larr = haxe_ui_containers_dialogs_DialogButton.toString(lhs).split("|");
	var rarr = haxe_ui_containers_dialogs_DialogButton.toString(rhs).split("|");
	var _g = 0;
	while(_g < rarr.length) {
		var r = rarr[_g];
		++_g;
		if(larr.indexOf(r) == -1) {
			larr.push(r);
		}
	}
	return larr.join("|");
};
haxe_ui_containers_dialogs_DialogButton.eq = function(lhs,rhs) {
	var larr = haxe_ui_containers_dialogs_DialogButton.toString(lhs).split("|");
	return larr.indexOf(haxe_ui_containers_dialogs_DialogButton.toString(rhs)) != -1;
};
haxe_ui_containers_dialogs_DialogButton.toArray = function(this1) {
	var a = [];
	var _g = 0;
	var _g1 = (this1 == null ? "null" : "" + this1).split("|");
	while(_g < _g1.length) {
		var i = _g1[_g];
		++_g;
		i = StringTools.trim(i);
		if(i.length == 0 || i == "null") {
			continue;
		}
		a.push(i);
	}
	return a;
};
haxe_ui_containers_dialogs_DialogButton.toString = function(this1) {
	if(this1 == null) {
		return "null";
	} else {
		return "" + this1;
	}
};
var haxe_ui_events_UIEvent = function(type,bubble,data) {
	if(bubble == null) {
		bubble = false;
	}
	this.relatedEvent = null;
	this.type = type;
	this.bubble = bubble;
	this.data = data;
	this.canceled = false;
};
$hxClasses["haxe.ui.events.UIEvent"] = haxe_ui_events_UIEvent;
haxe_ui_events_UIEvent.__name__ = "haxe.ui.events.UIEvent";
haxe_ui_events_UIEvent.__super__ = haxe_ui_backend_EventImpl;
haxe_ui_events_UIEvent.prototype = $extend(haxe_ui_backend_EventImpl.prototype,{
	bubble: null
	,type: null
	,target: null
	,data: null
	,canceled: null
	,relatedEvent: null
	,value: null
	,previousValue: null
	,cancel: function() {
		haxe_ui_backend_EventImpl.prototype.cancel.call(this);
		this.canceled = true;
	}
	,clone: function() {
		var c = new haxe_ui_events_UIEvent(this.type);
		c.type = this.type;
		c.bubble = this.bubble;
		c.target = this.target;
		c.data = this.data;
		c.value = this.value;
		c.previousValue = this.previousValue;
		c.canceled = this.canceled;
		c.relatedEvent = this.relatedEvent;
		this.postClone(c);
		return c;
	}
	,copyFrom: function(c) {
	}
	,__class__: haxe_ui_events_UIEvent
});
var haxe_ui_containers_dialogs_DialogEvent = function(type,bubble,data) {
	haxe_ui_events_UIEvent.call(this,type,bubble,data);
};
$hxClasses["haxe.ui.containers.dialogs.DialogEvent"] = haxe_ui_containers_dialogs_DialogEvent;
haxe_ui_containers_dialogs_DialogEvent.__name__ = "haxe.ui.containers.dialogs.DialogEvent";
haxe_ui_containers_dialogs_DialogEvent.__super__ = haxe_ui_events_UIEvent;
haxe_ui_containers_dialogs_DialogEvent.prototype = $extend(haxe_ui_events_UIEvent.prototype,{
	button: null
	,clone: function() {
		var c = new haxe_ui_containers_dialogs_DialogEvent(this.type);
		c.type = this.type;
		c.bubble = this.bubble;
		c.target = this.target;
		c.data = this.data;
		c.canceled = this.canceled;
		c.button = this.button;
		this.postClone(c);
		return c;
	}
	,__class__: haxe_ui_containers_dialogs_DialogEvent
});
var haxe_ui_containers_dialogs_MessageBoxType = {};
haxe_ui_containers_dialogs_MessageBoxType.toString = function(this1) {
	if(this1 == null) {
		return "null";
	} else {
		return "" + this1;
	}
};
var haxe_ui_containers_dialogs_MessageBox = function() {
	haxe_ui_backend_MessageBoxBase.call(this);
	this.set_title("Message");
};
$hxClasses["haxe.ui.containers.dialogs.MessageBox"] = haxe_ui_containers_dialogs_MessageBox;
haxe_ui_containers_dialogs_MessageBox.__name__ = "haxe.ui.containers.dialogs.MessageBox";
haxe_ui_containers_dialogs_MessageBox.__super__ = haxe_ui_backend_MessageBoxBase;
haxe_ui_containers_dialogs_MessageBox.prototype = $extend(haxe_ui_backend_MessageBoxBase.prototype,{
	onInitialize: function() {
		haxe_ui_backend_MessageBoxBase.prototype.onInitialize.call(this);
		if(haxe_ui_containers_dialogs_DialogButton.toArray(this.buttons).length == 0) {
			switch(this.get_type()) {
			case "error":
				this.buttons = "{{close}}";
				break;
			case "info":
				this.buttons = "{{ok}}";
				break;
			case "question":
				var larr = "{{yes}}".split("|");
				var rarr = "{{no}}".split("|");
				var _g = 0;
				while(_g < rarr.length) {
					var r = rarr[_g];
					++_g;
					if(larr.indexOf(r) == -1) {
						larr.push(r);
					}
				}
				var larr1 = haxe_ui_containers_dialogs_DialogButton.toString(larr.join("|")).split("|");
				var rarr = haxe_ui_containers_dialogs_DialogButton.toString("{{cancel}}").split("|");
				var _g = 0;
				while(_g < rarr.length) {
					var r = rarr[_g];
					++_g;
					if(larr1.indexOf(r) == -1) {
						larr1.push(r);
					}
				}
				this.buttons = larr1.join("|");
				break;
			case "warning":
				this.buttons = "{{close}}";
				break;
			case "yesno":
				var larr = haxe_ui_containers_dialogs_DialogButton.toString("{{yes}}").split("|");
				var rarr = haxe_ui_containers_dialogs_DialogButton.toString("{{no}}").split("|");
				var _g = 0;
				while(_g < rarr.length) {
					var r = rarr[_g];
					++_g;
					if(larr.indexOf(r) == -1) {
						larr.push(r);
					}
				}
				this.buttons = larr.join("|");
				break;
			}
			this.createButtons();
		}
		if(this.get_title() == "Message") {
			switch(this.get_type()) {
			case "error":
				this.set_title("Error");
				break;
			case "info":
				this.set_title("Info");
				break;
			case "question":
				this.set_title("Question");
				break;
			case "warning":
				this.set_title("Warning");
				break;
			case "yesno":
				this.set_title("Question");
				break;
			}
		}
	}
	,registerBehaviours: function() {
		haxe_ui_backend_MessageBoxBase.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_backend_MessageBoxBase.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_dialogs_MessageBox();
	}
	,__class__: haxe_ui_containers_dialogs_MessageBox
});
var haxe_ui_core_BasicItemRenderer = function() {
	haxe_ui_core_ItemRenderer.call(this);
	var hbox = new haxe_ui_containers_HBox();
	hbox.addClass("basic-renderer-container");
	this._icon = new haxe_ui_components_Image();
	this._icon.set_id("icon");
	this._icon.addClass("basic-renderer-icon");
	this._icon.set_verticalAlign("center");
	this._icon.hide();
	hbox.addComponent(this._icon);
	this._label = new haxe_ui_components_Label();
	this._label.set_id("text");
	this._label.addClass("basic-renderer-label");
	this._label.set_verticalAlign("center");
	this._label.hide();
	hbox.addComponent(this._label);
	this.addComponent(hbox);
};
$hxClasses["haxe.ui.core.BasicItemRenderer"] = haxe_ui_core_BasicItemRenderer;
haxe_ui_core_BasicItemRenderer.__name__ = "haxe.ui.core.BasicItemRenderer";
haxe_ui_core_BasicItemRenderer.__super__ = haxe_ui_core_ItemRenderer;
haxe_ui_core_BasicItemRenderer.prototype = $extend(haxe_ui_core_ItemRenderer.prototype,{
	_icon: null
	,_label: null
	,updateValues: function(value,fieldList) {
		haxe_ui_core_ItemRenderer.prototype.updateValues.call(this,value,fieldList);
		if(value != null) {
			if(value.color != null) {
				var tmp = haxe_ui_util_Color.fromString(value.color);
				this._label.get_customStyle().color = haxe_ui_util_Color.toInt(tmp);
			}
			if(value.bold != null) {
				var tmp = Std.string(value.bold);
				this._label.get_customStyle().fontBold = tmp == "true";
			}
			if(value.italic != null) {
				var tmp = Std.string(value.italic);
				this._label.get_customStyle().fontItalic = tmp == "true";
			}
			if(value.underline != null) {
				var tmp = Std.string(value.underline);
				this._label.get_customStyle().fontUnderline = tmp == "true";
			}
		}
	}
	,registerBehaviours: function() {
		haxe_ui_core_ItemRenderer.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_ItemRenderer.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_core_BasicItemRenderer();
	}
	,__class__: haxe_ui_core_BasicItemRenderer
});
var haxe_ui_core_ComponentClassMap = function() {
	this._map = null;
};
$hxClasses["haxe.ui.core.ComponentClassMap"] = haxe_ui_core_ComponentClassMap;
haxe_ui_core_ComponentClassMap.__name__ = "haxe.ui.core.ComponentClassMap";
haxe_ui_core_ComponentClassMap.__properties__ = {get_instance:"get_instance"};
haxe_ui_core_ComponentClassMap.get_instance = function() {
	if(haxe_ui_core_ComponentClassMap._instance == null) {
		haxe_ui_core_ComponentClassMap._instance = new haxe_ui_core_ComponentClassMap();
	}
	return haxe_ui_core_ComponentClassMap._instance;
};
haxe_ui_core_ComponentClassMap.get = function(alias) {
	alias = StringTools.replace(alias,"-","").toLowerCase();
	return haxe_ui_core_ComponentClassMap.get_instance().getClassName(alias);
};
haxe_ui_core_ComponentClassMap.register = function(alias,className) {
	haxe_ui_core_ComponentClassMap.get_instance().registerClassName(alias.toLowerCase(),className);
};
haxe_ui_core_ComponentClassMap.list = function() {
	haxe_ui_core_ComponentClassMap.get_instance().load();
	return new haxe_ds__$StringMap_StringMapKeyIterator(haxe_ui_core_ComponentClassMap.get_instance()._map.h);
};
haxe_ui_core_ComponentClassMap.clear = function() {
	haxe_ui_core_ComponentClassMap.get_instance()._map = new haxe_ds_StringMap();
};
haxe_ui_core_ComponentClassMap.hasClass = function(className) {
	return haxe_ui_core_ComponentClassMap.get_instance().hasClassName(className);
};
haxe_ui_core_ComponentClassMap.prototype = {
	_map: null
	,getClassName: function(alias) {
		this.load();
		alias = alias.toLowerCase();
		return this._map.h[alias];
	}
	,registerClassName: function(alias,className) {
		this.load();
		alias = alias.toLowerCase();
		if(Object.prototype.hasOwnProperty.call(this._map.h,alias) == false) {
			this._map.h[alias] = className;
		}
		this.save();
	}
	,hasClassName: function(className) {
		this.load();
		var h = this._map.h;
		var k_h = h;
		var k_keys = Object.keys(h);
		var k_length = k_keys.length;
		var k_current = 0;
		while(k_current < k_length) {
			var k = k_keys[k_current++];
			if(this._map.h[k] == className) {
				return true;
			}
		}
		return false;
	}
	,load: function() {
		if(this._map != null) {
			return;
		}
		var s = haxe_Resource.getString("haxeui_classmap");
		if(s == null) {
			return;
		}
		var unserializer = new haxe_Unserializer(s);
		this._map = unserializer.unserialize();
	}
	,save: function() {
	}
	,__class__: haxe_ui_core_ComponentClassMap
};
var haxe_ui_core_ComponentTextBehaviour = function(component) {
	haxe_ui_behaviours_DefaultBehaviour.call(this,component);
};
$hxClasses["haxe.ui.core.ComponentTextBehaviour"] = haxe_ui_core_ComponentTextBehaviour;
haxe_ui_core_ComponentTextBehaviour.__name__ = "haxe.ui.core.ComponentTextBehaviour";
haxe_ui_core_ComponentTextBehaviour.__super__ = haxe_ui_behaviours_DefaultBehaviour;
haxe_ui_core_ComponentTextBehaviour.prototype = $extend(haxe_ui_behaviours_DefaultBehaviour.prototype,{
	set: function(value) {
		if(haxe_ui_util_Variant.eq(value,this._value)) {
			return;
		}
		this._value = value;
		haxe_ui_behaviours_DefaultBehaviour.prototype.set.call(this,value);
	}
	,__class__: haxe_ui_core_ComponentTextBehaviour
});
var haxe_ui_core_ComponentDisabledBehaviour = function(component) {
	haxe_ui_behaviours_DefaultBehaviour.call(this,component);
	this._value = haxe_ui_util_Variant.fromBool(false);
};
$hxClasses["haxe.ui.core.ComponentDisabledBehaviour"] = haxe_ui_core_ComponentDisabledBehaviour;
haxe_ui_core_ComponentDisabledBehaviour.__name__ = "haxe.ui.core.ComponentDisabledBehaviour";
haxe_ui_core_ComponentDisabledBehaviour.__super__ = haxe_ui_behaviours_DefaultBehaviour;
haxe_ui_core_ComponentDisabledBehaviour.prototype = $extend(haxe_ui_behaviours_DefaultBehaviour.prototype,{
	set: function(value) {
		if(haxe_ui_util_Variant.eq(value,this._value)) {
			return;
		}
		this._value = value;
		if(value != null && haxe_ui_util_Variant.get_isNull(value) == false) {
			this._component.disableInteractivity(haxe_ui_util_Variant.toBool(value),true,true);
		}
	}
	,get: function() {
		return haxe_ui_util_Variant.fromBool(this._component.classes.indexOf(":disabled") != -1);
	}
	,__class__: haxe_ui_core_ComponentDisabledBehaviour
});
var haxe_ui_core_ComponentValueBehaviour = function(component) {
	haxe_ui_behaviours_ValueBehaviour.call(this,component);
};
$hxClasses["haxe.ui.core.ComponentValueBehaviour"] = haxe_ui_core_ComponentValueBehaviour;
haxe_ui_core_ComponentValueBehaviour.__name__ = "haxe.ui.core.ComponentValueBehaviour";
haxe_ui_core_ComponentValueBehaviour.__super__ = haxe_ui_behaviours_ValueBehaviour;
haxe_ui_core_ComponentValueBehaviour.prototype = $extend(haxe_ui_behaviours_ValueBehaviour.prototype,{
	set: function(value) {
		if(haxe_ui_util_Variant.eq(value,this._value)) {
			return;
		}
		this._value = value;
		this._component.set_text(haxe_ui_util_Variant.toString(value));
	}
	,get: function() {
		return this._value;
	}
	,getDynamic: function() {
		return haxe_ui_util_Variant.toDynamic(this._value);
	}
	,__class__: haxe_ui_core_ComponentValueBehaviour
});
var haxe_ui_core_ComponentToolTipBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.core.ComponentToolTipBehaviour"] = haxe_ui_core_ComponentToolTipBehaviour;
haxe_ui_core_ComponentToolTipBehaviour.__name__ = "haxe.ui.core.ComponentToolTipBehaviour";
haxe_ui_core_ComponentToolTipBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_core_ComponentToolTipBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		if(this._value == null || haxe_ui_util_Variant.get_isNull(this._value)) {
			haxe_ui_tooltips_ToolTipManager.get_instance().unregisterTooltip(this._component);
		} else {
			haxe_ui_tooltips_ToolTipManager.get_instance().registerTooltip(this._component,{ tipData : haxe_ui_util_Variant.toDynamic(this._value), renderer : this._component.get_tooltipRenderer()});
		}
	}
	,setDynamic: function(value) {
		haxe_ui_tooltips_ToolTipManager.get_instance().unregisterTooltip(this._component);
		if(value != null) {
			haxe_ui_tooltips_ToolTipManager.get_instance().registerTooltip(this._component,{ tipData : value, renderer : this._component.get_tooltipRenderer()});
		}
	}
	,getDynamic: function() {
		var options = haxe_ui_tooltips_ToolTipManager.get_instance().getTooltipOptions(this._component);
		if(options == null) {
			return null;
		}
		return options.tipData;
	}
	,__class__: haxe_ui_core_ComponentToolTipBehaviour
});
var haxe_ui_core_ComponentToolTipRendererBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.core.ComponentToolTipRendererBehaviour"] = haxe_ui_core_ComponentToolTipRendererBehaviour;
haxe_ui_core_ComponentToolTipRendererBehaviour.__name__ = "haxe.ui.core.ComponentToolTipRendererBehaviour";
haxe_ui_core_ComponentToolTipRendererBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_core_ComponentToolTipRendererBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		if(this._value == null || haxe_ui_util_Variant.get_isNull(this._value)) {
			haxe_ui_tooltips_ToolTipManager.get_instance().updateTooltipRenderer(this._component,null);
		} else {
			haxe_ui_tooltips_ToolTipManager.get_instance().updateTooltipRenderer(this._component,haxe_ui_util_Variant.toComponent(this._value));
		}
	}
	,__class__: haxe_ui_core_ComponentToolTipRendererBehaviour
});
var haxe_ui_core_ImageDisplay = function() {
	this._isValidating = false;
	this._isAllInvalid = false;
	this._invalidationFlags = new haxe_ds_StringMap();
	haxe_ui_backend_ImageDisplayImpl.call(this);
};
$hxClasses["haxe.ui.core.ImageDisplay"] = haxe_ui_core_ImageDisplay;
haxe_ui_core_ImageDisplay.__name__ = "haxe.ui.core.ImageDisplay";
haxe_ui_core_ImageDisplay.__super__ = haxe_ui_backend_ImageDisplayImpl;
haxe_ui_core_ImageDisplay.prototype = $extend(haxe_ui_backend_ImageDisplayImpl.prototype,{
	_invalidationFlags: null
	,_isAllInvalid: null
	,_isValidating: null
	,get_left: function() {
		return this._left;
	}
	,set_left: function(value) {
		if(value == this._left) {
			return value;
		}
		this._left = value;
		this.invalidateComponent("position");
		return value;
	}
	,get_top: function() {
		return this._top;
	}
	,set_top: function(value) {
		if(value == this._top) {
			return value;
		}
		this._top = value;
		this.invalidateComponent("position");
		return value;
	}
	,set_imageWidth: function(value) {
		if(this._imageWidth == value || value <= 0) {
			return value;
		}
		this._imageWidth = value;
		this.invalidateComponent("display");
		return value;
	}
	,get_imageWidth: function() {
		return this._imageWidth;
	}
	,set_imageHeight: function(value) {
		if(this._imageHeight == value || value <= 0) {
			return value;
		}
		this._imageHeight = value;
		this.invalidateComponent("display");
		return value;
	}
	,get_imageHeight: function() {
		return this._imageHeight;
	}
	,get_imageInfo: function() {
		return this._imageInfo;
	}
	,set_imageInfo: function(value) {
		if(value == this._imageInfo) {
			return value;
		}
		this._imageInfo = value;
		this._imageWidth = this._imageInfo.width;
		this._imageHeight = this._imageInfo.height;
		this.invalidateComponent("data");
		this.invalidateComponent("display");
		return value;
	}
	,get_imageClipRect: function() {
		return this._imageClipRect;
	}
	,set_imageClipRect: function(value) {
		this._imageClipRect = value;
		this.invalidateComponent("display");
		return value;
	}
	,isComponentInvalid: function(flag) {
		if(flag == null) {
			flag = "all";
		}
		if(this._isAllInvalid == true) {
			return true;
		}
		if(flag == "all") {
			var h = this._invalidationFlags.h;
			var value_h = h;
			var value_keys = Object.keys(h);
			var value_length = value_keys.length;
			var value_current = 0;
			while(value_current < value_length) {
				var value = value_h[value_keys[value_current++]];
				return true;
			}
			return false;
		}
		return Object.prototype.hasOwnProperty.call(this._invalidationFlags.h,flag);
	}
	,invalidateComponent: function(flag) {
		if(flag == null) {
			flag = "all";
		}
		if(this.parentComponent == null) {
			return;
		}
		if(flag == "all") {
			this._isAllInvalid = true;
			this.parentComponent.invalidateComponent("imageDisplay");
		} else if(!Object.prototype.hasOwnProperty.call(this._invalidationFlags.h,flag)) {
			this._invalidationFlags.h[flag] = true;
			this.parentComponent.invalidateComponent("imageDisplay");
		}
	}
	,validateComponent: function() {
		if(this._isValidating == true || this.isComponentInvalid() == false) {
			return;
		}
		this._isValidating = true;
		this.handleValidate();
		var h = this._invalidationFlags.h;
		var flag_h = h;
		var flag_keys = Object.keys(h);
		var flag_length = flag_keys.length;
		var flag_current = 0;
		while(flag_current < flag_length) {
			var flag = flag_keys[flag_current++];
			var _this = this._invalidationFlags;
			if(Object.prototype.hasOwnProperty.call(_this.h,flag)) {
				delete(_this.h[flag]);
			}
		}
		this._isAllInvalid = false;
		this._isValidating = false;
	}
	,handleValidate: function() {
		var dataInvalid = this.isComponentInvalid("data");
		var positionInvalid = this.isComponentInvalid("position");
		var displayInvalid = this.isComponentInvalid("display");
		if(dataInvalid) {
			this.validateData();
		}
		if(positionInvalid) {
			this.validatePosition();
		}
		if(displayInvalid) {
			this.validateDisplay();
		}
	}
	,__class__: haxe_ui_core_ImageDisplay
	,__properties__: {set_imageClipRect:"set_imageClipRect",get_imageClipRect:"get_imageClipRect",set_imageInfo:"set_imageInfo",get_imageInfo:"get_imageInfo",set_imageHeight:"set_imageHeight",get_imageHeight:"get_imageHeight",set_imageWidth:"set_imageWidth",get_imageWidth:"get_imageWidth",set_top:"set_top",get_top:"get_top",set_left:"set_left",get_left:"get_left"}
});
var haxe_ui_core_Platform = function() {
	haxe_ui_backend_PlatformImpl.call(this);
};
$hxClasses["haxe.ui.core.Platform"] = haxe_ui_core_Platform;
haxe_ui_core_Platform.__name__ = "haxe.ui.core.Platform";
haxe_ui_core_Platform.__properties__ = {get_instance:"get_instance",get_hscrollHeight:"get_hscrollHeight",get_vscrollWidth:"get_vscrollWidth"};
haxe_ui_core_Platform.get_vscrollWidth = function() {
	return haxe_ui_core_Platform.get_instance().getMetric("patform.metrics.vscroll.width");
};
haxe_ui_core_Platform.get_hscrollHeight = function() {
	return haxe_ui_core_Platform.get_instance().getMetric("patform.metrics.hscroll.height");
};
haxe_ui_core_Platform.get_instance = function() {
	if(haxe_ui_core_Platform._instance == null) {
		haxe_ui_core_Platform._instance = new haxe_ui_core_Platform();
	}
	return haxe_ui_core_Platform._instance;
};
haxe_ui_core_Platform.__super__ = haxe_ui_backend_PlatformImpl;
haxe_ui_core_Platform.prototype = $extend(haxe_ui_backend_PlatformImpl.prototype,{
	getMetric: function(id) {
		return haxe_ui_backend_PlatformImpl.prototype.getMetric.call(this,id);
	}
	,__class__: haxe_ui_core_Platform
});
var haxe_ui_core_Screen = function() {
	this.currentMouseY = 0;
	this.currentMouseX = 0;
	this._eventMap = new haxe_ui_util_EventMap();
	var _gthis = this;
	haxe_ui_backend_ScreenImpl.call(this);
	this.registerEvent("mousemove",function(e) {
		_gthis.currentMouseX = e.screenX;
		_gthis.currentMouseY = e.screenY;
	});
};
$hxClasses["haxe.ui.core.Screen"] = haxe_ui_core_Screen;
haxe_ui_core_Screen.__name__ = "haxe.ui.core.Screen";
haxe_ui_core_Screen.__properties__ = {get_instance:"get_instance"};
haxe_ui_core_Screen.get_instance = function() {
	if(haxe_ui_core_Screen._instance == null) {
		haxe_ui_core_Screen._instance = new haxe_ui_core_Screen();
	}
	return haxe_ui_core_Screen._instance;
};
haxe_ui_core_Screen.__super__ = haxe_ui_backend_ScreenImpl;
haxe_ui_core_Screen.prototype = $extend(haxe_ui_backend_ScreenImpl.prototype,{
	_eventMap: null
	,currentMouseX: null
	,currentMouseY: null
	,addComponent: function(component) {
		var wasReady = component.get_isReady();
		component._hasScreen = true;
		haxe_ui_backend_ScreenImpl.prototype.addComponent.call(this,component);
		component.ready();
		if(this.rootComponents.indexOf(component) == -1) {
			this.rootComponents.push(component);
		}
		haxe_ui_focus_FocusManager.get_instance().pushView(component);
		if(component.hasEvent("resize",$bind(this,this._onRootComponentResize)) == false) {
			component.registerEvent("resize",$bind(this,this._onRootComponentResize));
		}
		if(wasReady && component.get_hidden() == false) {
			component.dispatch(new haxe_ui_events_UIEvent("shown"));
		}
		return component;
	}
	,removeComponent: function(component,dispose) {
		if(dispose == null) {
			dispose = true;
		}
		if(this.rootComponents.indexOf(component) == -1) {
			return component;
		}
		component._hasScreen = false;
		haxe_ui_backend_ScreenImpl.prototype.removeComponent.call(this,component,dispose);
		component.set_depth(-1);
		HxOverrides.remove(this.rootComponents,component);
		haxe_ui_focus_FocusManager.get_instance().removeView(component);
		component.unregisterEvent("resize",$bind(this,this._onRootComponentResize));
		if(dispose == true) {
			component.disposeComponent();
		} else {
			component.dispatch(new haxe_ui_events_UIEvent("hidden"));
			component.removeClass(":hover",false,true);
		}
		return component;
	}
	,setComponentIndex: function(child,index) {
		if(index >= 0 && index <= this.rootComponents.length) {
			this.handleSetComponentIndex(child,index);
			HxOverrides.remove(this.rootComponents,child);
			this.rootComponents.splice(index,0,child);
		}
		return child;
	}
	,moveComponentToFront: function(child) {
		if(this.rootComponents.indexOf(child) != -1) {
			this.setComponentIndex(child,this.rootComponents.length - 1);
		}
	}
	,findComponentsUnderPoint: function(screenX,screenY,type) {
		var c = [];
		var _g = 0;
		var _g1 = this.rootComponents;
		while(_g < _g1.length) {
			var r = _g1[_g];
			++_g;
			if(r.hitTest(screenX,screenY)) {
				var match = true;
				if(type != null && js_Boot.__instanceof(r,type) == false) {
					match = false;
				}
				if(match == true) {
					c.push(r);
				}
			}
			c = c.concat(r.findComponentsUnderPoint(screenX,screenY,type));
		}
		return c;
	}
	,hasComponentUnderPoint: function(screenX,screenY,type) {
		var _g = 0;
		var _g1 = this.rootComponents;
		while(_g < _g1.length) {
			var r = _g1[_g];
			++_g;
			if(r.hasComponentUnderPoint(screenX,screenY,type) == true) {
				return true;
			}
		}
		return false;
	}
	,findSolidComponentUnderPoint: function(screenX,screenY,type) {
		var solidComponents = [];
		var components = this.findComponentsUnderPoint(screenX,screenY,type);
		var _g = 0;
		while(_g < components.length) {
			var c = components[_g];
			++_g;
			if(c.get_isComponentSolid()) {
				solidComponents.push(c);
			}
		}
		return solidComponents;
	}
	,hasSolidComponentUnderPoint: function(screenX,screenY,type) {
		return this.findSolidComponentUnderPoint(screenX,screenY,type).length > 0;
	}
	,onThemeChanged: function() {
		var _g = 0;
		var _g1 = this.rootComponents;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			this.onThemeChangedChildren(c);
		}
	}
	,onThemeChangedChildren: function(c) {
		var _g = 0;
		var _g1 = c._children == null ? [] : c._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			this.onThemeChangedChildren(child);
		}
		c.onThemeChanged();
	}
	,registerEvent: function(type,listener,priority) {
		if(priority == null) {
			priority = 0;
		}
		if(this.supportsEvent(type) == true) {
			if(this._eventMap.add(type,listener,priority) == true) {
				this.mapEvent(type,$bind(this,this._onMappedEvent));
			}
		} else {
			haxe_Log.trace("WARNING: Screen event \"" + type + "\" not supported",{ fileName : "haxe/ui/core/Screen.hx", lineNumber : 271, className : "haxe.ui.core.Screen", methodName : "registerEvent"});
		}
	}
	,unregisterEvent: function(type,listener) {
		if(this._eventMap.remove(type,listener) == true) {
			this.unmapEvent(type,$bind(this,this._onMappedEvent));
		}
	}
	,_onMappedEvent: function(event) {
		this._eventMap.invoke(event.type,event);
	}
	,__class__: haxe_ui_core_Screen
});
var haxe_ui_core_TextDisplayData = function() {
	this.wordWrap = false;
	this.multiline = false;
};
$hxClasses["haxe.ui.core.TextDisplayData"] = haxe_ui_core_TextDisplayData;
haxe_ui_core_TextDisplayData.__name__ = "haxe.ui.core.TextDisplayData";
haxe_ui_core_TextDisplayData.prototype = {
	multiline: null
	,wordWrap: null
	,__class__: haxe_ui_core_TextDisplayData
};
var haxe_ui_core_TextDisplay = function() {
	this._depth = -1;
	this._isValidating = false;
	this._isAllInvalid = false;
	this._invalidationFlags = new haxe_ds_StringMap();
	haxe_ui_backend_TextDisplayImpl.call(this);
};
$hxClasses["haxe.ui.core.TextDisplay"] = haxe_ui_core_TextDisplay;
haxe_ui_core_TextDisplay.__name__ = "haxe.ui.core.TextDisplay";
haxe_ui_core_TextDisplay.__interfaces__ = [haxe_ui_validation_IValidating];
haxe_ui_core_TextDisplay.__super__ = haxe_ui_backend_TextDisplayImpl;
haxe_ui_core_TextDisplay.prototype = $extend(haxe_ui_backend_TextDisplayImpl.prototype,{
	_invalidationFlags: null
	,_isAllInvalid: null
	,_isValidating: null
	,get_id: function() {
		if(this.parentComponent == null) {
			return null;
		}
		return this.parentComponent.get_id() + "_textdisplay";
	}
	,set_id: function(value) {
		return value;
	}
	,isComponentOffscreen: null
	,get_isComponentOffscreen: function() {
		return false;
	}
	,get_textStyle: function() {
		return this._textStyle;
	}
	,set_textStyle: function(value) {
		var _gthis = this;
		if(value == null) {
			return value;
		}
		if(value.fontName != null && this._textStyle == null || this._textStyle != null && value.fontName != this._textStyle.fontName) {
			haxe_ui_ToolkitAssets.get_instance().getFont(value.fontName,function(fontInfo) {
				_gthis._fontInfo = fontInfo;
				_gthis.invalidateComponent("style");
				_gthis.parentComponent.invalidateComponent("style");
			});
		} else {
			this.invalidateComponent("style");
		}
		this._textStyle = value;
		return value;
	}
	,get_text: function() {
		return this._text;
	}
	,set_text: function(value) {
		if(value == this._text) {
			return value;
		}
		this._text = value;
		this._htmlText = null;
		this.invalidateComponent("data");
		return value;
	}
	,get_htmlText: function() {
		return this._htmlText;
	}
	,set_htmlText: function(value) {
		if(value == this._htmlText) {
			return value;
		}
		this._htmlText = value;
		this._text = null;
		this.invalidateComponent("data");
		return value;
	}
	,get_left: function() {
		return this._left;
	}
	,set_left: function(value) {
		if(value == this._left) {
			return value;
		}
		this.invalidateComponent("position");
		this._left = value;
		return value;
	}
	,get_top: function() {
		return this._top;
	}
	,set_top: function(value) {
		if(value == this._top) {
			return value;
		}
		this.invalidateComponent("position");
		this._top = value;
		return value;
	}
	,set_width: function(value) {
		if(this._width == value) {
			return value;
		}
		this.invalidateComponent("display");
		this._width = value;
		return value;
	}
	,get_width: function() {
		return this._width;
	}
	,set_height: function(value) {
		if(this._height == value) {
			return value;
		}
		this.invalidateComponent("display");
		this._height = value;
		return value;
	}
	,get_height: function() {
		return this._height;
	}
	,textWidth: null
	,get_textWidth: function() {
		if(this._text == null && this._htmlText == null) {
			return 0;
		}
		if(this._text != null && this._text.length == 0) {
			return 0;
		}
		if(this._htmlText != null && this._htmlText.length == 0) {
			return 0;
		}
		if(this.isComponentInvalid() == true) {
			this.validateComponent();
		}
		return this._textWidth;
	}
	,textHeight: null
	,get_textHeight: function() {
		if(this.isComponentInvalid() == true) {
			this.validateComponent();
		}
		return this._textHeight;
	}
	,get_multiline: function() {
		return this._displayData.multiline;
	}
	,set_multiline: function(value) {
		if(value == this._displayData.multiline) {
			return value;
		}
		this.invalidateComponent("style");
		this._displayData.multiline = value;
		return value;
	}
	,get_wordWrap: function() {
		return this._displayData.wordWrap;
	}
	,set_wordWrap: function(value) {
		if(value == this._displayData.wordWrap) {
			return value;
		}
		this.invalidateComponent("style");
		this._displayData.wordWrap = value;
		return value;
	}
	,isComponentInvalid: function(flag) {
		if(flag == null) {
			flag = "all";
		}
		if(this._isAllInvalid == true) {
			return true;
		}
		if(flag == "all") {
			var h = this._invalidationFlags.h;
			var value_h = h;
			var value_keys = Object.keys(h);
			var value_length = value_keys.length;
			var value_current = 0;
			while(value_current < value_length) {
				var value = value_h[value_keys[value_current++]];
				return true;
			}
			return false;
		}
		return Object.prototype.hasOwnProperty.call(this._invalidationFlags.h,flag);
	}
	,invalidateComponent: function(flag) {
		if(flag == null) {
			flag = "all";
		}
		if(flag == "all") {
			this._isAllInvalid = true;
			this.parentComponent.invalidateComponent("textDisplay");
		} else if(!Object.prototype.hasOwnProperty.call(this._invalidationFlags.h,flag)) {
			this._invalidationFlags.h[flag] = true;
			this.parentComponent.invalidateComponent("textDisplay");
		}
	}
	,_depth: null
	,get_depth: function() {
		return this._depth;
	}
	,set_depth: function(value) {
		if(this._depth == value) {
			return value;
		}
		this._depth = value;
		return value;
	}
	,updateComponentDisplay: function() {
	}
	,validateComponent: function(nextFrame) {
		if(nextFrame == null) {
			nextFrame = true;
		}
		if(this._isValidating == true || this.isComponentInvalid() == false) {
			return;
		}
		this._isValidating = true;
		this.validateComponentInternal();
		this._invalidationFlags.h = Object.create(null);
		this._isAllInvalid = false;
		this._isValidating = false;
	}
	,validateComponentInternal: function() {
		var dataInvalid = this.isComponentInvalid("data");
		var styleInvalid = this.isComponentInvalid("style");
		var positionInvalid = this.isComponentInvalid("position");
		var displayInvalid = this.isComponentInvalid("display");
		var measureInvalid = this.isComponentInvalid("measure");
		if(dataInvalid) {
			this.validateData();
		}
		if(styleInvalid) {
			if(this.validateStyle()) {
				measureInvalid = true;
			}
		}
		if(positionInvalid || styleInvalid) {
			this.validatePosition();
		}
		if(displayInvalid) {
			this.validateDisplay();
		}
		if(dataInvalid || displayInvalid || measureInvalid) {
			var oldTextWidth = this.get_textWidth();
			var oldTextHeight = this.get_textHeight();
			this.measureText();
			if(this.get_textWidth() != oldTextWidth || this.get_textHeight() != oldTextHeight) {
				this.parentComponent.invalidateComponent("layout");
			}
		}
	}
	,__class__: haxe_ui_core_TextDisplay
	,__properties__: $extend(haxe_ui_backend_TextDisplayImpl.prototype.__properties__,{set_depth:"set_depth",get_depth:"get_depth",set_wordWrap:"set_wordWrap",get_wordWrap:"get_wordWrap",set_multiline:"set_multiline",get_multiline:"get_multiline",get_textHeight:"get_textHeight",get_textWidth:"get_textWidth",set_height:"set_height",get_height:"get_height",set_width:"set_width",get_width:"get_width",set_top:"set_top",get_top:"get_top",set_left:"set_left",get_left:"get_left",set_htmlText:"set_htmlText",get_htmlText:"get_htmlText",set_text:"set_text",get_text:"get_text",set_textStyle:"set_textStyle",get_textStyle:"get_textStyle",get_isComponentOffscreen:"get_isComponentOffscreen",set_id:"set_id",get_id:"get_id"})
});
var haxe_ui_core_TextInputData = function() {
	this.onChangedCallback = null;
	this.onScrollCallback = null;
	this.vscrollNativeWheel = false;
	this.vscrollPageStep = null;
	this.vscrollPageSize = 0;
	this.vscrollMax = 0;
	this.vscrollPos = 0;
	this.hscrollPageSize = 0;
	this.hscrollMax = 0;
	this.hscrollPos = 0;
	this.password = false;
};
$hxClasses["haxe.ui.core.TextInputData"] = haxe_ui_core_TextInputData;
haxe_ui_core_TextInputData.__name__ = "haxe.ui.core.TextInputData";
haxe_ui_core_TextInputData.prototype = {
	password: null
	,hscrollPos: null
	,hscrollMax: null
	,hscrollPageSize: null
	,vscrollPos: null
	,vscrollMax: null
	,vscrollPageSize: null
	,vscrollPageStep: null
	,vscrollNativeWheel: null
	,onScrollCallback: null
	,onChangedCallback: null
	,__class__: haxe_ui_core_TextInputData
};
var haxe_ui_core_TextInput = function() {
	this._depth = -1;
	this._isValidating = false;
	this._isAllInvalid = false;
	this._invalidationFlags = new haxe_ds_StringMap();
	haxe_ui_backend_TextInputImpl.call(this);
	this._isAllInvalid = true;
};
$hxClasses["haxe.ui.core.TextInput"] = haxe_ui_core_TextInput;
haxe_ui_core_TextInput.__name__ = "haxe.ui.core.TextInput";
haxe_ui_core_TextInput.__interfaces__ = [haxe_ui_validation_IValidating];
haxe_ui_core_TextInput.__super__ = haxe_ui_backend_TextInputImpl;
haxe_ui_core_TextInput.prototype = $extend(haxe_ui_backend_TextInputImpl.prototype,{
	_invalidationFlags: null
	,_isAllInvalid: null
	,_isValidating: null
	,get_id: function() {
		if(this.parentComponent == null) {
			return null;
		}
		return this.parentComponent.get_id() + "_textinput";
	}
	,set_id: function(value) {
		return value;
	}
	,isComponentOffscreen: null
	,get_isComponentOffscreen: function() {
		return false;
	}
	,focus: function() {
		haxe_ui_backend_TextInputImpl.prototype.focus.call(this);
	}
	,blur: function() {
		haxe_ui_backend_TextInputImpl.prototype.blur.call(this);
	}
	,get_textStyle: function() {
		return this._textStyle;
	}
	,set_textStyle: function(value) {
		var _gthis = this;
		if(value == null) {
			return value;
		}
		if(value.fontName != null && this._textStyle == null || this._textStyle != null && value.fontName != this._textStyle.fontName) {
			haxe_ui_ToolkitAssets.get_instance().getFont(value.fontName,function(fontInfo) {
				_gthis._fontInfo = fontInfo;
				_gthis.invalidateComponent("style");
			});
		} else {
			this.invalidateComponent("style");
		}
		this._textStyle = value;
		return value;
	}
	,data: null
	,get_data: function() {
		return this._inputData;
	}
	,get_text: function() {
		return this._text;
	}
	,set_text: function(value) {
		if(value == this._text) {
			return value;
		}
		this._text = value;
		this.invalidateComponent("data");
		return value;
	}
	,get_htmlText: function() {
		return this._htmlText;
	}
	,set_htmlText: function(value) {
		if(value == this._htmlText) {
			return value;
		}
		this._htmlText = value;
		this._text = null;
		this.invalidateComponent("data");
		return value;
	}
	,get_password: function() {
		return this._inputData.password;
	}
	,set_password: function(value) {
		if(value == this._inputData.password) {
			return value;
		}
		this._inputData.password = value;
		this.invalidateComponent("style");
		return value;
	}
	,get_left: function() {
		return this._left;
	}
	,set_left: function(value) {
		if(value == this._left) {
			return value;
		}
		this._left = value;
		this.invalidateComponent("position");
		return value;
	}
	,get_top: function() {
		return this._top;
	}
	,set_top: function(value) {
		if(value == this._top) {
			return value;
		}
		this._top = value;
		this.invalidateComponent("position");
		return value;
	}
	,set_width: function(value) {
		if(this._width == value) {
			return value;
		}
		this._width = value;
		this.invalidateComponent("display");
		return value;
	}
	,get_width: function() {
		return this._width;
	}
	,set_height: function(value) {
		if(this._height == value) {
			return value;
		}
		this._height = value;
		this.invalidateComponent("display");
		return value;
	}
	,get_height: function() {
		return this._height;
	}
	,textWidth: null
	,get_textWidth: function() {
		if(this._text == null || this._text.length == 0) {
			return 0;
		}
		if(this.isComponentInvalid() == true) {
			this.validateComponent();
		}
		return this._textWidth;
	}
	,textHeight: null
	,get_textHeight: function() {
		var tmp = this._text == null || this._text.length == 0;
		if(this.isComponentInvalid() == true) {
			this.validateComponent();
		}
		return this._textHeight;
	}
	,get_multiline: function() {
		return this._displayData.multiline;
	}
	,set_multiline: function(value) {
		if(value == this._displayData.multiline) {
			return value;
		}
		this._displayData.multiline = value;
		this.invalidateComponent("style");
		return value;
	}
	,get_wordWrap: function() {
		return this._displayData.wordWrap;
	}
	,set_wordWrap: function(value) {
		if(value == this._displayData.wordWrap) {
			return value;
		}
		this._displayData.wordWrap = value;
		this.invalidateComponent("style");
		return value;
	}
	,get_hscrollPos: function() {
		return this._inputData.hscrollPos;
	}
	,set_hscrollPos: function(value) {
		if(value == this._inputData.hscrollPos) {
			return value;
		}
		this._inputData.hscrollPos = value;
		this.invalidateComponent("data");
		return value;
	}
	,hscrollMax: null
	,get_hscrollMax: function() {
		return this._inputData.hscrollMax;
	}
	,hscrollPageSize: null
	,get_hscrollPageSize: function() {
		return this._inputData.hscrollPageSize;
	}
	,get_vscrollPos: function() {
		return this._inputData.vscrollPos;
	}
	,set_vscrollPos: function(value) {
		if(value == this._inputData.vscrollPos) {
			return value;
		}
		this._inputData.vscrollPos = value;
		this.invalidateComponent("data");
		return value;
	}
	,vscrollMax: null
	,get_vscrollMax: function() {
		return this._inputData.vscrollMax;
	}
	,vscrollPageSize: null
	,get_vscrollPageSize: function() {
		return this._inputData.vscrollPageSize;
	}
	,isComponentInvalid: function(flag) {
		if(flag == null) {
			flag = "all";
		}
		if(this._isAllInvalid == true) {
			return true;
		}
		if(flag == "all") {
			var h = this._invalidationFlags.h;
			var value_h = h;
			var value_keys = Object.keys(h);
			var value_length = value_keys.length;
			var value_current = 0;
			while(value_current < value_length) {
				var value = value_h[value_keys[value_current++]];
				return true;
			}
			return false;
		}
		return Object.prototype.hasOwnProperty.call(this._invalidationFlags.h,flag);
	}
	,invalidateComponent: function(flag) {
		if(flag == null) {
			flag = "all";
		}
		if(flag == "all") {
			this._isAllInvalid = true;
			this.parentComponent.invalidateComponent("textInput");
		} else if(!Object.prototype.hasOwnProperty.call(this._invalidationFlags.h,flag)) {
			this._invalidationFlags.h[flag] = true;
			this.parentComponent.invalidateComponent("textInput");
		}
	}
	,_depth: null
	,get_depth: function() {
		return this._depth;
	}
	,set_depth: function(value) {
		if(this._depth == value) {
			return value;
		}
		this._depth = value;
		return value;
	}
	,updateComponentDisplay: function() {
	}
	,validateComponent: function(nextFrame) {
		if(nextFrame == null) {
			nextFrame = true;
		}
		if(this._isValidating == true || this.isComponentInvalid() == false) {
			return;
		}
		this._isValidating = true;
		this.validateComponentInternal();
		var h = this._invalidationFlags.h;
		var flag_h = h;
		var flag_keys = Object.keys(h);
		var flag_length = flag_keys.length;
		var flag_current = 0;
		while(flag_current < flag_length) {
			var flag = flag_keys[flag_current++];
			var _this = this._invalidationFlags;
			if(Object.prototype.hasOwnProperty.call(_this.h,flag)) {
				delete(_this.h[flag]);
			}
		}
		this._isAllInvalid = false;
		this._isValidating = false;
	}
	,validateComponentInternal: function() {
		var dataInvalid = this.isComponentInvalid("data");
		var styleInvalid = this.isComponentInvalid("style");
		var positionInvalid = this.isComponentInvalid("position");
		var displayInvalid = this.isComponentInvalid("display");
		var measureInvalid = this.isComponentInvalid("measure");
		if(dataInvalid) {
			this.validateData();
		}
		if(styleInvalid) {
			if(this.validateStyle()) {
				measureInvalid = true;
			}
		}
		if(positionInvalid) {
			this.validatePosition();
		}
		if(displayInvalid) {
			this.validateDisplay();
		}
		if(dataInvalid || displayInvalid || measureInvalid) {
			this.measureText();
		}
		if(dataInvalid) {
			if(this._inputData.onChangedCallback != null) {
				this._inputData.onChangedCallback();
			}
		}
	}
	,__class__: haxe_ui_core_TextInput
	,__properties__: $extend(haxe_ui_backend_TextInputImpl.prototype.__properties__,{set_depth:"set_depth",get_depth:"get_depth",get_vscrollPageSize:"get_vscrollPageSize",get_vscrollMax:"get_vscrollMax",set_vscrollPos:"set_vscrollPos",get_vscrollPos:"get_vscrollPos",get_hscrollPageSize:"get_hscrollPageSize",get_hscrollMax:"get_hscrollMax",set_hscrollPos:"set_hscrollPos",get_hscrollPos:"get_hscrollPos",set_wordWrap:"set_wordWrap",get_wordWrap:"get_wordWrap",set_multiline:"set_multiline",get_multiline:"get_multiline",get_textHeight:"get_textHeight",get_textWidth:"get_textWidth",set_height:"set_height",get_height:"get_height",set_width:"set_width",get_width:"get_width",set_top:"set_top",get_top:"get_top",set_left:"set_left",get_left:"get_left",set_password:"set_password",get_password:"get_password",set_htmlText:"set_htmlText",get_htmlText:"get_htmlText",set_text:"set_text",get_text:"get_text",get_data:"get_data",set_textStyle:"set_textStyle",get_textStyle:"get_textStyle",get_isComponentOffscreen:"get_isComponentOffscreen",set_id:"set_id",get_id:"get_id"})
});
var haxe_ui_core_TypeMap = function() { };
$hxClasses["haxe.ui.core.TypeMap"] = haxe_ui_core_TypeMap;
haxe_ui_core_TypeMap.__name__ = "haxe.ui.core.TypeMap";
haxe_ui_core_TypeMap.getTypeInfo = function(className,property) {
	var propInfo = haxe_ui_util_RTTI.getClassProperty(className,property);
	if(propInfo == null) {
		return null;
	}
	return propInfo.propertyType;
};
var haxe_ui_data_DataSource = function(transformer) {
	this._filterFn = null;
	this.onChange = null;
	this.onClear = null;
	this.onRemove = null;
	this.onUpdate = null;
	this.onInsert = null;
	this.onAdd = null;
	this.transformer = transformer;
	this._allowCallbacks = true;
	this._changed = false;
};
$hxClasses["haxe.ui.data.DataSource"] = haxe_ui_data_DataSource;
haxe_ui_data_DataSource.__name__ = "haxe.ui.data.DataSource";
haxe_ui_data_DataSource.fromString = function(data,type) {
	return null;
};
haxe_ui_data_DataSource.prototype = {
	onDataSourceChange: null
	,transformer: null
	,_changed: null
	,onAdd: null
	,onInsert: null
	,onUpdate: null
	,onRemove: null
	,onClear: null
	,onChange: null
	,_allowCallbacks: null
	,get_allowCallbacks: function() {
		return this._allowCallbacks;
	}
	,set_allowCallbacks: function(value) {
		this._allowCallbacks = value;
		if(this._allowCallbacks == true && this._changed == true) {
			this._changed = false;
			this.onInternalChange();
		}
		return value;
	}
	,get_data: function() {
		return this.handleGetData();
	}
	,set_data: function(value) {
		this.handleSetData(value);
		this.handleChanged();
		return value;
	}
	,size: null
	,get_size: function() {
		return this.handleGetSize();
	}
	,get: function(index) {
		var r = this.handleGetItem(index);
		if(js_Boot.__implements(r,haxe_ui_data_IDataItem)) {
			(js_Boot.__cast(r , haxe_ui_data_IDataItem)).onDataSourceChanged = $bind(this,this.onDataItemChange);
		}
		if(this.transformer != null) {
			r = this.transformer.transformFrom(r);
		}
		return r;
	}
	,indexOf: function(item) {
		if(this.transformer != null) {
			item = this.transformer.transformFrom(item);
		}
		return this.handleIndexOf(item);
	}
	,add: function(item) {
		var r = this.handleAddItem(item);
		this.handleChanged();
		if(this._allowCallbacks == true && this.onAdd != null) {
			this.onAdd(r);
		}
		return r;
	}
	,insert: function(index,item) {
		var r = this.handleInsert(index,item);
		this.handleChanged();
		if(this._allowCallbacks == true && this.onInsert != null) {
			this.onInsert(index,r);
		}
		return r;
	}
	,remove: function(item) {
		var r = this.handleRemoveItem(item);
		this.handleChanged();
		if(this._allowCallbacks == true && this.onRemove != null) {
			this.onRemove(r);
		}
		return r;
	}
	,removeAt: function(index) {
		var item = this.get(index);
		return this.remove(item);
	}
	,update: function(index,item) {
		var r = this.handleUpdateItem(index,item);
		this.handleChanged();
		if(this._allowCallbacks == true && this.onUpdate != null) {
			this.onUpdate(index,r);
		}
		return r;
	}
	,clear: function() {
		var o = this._allowCallbacks;
		this._allowCallbacks = false;
		this.handleClear();
		this._allowCallbacks = o;
		this.handleChanged();
		if(this._allowCallbacks == true && this.onClear != null) {
			this.onClear();
		}
	}
	,_filterFn: null
	,clearFilter: function() {
		this._filterFn = null;
		this.handleClearFilter();
	}
	,filter: function(fn) {
		this._filterFn = fn;
		this.handleFilter(fn);
	}
	,isFiltered: null
	,get_isFiltered: function() {
		return this._filterFn != null;
	}
	,handleClearFilter: function() {
	}
	,handleFilter: function(fn) {
	}
	,handleChanged: function() {
		this._changed = true;
		if(this._allowCallbacks == true) {
			this._changed = false;
			this.onInternalChange();
		}
	}
	,sortCustom: function(fn,direction) {
	}
	,sort: function(field,direction) {
		var _g = $bind(this,this.sortByFn);
		var field1 = field;
		this.sortCustom(function(o1,o2,direction) {
			return _g(o1,o2,direction,field1);
		},direction);
	}
	,sortByFn: function(o1,o2,direction,field) {
		var f1 = o1;
		var f2 = o2;
		if(field != null) {
			f1 = Reflect.field(o1,field);
			f2 = Reflect.field(o2,field);
		}
		if(f1 == null || f2 == null) {
			return 0;
		}
		f1 = Std.string(f1);
		f2 = Std.string(f2);
		if(direction == null) {
			direction = "asc";
		}
		var high = 1;
		var low = -1;
		if(direction == "desc") {
			high = -1;
			low = 1;
		}
		if(f1 > f2) {
			return high;
		} else {
			return low;
		}
	}
	,handleGetSize: function() {
		return 0;
	}
	,handleGetItem: function(index) {
		return null;
	}
	,handleIndexOf: function(item) {
		return 0;
	}
	,handleAddItem: function(item) {
		return null;
	}
	,handleInsert: function(index,item) {
		return null;
	}
	,handleRemoveItem: function(item) {
		return null;
	}
	,handleGetData: function() {
		return null;
	}
	,handleSetData: function(v) {
	}
	,handleClear: function() {
		var cachedTransformer = this.transformer;
		this.transformer = null;
		while(this.get_size() > 0) this.remove(this.get(0));
		this.transformer = cachedTransformer;
	}
	,handleUpdateItem: function(index,item) {
		return null;
	}
	,clone: function() {
		var c = new haxe_ui_data_DataSource();
		return c;
	}
	,onDataItemChange: function() {
		if(this._filterFn != null) {
			this.handleFilter(this._filterFn);
		} else {
			this.onInternalChange();
		}
	}
	,onInternalChange: function() {
		if(this.onDataSourceChange != null) {
			this.onDataSourceChange();
		}
		if(this.onChange != null) {
			this.onChange();
		}
	}
	,__class__: haxe_ui_data_DataSource
	,__properties__: {get_isFiltered:"get_isFiltered",get_size:"get_size",set_data:"set_data",get_data:"get_data",set_allowCallbacks:"set_allowCallbacks",get_allowCallbacks:"get_allowCallbacks"}
};
var haxe_ui_data_ArrayDataSource = function(transformer) {
	this._filteredArray = null;
	haxe_ui_data_DataSource.call(this,transformer);
	this._array = [];
};
$hxClasses["haxe.ui.data.ArrayDataSource"] = haxe_ui_data_ArrayDataSource;
haxe_ui_data_ArrayDataSource.__name__ = "haxe.ui.data.ArrayDataSource";
haxe_ui_data_ArrayDataSource.fromArray = function(source,transformer) {
	var ds = new haxe_ui_data_ArrayDataSource(transformer);
	ds._array = source;
	return ds;
};
haxe_ui_data_ArrayDataSource.__super__ = haxe_ui_data_DataSource;
haxe_ui_data_ArrayDataSource.prototype = $extend(haxe_ui_data_DataSource.prototype,{
	_array: null
	,_filteredArray: null
	,handleClearFilter: function() {
		if(this._filteredArray == null) {
			return;
		}
		this._filteredArray = null;
		this.handleChanged();
	}
	,handleFilter: function(fn) {
		this._filteredArray = [];
		var index = 0;
		var _g = 0;
		var _g1 = this._array;
		while(_g < _g1.length) {
			var item = _g1[_g];
			++_g;
			if(fn(index,item) == true) {
				this._filteredArray.push(item);
			}
			++index;
		}
		this.handleChanged();
	}
	,sortCustom: function(fn,direction) {
		var _g = fn;
		var a3 = direction;
		var tmp = function(a1,a2) {
			return _g(a1,a2,a3);
		};
		this._array.sort(tmp);
		this.handleChanged();
	}
	,handleGetSize: function() {
		if(this._filteredArray != null) {
			return this._filteredArray.length;
		}
		return this._array.length;
	}
	,handleGetItem: function(index) {
		if(this._filteredArray != null) {
			return this._filteredArray[index];
		}
		return this._array[index];
	}
	,handleIndexOf: function(item) {
		if(this._filteredArray != null) {
			return this._filteredArray.indexOf(item);
		}
		return this._array.indexOf(item);
	}
	,handleAddItem: function(item) {
		this._array.push(item);
		if(this._filteredArray != null && this._filterFn != null) {
			if(this._filterFn(this._array.length - 1,item) == true) {
				this._filteredArray.push(item);
			}
		}
		return item;
	}
	,handleInsert: function(index,item) {
		this._array.splice(index,0,item);
		if(this._filteredArray != null && this._filterFn != null) {
			if(this._filterFn(index,item) == true) {
				this._filteredArray.push(item);
			}
		}
		return item;
	}
	,handleRemoveItem: function(item) {
		HxOverrides.remove(this._array,item);
		if(this._filteredArray != null) {
			HxOverrides.remove(this._filteredArray,item);
		}
		return item;
	}
	,handleClear: function() {
		while(this._array.length > 0) this._array.pop();
		if(this._filteredArray != null) {
			while(this._filteredArray.length > 0) this._filteredArray.pop();
		}
	}
	,handleGetData: function() {
		if(this._filteredArray != null) {
			return this._filteredArray;
		}
		return this._array;
	}
	,handleSetData: function(v) {
		this._array = v;
		if(this._filterFn != null) {
			this.filter(this._filterFn);
		}
	}
	,handleUpdateItem: function(index,item) {
		if(this._filteredArray != null) {
			return this._filteredArray[index] = item;
		}
		return this._array[index] = item;
	}
	,clone: function() {
		var c = new haxe_ui_data_ArrayDataSource();
		c._array = this._array.slice();
		if(this._filteredArray != null) {
			c._filteredArray = this._filteredArray.slice();
		}
		if(this._filterFn != null) {
			c._filterFn = this._filterFn;
		}
		return c;
	}
	,__class__: haxe_ui_data_ArrayDataSource
});
var haxe_ui_data_IDataItem = function() { };
$hxClasses["haxe.ui.data.IDataItem"] = haxe_ui_data_IDataItem;
haxe_ui_data_IDataItem.__name__ = "haxe.ui.data.IDataItem";
haxe_ui_data_IDataItem.__isInterface__ = true;
haxe_ui_data_IDataItem.prototype = {
	onDataSourceChanged: null
	,__class__: haxe_ui_data_IDataItem
};
var haxe_ui_data_transformation_IItemTransformer = function() { };
$hxClasses["haxe.ui.data.transformation.IItemTransformer"] = haxe_ui_data_transformation_IItemTransformer;
haxe_ui_data_transformation_IItemTransformer.__name__ = "haxe.ui.data.transformation.IItemTransformer";
haxe_ui_data_transformation_IItemTransformer.__isInterface__ = true;
haxe_ui_data_transformation_IItemTransformer.prototype = {
	transformFrom: null
	,__class__: haxe_ui_data_transformation_IItemTransformer
};
var haxe_ui_data_transformation_NativeTypeTransformer = function() {
};
$hxClasses["haxe.ui.data.transformation.NativeTypeTransformer"] = haxe_ui_data_transformation_NativeTypeTransformer;
haxe_ui_data_transformation_NativeTypeTransformer.__name__ = "haxe.ui.data.transformation.NativeTypeTransformer";
haxe_ui_data_transformation_NativeTypeTransformer.__interfaces__ = [haxe_ui_data_transformation_IItemTransformer];
haxe_ui_data_transformation_NativeTypeTransformer.prototype = {
	transformFrom: function(i) {
		var o = null;
		if(typeof(i) == "string") {
			o = { text : i, value : i};
		} else if(typeof(i) == "number" && ((i | 0) === i) || typeof(i) == "number" || typeof(i) == "boolean") {
			o = { value : i};
		} else {
			o = i;
		}
		return o;
	}
	,__class__: haxe_ui_data_transformation_NativeTypeTransformer
};
var haxe_ui_dragdrop_DragManager = function() {
	this._dragComponents = new haxe_ds_ObjectMap();
	this._mouseTargetToDragTarget = new haxe_ds_ObjectMap();
};
$hxClasses["haxe.ui.dragdrop.DragManager"] = haxe_ui_dragdrop_DragManager;
haxe_ui_dragdrop_DragManager.__name__ = "haxe.ui.dragdrop.DragManager";
haxe_ui_dragdrop_DragManager.__properties__ = {get_instance:"get_instance"};
haxe_ui_dragdrop_DragManager.get_instance = function() {
	if(haxe_ui_dragdrop_DragManager._instance == null) {
		haxe_ui_dragdrop_DragManager._instance = new haxe_ui_dragdrop_DragManager();
	}
	return haxe_ui_dragdrop_DragManager._instance;
};
haxe_ui_dragdrop_DragManager.prototype = {
	_dragComponents: null
	,_mouseTargetToDragTarget: null
	,_currentComponent: null
	,_currentOptions: null
	,_mouseOffset: null
	,getDragOptions: function(component) {
		var dragOptions = this._dragComponents.h[component.__id__];
		return dragOptions;
	}
	,registerDraggable: function(component,dragOptions) {
		if(this.isRegisteredDraggable(component)) {
			return null;
		}
		if(dragOptions == null) {
			dragOptions = { };
		}
		if(dragOptions.mouseTarget == null) {
			dragOptions.mouseTarget = component;
		}
		if(dragOptions.dragOffsetX == null) {
			dragOptions.dragOffsetX = 0;
		}
		if(dragOptions.dragOffsetY == null) {
			dragOptions.dragOffsetY = 0;
		}
		if(dragOptions.dragTolerance == null) {
			dragOptions.dragTolerance = haxe_ui_Toolkit.get_scale() | 0;
		}
		if(dragOptions.draggableStyleName == null) {
			dragOptions.draggableStyleName = "draggable";
		}
		if(dragOptions.draggingStyleName == null) {
			dragOptions.draggingStyleName = "dragging";
		}
		this._dragComponents.set(component,dragOptions);
		this._mouseTargetToDragTarget.set(dragOptions.mouseTarget,component);
		if(!dragOptions.mouseTarget.hasEvent("mousedown",$bind(this,this.onMouseDown))) {
			dragOptions.mouseTarget.registerEvent("mousedown",$bind(this,this.onMouseDown));
		}
		if(dragOptions.draggableStyleName != null) {
			dragOptions.mouseTarget.addClass(dragOptions.draggableStyleName);
		}
		return dragOptions;
	}
	,unregisterDraggable: function(component) {
		if(!this.isRegisteredDraggable(component)) {
			return;
		}
		var dragOptions = this.getDragOptions(component);
		if(dragOptions != null && dragOptions.mouseTarget != null) {
			dragOptions.mouseTarget.unregisterEvent("mousedown",$bind(this,this.onMouseDown));
			this._mouseTargetToDragTarget.remove(dragOptions.mouseTarget);
		}
		haxe_ui_core_Screen.get_instance().unregisterEvent("mousemove",$bind(this,this.onScreenCheckForDrag));
		haxe_ui_core_Screen.get_instance().unregisterEvent("mousemove",$bind(this,this.onScreenDrag));
		haxe_ui_core_Screen.get_instance().unregisterEvent("mouseup",$bind(this,this.onScreenMouseUp));
		this._dragComponents.remove(component);
	}
	,isRegisteredDraggable: function(component) {
		return this._dragComponents.h.__keys__[component.__id__] != null;
	}
	,onMouseDown: function(e) {
		this._currentComponent = this._mouseTargetToDragTarget.h[e.target.__id__];
		if(this._currentComponent.parentComponent == null) {
			e.screenX *= haxe_ui_Toolkit.get_scaleX();
			e.screenY *= haxe_ui_Toolkit.get_scaleY();
		}
		this._currentOptions = this.getDragOptions(this._currentComponent);
		this._mouseOffset = new haxe_ui_geom_Point(e.screenX - this._currentComponent.get_left(),e.screenY - this._currentComponent.get_top());
		haxe_ui_core_Screen.get_instance().registerEvent("mouseup",$bind(this,this.onScreenMouseUp));
		haxe_ui_core_Screen.get_instance().registerEvent("mousemove",$bind(this,this.onScreenCheckForDrag));
	}
	,onScreenCheckForDrag: function(e) {
		if(this._currentComponent.parentComponent == null) {
			e.screenX *= haxe_ui_Toolkit.get_scaleX();
			e.screenY *= haxe_ui_Toolkit.get_scaleY();
		}
		var x1 = e.screenX - this._currentComponent.get_left();
		var y1 = e.screenY - this._currentComponent.get_top();
		var x2 = this._mouseOffset.x;
		var y2 = this._mouseOffset.y;
		if(Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2)) > this._currentOptions.dragTolerance) {
			haxe_ui_core_Screen.get_instance().unregisterEvent("mousemove",$bind(this,this.onScreenCheckForDrag));
			haxe_ui_core_Screen.get_instance().registerEvent("mousemove",$bind(this,this.onScreenDrag));
			this._mouseOffset.x -= this._currentOptions.dragOffsetX;
			this._mouseOffset.y -= this._currentOptions.dragOffsetY;
			if(this._currentOptions.draggingStyleName != null) {
				this._currentComponent.addClass(this._currentOptions.draggingStyleName);
			}
			this._currentComponent.dispatch(new haxe_ui_events_DragEvent("dragstart"));
		}
	}
	,onScreenDrag: function(e) {
		if(this._currentComponent.parentComponent == null) {
			e.screenX *= haxe_ui_Toolkit.get_scaleX();
			e.screenY *= haxe_ui_Toolkit.get_scaleY();
		}
		var event = new haxe_ui_events_DragEvent("drag");
		if(this._currentOptions.dragBounds != null) {
			var v = e.screenX;
			var min = this._currentOptions.dragBounds.left + this._mouseOffset.x;
			var max = this._currentOptions.dragBounds.get_right() - this._currentComponent.get_width() + this._mouseOffset.x;
			var boundX;
			if(v == null || isNaN(v)) {
				boundX = min;
			} else {
				if(min != null && v < min) {
					v = min;
				} else if(max != null && v > max) {
					v = max;
				}
				boundX = v;
			}
			var v = e.screenY;
			var min = this._currentOptions.dragBounds.top + this._mouseOffset.y;
			var max = this._currentOptions.dragBounds.get_bottom() - this._currentComponent.get_height() + this._mouseOffset.y;
			var boundY;
			if(v == null || isNaN(v)) {
				boundY = min;
			} else {
				if(min != null && v < min) {
					v = min;
				} else if(max != null && v > max) {
					v = max;
				}
				boundY = v;
			}
			event.left = boundX - this._mouseOffset.x;
			event.top = boundY - this._mouseOffset.y;
		} else {
			var xpos = e.screenX;
			var ypos = e.screenY;
			event.left = xpos - this._mouseOffset.x;
			event.top = ypos - this._mouseOffset.y;
		}
		this._currentComponent.dispatch(event);
		if(event.canceled == true) {
			return;
		}
		this._currentComponent.moveComponent(event.left,event.top);
	}
	,onScreenMouseUp: function(e) {
		if(this._currentOptions.draggingStyleName != null) {
			this._currentComponent.removeClass(this._currentOptions.draggingStyleName);
		}
		this._currentComponent.dispatch(new haxe_ui_events_DragEvent("dragend"));
		this._currentComponent = null;
		this._currentOptions = null;
		this._mouseOffset.x = 0;
		this._mouseOffset.y = 0;
		haxe_ui_core_Screen.get_instance().unregisterEvent("mouseup",$bind(this,this.onScreenMouseUp));
		haxe_ui_core_Screen.get_instance().unregisterEvent("mousemove",$bind(this,this.onScreenCheckForDrag));
		haxe_ui_core_Screen.get_instance().unregisterEvent("mousemove",$bind(this,this.onScreenDrag));
	}
	,__class__: haxe_ui_dragdrop_DragManager
};
var haxe_ui_events_ActionEvent = function(type,action,bubble,data) {
	if(bubble == null) {
		bubble = false;
	}
	this.repeater = false;
	haxe_ui_events_UIEvent.call(this,type,bubble,data);
	this.action = action;
};
$hxClasses["haxe.ui.events.ActionEvent"] = haxe_ui_events_ActionEvent;
haxe_ui_events_ActionEvent.__name__ = "haxe.ui.events.ActionEvent";
haxe_ui_events_ActionEvent.__super__ = haxe_ui_events_UIEvent;
haxe_ui_events_ActionEvent.prototype = $extend(haxe_ui_events_UIEvent.prototype,{
	action: null
	,repeater: null
	,clone: function() {
		var c = new haxe_ui_events_ActionEvent(this.type,this.action);
		c.type = this.type;
		c.bubble = this.bubble;
		c.target = this.target;
		c.data = this.data;
		c.canceled = this.canceled;
		c.relatedEvent = this.relatedEvent;
		c.action = this.action;
		c.repeater = this.repeater;
		this.postClone(c);
		return c;
	}
	,copyFrom: function(e) {
		var ae = js_Boot.__cast(e , haxe_ui_events_ActionEvent);
		this.action = ae.action;
		this.repeater = ae.repeater;
	}
	,__class__: haxe_ui_events_ActionEvent
});
var haxe_ui_events_AnimationEvent = function(type) {
	haxe_ui_events_UIEvent.call(this,type);
};
$hxClasses["haxe.ui.events.AnimationEvent"] = haxe_ui_events_AnimationEvent;
haxe_ui_events_AnimationEvent.__name__ = "haxe.ui.events.AnimationEvent";
haxe_ui_events_AnimationEvent.__super__ = haxe_ui_events_UIEvent;
haxe_ui_events_AnimationEvent.prototype = $extend(haxe_ui_events_UIEvent.prototype,{
	currentTime: null
	,delta: null
	,position: null
	,clone: function() {
		var c = new haxe_ui_events_AnimationEvent(this.type);
		c.currentTime = this.currentTime;
		c.delta = this.delta;
		c.position = this.position;
		return c;
	}
	,__class__: haxe_ui_events_AnimationEvent
});
var haxe_ui_events_DragEvent = function(type,bubble,data) {
	this.top = 0;
	this.left = 0;
	haxe_ui_events_UIEvent.call(this,type,bubble,data);
};
$hxClasses["haxe.ui.events.DragEvent"] = haxe_ui_events_DragEvent;
haxe_ui_events_DragEvent.__name__ = "haxe.ui.events.DragEvent";
haxe_ui_events_DragEvent.__super__ = haxe_ui_events_UIEvent;
haxe_ui_events_DragEvent.prototype = $extend(haxe_ui_events_UIEvent.prototype,{
	left: null
	,top: null
	,clone: function() {
		var c = new haxe_ui_events_DragEvent(this.type);
		c.type = this.type;
		c.bubble = this.bubble;
		c.target = this.target;
		c.data = this.data;
		c.canceled = this.canceled;
		c.left = this.left;
		c.top = this.top;
		this.postClone(c);
		return c;
	}
	,copyFrom: function(c) {
		var d = js_Boot.__cast(c , haxe_ui_events_DragEvent);
		this.left = d.left;
		this.top = d.top;
	}
	,__class__: haxe_ui_events_DragEvent
});
var haxe_ui_events_FocusEvent = function(type) {
	haxe_ui_events_UIEvent.call(this,type);
};
$hxClasses["haxe.ui.events.FocusEvent"] = haxe_ui_events_FocusEvent;
haxe_ui_events_FocusEvent.__name__ = "haxe.ui.events.FocusEvent";
haxe_ui_events_FocusEvent.__super__ = haxe_ui_events_UIEvent;
haxe_ui_events_FocusEvent.prototype = $extend(haxe_ui_events_UIEvent.prototype,{
	clone: function() {
		var c = new haxe_ui_events_FocusEvent(this.type);
		c.type = this.type;
		c.target = this.target;
		this.postClone(c);
		return c;
	}
	,__class__: haxe_ui_events_FocusEvent
});
var haxe_ui_events_ItemEvent = function(type,bubble,data) {
	this.itemIndex = -1;
	this.sourceEvent = null;
	this.source = null;
	haxe_ui_events_UIEvent.call(this,type,bubble,data);
};
$hxClasses["haxe.ui.events.ItemEvent"] = haxe_ui_events_ItemEvent;
haxe_ui_events_ItemEvent.__name__ = "haxe.ui.events.ItemEvent";
haxe_ui_events_ItemEvent.__super__ = haxe_ui_events_UIEvent;
haxe_ui_events_ItemEvent.prototype = $extend(haxe_ui_events_UIEvent.prototype,{
	source: null
	,sourceEvent: null
	,itemIndex: null
	,clone: function() {
		var c = new haxe_ui_events_ItemEvent(this.type);
		c.source = this.source;
		c.sourceEvent = this.sourceEvent;
		c.itemIndex = this.itemIndex;
		c.type = this.type;
		c.bubble = this.bubble;
		c.target = this.target;
		c.data = this.data;
		c.canceled = this.canceled;
		this.postClone(c);
		return c;
	}
	,__class__: haxe_ui_events_ItemEvent
});
var haxe_ui_events_KeyboardEvent = function(type) {
	haxe_ui_events_UIEvent.call(this,type);
};
$hxClasses["haxe.ui.events.KeyboardEvent"] = haxe_ui_events_KeyboardEvent;
haxe_ui_events_KeyboardEvent.__name__ = "haxe.ui.events.KeyboardEvent";
haxe_ui_events_KeyboardEvent.__super__ = haxe_ui_events_UIEvent;
haxe_ui_events_KeyboardEvent.prototype = $extend(haxe_ui_events_UIEvent.prototype,{
	keyCode: null
	,altKey: null
	,ctrlKey: null
	,shiftKey: null
	,clone: function() {
		var c = new haxe_ui_events_KeyboardEvent(this.type);
		c.type = this.type;
		c.target = this.target;
		c.keyCode = this.keyCode;
		c.altKey = this.altKey;
		c.ctrlKey = this.ctrlKey;
		c.shiftKey = this.shiftKey;
		return c;
	}
	,__class__: haxe_ui_events_KeyboardEvent
});
var haxe_ui_events_MouseEvent = function(type) {
	haxe_ui_events_UIEvent.call(this,type);
};
$hxClasses["haxe.ui.events.MouseEvent"] = haxe_ui_events_MouseEvent;
haxe_ui_events_MouseEvent.__name__ = "haxe.ui.events.MouseEvent";
haxe_ui_events_MouseEvent.__super__ = haxe_ui_events_UIEvent;
haxe_ui_events_MouseEvent.prototype = $extend(haxe_ui_events_UIEvent.prototype,{
	screenX: null
	,screenY: null
	,buttonDown: null
	,delta: null
	,touchEvent: null
	,ctrlKey: null
	,shiftKey: null
	,localX: null
	,get_localX: function() {
		if(this.target == null) {
			return null;
		}
		return (this.screenX * haxe_ui_Toolkit.get_scaleX() - this.target.get_screenLeft()) / haxe_ui_Toolkit.get_scaleX();
	}
	,localY: null
	,get_localY: function() {
		if(this.target == null) {
			return null;
		}
		return (this.screenY * haxe_ui_Toolkit.get_scaleY() - this.target.get_screenTop()) / haxe_ui_Toolkit.get_scaleY();
	}
	,clone: function() {
		var c = new haxe_ui_events_MouseEvent(this.type);
		c.type = this.type;
		c.target = this.target;
		c.screenX = this.screenX;
		c.screenY = this.screenY;
		c.buttonDown = this.buttonDown;
		c.delta = this.delta;
		c.touchEvent = this.touchEvent;
		c.ctrlKey = this.ctrlKey;
		c.shiftKey = this.shiftKey;
		this.postClone(c);
		return c;
	}
	,__class__: haxe_ui_events_MouseEvent
	,__properties__: {get_localY:"get_localY",get_localX:"get_localX"}
});
var haxe_ui_events_ScrollEvent = function(type) {
	haxe_ui_events_UIEvent.call(this,type);
};
$hxClasses["haxe.ui.events.ScrollEvent"] = haxe_ui_events_ScrollEvent;
haxe_ui_events_ScrollEvent.__name__ = "haxe.ui.events.ScrollEvent";
haxe_ui_events_ScrollEvent.__super__ = haxe_ui_events_UIEvent;
haxe_ui_events_ScrollEvent.prototype = $extend(haxe_ui_events_UIEvent.prototype,{
	clone: function() {
		var c = new haxe_ui_events_ScrollEvent(this.type);
		c.type = this.type;
		c.target = this.target;
		this.postClone(c);
		return c;
	}
	,__class__: haxe_ui_events_ScrollEvent
});
var haxe_ui_events_SortEvent = function(type,bubble,data) {
	haxe_ui_events_UIEvent.call(this,type,bubble,data);
};
$hxClasses["haxe.ui.events.SortEvent"] = haxe_ui_events_SortEvent;
haxe_ui_events_SortEvent.__name__ = "haxe.ui.events.SortEvent";
haxe_ui_events_SortEvent.__super__ = haxe_ui_events_UIEvent;
haxe_ui_events_SortEvent.prototype = $extend(haxe_ui_events_UIEvent.prototype,{
	direction: null
	,clone: function() {
		var c = new haxe_ui_events_SortEvent(this.type);
		c.type = this.type;
		c.bubble = this.bubble;
		c.target = this.target;
		c.data = this.data;
		c.canceled = this.canceled;
		c.direction = this.direction;
		this.postClone(c);
		return c;
	}
	,__class__: haxe_ui_events_SortEvent
});
var haxe_ui_events_ThemeEvent = function(type,bubble,data) {
	haxe_ui_events_UIEvent.call(this,type,bubble,data);
};
$hxClasses["haxe.ui.events.ThemeEvent"] = haxe_ui_events_ThemeEvent;
haxe_ui_events_ThemeEvent.__name__ = "haxe.ui.events.ThemeEvent";
haxe_ui_events_ThemeEvent.__super__ = haxe_ui_events_UIEvent;
haxe_ui_events_ThemeEvent.prototype = $extend(haxe_ui_events_UIEvent.prototype,{
	__class__: haxe_ui_events_ThemeEvent
});
var haxe_ui_events_ValidationEvent = function(type) {
	haxe_ui_events_UIEvent.call(this,type);
};
$hxClasses["haxe.ui.events.ValidationEvent"] = haxe_ui_events_ValidationEvent;
haxe_ui_events_ValidationEvent.__name__ = "haxe.ui.events.ValidationEvent";
haxe_ui_events_ValidationEvent.__super__ = haxe_ui_events_UIEvent;
haxe_ui_events_ValidationEvent.prototype = $extend(haxe_ui_events_UIEvent.prototype,{
	clone: function() {
		var c = new haxe_ui_events_ValidationEvent(this.type);
		c.type = this.type;
		c.target = this.target;
		this.postClone(c);
		return c;
	}
	,__class__: haxe_ui_events_ValidationEvent
});
var haxe_ui_filters_Filter = function() {
};
$hxClasses["haxe.ui.filters.Filter"] = haxe_ui_filters_Filter;
haxe_ui_filters_Filter.__name__ = "haxe.ui.filters.Filter";
haxe_ui_filters_Filter.prototype = {
	__class__: haxe_ui_filters_Filter
};
var haxe_ui_filters_Blur = function() {
	haxe_ui_filters_Filter.call(this);
};
$hxClasses["haxe.ui.filters.Blur"] = haxe_ui_filters_Blur;
haxe_ui_filters_Blur.__name__ = "haxe.ui.filters.Blur";
haxe_ui_filters_Blur.__super__ = haxe_ui_filters_Filter;
haxe_ui_filters_Blur.prototype = $extend(haxe_ui_filters_Filter.prototype,{
	amount: null
	,__class__: haxe_ui_filters_Blur
});
var haxe_ui_filters_DropShadow = function() {
	haxe_ui_filters_Filter.call(this);
};
$hxClasses["haxe.ui.filters.DropShadow"] = haxe_ui_filters_DropShadow;
haxe_ui_filters_DropShadow.__name__ = "haxe.ui.filters.DropShadow";
haxe_ui_filters_DropShadow.__super__ = haxe_ui_filters_Filter;
haxe_ui_filters_DropShadow.prototype = $extend(haxe_ui_filters_Filter.prototype,{
	distance: null
	,angle: null
	,color: null
	,alpha: null
	,blurX: null
	,blurY: null
	,strength: null
	,quality: null
	,inner: null
	,__class__: haxe_ui_filters_DropShadow
});
var haxe_ui_filters_FilterParser = function() { };
$hxClasses["haxe.ui.filters.FilterParser"] = haxe_ui_filters_FilterParser;
haxe_ui_filters_FilterParser.__name__ = "haxe.ui.filters.FilterParser";
haxe_ui_filters_FilterParser.parseFilter = function(filterDetails) {
	var filter = null;
	if(filterDetails[0] == "drop-shadow") {
		filter = haxe_ui_filters_FilterParser.parseDropShadow(filterDetails);
	} else if(filterDetails[0] == "blur") {
		filter = haxe_ui_filters_FilterParser.parseBlur(filterDetails);
	} else if(filterDetails[0] == "outline") {
		filter = haxe_ui_filters_FilterParser.parseOutline(filterDetails);
	} else if(filterDetails[0] == "grayscale") {
		filter = haxe_ui_filters_FilterParser.parseGrayscale(filterDetails);
	}
	return filter;
};
haxe_ui_filters_FilterParser.parseDropShadow = function(filterDetails) {
	if(filterDetails == null || filterDetails.length == 0) {
		return null;
	}
	var copy = filterDetails.slice();
	haxe_ui_filters_FilterParser.buildDefaults();
	var filterName = copy[0];
	HxOverrides.remove(copy,filterName);
	copy = haxe_ui_filters_FilterParser.copyFilterDefaults(filterName,copy);
	var dropShadow = new haxe_ui_filters_DropShadow();
	dropShadow.distance = copy[0];
	dropShadow.angle = copy[1];
	dropShadow.color = copy[2];
	dropShadow.alpha = copy[3];
	dropShadow.blurX = copy[4];
	dropShadow.blurY = copy[5];
	dropShadow.strength = copy[6];
	dropShadow.quality = copy[7];
	dropShadow.inner = copy[8];
	return dropShadow;
};
haxe_ui_filters_FilterParser.parseBlur = function(filterDetails) {
	if(filterDetails == null || filterDetails.length == 0) {
		return null;
	}
	var copy = filterDetails.slice();
	haxe_ui_filters_FilterParser.buildDefaults();
	var filterName = copy[0];
	HxOverrides.remove(copy,filterName);
	copy = haxe_ui_filters_FilterParser.copyFilterDefaults(filterName,copy);
	var blur = new haxe_ui_filters_Blur();
	blur.amount = copy[0];
	return blur;
};
haxe_ui_filters_FilterParser.parseOutline = function(filterDetails) {
	if(filterDetails == null || filterDetails.length == 0) {
		return null;
	}
	var copy = filterDetails.slice();
	haxe_ui_filters_FilterParser.buildDefaults();
	var filterName = copy[0];
	HxOverrides.remove(copy,filterName);
	copy = haxe_ui_filters_FilterParser.copyFilterDefaults(filterName,copy);
	var outline = new haxe_ui_filters_Outline();
	outline.color = copy[0];
	outline.size = copy[1];
	return outline;
};
haxe_ui_filters_FilterParser.copyFilterDefaults = function(filterName,params) {
	var copy = [];
	var defaultParams = haxe_ui_filters_FilterParser.filterParamDefaults.h[filterName];
	if(defaultParams != null) {
		var _g = 0;
		while(_g < defaultParams.length) {
			var p = defaultParams[_g];
			++_g;
			copy.push(p);
		}
	}
	if(params != null) {
		var n = 0;
		var _g = 0;
		while(_g < params.length) {
			var p = params[_g];
			++_g;
			copy[n] = p;
			++n;
		}
	}
	return copy;
};
haxe_ui_filters_FilterParser.parseGrayscale = function(filterDetails) {
	if(filterDetails == null || filterDetails.length == 0) {
		return null;
	}
	var copy = filterDetails.slice();
	haxe_ui_filters_FilterParser.buildDefaults();
	var filterName = copy[0];
	HxOverrides.remove(copy,filterName);
	copy = haxe_ui_filters_FilterParser.copyFilterDefaults(filterName,copy);
	var grayscale = new haxe_ui_filters_Grayscale();
	grayscale.amount = copy[0];
	return grayscale;
};
haxe_ui_filters_FilterParser.buildDefaults = function() {
	if(haxe_ui_filters_FilterParser.filterParamDefaults != null) {
		return;
	}
	haxe_ui_filters_FilterParser.filterParamDefaults = new haxe_ds_StringMap();
	var v = [];
	haxe_ui_filters_FilterParser.filterParamDefaults.h["drop-shadow"] = v;
	var this1 = haxe_ui_filters_FilterParser.filterParamDefaults;
	var v = haxe_ui_filters_FilterParser.filterParamDefaults.h["drop-shadow"].concat([4,45,0,1,4,4,1,1,false,false,false]);
	this1.h["drop-shadow"] = v;
	var v = [];
	haxe_ui_filters_FilterParser.filterParamDefaults.h["blur"] = v;
	var this1 = haxe_ui_filters_FilterParser.filterParamDefaults;
	var v = haxe_ui_filters_FilterParser.filterParamDefaults.h["blur"].concat([1]);
	this1.h["blur"] = v;
	var v = [];
	haxe_ui_filters_FilterParser.filterParamDefaults.h["outline"] = v;
	var this1 = haxe_ui_filters_FilterParser.filterParamDefaults;
	var v = haxe_ui_filters_FilterParser.filterParamDefaults.h["outline"].concat([0,1]);
	this1.h["outline"] = v;
	var v = [];
	haxe_ui_filters_FilterParser.filterParamDefaults.h["grayscale"] = v;
	var this1 = haxe_ui_filters_FilterParser.filterParamDefaults;
	var v = haxe_ui_filters_FilterParser.filterParamDefaults.h["grayscale"].concat([100]);
	this1.h["grayscale"] = v;
};
var haxe_ui_filters_Grayscale = function() {
	haxe_ui_filters_Filter.call(this);
};
$hxClasses["haxe.ui.filters.Grayscale"] = haxe_ui_filters_Grayscale;
haxe_ui_filters_Grayscale.__name__ = "haxe.ui.filters.Grayscale";
haxe_ui_filters_Grayscale.__super__ = haxe_ui_filters_Filter;
haxe_ui_filters_Grayscale.prototype = $extend(haxe_ui_filters_Filter.prototype,{
	amount: null
	,__class__: haxe_ui_filters_Grayscale
});
var haxe_ui_filters_Outline = function() {
	haxe_ui_filters_Filter.call(this);
};
$hxClasses["haxe.ui.filters.Outline"] = haxe_ui_filters_Outline;
haxe_ui_filters_Outline.__name__ = "haxe.ui.filters.Outline";
haxe_ui_filters_Outline.__super__ = haxe_ui_filters_Filter;
haxe_ui_filters_Outline.prototype = $extend(haxe_ui_filters_Filter.prototype,{
	color: null
	,size: null
	,__class__: haxe_ui_filters_Outline
});
var haxe_ui_focus_IFocusApplicator = function() { };
$hxClasses["haxe.ui.focus.IFocusApplicator"] = haxe_ui_focus_IFocusApplicator;
haxe_ui_focus_IFocusApplicator.__name__ = "haxe.ui.focus.IFocusApplicator";
haxe_ui_focus_IFocusApplicator.__isInterface__ = true;
haxe_ui_focus_IFocusApplicator.prototype = {
	get_enabled: null
	,set_enabled: null
	,apply: null
	,unapply: null
	,__class__: haxe_ui_focus_IFocusApplicator
	,__properties__: {set_enabled:"set_enabled",get_enabled:"get_enabled"}
};
var haxe_ui_focus_FocusApplicator = function() {
	this._enabled = true;
};
$hxClasses["haxe.ui.focus.FocusApplicator"] = haxe_ui_focus_FocusApplicator;
haxe_ui_focus_FocusApplicator.__name__ = "haxe.ui.focus.FocusApplicator";
haxe_ui_focus_FocusApplicator.__interfaces__ = [haxe_ui_focus_IFocusApplicator];
haxe_ui_focus_FocusApplicator.prototype = {
	apply: function(target) {
	}
	,unapply: function(target) {
	}
	,_enabled: null
	,set_enabled: function(value) {
		this._enabled = value;
		return value;
	}
	,get_enabled: function() {
		return this._enabled;
	}
	,__class__: haxe_ui_focus_FocusApplicator
	,__properties__: {set_enabled:"set_enabled",get_enabled:"get_enabled"}
};
var haxe_ui_focus_FocusManager = function() {
	this._lastFocuses = new haxe_ds_ObjectMap();
	this._applicators = [];
	this.enabled = true;
	this.autoFocus = true;
	haxe_ui_backend_FocusManagerImpl.call(this);
	this._applicators.push(new haxe_ui_focus_StyleFocusApplicator());
};
$hxClasses["haxe.ui.focus.FocusManager"] = haxe_ui_focus_FocusManager;
haxe_ui_focus_FocusManager.__name__ = "haxe.ui.focus.FocusManager";
haxe_ui_focus_FocusManager.__properties__ = {get_instance:"get_instance"};
haxe_ui_focus_FocusManager.get_instance = function() {
	if(haxe_ui_focus_FocusManager._instance == null) {
		haxe_ui_focus_FocusManager._instance = new haxe_ui_focus_FocusManager();
	}
	return haxe_ui_focus_FocusManager._instance;
};
haxe_ui_focus_FocusManager.__super__ = haxe_ui_backend_FocusManagerImpl;
haxe_ui_focus_FocusManager.prototype = $extend(haxe_ui_backend_FocusManagerImpl.prototype,{
	autoFocus: null
	,enabled: null
	,_applicators: null
	,pushView: function(view) {
		if(this.hasFocusableItem(view)) {
			var k = this._lastFocuses.keys();
			while(k.hasNext()) {
				var k1 = k.next();
				this._lastFocuses.h[k1.__id__].set_focus(false);
				this.unapplyFocus(this._lastFocuses.h[k1.__id__]);
			}
		}
		if(this.autoFocus == true) {
			this.focusOnFirstInteractive(view);
			view.registerEvent("ready",$bind(this,this.onViewReady));
		}
	}
	,onViewReady: function(e) {
		e.target.unregisterEvent("ready",$bind(this,this.onViewReady));
		if(this.hasFocusableItem(e.target)) {
			var k = this._lastFocuses.keys();
			while(k.hasNext()) {
				var k1 = k.next();
				this._lastFocuses.h[k1.__id__].set_focus(false);
				this.unapplyFocus(this._lastFocuses.h[k1.__id__]);
			}
			this.focusOnFirstInteractive(e.target);
		}
	}
	,hasFocusableItem: function(view) {
		var list = [];
		this.buildFocusableList(view,list);
		return list.length != 0;
	}
	,focusOnFirstInteractive: function(view) {
		var list = [];
		this.buildFocusableList(view,list,true);
		if(list.length > 0) {
			list[0].set_focus(true);
			return list[0];
		}
		return null;
	}
	,removeView: function(view) {
		this._lastFocuses.remove(view);
		var top = haxe_ui_core_Screen.get_instance().get_topComponent();
		if(top == null) {
			return;
		}
		if(this._lastFocuses.h.__keys__[top.__id__] != null) {
			this.set_focus(this._lastFocuses.h[top.__id__]);
		}
	}
	,get_focus: function() {
		var top = haxe_ui_core_Screen.get_instance().get_topComponent();
		if(top == null) {
			return null;
		}
		return this.buildFocusableList(top,null);
	}
	,_lastFocuses: null
	,set_focus: function(value) {
		if(value != null) {
			var c = js_Boot.__cast(value , haxe_ui_core_Component);
			var root = c.get_rootComponent();
			var currentFocus = this.buildFocusableList(root,null);
			if(currentFocus != null && currentFocus != value) {
				this.unapplyFocus(currentFocus);
				currentFocus.set_focus(false);
			}
			if(this._lastFocuses.h.__keys__[root.__id__] != null && this._lastFocuses.h[root.__id__] != value) {
				this._lastFocuses.h[root.__id__].set_focus(false);
				this.unapplyFocus(this._lastFocuses.h[root.__id__]);
			}
			this._lastFocuses.set(root,value);
			this.applyFocus(value);
		} else {
			var top = haxe_ui_core_Screen.get_instance().get_topComponent();
			if(this._lastFocuses.h.__keys__[top.__id__] != null) {
				this._lastFocuses.h[top.__id__].set_focus(false);
				this.unapplyFocus(this._lastFocuses.h[top.__id__]);
			}
		}
		return value;
	}
	,focusNext: function() {
		var top = haxe_ui_core_Screen.get_instance().get_topComponent();
		var list = [];
		var currentFocus = this.buildFocusableList(top,list);
		var index = -1;
		if(currentFocus != null) {
			index = list.indexOf(currentFocus);
		}
		var nextIndex = index + 1;
		if(nextIndex > list.length - 1) {
			nextIndex = 0;
		}
		var nextFocus = list[nextIndex];
		this.set_focus(nextFocus);
		return nextFocus;
	}
	,focusPrev: function() {
		var top = haxe_ui_core_Screen.get_instance().get_topComponent();
		var list = [];
		var currentFocus = this.buildFocusableList(top,list);
		var index = -1;
		if(currentFocus != null) {
			index = list.indexOf(currentFocus);
		}
		var prevIndex = index - 1;
		if(prevIndex < 0) {
			prevIndex = list.length - 1;
		}
		var prevFocus = list[prevIndex];
		this.set_focus(prevFocus);
		return prevFocus;
	}
	,buildFocusableList: function(c,list,considerAutoFocus) {
		if(considerAutoFocus == null) {
			considerAutoFocus = false;
		}
		if(!this.enabled) {
			return null;
		}
		var currentFocus = null;
		if(c == null || c._isDisposed == true) {
			return null;
		}
		if(c.get_hidden() == true) {
			return null;
		}
		if(js_Boot.__implements(c,haxe_ui_focus_IFocusable)) {
			var f = c;
			if(considerAutoFocus == true && f.get_autoFocus() == false) {
				return null;
			}
			if(f.get_allowFocus() == true && f.get_disabled() == false) {
				if(f.get_focus() == true) {
					currentFocus = f;
				}
				if(list != null) {
					list.push(f);
				}
			}
		}
		var childList = (c._children == null ? [] : c._children).slice();
		childList.sort(function(c1,c2) {
			return c1.componentTabIndex - c2.componentTabIndex;
		});
		var _g = 0;
		while(_g < childList.length) {
			var child = childList[_g];
			++_g;
			var f = this.buildFocusableList(child,list,considerAutoFocus);
			if(f != null) {
				currentFocus = f;
			}
		}
		return currentFocus;
	}
	,applyFocus: function(c) {
		haxe_ui_backend_FocusManagerImpl.prototype.applyFocus.call(this,c);
		(js_Boot.__cast(c , haxe_ui_focus_IFocusable)).set_focus(true);
		var _g = 0;
		var _g1 = this._applicators;
		while(_g < _g1.length) {
			var a = _g1[_g];
			++_g;
			if(a.get_enabled() == true) {
				a.apply(c);
			}
		}
	}
	,unapplyFocus: function(c) {
		haxe_ui_backend_FocusManagerImpl.prototype.unapplyFocus.call(this,c);
		(js_Boot.__cast(c , haxe_ui_focus_IFocusable)).set_focus(false);
		var _g = 0;
		var _g1 = this._applicators;
		while(_g < _g1.length) {
			var a = _g1[_g];
			++_g;
			if(a.get_enabled() == true) {
				a.unapply(c);
			}
		}
	}
	,__class__: haxe_ui_focus_FocusManager
	,__properties__: {set_focus:"set_focus",get_focus:"get_focus"}
});
var haxe_ui_focus_StyleFocusApplicator = function() {
	haxe_ui_focus_FocusApplicator.call(this);
};
$hxClasses["haxe.ui.focus.StyleFocusApplicator"] = haxe_ui_focus_StyleFocusApplicator;
haxe_ui_focus_StyleFocusApplicator.__name__ = "haxe.ui.focus.StyleFocusApplicator";
haxe_ui_focus_StyleFocusApplicator.__super__ = haxe_ui_focus_FocusApplicator;
haxe_ui_focus_StyleFocusApplicator.prototype = $extend(haxe_ui_focus_FocusApplicator.prototype,{
	apply: function(target) {
		target.addClass(":active");
	}
	,unapply: function(target) {
		target.removeClass(":active");
	}
	,__class__: haxe_ui_focus_StyleFocusApplicator
});
var haxe_ui_geom_Point = function(x,y) {
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	this.x = x;
	this.y = y;
};
$hxClasses["haxe.ui.geom.Point"] = haxe_ui_geom_Point;
haxe_ui_geom_Point.__name__ = "haxe.ui.geom.Point";
haxe_ui_geom_Point.prototype = {
	x: null
	,y: null
	,add: function(point) {
		this.x += point.x;
		this.y += point.y;
	}
	,subtract: function(point) {
		this.x -= point.x;
		this.y -= point.y;
	}
	,addCoords: function(dx,dy) {
		this.x += dx;
		this.y += dy;
	}
	,subtractCoords: function(dx,dy) {
		this.x -= dx;
		this.y -= dy;
	}
	,sum: function(point) {
		return new haxe_ui_geom_Point(this.x + point.x,this.y + point.y);
	}
	,diff: function(point) {
		return new haxe_ui_geom_Point(this.x - point.x,this.y - point.y);
	}
	,orthogonalCW: function() {
		return new haxe_ui_geom_Point(this.y,-this.x);
	}
	,orthogonalCCW: function() {
		return new haxe_ui_geom_Point(-this.y,this.x);
	}
	,opposite: function() {
		return new haxe_ui_geom_Point(-this.x,-this.y);
	}
	,revert: function() {
		this.x = -this.x;
		this.y = -this.y;
	}
	,rotate: function(radians) {
		var cos = Math.cos(radians);
		var sin = Math.sin(radians);
		var newX = cos * this.x - sin * this.y;
		var newY = sin * this.x + cos * this.y;
		this.x = newX;
		this.y = newY;
	}
	,rotated: function(radians) {
		var cos = Math.cos(radians);
		var sin = Math.sin(radians);
		var newX = cos * this.x - sin * this.y;
		var newY = sin * this.x + cos * this.y;
		return new haxe_ui_geom_Point(newX,newY);
	}
	,length: function() {
		return Math.sqrt(this.x * this.x + this.y * this.y);
	}
	,multiply: function(factor) {
		this.x *= factor;
		this.y *= factor;
	}
	,product: function(factor) {
		return new haxe_ui_geom_Point(this.x * factor,this.y * factor);
	}
	,normalize: function(targetLength) {
		if(this.x == 0 && this.y == 0) {
			return;
		}
		var norm = targetLength / this.length();
		this.multiply(norm);
	}
	,normalized: function(targetLength) {
		if(this.x == 0 && this.y == 0) {
			return new haxe_ui_geom_Point();
		}
		var norm = targetLength / this.length();
		return this.product(norm);
	}
	,orth: function() {
		return this.normalized(1);
	}
	,copy: function() {
		return new haxe_ui_geom_Point(this.x,this.y);
	}
	,__class__: haxe_ui_geom_Point
};
var haxe_ui_geom_Rectangle = function(left,top,width,height) {
	if(height == null) {
		height = 0;
	}
	if(width == null) {
		width = 0;
	}
	if(top == null) {
		top = 0;
	}
	if(left == null) {
		left = 0;
	}
	this._intersectionCache = null;
	this.left = left;
	this.top = top;
	this.width = width;
	this.height = height;
};
$hxClasses["haxe.ui.geom.Rectangle"] = haxe_ui_geom_Rectangle;
haxe_ui_geom_Rectangle.__name__ = "haxe.ui.geom.Rectangle";
haxe_ui_geom_Rectangle.prototype = {
	left: null
	,top: null
	,width: null
	,height: null
	,set: function(left,top,width,height) {
		if(height == null) {
			height = 0;
		}
		if(width == null) {
			width = 0;
		}
		if(top == null) {
			top = 0;
		}
		if(left == null) {
			left = 0;
		}
		this.left = left;
		this.top = top;
		this.width = width;
		this.height = height;
	}
	,get_right: function() {
		return this.left + this.width;
	}
	,set_right: function(value) {
		this.width = value - this.left;
		return value;
	}
	,get_bottom: function() {
		return this.top + this.height;
	}
	,set_bottom: function(value) {
		this.height = value - this.top;
		return value;
	}
	,inflate: function(dx,dy) {
		this.left -= dx;
		this.width += dx * 2;
		this.top -= dy;
		this.height += dy * 2;
	}
	,equals: function(rc) {
		if(rc == null) {
			return false;
		}
		if(rc.left == this.left && rc.top == this.top && rc.width == this.width) {
			return rc.height == this.height;
		} else {
			return false;
		}
	}
	,containsPoint: function(x,y) {
		if(x >= this.left && x < this.left + this.width && y >= this.top && y < this.top + this.height) {
			return true;
		}
		return false;
	}
	,containsRect: function(rect) {
		if(rect.width <= 0 || rect.height <= 0) {
			if(rect.left > this.left && rect.top > this.top && rect.get_right() < this.get_right()) {
				return rect.get_bottom() < this.get_bottom();
			} else {
				return false;
			}
		} else if(rect.left >= this.left && rect.top >= this.top && rect.get_right() <= this.get_right()) {
			return rect.get_bottom() <= this.get_bottom();
		} else {
			return false;
		}
	}
	,intersects: function(rect) {
		var x0 = this.left < rect.left ? rect.left : this.left;
		var x1 = this.get_right() > rect.get_right() ? rect.get_right() : this.get_right();
		if(x1 <= x0) {
			return false;
		}
		var y0 = this.top < rect.top ? rect.top : this.top;
		var y1 = this.get_bottom() > rect.get_bottom() ? rect.get_bottom() : this.get_bottom();
		return y1 > y0;
	}
	,_intersectionCache: null
	,intersection: function(rect,noAlloc) {
		if(noAlloc == null) {
			noAlloc = true;
		}
		if(noAlloc == true && this._intersectionCache == null) {
			this._intersectionCache = new haxe_ui_geom_Rectangle();
		}
		var x0 = this.left < rect.left ? rect.left : this.left;
		var x1 = this.get_right() > rect.get_right() ? rect.get_right() : this.get_right();
		if(x1 <= x0) {
			if(noAlloc == true) {
				this._intersectionCache.set();
				return this._intersectionCache;
			} else {
				return new haxe_ui_geom_Rectangle();
			}
		}
		var y0 = this.top < rect.top ? rect.top : this.top;
		var y1 = this.get_bottom() > rect.get_bottom() ? rect.get_bottom() : this.get_bottom();
		if(y1 <= y0) {
			if(noAlloc == true) {
				this._intersectionCache.set();
				return this._intersectionCache;
			} else {
				return new haxe_ui_geom_Rectangle();
			}
		}
		var r = null;
		if(noAlloc == true) {
			r = this._intersectionCache;
		} else {
			r = new haxe_ui_geom_Rectangle();
		}
		r.set(x0,y0,x1 - x0,y1 - y0);
		return r;
	}
	,toInts: function() {
		this.left = this.left | 0;
		this.top = this.top | 0;
		this.width = this.width | 0;
		this.height = this.height | 0;
	}
	,copy: function() {
		return new haxe_ui_geom_Rectangle(this.left,this.top,this.width,this.height);
	}
	,toString: function() {
		return "{left: " + this.left + ", top: " + this.top + ", bottom: " + this.get_bottom() + ", right: " + this.get_right() + ", width: " + this.width + ", height: " + this.height + "}";
	}
	,__class__: haxe_ui_geom_Rectangle
	,__properties__: {set_bottom:"set_bottom",get_bottom:"get_bottom",set_right:"set_right",get_right:"get_right"}
};
var haxe_ui_geom_Size = function(width,height) {
	if(height == null) {
		height = 0;
	}
	if(width == null) {
		width = 0;
	}
	this.width = width;
	this.height = height;
};
$hxClasses["haxe.ui.geom.Size"] = haxe_ui_geom_Size;
haxe_ui_geom_Size.__name__ = "haxe.ui.geom.Size";
haxe_ui_geom_Size.prototype = {
	width: null
	,height: null
	,round: function() {
		this.width = Math.round(this.width);
		this.height = Math.round(this.height);
	}
	,toString: function() {
		return "[" + this.width + "x" + this.height + "]";
	}
	,__class__: haxe_ui_geom_Size
};
var haxe_ui_geom_Slice9 = function() { };
$hxClasses["haxe.ui.geom.Slice9"] = haxe_ui_geom_Slice9;
haxe_ui_geom_Slice9.__name__ = "haxe.ui.geom.Slice9";
haxe_ui_geom_Slice9.buildRects = function(w,h,bitmapWidth,bitmapHeight,slice) {
	var srcRects = haxe_ui_geom_Slice9.buildSrcRects(bitmapWidth,bitmapHeight,slice);
	var dstRects = haxe_ui_geom_Slice9.buildDstRects(w,h,srcRects);
	return { src : srcRects, dst : dstRects};
};
haxe_ui_geom_Slice9.buildSrcRects = function(bitmapWidth,bitmapHeight,slice) {
	var x1 = slice.left;
	var y1 = slice.top;
	var x2 = slice.get_right();
	var y2 = slice.get_bottom();
	var srcRects = [];
	srcRects.push(new haxe_ui_geom_Rectangle(0,0,x1,y1));
	srcRects.push(new haxe_ui_geom_Rectangle(x1,0,x2 - x1,y1));
	srcRects.push(new haxe_ui_geom_Rectangle(x2,0,bitmapWidth - x2,y1));
	srcRects.push(new haxe_ui_geom_Rectangle(0,y1,x1,y2 - y1));
	srcRects.push(new haxe_ui_geom_Rectangle(x1,y1,x2 - x1,y2 - y1));
	srcRects.push(new haxe_ui_geom_Rectangle(x2,y1,bitmapWidth - x2,y2 - y1));
	srcRects.push(new haxe_ui_geom_Rectangle(0,y2,x1,bitmapHeight - y2));
	srcRects.push(new haxe_ui_geom_Rectangle(x1,y2,x2 - x1,bitmapHeight - y2));
	srcRects.push(new haxe_ui_geom_Rectangle(x2,y2,bitmapWidth - x2,bitmapHeight - y2));
	return srcRects;
};
haxe_ui_geom_Slice9.buildDstRects = function(w,h,srcRects) {
	var dstRects = [];
	dstRects.push(new haxe_ui_geom_Rectangle(0,0,srcRects[0].width,srcRects[0].height));
	dstRects.push(new haxe_ui_geom_Rectangle(srcRects[0].width,0,w - srcRects[0].width - srcRects[2].width,srcRects[1].height));
	dstRects.push(new haxe_ui_geom_Rectangle(w - srcRects[2].width,0,srcRects[2].width,srcRects[2].height));
	dstRects.push(new haxe_ui_geom_Rectangle(0,srcRects[0].height,srcRects[3].width,h - srcRects[0].height - srcRects[6].height));
	dstRects.push(new haxe_ui_geom_Rectangle(srcRects[3].width,srcRects[0].height,w - srcRects[3].width - srcRects[5].width,h - srcRects[1].height - srcRects[7].height));
	dstRects.push(new haxe_ui_geom_Rectangle(w - srcRects[5].width,srcRects[2].height,srcRects[5].width,h - srcRects[2].height - srcRects[8].height));
	dstRects.push(new haxe_ui_geom_Rectangle(0,h - srcRects[6].height,srcRects[6].width,srcRects[6].height));
	dstRects.push(new haxe_ui_geom_Rectangle(srcRects[6].width,h - srcRects[7].height,w - srcRects[6].width - srcRects[8].width,srcRects[7].height));
	dstRects.push(new haxe_ui_geom_Rectangle(w - srcRects[8].width,h - srcRects[8].height,srcRects[8].width,srcRects[8].height));
	return dstRects;
};
var haxe_ui_graphics_ComponentGraphics = function(component) {
	haxe_ui_backend_ComponentGraphicsImpl.call(this,component);
};
$hxClasses["haxe.ui.graphics.ComponentGraphics"] = haxe_ui_graphics_ComponentGraphics;
haxe_ui_graphics_ComponentGraphics.__name__ = "haxe.ui.graphics.ComponentGraphics";
haxe_ui_graphics_ComponentGraphics.__super__ = haxe_ui_backend_ComponentGraphicsImpl;
haxe_ui_graphics_ComponentGraphics.prototype = $extend(haxe_ui_backend_ComponentGraphicsImpl.prototype,{
	__class__: haxe_ui_graphics_ComponentGraphics
});
var haxe_ui_graphics_DrawCommand = $hxEnums["haxe.ui.graphics.DrawCommand"] = { __ename__:"haxe.ui.graphics.DrawCommand",__constructs__:null
	,Clear: {_hx_name:"Clear",_hx_index:0,__enum__:"haxe.ui.graphics.DrawCommand",toString:$estr}
	,SetPixel: ($_=function(x,y,color) { return {_hx_index:1,x:x,y:y,color:color,__enum__:"haxe.ui.graphics.DrawCommand",toString:$estr}; },$_._hx_name="SetPixel",$_.__params__ = ["x","y","color"],$_)
	,SetPixels: ($_=function(pixels) { return {_hx_index:2,pixels:pixels,__enum__:"haxe.ui.graphics.DrawCommand",toString:$estr}; },$_._hx_name="SetPixels",$_.__params__ = ["pixels"],$_)
	,MoveTo: ($_=function(x,y) { return {_hx_index:3,x:x,y:y,__enum__:"haxe.ui.graphics.DrawCommand",toString:$estr}; },$_._hx_name="MoveTo",$_.__params__ = ["x","y"],$_)
	,LineTo: ($_=function(x,y) { return {_hx_index:4,x:x,y:y,__enum__:"haxe.ui.graphics.DrawCommand",toString:$estr}; },$_._hx_name="LineTo",$_.__params__ = ["x","y"],$_)
	,StrokeStyle: ($_=function(color,thickness,alpha) { return {_hx_index:5,color:color,thickness:thickness,alpha:alpha,__enum__:"haxe.ui.graphics.DrawCommand",toString:$estr}; },$_._hx_name="StrokeStyle",$_.__params__ = ["color","thickness","alpha"],$_)
	,Circle: ($_=function(x,y,radius) { return {_hx_index:6,x:x,y:y,radius:radius,__enum__:"haxe.ui.graphics.DrawCommand",toString:$estr}; },$_._hx_name="Circle",$_.__params__ = ["x","y","radius"],$_)
	,FillStyle: ($_=function(color,alpha) { return {_hx_index:7,color:color,alpha:alpha,__enum__:"haxe.ui.graphics.DrawCommand",toString:$estr}; },$_._hx_name="FillStyle",$_.__params__ = ["color","alpha"],$_)
	,CurveTo: ($_=function(controlX,controlY,anchorX,anchorY) { return {_hx_index:8,controlX:controlX,controlY:controlY,anchorX:anchorX,anchorY:anchorY,__enum__:"haxe.ui.graphics.DrawCommand",toString:$estr}; },$_._hx_name="CurveTo",$_.__params__ = ["controlX","controlY","anchorX","anchorY"],$_)
	,CubicCurveTo: ($_=function(controlX1,controlY1,controlX2,controlY2,anchorX,anchorY) { return {_hx_index:9,controlX1:controlX1,controlY1:controlY1,controlX2:controlX2,controlY2:controlY2,anchorX:anchorX,anchorY:anchorY,__enum__:"haxe.ui.graphics.DrawCommand",toString:$estr}; },$_._hx_name="CubicCurveTo",$_.__params__ = ["controlX1","controlY1","controlX2","controlY2","anchorX","anchorY"],$_)
	,Rectangle: ($_=function(x,y,width,height) { return {_hx_index:10,x:x,y:y,width:width,height:height,__enum__:"haxe.ui.graphics.DrawCommand",toString:$estr}; },$_._hx_name="Rectangle",$_.__params__ = ["x","y","width","height"],$_)
	,Image: ($_=function(resource,x,y,width,height) { return {_hx_index:11,resource:resource,x:x,y:y,width:width,height:height,__enum__:"haxe.ui.graphics.DrawCommand",toString:$estr}; },$_._hx_name="Image",$_.__params__ = ["resource","x","y","width","height"],$_)
};
haxe_ui_graphics_DrawCommand.__constructs__ = [haxe_ui_graphics_DrawCommand.Clear,haxe_ui_graphics_DrawCommand.SetPixel,haxe_ui_graphics_DrawCommand.SetPixels,haxe_ui_graphics_DrawCommand.MoveTo,haxe_ui_graphics_DrawCommand.LineTo,haxe_ui_graphics_DrawCommand.StrokeStyle,haxe_ui_graphics_DrawCommand.Circle,haxe_ui_graphics_DrawCommand.FillStyle,haxe_ui_graphics_DrawCommand.CurveTo,haxe_ui_graphics_DrawCommand.CubicCurveTo,haxe_ui_graphics_DrawCommand.Rectangle,haxe_ui_graphics_DrawCommand.Image];
var haxe_ui_layouts_AbsoluteLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.layouts.AbsoluteLayout"] = haxe_ui_layouts_AbsoluteLayout;
haxe_ui_layouts_AbsoluteLayout.__name__ = "haxe.ui.layouts.AbsoluteLayout";
haxe_ui_layouts_AbsoluteLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_layouts_AbsoluteLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	repositionChildren: function() {
	}
	,__class__: haxe_ui_layouts_AbsoluteLayout
});
var haxe_ui_layouts_DelegateLayout = function(size) {
	haxe_ui_layouts_DefaultLayout.call(this);
	this._size = size;
};
$hxClasses["haxe.ui.layouts.DelegateLayout"] = haxe_ui_layouts_DelegateLayout;
haxe_ui_layouts_DelegateLayout.__name__ = "haxe.ui.layouts.DelegateLayout";
haxe_ui_layouts_DelegateLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_layouts_DelegateLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	_size: null
	,calcAutoSize: function(exclusions) {
		this._size.component = this.get_component();
		var cx = this._size.get_width();
		var cy = this._size.get_height();
		if(this._size.getBool("includePadding",false) == true) {
			cx += this.get_paddingLeft() + this.get_paddingRight();
			cy += this.get_paddingTop() + this.get_paddingBottom();
		}
		var size = new haxe_ui_geom_Size(cx,cy);
		return size;
	}
	,get_usableSize: function() {
		var size = haxe_ui_layouts_DefaultLayout.prototype.get_usableSize.call(this);
		this._size.component = this.get_component();
		size.width -= this._size.get_usableWidthModifier();
		size.height -= this._size.get_usableHeightModifier();
		return size;
	}
	,__class__: haxe_ui_layouts_DelegateLayout
});
var haxe_ui_layouts_DelegateLayoutSize = function() {
};
$hxClasses["haxe.ui.layouts.DelegateLayoutSize"] = haxe_ui_layouts_DelegateLayoutSize;
haxe_ui_layouts_DelegateLayoutSize.__name__ = "haxe.ui.layouts.DelegateLayoutSize";
haxe_ui_layouts_DelegateLayoutSize.prototype = {
	component: null
	,config: null
	,width: null
	,get_width: function() {
		return 0;
	}
	,height: null
	,get_height: function() {
		return 0;
	}
	,usableWidthModifier: null
	,get_usableWidthModifier: function() {
		return 0;
	}
	,usableHeightModifier: null
	,get_usableHeightModifier: function() {
		return 0;
	}
	,getString: function(name,defaultValue) {
		if(this.config == null) {
			return defaultValue;
		}
		if(Object.prototype.hasOwnProperty.call(this.config.h,name) == false) {
			return defaultValue;
		}
		return this.config.h[name];
	}
	,getInt: function(name,defaultValue) {
		if(defaultValue == null) {
			defaultValue = 0;
		}
		var v = this.getString(name);
		if(v == null) {
			return defaultValue;
		}
		return Std.parseInt(v);
	}
	,getBool: function(name,defaultValue) {
		if(defaultValue == null) {
			defaultValue = false;
		}
		var v = this.getString(name);
		if(v == null) {
			return defaultValue;
		}
		return v == "true";
	}
	,__class__: haxe_ui_layouts_DelegateLayoutSize
	,__properties__: {get_usableHeightModifier:"get_usableHeightModifier",get_usableWidthModifier:"get_usableWidthModifier",get_height:"get_height",get_width:"get_width"}
};
var haxe_ui_layouts_HorizontalContinuousLayout = function() {
	haxe_ui_layouts_HorizontalLayout.call(this);
};
$hxClasses["haxe.ui.layouts.HorizontalContinuousLayout"] = haxe_ui_layouts_HorizontalContinuousLayout;
haxe_ui_layouts_HorizontalContinuousLayout.__name__ = "haxe.ui.layouts.HorizontalContinuousLayout";
haxe_ui_layouts_HorizontalContinuousLayout.__super__ = haxe_ui_layouts_HorizontalLayout;
haxe_ui_layouts_HorizontalContinuousLayout.prototype = $extend(haxe_ui_layouts_HorizontalLayout.prototype,{
	resizeChildren: function() {
	}
	,repositionChildren: function() {
		if(this.get_component().get_autoWidth() == true) {
			haxe_ui_layouts_HorizontalLayout.prototype.repositionChildren.call(this);
			return;
		}
		var ucx = this.get_usableWidth();
		if(ucx <= 0) {
			return;
		}
		var ucx = this.get_component().get_componentWidth() - (this.get_paddingLeft() + this.get_paddingRight());
		var ucy = this.get_component().get_componentHeight() - (this.get_paddingTop() + this.get_paddingBottom());
		var dimensions = [];
		var heights = [];
		var row = 0;
		var usedCX = 0;
		var xpos = this.get_paddingLeft();
		var ypos = this.get_paddingTop();
		var rowCY = 0;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			var rc = new haxe_ui_layouts_ComponentRectangle(child.get_left(),child.get_top(),child.get_componentWidth(),child.get_componentHeight());
			if(child.get_percentWidth() != null) {
				rc.width = ucx * child.get_percentWidth() / 100;
			} else {
				usedCX += this.get_horizontalSpacing();
			}
			if(child.get_percentHeight() != null) {
				rc.height = ucy * child.get_percentHeight() / 100;
			}
			rc.component = child;
			usedCX += rc.width;
			if(usedCX - this.get_horizontalSpacing() > ucx) {
				heights.push(rowCY);
				ypos += rowCY + this.get_verticalSpacing();
				xpos = this.get_paddingLeft();
				usedCX = rc.width + this.get_horizontalSpacing();
				rowCY = 0;
				++row;
			}
			if(dimensions.length <= row) {
				dimensions.push([]);
			}
			if(dimensions[row] == null) {
				ypos -= this.get_verticalSpacing();
				--row;
				dimensions[row].pop();
			}
			rc.left = xpos;
			rc.top = ypos;
			dimensions[row].push(rc);
			xpos += rc.width;
			if(rc.height > rowCY) {
				rowCY = rc.height;
			}
		}
		if(rowCY > 0) {
			heights.push(rowCY);
		}
		var x = 0;
		var _g = 0;
		while(_g < dimensions.length) {
			var r = dimensions[_g];
			++_g;
			var height = heights[x];
			var spaceX = (r.length - 1) / r.length * this.get_horizontalSpacing();
			var n = 0;
			var _g1 = 0;
			while(_g1 < r.length) {
				var c = r[_g1];
				++_g1;
				switch(this.verticalAlign(c.component)) {
				case "bottom":
					c.top += height - c.height;
					break;
				case "center":
					c.top += height / 2 - c.height / 2;
					break;
				default:
				}
				if(c.component.get_percentWidth() != null) {
					c.left += n * (this.get_horizontalSpacing() - spaceX);
					c.width -= spaceX;
				} else {
					c.left += n * this.get_horizontalSpacing();
				}
				c.apply();
				++n;
			}
			++x;
		}
	}
	,get_usableSize: function() {
		if(this.get_component().get_autoWidth() == true) {
			return haxe_ui_layouts_HorizontalLayout.prototype.get_usableSize.call(this);
		}
		var ucx = 0;
		if(this._component.get_componentWidth() != null) {
			ucx = this._component.get_componentWidth();
			ucx -= this.get_paddingLeft() + this.get_paddingRight();
		}
		var ucy = 0;
		if(this._component.get_componentHeight() != null) {
			ucy = this._component.get_componentHeight();
			ucy -= this.get_paddingTop() + this.get_paddingBottom();
		}
		return new haxe_ui_geom_Size(ucx,ucy);
	}
	,__class__: haxe_ui_layouts_HorizontalContinuousLayout
});
var haxe_ui_layouts_ComponentRectangle = function(left,top,width,height) {
	haxe_ui_geom_Rectangle.call(this,left,top,width,height);
};
$hxClasses["haxe.ui.layouts.ComponentRectangle"] = haxe_ui_layouts_ComponentRectangle;
haxe_ui_layouts_ComponentRectangle.__name__ = "haxe.ui.layouts.ComponentRectangle";
haxe_ui_layouts_ComponentRectangle.__super__ = haxe_ui_geom_Rectangle;
haxe_ui_layouts_ComponentRectangle.prototype = $extend(haxe_ui_geom_Rectangle.prototype,{
	component: null
	,apply: function() {
		this.component.moveComponent(this.left,this.top);
		this.component.resizeComponent(this.width,this.height);
	}
	,__class__: haxe_ui_layouts_ComponentRectangle
});
var haxe_ui_layouts_HorizontalGridLayout = function() {
	this._rows = 1;
	haxe_ui_layouts_Layout.call(this);
};
$hxClasses["haxe.ui.layouts.HorizontalGridLayout"] = haxe_ui_layouts_HorizontalGridLayout;
haxe_ui_layouts_HorizontalGridLayout.__name__ = "haxe.ui.layouts.HorizontalGridLayout";
haxe_ui_layouts_HorizontalGridLayout.__super__ = haxe_ui_layouts_Layout;
haxe_ui_layouts_HorizontalGridLayout.prototype = $extend(haxe_ui_layouts_Layout.prototype,{
	_rows: null
	,get_rows: function() {
		return this._rows;
	}
	,set_rows: function(value) {
		if(this._rows == value) {
			return value;
		}
		this._rows = value;
		if(this._component != null) {
			var _this = this._component;
			if(!(_this._layout == null || _this._layoutLocked == true)) {
				_this.invalidateComponent("layout",false);
			}
		}
		return value;
	}
	,get_usableSize: function() {
		var size = haxe_ui_layouts_Layout.prototype.get_usableSize.call(this);
		var columnWidths = this.calcColumnWidths(size,false);
		var rowHeights = this.calcRowHeights(size,false);
		var _g = 0;
		while(_g < columnWidths.length) {
			var columnWidth = columnWidths[_g];
			++_g;
			size.width -= columnWidth;
		}
		var _g = 0;
		while(_g < rowHeights.length) {
			var rowHeight = rowHeights[_g];
			++_g;
			size.height -= rowHeight;
		}
		var _this = this.get_component();
		if((_this._children == null ? [] : _this._children).length > 1) {
			var _this = this.get_component();
			var columns = Math.ceil((_this._children == null ? [] : _this._children).length / this._rows);
			size.width -= this.get_horizontalSpacing() * (columns - 1);
			size.height -= this.get_verticalSpacing() * (this.get_rows() - 1);
		}
		if(size.width < 0) {
			size.width = 0;
		}
		if(size.height < 0) {
			size.height = 0;
		}
		return size;
	}
	,resizeChildren: function() {
		var size = this.get_usableSize();
		var columnWidths = this.calcColumnWidths(size,true);
		var rowHeights = this.calcRowHeights(size,true);
		var explicitWidths = this.calcExplicitWidths();
		var explicitHeights = this.calcExplicitHeights();
		var rowIndex = 0;
		var columnIndex = 0;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			var cx = null;
			var cy = null;
			if(child.get_percentWidth() != null) {
				var ucx = columnWidths[columnIndex];
				if(explicitWidths[columnIndex] == false) {
					cx = ucx;
				} else {
					cx = ucx * child.get_percentWidth() / 100;
				}
			}
			if(child.get_percentHeight() != null) {
				var ucy = rowHeights[rowIndex];
				if(explicitHeights[rowIndex] == false) {
					cy = ucy;
				} else {
					cy = ucy * child.get_percentHeight() / 100;
				}
			}
			child.resizeComponent(cx,cy);
			++rowIndex;
			if(rowIndex >= this._rows) {
				rowIndex = 0;
				++columnIndex;
			}
		}
	}
	,repositionChildren: function() {
		var size = this.get_usableSize();
		var columnWidths = this.calcColumnWidths(size,true);
		var rowHeights = this.calcRowHeights(size,true);
		var rowIndex = 0;
		var columnIndex = 0;
		var xpos = this.get_paddingLeft();
		var ypos = this.get_paddingTop();
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			var halign = this.horizontalAlign(child);
			var valign = this.verticalAlign(child);
			var xposChild = 0;
			var yposChild = 0;
			switch(halign) {
			case "center":
				xposChild = xpos + (columnWidths[columnIndex] - child.get_componentWidth()) * 0.5 + this.marginLeft(child) - this.marginRight(child);
				break;
			case "right":
				xposChild = xpos + (columnWidths[columnIndex] - child.get_componentWidth()) + this.marginLeft(child) - this.marginRight(child);
				break;
			default:
				xposChild = xpos + this.marginLeft(child) - this.marginRight(child);
			}
			switch(valign) {
			case "bottom":
				yposChild = ypos + (rowHeights[rowIndex] - child.get_componentHeight()) + this.marginTop(child) - this.marginBottom(child);
				break;
			case "center":
				yposChild = ypos + (rowHeights[rowIndex] - child.get_componentHeight()) * 0.5 + this.marginTop(child) - this.marginBottom(child);
				break;
			default:
				yposChild = ypos + this.marginTop(child) - this.marginBottom(child);
			}
			child.moveComponent(xposChild,yposChild);
			ypos += rowHeights[rowIndex] + this.get_verticalSpacing();
			++rowIndex;
			if(rowIndex >= this._rows) {
				ypos = this.get_paddingTop();
				xpos += columnWidths[columnIndex] + this.get_horizontalSpacing();
				rowIndex = 0;
				++columnIndex;
			}
		}
	}
	,calcColumnWidths: function(usableSize,includePercentage) {
		var _this = this.get_component();
		var visibleChildren = (_this._children == null ? [] : _this._children).length;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				--visibleChildren;
			}
		}
		var columnCount = visibleChildren / this._rows | 0;
		if(visibleChildren % this._rows != 0) {
			++columnCount;
		}
		var columnWidths = [];
		var _g = 0;
		var _g1 = columnCount;
		while(_g < _g1) {
			var _ = _g++;
			columnWidths.push(0);
		}
		var rowIndex = 0;
		var columnIndex = 0;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			if(child.get_percentWidth() == null) {
				if(child.get_componentWidth() > columnWidths[columnIndex]) {
					columnWidths[columnIndex] = child.get_componentWidth();
				}
			}
			++rowIndex;
			if(rowIndex >= this._rows) {
				rowIndex = 0;
				++columnIndex;
			}
		}
		if(includePercentage) {
			rowIndex = 0;
			columnIndex = 0;
			var _g = 0;
			var _this = this.get_component();
			var _g1 = _this._children == null ? [] : _this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				if(child.get_includeInLayout() == false) {
					continue;
				}
				if(child.get_percentWidth() != null) {
					var cx = usableSize.width * child.get_percentWidth() / 100;
					if(cx > columnWidths[rowIndex] && this._rows == 1) {
						columnWidths[columnIndex] = cx;
					} else if(usableSize.width > columnWidths[columnIndex]) {
						columnWidths[columnIndex] = usableSize.width;
					}
				}
				++rowIndex;
				if(rowIndex >= this._rows) {
					rowIndex = 0;
					++columnIndex;
				}
			}
		}
		return columnWidths;
	}
	,calcRowHeights: function(usableSize,includePercentage) {
		var rowHeights = [];
		var _g = 0;
		var _g1 = this._rows;
		while(_g < _g1) {
			var _ = _g++;
			rowHeights.push(0);
		}
		var rowIndex = 0;
		var columnIndex = 0;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			if(child.get_percentHeight() == null) {
				if(child.get_componentHeight() > rowHeights[rowIndex]) {
					rowHeights[rowIndex] = child.get_componentHeight();
				}
			}
			++rowIndex;
			if(rowIndex >= this._rows) {
				rowIndex = 0;
				++columnIndex;
			}
		}
		if(includePercentage) {
			rowIndex = 0;
			columnIndex = 0;
			var _g = 0;
			var _this = this.get_component();
			var _g1 = _this._children == null ? [] : _this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				if(child.get_includeInLayout() == false) {
					continue;
				}
				if(child.get_percentHeight() != null) {
					var cy = usableSize.height * child.get_percentHeight() / 100;
					if(cy > rowHeights[rowIndex]) {
						rowHeights[rowIndex] = cy;
					}
				}
				++rowIndex;
				if(rowIndex >= this._rows) {
					rowIndex = 0;
					++columnIndex;
				}
			}
		}
		return rowHeights;
	}
	,calcExplicitWidths: function() {
		var _this = this.get_component();
		var visibleChildren = (_this._children == null ? [] : _this._children).length;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				--visibleChildren;
			}
		}
		var columnCount = visibleChildren / this._rows | 0;
		if(visibleChildren % this._rows != 0) {
			++columnCount;
		}
		var explicitWidths = [];
		var _g = 0;
		var _g1 = columnCount;
		while(_g < _g1) {
			var _ = _g++;
			explicitWidths.push(false);
		}
		var rowIndex = 0;
		var columnIndex = 0;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			if(child.get_percentWidth() == null && child.get_componentWidth() > 0) {
				explicitWidths[rowIndex % this._rows] = true;
			}
			++rowIndex;
			if(rowIndex >= this._rows) {
				rowIndex = 0;
				++columnIndex;
			}
		}
		return explicitWidths;
	}
	,calcExplicitHeights: function() {
		var explicitHeights = [];
		var _g = 0;
		var _g1 = this._rows;
		while(_g < _g1) {
			var _ = _g++;
			explicitHeights.push(false);
		}
		var rowIndex = 0;
		var columnIndex = 0;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			if(child.get_percentHeight() == null && child.get_componentHeight() > 0) {
				explicitHeights[rowIndex] = true;
			}
			++rowIndex;
			if(rowIndex >= this._rows) {
				rowIndex = 0;
				++columnIndex;
			}
		}
		return explicitHeights;
	}
	,__class__: haxe_ui_layouts_HorizontalGridLayout
	,__properties__: $extend(haxe_ui_layouts_Layout.prototype.__properties__,{set_rows:"set_rows",get_rows:"get_rows"})
});
var haxe_ui_layouts_LayoutFactory = function() { };
$hxClasses["haxe.ui.layouts.LayoutFactory"] = haxe_ui_layouts_LayoutFactory;
haxe_ui_layouts_LayoutFactory.__name__ = "haxe.ui.layouts.LayoutFactory";
haxe_ui_layouts_LayoutFactory.createFromName = function(name) {
	switch(name) {
	case "absolute":
		return new haxe_ui_layouts_AbsoluteLayout();
	case "continuous horizontal":case "continuousHorizontal":
		return new haxe_ui_layouts_HorizontalContinuousLayout();
	case "horizontal":
		return new haxe_ui_layouts_HorizontalLayout();
	case "horizontal grid":case "horizontalgrid":
		return new haxe_ui_layouts_HorizontalGridLayout();
	case "vertical":
		return new haxe_ui_layouts_VerticalLayout();
	case "vertical grid":case "verticalgrid":
		return new haxe_ui_layouts_VerticalGridLayout();
	}
	return new haxe_ui_layouts_DefaultLayout();
};
var haxe_ui_layouts_VerticalGridLayout = function() {
	this._columns = 1;
	haxe_ui_layouts_Layout.call(this);
};
$hxClasses["haxe.ui.layouts.VerticalGridLayout"] = haxe_ui_layouts_VerticalGridLayout;
haxe_ui_layouts_VerticalGridLayout.__name__ = "haxe.ui.layouts.VerticalGridLayout";
haxe_ui_layouts_VerticalGridLayout.__super__ = haxe_ui_layouts_Layout;
haxe_ui_layouts_VerticalGridLayout.prototype = $extend(haxe_ui_layouts_Layout.prototype,{
	_columns: null
	,get_columns: function() {
		return this._columns;
	}
	,set_columns: function(value) {
		if(this._columns == value) {
			return value;
		}
		this._columns = value;
		if(this._component != null) {
			var _this = this._component;
			if(!(_this._layout == null || _this._layoutLocked == true)) {
				_this.invalidateComponent("layout",false);
			}
		}
		return value;
	}
	,get_usableSize: function() {
		var size = haxe_ui_layouts_Layout.prototype.get_usableSize.call(this);
		var columnWidths = this.calcColumnWidths(size,false);
		var rowHeights = this.calcRowHeights(size,false);
		var _g = 0;
		while(_g < columnWidths.length) {
			var columnWidth = columnWidths[_g];
			++_g;
			size.width -= columnWidth;
		}
		var _g = 0;
		while(_g < rowHeights.length) {
			var rowHeight = rowHeights[_g];
			++_g;
			size.height -= rowHeight;
		}
		var _this = this.get_component();
		if((_this._children == null ? [] : _this._children).length > 1) {
			var _this = this.get_component();
			var rows = Math.ceil((_this._children == null ? [] : _this._children).length / this.get_columns());
			var c = this.get_columns();
			var _this = this.get_component();
			var c1 = Math.min(c,(_this._children == null ? [] : _this._children).length);
			size.width -= this.get_horizontalSpacing() * (c1 - 1);
			size.height -= this.get_verticalSpacing() * (rows - 1);
		}
		if(size.width < 0) {
			size.width = 0;
		}
		if(size.height < 0) {
			size.height = 0;
		}
		return size;
	}
	,resizeChildren: function() {
		var size = this.get_usableSize();
		var columnWidths = this.calcColumnWidths(size,true);
		var rowHeights = this.calcRowHeights(size,true);
		var explicitWidths = this.calcExplicitWidths();
		var explicitHeights = this.calcExplicitHeights();
		var rowIndex = 0;
		var columnIndex = 0;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			var cx = null;
			var cy = null;
			if(child.get_percentWidth() != null) {
				var ucx = columnWidths[columnIndex];
				if(explicitWidths[columnIndex] == false) {
					cx = ucx;
				} else {
					cx = ucx * child.get_percentWidth() / 100;
				}
			}
			if(child.get_percentHeight() != null) {
				var ucy = rowHeights[rowIndex];
				if(explicitHeights[rowIndex] == false) {
					cy = ucy;
				} else {
					cy = ucy * child.get_percentHeight() / 100;
				}
			}
			child.resizeComponent(cx,cy);
			++columnIndex;
			if(columnIndex >= this._columns) {
				columnIndex = 0;
				++rowIndex;
			}
		}
	}
	,repositionChildren: function() {
		var size = this.get_usableSize();
		var columnWidths = this.calcColumnWidths(size,true);
		var rowHeights = this.calcRowHeights(size,true);
		var rowIndex = 0;
		var columnIndex = 0;
		var xpos = this.get_paddingLeft();
		var ypos = this.get_paddingTop();
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			var halign = this.horizontalAlign(child);
			var valign = this.verticalAlign(child);
			var xposChild = 0;
			var yposChild = 0;
			switch(halign) {
			case "center":
				xposChild = xpos + (columnWidths[columnIndex] - child.get_componentWidth()) * 0.5 + this.marginLeft(child) - this.marginRight(child);
				break;
			case "right":
				xposChild = xpos + (columnWidths[columnIndex] - child.get_componentWidth()) + this.marginLeft(child) - this.marginRight(child);
				break;
			default:
				xposChild = xpos + this.marginLeft(child) - this.marginRight(child);
			}
			switch(valign) {
			case "bottom":
				yposChild = ypos + (rowHeights[rowIndex] - child.get_componentHeight()) + this.marginTop(child) - this.marginBottom(child);
				break;
			case "center":
				yposChild = ypos + (rowHeights[rowIndex] - child.get_componentHeight()) * 0.5 + this.marginTop(child) - this.marginBottom(child);
				break;
			default:
				yposChild = ypos + this.marginTop(child) - this.marginBottom(child);
			}
			child.moveComponent(xposChild,yposChild);
			xpos += columnWidths[columnIndex] + this.get_horizontalSpacing();
			++columnIndex;
			if(columnIndex >= this.get_columns()) {
				xpos = this.get_paddingLeft();
				ypos += rowHeights[rowIndex] + this.get_verticalSpacing();
				columnIndex = 0;
				++rowIndex;
			}
		}
	}
	,calcColumnWidths: function(usableSize,includePercentage) {
		var columnWidths = [];
		var _g = 0;
		var _g1 = this._columns;
		while(_g < _g1) {
			var _ = _g++;
			columnWidths.push(0);
		}
		var rowIndex = 0;
		var columnIndex = 0;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			if(child.get_percentWidth() == null) {
				if(child.get_componentWidth() > columnWidths[columnIndex]) {
					columnWidths[columnIndex] = child.get_componentWidth();
				}
			}
			++columnIndex;
			if(columnIndex >= this._columns) {
				columnIndex = 0;
				++rowIndex;
			}
		}
		if(includePercentage) {
			rowIndex = 0;
			columnIndex = 0;
			var fullWidthsCounts = [0];
			var _g = 0;
			var _this = this.get_component();
			var _g1 = _this._children == null ? [] : _this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				if(child.get_includeInLayout() == false) {
					continue;
				}
				if(child.get_percentWidth() != null && child.get_percentWidth() == 100) {
					fullWidthsCounts[rowIndex]++;
				}
				++columnIndex;
				if(columnIndex >= this._columns) {
					columnIndex = 0;
					++rowIndex;
					fullWidthsCounts.push(0);
				}
			}
			rowIndex = 0;
			columnIndex = 0;
			var _g = 0;
			var _this = this.get_component();
			var _g1 = _this._children == null ? [] : _this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				if(child.get_includeInLayout() == false) {
					continue;
				}
				if(child.get_percentWidth() != null) {
					var childPercentWidth = child.get_percentWidth();
					if(childPercentWidth == 100 && fullWidthsCounts[rowIndex] != 0) {
						var f = fullWidthsCounts[rowIndex];
						if(rowIndex > 0 && fullWidthsCounts[rowIndex - 1] != 0) {
							f = fullWidthsCounts[rowIndex - 1];
						}
						childPercentWidth = 100 / f;
					}
					var cx = usableSize.width * childPercentWidth / 100;
					if(cx > columnWidths[columnIndex]) {
						columnWidths[columnIndex] = cx;
					}
				}
				++columnIndex;
				if(columnIndex >= this._columns) {
					columnIndex = 0;
					++rowIndex;
				}
			}
		}
		return columnWidths;
	}
	,calcRowHeights: function(usableSize,includePercentage) {
		var _this = this.get_component();
		var visibleChildren = (_this._children == null ? [] : _this._children).length;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				--visibleChildren;
			}
		}
		var rowCount = visibleChildren / this._columns | 0;
		if(visibleChildren % this._columns != 0) {
			++rowCount;
		}
		var rowHeights = [];
		var _g = 0;
		var _g1 = rowCount;
		while(_g < _g1) {
			var _ = _g++;
			rowHeights.push(0);
		}
		var rowIndex = 0;
		var columnIndex = 0;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			if(child.get_percentHeight() == null) {
				if(child.get_height() > rowHeights[rowIndex]) {
					rowHeights[rowIndex] = child.get_height();
				}
			}
			++columnIndex;
			if(columnIndex >= this._columns) {
				columnIndex = 0;
				++rowIndex;
			}
		}
		if(includePercentage) {
			rowIndex = 0;
			columnIndex = 0;
			var newRow = true;
			var fullHeightRowCount = 0;
			var _g = 0;
			var _this = this.get_component();
			var _g1 = _this._children == null ? [] : _this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				if(child.get_includeInLayout() == false) {
					continue;
				}
				if(child.get_percentHeight() != null && child.get_percentHeight() == 100) {
					if(newRow == true) {
						newRow = false;
						++fullHeightRowCount;
					}
				}
				++columnIndex;
				if(columnIndex >= this._columns) {
					columnIndex = 0;
					++rowIndex;
					newRow = true;
				}
			}
			rowIndex = 0;
			columnIndex = 0;
			var _g = 0;
			var _this = this.get_component();
			var _g1 = _this._children == null ? [] : _this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				if(child.get_includeInLayout() == false) {
					continue;
				}
				if(child.get_percentHeight() != null) {
					var childPercentHeight = child.get_percentHeight();
					if(childPercentHeight == 100 && fullHeightRowCount > 1) {
						childPercentHeight = 100 / fullHeightRowCount;
					}
					var cy = usableSize.height * childPercentHeight / 100;
					if(cy > rowHeights[rowIndex]) {
						rowHeights[rowIndex] = cy;
					} else {
						var tmp = usableSize.height > rowHeights[rowIndex];
					}
				}
				++columnIndex;
				if(columnIndex >= this._columns) {
					columnIndex = 0;
					++rowIndex;
				}
			}
		}
		return rowHeights;
	}
	,calcExplicitWidths: function() {
		var explicitWidths = [];
		var _g = 0;
		var _g1 = this._columns;
		while(_g < _g1) {
			var _ = _g++;
			explicitWidths.push(false);
		}
		var rowIndex = 0;
		var columnIndex = 0;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			if(child.get_percentWidth() == null && child.get_componentWidth() > 0) {
				explicitWidths[columnIndex] = true;
			}
			++columnIndex;
			if(columnIndex >= this._columns) {
				columnIndex = 0;
				++rowIndex;
			}
		}
		return explicitWidths;
	}
	,calcExplicitHeights: function() {
		var _this = this.get_component();
		var visibleChildren = (_this._children == null ? [] : _this._children).length;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				--visibleChildren;
			}
		}
		var rowCount = visibleChildren / this.get_columns() | 0;
		if(visibleChildren % this._columns != 0) {
			++rowCount;
		}
		var explicitHeights = [];
		var _g = 0;
		var _g1 = rowCount;
		while(_g < _g1) {
			var _ = _g++;
			explicitHeights.push(false);
		}
		var rowIndex = 0;
		var columnIndex = 0;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			if(child.get_percentHeight() == null && child.get_componentHeight() > 0) {
				explicitHeights[columnIndex % this._columns] = true;
			}
			++columnIndex;
			if(columnIndex >= this._columns) {
				columnIndex = 0;
				++rowIndex;
			}
		}
		return explicitHeights;
	}
	,__class__: haxe_ui_layouts_VerticalGridLayout
	,__properties__: $extend(haxe_ui_layouts_Layout.prototype.__properties__,{set_columns:"set_columns",get_columns:"get_columns"})
});
var haxe_ui_layouts_VerticalLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
	this._calcFullHeights = true;
};
$hxClasses["haxe.ui.layouts.VerticalLayout"] = haxe_ui_layouts_VerticalLayout;
haxe_ui_layouts_VerticalLayout.__name__ = "haxe.ui.layouts.VerticalLayout";
haxe_ui_layouts_VerticalLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_layouts_VerticalLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	repositionChildren: function() {
		var ypos = this.get_paddingTop();
		var usableSize = this.get_usableSize();
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			var xpos = 0;
			switch(this.horizontalAlign(child)) {
			case "center":
				xpos = (usableSize.width - child.get_componentWidth()) / 2 + this.get_paddingLeft() + this.marginLeft(child) - this.marginRight(child);
				break;
			case "right":
				if(child.get_componentWidth() < this.get_component().get_componentWidth()) {
					xpos = this.get_component().get_componentWidth() - (child.get_componentWidth() + this.get_paddingRight() + this.marginLeft(child));
				}
				break;
			default:
				xpos = this.get_paddingLeft() + this.marginLeft(child);
			}
			child.moveComponent(xpos,ypos + this.marginTop(child));
			ypos += child.get_componentHeight() + this.get_verticalSpacing();
		}
	}
	,get_usableSize: function() {
		var size = haxe_ui_layouts_DefaultLayout.prototype.get_usableSize.call(this);
		var _this = this.get_component();
		var visibleChildren = (_this._children == null ? [] : _this._children).length;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				--visibleChildren;
				continue;
			}
			if(child.get_componentHeight() > 0 && (child.get_percentHeight() == null || this.fixedMinHeight(child) == true)) {
				size.height -= child.get_componentHeight() + this.marginTop(child) + this.marginBottom(child);
			}
		}
		if(visibleChildren > 1) {
			size.height -= this.get_verticalSpacing() * (visibleChildren - 1);
		}
		if(size.height < 0) {
			size.height = 0;
		}
		return size;
	}
	,__class__: haxe_ui_layouts_VerticalLayout
});
var haxe_ui_loaders_image_ImageLoaderBase = function() {
};
$hxClasses["haxe.ui.loaders.image.ImageLoaderBase"] = haxe_ui_loaders_image_ImageLoaderBase;
haxe_ui_loaders_image_ImageLoaderBase.__name__ = "haxe.ui.loaders.image.ImageLoaderBase";
haxe_ui_loaders_image_ImageLoaderBase.prototype = {
	load: function(resource,callback) {
	}
	,__class__: haxe_ui_loaders_image_ImageLoaderBase
};
var haxe_ui_loaders_image_AssetImageLoader = function() {
	haxe_ui_loaders_image_ImageLoaderBase.call(this);
};
$hxClasses["haxe.ui.loaders.image.AssetImageLoader"] = haxe_ui_loaders_image_AssetImageLoader;
haxe_ui_loaders_image_AssetImageLoader.__name__ = "haxe.ui.loaders.image.AssetImageLoader";
haxe_ui_loaders_image_AssetImageLoader.__super__ = haxe_ui_loaders_image_ImageLoaderBase;
haxe_ui_loaders_image_AssetImageLoader.prototype = $extend(haxe_ui_loaders_image_ImageLoaderBase.prototype,{
	load: function(resource,callback) {
		haxe_ui_Toolkit.get_assets().getImage(haxe_ui_util_Variant.toString(resource),callback);
	}
	,__class__: haxe_ui_loaders_image_AssetImageLoader
});
var haxe_ui_loaders_image_FileImageLoader = function() {
	haxe_ui_loaders_image_ImageLoaderBase.call(this);
};
$hxClasses["haxe.ui.loaders.image.FileImageLoader"] = haxe_ui_loaders_image_FileImageLoader;
haxe_ui_loaders_image_FileImageLoader.__name__ = "haxe.ui.loaders.image.FileImageLoader";
haxe_ui_loaders_image_FileImageLoader.__super__ = haxe_ui_loaders_image_ImageLoaderBase;
haxe_ui_loaders_image_FileImageLoader.prototype = $extend(haxe_ui_loaders_image_ImageLoaderBase.prototype,{
	load: function(resource,callback) {
		var stringResource = haxe_ui_util_Variant.toString(resource);
		var tmp = HxOverrides.substr(stringResource,7,null);
		haxe_ui_Toolkit.get_assets().imageFromFile(tmp,function(imageInfo) {
			haxe_ui_ToolkitAssets.get_instance().cacheImage(stringResource,imageInfo);
			callback(imageInfo);
		});
	}
	,__class__: haxe_ui_loaders_image_FileImageLoader
});
var haxe_ui_loaders_image_HttpImageLoader = function() {
	haxe_ui_loaders_image_ImageLoaderBase.call(this);
};
$hxClasses["haxe.ui.loaders.image.HttpImageLoader"] = haxe_ui_loaders_image_HttpImageLoader;
haxe_ui_loaders_image_HttpImageLoader.__name__ = "haxe.ui.loaders.image.HttpImageLoader";
haxe_ui_loaders_image_HttpImageLoader.__super__ = haxe_ui_loaders_image_ImageLoaderBase;
haxe_ui_loaders_image_HttpImageLoader.prototype = $extend(haxe_ui_loaders_image_ImageLoaderBase.prototype,{
	load: function(resource,callback) {
		var stringResource = haxe_ui_util_Variant.toString(resource);
		this.loadFromHttp(stringResource,function(imageInfo) {
			haxe_ui_ToolkitAssets.get_instance().cacheImage(stringResource,imageInfo);
			callback(imageInfo);
		});
	}
	,loadFromHttp: function(url,callback) {
		var request = new XMLHttpRequest();
		request.open("GET",url);
		request.responseType = "arraybuffer";
		request.onreadystatechange = function(_) {
			if(request.readyState != 4) {
				return;
			}
			var s;
			try {
				s = request.status;
			} catch( _g ) {
				haxe_NativeStackTrace.lastError = _g;
				s = null;
			}
			if(s == undefined) {
				s = null;
			}
			if(s != null && s >= 200 && s < 400) {
				haxe_ui_Toolkit.get_assets().imageFromBytes(haxe_io_Bytes.ofData(request.response),callback);
			} else if(s == null) {
				callback(null);
			} else {
				var error = "Http Error #" + request.status;
				if(s != null) {
					switch(s) {
					case 12007:
						error = "Unknown host";
						break;
					case 12029:
						error = "Failed to connect to host";
						break;
					default:
					}
				}
				haxe_Log.trace(error,{ fileName : "haxe/ui/loaders/image/HttpImageLoader.hx", lineNumber : 60, className : "haxe.ui.loaders.image.HttpImageLoader", methodName : "loadFromHttp"});
				if(s == 0) {
					haxe_ui_Toolkit.get_assets().getImage(url,callback);
					return;
				}
				callback(null);
			}
		};
		request.onerror = function(x) {
		};
		request.send();
	}
	,__class__: haxe_ui_loaders_image_HttpImageLoader
});
var haxe_ui_loaders_image_ImageLoader = function() {
	this._defaultLoader = null;
	this._registeredLoaders = new haxe_ds_StringMap();
};
$hxClasses["haxe.ui.loaders.image.ImageLoader"] = haxe_ui_loaders_image_ImageLoader;
haxe_ui_loaders_image_ImageLoader.__name__ = "haxe.ui.loaders.image.ImageLoader";
haxe_ui_loaders_image_ImageLoader.__properties__ = {get_instance:"get_instance"};
haxe_ui_loaders_image_ImageLoader.get_instance = function() {
	if(haxe_ui_loaders_image_ImageLoader._instance == null) {
		haxe_ui_loaders_image_ImageLoader._instance = new haxe_ui_loaders_image_ImageLoader();
	}
	return haxe_ui_loaders_image_ImageLoader._instance;
};
haxe_ui_loaders_image_ImageLoader.prototype = {
	_registeredLoaders: null
	,_defaultLoader: null
	,load: function(resource,callback,useCache) {
		if(useCache == null) {
			useCache = true;
		}
		if(haxe_ui_util_Variant.get_isString(resource)) {
			var stringResource = haxe_ui_util_Variant.toString(resource);
			if(useCache == true) {
				var cachedImage = haxe_ui_ToolkitAssets.get_instance().getCachedImage(stringResource);
				if(cachedImage != null) {
					callback(cachedImage);
					return;
				}
			}
			stringResource = StringTools.trim(stringResource);
			var prefix = "";
			var n = stringResource.indexOf("://");
			if(n != -1) {
				prefix = stringResource.substring(0,n);
			}
			var loader = this.get(prefix);
			if(loader == null) {
				haxe_Log.trace("WARNING: no image loader could be found for '" + prefix + "'",{ fileName : "haxe/ui/loaders/image/ImageLoader.hx", lineNumber : 45, className : "haxe.ui.loaders.image.ImageLoader", methodName : "load"});
				callback(null);
				return;
			}
			loader.load(resource,callback);
		} else if(haxe_ui_util_Variant.get_isImageData(resource)) {
			var imageData = haxe_ui_util_Variant.toImageData(resource);
			if(callback != null) {
				callback(haxe_ui_ToolkitAssets.get_instance().imageInfoFromImageData(imageData));
			}
		}
	}
	,register: function(prefix,ctor,isDefault,singleInstance) {
		if(singleInstance == null) {
			singleInstance = false;
		}
		if(isDefault == null) {
			isDefault = false;
		}
		var info = { prefix : prefix, ctor : ctor, isDefault : isDefault, singleInstance : singleInstance};
		this._registeredLoaders.h[prefix] = info;
		if(isDefault) {
			this._defaultLoader = info;
		}
	}
	,get: function(prefix) {
		var info = this._defaultLoader;
		if(Object.prototype.hasOwnProperty.call(this._registeredLoaders.h,prefix)) {
			info = this._registeredLoaders.h[prefix];
		}
		if(info == null) {
			return null;
		}
		var instance = null;
		if(info.singleInstance) {
			instance = info.instance;
		}
		if(instance == null) {
			instance = info.ctor();
			if(instance == null) {
				return null;
			}
			if(info.singleInstance) {
				info.instance = instance;
			}
		}
		return instance;
	}
	,__class__: haxe_ui_loaders_image_ImageLoader
};
var haxe_ui_locale_LocaleEvent = function(type) {
	haxe_ui_events_UIEvent.call(this,type);
};
$hxClasses["haxe.ui.locale.LocaleEvent"] = haxe_ui_locale_LocaleEvent;
haxe_ui_locale_LocaleEvent.__name__ = "haxe.ui.locale.LocaleEvent";
haxe_ui_locale_LocaleEvent.__super__ = haxe_ui_events_UIEvent;
haxe_ui_locale_LocaleEvent.prototype = $extend(haxe_ui_events_UIEvent.prototype,{
	clone: function() {
		var c = new haxe_ui_locale_LocaleEvent(this.type);
		return c;
	}
	,__class__: haxe_ui_locale_LocaleEvent
});
var haxe_ui_locale_LocaleManager = function() {
	this._localeStringMap = new haxe_ds_StringMap();
	this._localeMap = new haxe_ds_StringMap();
	this._language = "en";
	this._eventMap = null;
};
$hxClasses["haxe.ui.locale.LocaleManager"] = haxe_ui_locale_LocaleManager;
haxe_ui_locale_LocaleManager.__name__ = "haxe.ui.locale.LocaleManager";
haxe_ui_locale_LocaleManager.__properties__ = {get_instance:"get_instance"};
haxe_ui_locale_LocaleManager.get_instance = function() {
	if(haxe_ui_locale_LocaleManager._instance == null) {
		haxe_ui_locale_LocaleManager._instance = new haxe_ui_locale_LocaleManager();
	}
	return haxe_ui_locale_LocaleManager._instance;
};
haxe_ui_locale_LocaleManager.prototype = {
	_eventMap: null
	,registerComponent: function(component,prop,callback,expr,fix) {
		if(fix == null) {
			fix = true;
		}
		if(callback == null && expr == null) {
			return;
		}
		var fixedExpr = null;
		if(fix == true) {
			if(expr != null) {
				fixedExpr = haxe_ui_util_ExpressionUtil.stringToLanguageExpression(expr,"LocaleManager");
				if(StringTools.endsWith(fixedExpr,";") == true) {
					fixedExpr = HxOverrides.substr(fixedExpr,0,fixedExpr.length - 1);
				}
			}
		} else {
			fixedExpr = expr;
		}
		var propMap = haxe_ui_locale_LocaleManager._registeredComponents.h[component.__id__];
		if(propMap == null) {
			propMap = new haxe_ds_StringMap();
			haxe_ui_locale_LocaleManager._registeredComponents.set(component,propMap);
		}
		propMap.h[prop] = { callback : callback, expr : fixedExpr};
		this.refreshFor(component);
	}
	,unregisterComponent: function(component) {
		haxe_ui_locale_LocaleManager._registeredComponents.remove(component);
	}
	,findBindingExpr: function(component,prop) {
		var propMap = haxe_ui_locale_LocaleManager._registeredComponents.h[component.__id__];
		if(propMap == null) {
			return null;
		}
		var entry = propMap.h[prop];
		if(entry == null) {
			return null;
		}
		return entry.expr;
	}
	,cloneForComponent: function(from,to) {
		var propMap = haxe_ui_locale_LocaleManager._registeredComponents.h[from.__id__];
		if(propMap == null) {
			return;
		}
		var h = propMap.h;
		var prop_h = h;
		var prop_keys = Object.keys(h);
		var prop_length = prop_keys.length;
		var prop_current = 0;
		while(prop_current < prop_length) {
			var prop = prop_keys[prop_current++];
			var entry = propMap.h[prop];
			this.registerComponent(to,prop,entry.callback,entry.expr,false);
		}
	}
	,onComponentReady: function(e) {
		e.target.unregisterEvent("ready",$bind(this,this.onComponentReady));
		this.refreshFor(e.target);
	}
	,refreshFor: function(component) {
		if(component.get_isReady() == false) {
			component.registerEvent("ready",$bind(this,this.onComponentReady));
			return;
		}
		var propMap = haxe_ui_locale_LocaleManager._registeredComponents.h[component.__id__];
		if(propMap == null) {
			return;
		}
		var context = { LocaleManager : haxe_ui_locale_LocaleManager, MathUtil : haxe_ui_util_MathUtil};
		var root = this.findRoot(component);
		var _g = 0;
		var _g1 = root.get_namedComponents();
		while(_g < _g1.length) {
			var k = _g1[_g];
			++_g;
			if(k.get_scriptAccess() == false) {
				continue;
			}
			context[k.get_id()] = k;
		}
		var h = propMap.h;
		var prop_h = h;
		var prop_keys = Object.keys(h);
		var prop_length = prop_keys.length;
		var prop_current = 0;
		while(prop_current < prop_length) {
			var prop = prop_keys[prop_current++];
			var entry = propMap.h[prop];
			if(entry.callback != null) {
				var value = entry.callback();
				Reflect.setProperty(component,prop,value);
			} else if(entry.expr != null) {
				var value1 = haxe_ui_util_SimpleExpressionEvaluator.eval(entry.expr,context);
				Reflect.setProperty(component,prop,value1);
			}
		}
	}
	,refreshAll: function() {
		var c = haxe_ui_locale_LocaleManager._registeredComponents.keys();
		while(c.hasNext()) {
			var c1 = c.next();
			this.refreshFor(c1);
		}
	}
	,_language: null
	,get_language: function() {
		return this._language;
	}
	,set_language: function(value) {
		if(value == null) {
			return value;
		}
		if(this._language == value) {
			return value;
		}
		var tmp = this.getStrings(value) == null;
		this._language = value;
		this.refreshAll();
		if(this._eventMap != null) {
			var event = new haxe_ui_locale_LocaleEvent("localeChanged");
			this._eventMap.invoke("localeChanged",event);
		}
		return value;
	}
	,registerEvent: function(type,listener,priority) {
		if(priority == null) {
			priority = 0;
		}
		if(this._eventMap == null) {
			this._eventMap = new haxe_ui_util_EventMap();
		}
		this._eventMap.add(type,listener,priority);
	}
	,hasEvent: function(type,listener) {
		if(this._eventMap == null) {
			return false;
		}
		return this._eventMap.contains(type,listener);
	}
	,unregisterEvent: function(type,listener) {
		if(this._eventMap != null) {
			this._eventMap.remove(type,listener);
		}
	}
	,parseResource: function(localeId,resourceId) {
		var content = haxe_ui_ToolkitAssets.get_instance().getText(resourceId);
		if(content != null) {
			var parts = resourceId.split(".");
			var extension = parts.pop();
			var filename = parts.join(".");
			var n = filename.lastIndexOf("/");
			if(n != -1) {
				filename = HxOverrides.substr(filename,n + 1,null);
			}
			var parser = haxe_ui_parsers_locale_LocaleParser.get(extension);
			var map = parser.parse(content);
			this.addStrings(localeId,map,filename);
		}
	}
	,_localeMap: null
	,addStrings: function(localeId,map,filename) {
		var stringMap = this._localeMap.h[localeId];
		if(stringMap == null) {
			stringMap = new haxe_ds_StringMap();
			this._localeMap.h[localeId] = stringMap;
		}
		var h = map.h;
		var k_h = h;
		var k_keys = Object.keys(h);
		var k_length = k_keys.length;
		var k_current = 0;
		while(k_current < k_length) {
			var k = k_keys[k_current++];
			var v = map.h[k];
			if(filename != null && filename != localeId && StringTools.startsWith(k,filename) == false) {
				var altKey = filename + "." + k;
				stringMap.h[altKey] = v;
			}
			stringMap.h[k] = v;
		}
		localeId = StringTools.replace(localeId,"-","_");
		var parts = localeId.split("_");
		if(parts.length > 1) {
			var parent = this._localeMap.h[parts[0]];
			if(parent != null) {
				var h = parent.h;
				var k_h = h;
				var k_keys = Object.keys(h);
				var k_length = k_keys.length;
				var k_current = 0;
				while(k_current < k_length) {
					var k = k_keys[k_current++];
					if(Object.prototype.hasOwnProperty.call(stringMap.h,k) == false) {
						stringMap.h[k] = parent.h[k];
					}
				}
			}
		}
	}
	,getStrings: function(localeId) {
		var strings = this._localeMap.h[localeId];
		if(strings != null) {
			return strings;
		}
		localeId = StringTools.replace(localeId,"-","_");
		var parts = localeId.split("_");
		if(!Object.prototype.hasOwnProperty.call(this._localeMap.h,parts[0])) {
			return this._localeMap.h["en"];
		}
		return this._localeMap.h[parts[0]];
	}
	,hasString: function(id) {
		var strings = this.getStrings(this.get_language());
		if(strings == null) {
			return false;
		}
		return Object.prototype.hasOwnProperty.call(strings.h,id);
	}
	,lookupString: function(id,param0,param1,param2,param3) {
		return this.translateTo(this.get_language(),id,param0,param1,param2,param3);
	}
	,_localeStringMap: null
	,translateTo: function(lang,id,param0,param1,param2,param3) {
		var map = this._localeStringMap.h[lang];
		var localeString = null;
		if(map != null) {
			localeString = map.h[id];
		}
		if(localeString == null) {
			var strings = this.getStrings(lang);
			if(strings == null) {
				return id;
			}
			var value = strings.h[id];
			if(value == null) {
				return id;
			}
			var isCompound = false;
			if(value.indexOf("{{") != -1 && value.indexOf("}}") != -1) {
				isCompound = true;
				var n1 = value.indexOf("{{");
				while(n1 != -1) {
					var n2 = value.indexOf("}}",n1);
					var before = value.substring(0,n1);
					var part = value.substring(n1 + 2,n2);
					var after = value.substring(n2 + 2);
					var partValue = this.translateTo(lang,part,param0,param1,param2,param3);
					value = before + partValue + after;
					n1 = value.indexOf("{{",n1);
				}
			}
			localeString = new haxe_ui_locale_LocaleString();
			localeString.parse(id + "=" + value);
			if(!isCompound) {
				if(map == null) {
					map = new haxe_ds_StringMap();
					this._localeStringMap.h[lang] = map;
				}
				map.h[id] = localeString;
			}
		}
		var result = localeString.build(param0,param1,param2,param3);
		return result;
	}
	,findRoot: function(c) {
		var root = c;
		var ref = c;
		while(ref != null) {
			root = ref;
			if(root.bindingRoot) {
				break;
			}
			ref = ref.parentComponent;
		}
		return root;
	}
	,__class__: haxe_ui_locale_LocaleManager
	,__properties__: {set_language:"set_language",get_language:"get_language"}
};
var haxe_ui_locale_LocaleString = function() {
	this._cachedValue = null;
	this._isSimple = true;
	this.parts = [];
};
$hxClasses["haxe.ui.locale.LocaleString"] = haxe_ui_locale_LocaleString;
haxe_ui_locale_LocaleString.__name__ = "haxe.ui.locale.LocaleString";
haxe_ui_locale_LocaleString.prototype = {
	id: null
	,parts: null
	,_isSimple: null
	,_cachedValue: null
	,build: function(param0,param1,param2,param3) {
		if(this._isSimple == true && this._cachedValue != null) {
			return this._cachedValue;
		}
		var result = null;
		if(Type.typeof(param0)._hx_index == 4) {
			if(param0 != null && param0.text != null) {
				param0 = param0.text;
			}
			if(param1 != null && param1.text != null) {
				param1 = param1.text;
			}
			if(param2 != null && param2.text != null) {
				param2 = param2.text;
			}
			if(param3 != null && param3.text != null) {
				param3 = param3.text;
			}
		}
		var _g = 0;
		var _g1 = this.parts;
		while(_g < _g1.length) {
			var part = _g1[_g];
			++_g;
			switch(part._hx_index) {
			case 0:
				var s = part.s;
				if(result == null) {
					result = "";
				}
				result += s;
				break;
			case 1:
				var expr = part.block;
				if(result == null) {
					result = "";
				}
				result += expr.evaluate(param0,param1,param2,param3);
				break;
			}
		}
		if(result == null) {
			result = this.id;
		}
		if(result != null) {
			if(this._isSimple == true) {
				if(result.indexOf("[0]") != -1) {
					this._isSimple = false;
				}
				if(result.indexOf("[1]") != -1) {
					this._isSimple = false;
				}
				if(result.indexOf("[2]") != -1) {
					this._isSimple = false;
				}
				if(result.indexOf("[3]") != -1) {
					this._isSimple = false;
				}
				if(result.indexOf("{{") != -1 && result.indexOf("}}") != -1) {
					this._isSimple = false;
				}
			}
			if(param0 != null) {
				result = StringTools.replace(result,"[0]",Std.string(param0));
			}
			if(param1 != null) {
				result = StringTools.replace(result,"[1]",Std.string(param1));
			}
			if(param2 != null) {
				result = StringTools.replace(result,"[2]",Std.string(param2));
			}
			if(param3 != null) {
				result = StringTools.replace(result,"[3]",Std.string(param3));
			}
			var n1 = result.indexOf("{{");
			var beforePos = 0;
			while(n1 != -1) {
				var before = result.substring(beforePos,n1);
				var n2 = result.indexOf("}}",n1);
				var code = result.substring(n1 + 2,n2);
				var after = result.substring(n2 + 2);
				var subResult = haxe_ui_locale_LocaleManager.get_instance().lookupString(code);
				if(subResult != null) {
					result = before + subResult + after;
				}
				n1 = result.indexOf("{{",n2);
				beforePos = n2 + 2;
			}
			if(this._isSimple) {
				this._cachedValue = result;
			}
		}
		return result;
	}
	,parse: function(s) {
		this.parts = [];
		var n = s.indexOf("=");
		if(n == -1) {
			return;
		}
		this.id = StringTools.trim(s.substring(0,n));
		s = StringTools.trim(HxOverrides.substr(s,n + 1,null));
		var inExpression = false;
		var part = "";
		var _g = 0;
		var _g1 = s.length;
		while(_g < _g1) {
			var i = _g++;
			var ch = s.charAt(i);
			switch(ch) {
			case "{":
				if(part.length > 0) {
					this.parts.push(haxe_ui_locale__$LocaleString_LocaleStringPart.Literal(part));
				}
				inExpression = true;
				part = "";
				break;
			case "}":
				if(part.length > 0) {
					var block = new haxe_ui_locale_LocaleStringExpressionBlock();
					block.parse(part);
					this.parts.push(haxe_ui_locale__$LocaleString_LocaleStringPart.ExpressionBlock(block));
				}
				inExpression = false;
				part = "";
				break;
			default:
				part += ch;
			}
		}
		if(part.length > 0) {
			this.parts.push(haxe_ui_locale__$LocaleString_LocaleStringPart.Literal(part));
		}
		var _g = 0;
		var _g1 = this.parts;
		_hx_loop2: while(_g < _g1.length) {
			var part = _g1[_g];
			++_g;
			switch(part._hx_index) {
			case 0:
				var s = part.s;
				break;
			case 1:
				var block = part.block;
				if(block.expressions != null && block.expressions.length > 0) {
					this._isSimple = false;
					break _hx_loop2;
				}
				break;
			}
		}
	}
	,__class__: haxe_ui_locale_LocaleString
};
var haxe_ui_locale__$LocaleString_LocaleStringPart = $hxEnums["haxe.ui.locale._LocaleString.LocaleStringPart"] = { __ename__:"haxe.ui.locale._LocaleString.LocaleStringPart",__constructs__:null
	,Literal: ($_=function(s) { return {_hx_index:0,s:s,__enum__:"haxe.ui.locale._LocaleString.LocaleStringPart",toString:$estr}; },$_._hx_name="Literal",$_.__params__ = ["s"],$_)
	,ExpressionBlock: ($_=function(block) { return {_hx_index:1,block:block,__enum__:"haxe.ui.locale._LocaleString.LocaleStringPart",toString:$estr}; },$_._hx_name="ExpressionBlock",$_.__params__ = ["block"],$_)
};
haxe_ui_locale__$LocaleString_LocaleStringPart.__constructs__ = [haxe_ui_locale__$LocaleString_LocaleStringPart.Literal,haxe_ui_locale__$LocaleString_LocaleStringPart.ExpressionBlock];
var haxe_ui_locale_LocaleStringExpression = function() {
	this.isDefault = false;
};
$hxClasses["haxe.ui.locale.LocaleStringExpression"] = haxe_ui_locale_LocaleStringExpression;
haxe_ui_locale_LocaleStringExpression.__name__ = "haxe.ui.locale.LocaleStringExpression";
haxe_ui_locale_LocaleStringExpression.prototype = {
	isDefault: null
	,varName: null
	,expression: null
	,expressionResult: null
	,evaluate: function(param0,param1,param2,param3) {
		if(this.expression == null) {
			return false;
		}
		var varValue = param0;
		if(this.varName == "[0]") {
			varValue = param0;
		}
		if(this.varName == "[1]") {
			varValue = param1;
		}
		if(this.varName == "[2]") {
			varValue = param2;
		}
		if(this.varName == "[3]") {
			varValue = param3;
		}
		var result = this.eval(varValue,this.expression);
		return result;
	}
	,'eval': function(varValue,expr) {
		switch(expr._hx_index) {
		case 0:
			var expr1 = expr.expr;
			var r = false;
			if(Type.typeof(varValue) == ValueType.TFloat) {
				var floatValue = varValue;
				var floatResult = parseFloat(Std.string(this.eval(floatValue,expr1)));
				r = floatValue == floatResult;
			} else if(Type.typeof(varValue) == ValueType.TInt) {
				var intValue = varValue;
				var intResult = Std.parseInt(Std.string(this.eval(intValue,expr1)));
				r = intValue == intResult;
			} else {
				var stringValue = Std.string(varValue);
				var stringResult = Std.string(this.eval(stringValue,expr1));
				r = stringValue == stringResult;
			}
			return r;
		case 1:
			var expr1 = expr.expr;
			var r = false;
			if(Type.typeof(varValue) == ValueType.TFloat) {
				var floatValue = varValue;
				var floatResult = parseFloat(Std.string(this.eval(floatValue,expr1)));
				r = floatValue < floatResult;
			} else if(Type.typeof(varValue) == ValueType.TInt) {
				var intValue = varValue;
				var intResult = Std.parseInt(Std.string(this.eval(intValue,expr1)));
				r = intValue < intResult;
			}
			return r;
		case 2:
			var expr1 = expr.expr;
			var r = false;
			if(Type.typeof(varValue) == ValueType.TFloat) {
				var floatValue = varValue;
				var floatResult = parseFloat(Std.string(this.eval(floatValue,expr1)));
				r = floatValue > floatResult;
			} else if(Type.typeof(varValue) == ValueType.TInt) {
				var intValue = varValue;
				var intResult = Std.parseInt(Std.string(this.eval(intValue,expr1)));
				r = intValue > intResult;
			}
			return r;
		case 3:
			var expr1 = expr.expr;
			var r = false;
			if(Type.typeof(varValue) == ValueType.TFloat) {
				var floatValue = varValue;
				var floatResult = parseFloat(Std.string(this.eval(floatValue,expr1)));
				r = floatValue <= floatResult;
			} else if(Type.typeof(varValue) == ValueType.TInt) {
				var intValue = varValue;
				var intResult = Std.parseInt(Std.string(this.eval(intValue,expr1)));
				r = intValue <= intResult;
			}
			return r;
		case 4:
			var expr1 = expr.expr;
			var r = false;
			if(Type.typeof(varValue) == ValueType.TFloat) {
				var floatValue = varValue;
				var floatResult = parseFloat(Std.string(this.eval(floatValue,expr1)));
				r = floatValue >= floatResult;
			} else if(Type.typeof(varValue) == ValueType.TInt) {
				var intValue = varValue;
				var intResult = Std.parseInt(Std.string(this.eval(intValue,expr1)));
				r = intValue >= intResult;
			}
			return r;
		case 5:
			var start = expr.start;
			var end = expr.end;
			return varValue >= start && varValue <= end;
		case 6:
			var modulus = expr.modulus;
			var expr1 = expr.expr;
			var r = varValue % modulus;
			return this.eval(r,expr1);
		case 7:
			var values = expr.values;
			var found = null;
			var _g = 0;
			while(_g < values.length) {
				var v = values[_g];
				++_g;
				if(v == varValue) {
					found = v;
					break;
				}
			}
			return found;
		case 8:
			var value = expr.value;
			return value;
		}
	}
	,parse: function(s) {
		s = StringTools.trim(s);
		var n = s.indexOf(":");
		if(n == -1) {
			return;
		}
		var expr = StringTools.trim(s.substring(0,n));
		this.expressionResult = StringTools.trim(s.substring(n + 1));
		if(expr == "_") {
			this.isDefault = true;
			return;
		}
		this.expression = this.extractExpression(expr);
		if(this.expression == null) {
			var replacement = haxe_ui_locale_LocaleManager.get_instance().lookupString(expr);
			if(replacement != null) {
				this.expression = this.extractExpression(replacement);
			}
		}
	}
	,extractExpression: function(expr) {
		var n = -1;
		var _g = 0;
		var _g1 = expr.length;
		_hx_loop1: while(_g < _g1) {
			var i = _g++;
			var ch = expr.charAt(i);
			switch(ch) {
			case " ":case "%":case "<":case "=":case ">":
				n = i;
				break _hx_loop1;
			default:
			}
		}
		if(n == -1) {
			return null;
		}
		this.varName = StringTools.trim(expr.substring(0,n));
		expr = StringTools.trim(expr.substring(n));
		var expression = this.parseExpression(expr);
		return expression;
	}
	,parseExpression: function(s) {
		var expression = null;
		s = StringTools.trim(s);
		if(StringTools.startsWith(s,">=")) {
			expression = haxe_ui_locale__$LocaleStringExpression_LocalStringExpressionOperation.GreaterThanOrEquals(this.parseExpression(s.substring(2)));
		} else if(StringTools.startsWith(s,"<=")) {
			expression = haxe_ui_locale__$LocaleStringExpression_LocalStringExpressionOperation.LessThanOrEquals(this.parseExpression(s.substring(2)));
		} else if(StringTools.startsWith(s,">")) {
			expression = haxe_ui_locale__$LocaleStringExpression_LocalStringExpressionOperation.GreaterThan(this.parseExpression(s.substring(1)));
		} else if(StringTools.startsWith(s,"<")) {
			expression = haxe_ui_locale__$LocaleStringExpression_LocalStringExpressionOperation.LessThan(this.parseExpression(s.substring(1)));
		} else if(StringTools.startsWith(s,"=")) {
			expression = haxe_ui_locale__$LocaleStringExpression_LocalStringExpressionOperation.Equals(this.parseExpression(s.substring(1)));
		} else if(StringTools.startsWith(s,"mod ")) {
			var mod = StringTools.trim(s.substring(3));
			var n = -1;
			var _g = 0;
			var _g1 = mod.length;
			_hx_loop1: while(_g < _g1) {
				var i = _g++;
				var ch = mod.charAt(i);
				switch(ch) {
				case " ":case "%":case "<":case "=":case ">":
					n = i;
					break _hx_loop1;
				default:
				}
			}
			if(n != -1) {
				var rest = mod.substring(n);
				var mod1 = StringTools.trim(mod.substring(0,n));
				expression = haxe_ui_locale__$LocaleStringExpression_LocalStringExpressionOperation.Modulus(parseFloat(mod1),this.parseExpression(rest));
			}
		} else if(StringTools.startsWith(s,"in ")) {
			var range = StringTools.trim(HxOverrides.substr(s,2,null)).split("...");
			expression = haxe_ui_locale__$LocaleStringExpression_LocalStringExpressionOperation.Range(parseFloat(range[0]),parseFloat(range[1]));
		} else if(s.indexOf("|") != -1) {
			var valueParts = s.split("|");
			var values = [];
			var _g = 0;
			while(_g < valueParts.length) {
				var p = valueParts[_g];
				++_g;
				p = StringTools.trim(p);
				if(p.length == 0) {
					continue;
				}
				values.push(parseFloat(p));
			}
			expression = haxe_ui_locale__$LocaleStringExpression_LocalStringExpressionOperation.List(values);
		} else {
			expression = haxe_ui_locale__$LocaleStringExpression_LocalStringExpressionOperation.Value(s);
		}
		return expression;
	}
	,__class__: haxe_ui_locale_LocaleStringExpression
};
var haxe_ui_locale__$LocaleStringExpression_LocalStringExpressionOperation = $hxEnums["haxe.ui.locale._LocaleStringExpression.LocalStringExpressionOperation"] = { __ename__:"haxe.ui.locale._LocaleStringExpression.LocalStringExpressionOperation",__constructs__:null
	,Equals: ($_=function(expr) { return {_hx_index:0,expr:expr,__enum__:"haxe.ui.locale._LocaleStringExpression.LocalStringExpressionOperation",toString:$estr}; },$_._hx_name="Equals",$_.__params__ = ["expr"],$_)
	,LessThan: ($_=function(expr) { return {_hx_index:1,expr:expr,__enum__:"haxe.ui.locale._LocaleStringExpression.LocalStringExpressionOperation",toString:$estr}; },$_._hx_name="LessThan",$_.__params__ = ["expr"],$_)
	,GreaterThan: ($_=function(expr) { return {_hx_index:2,expr:expr,__enum__:"haxe.ui.locale._LocaleStringExpression.LocalStringExpressionOperation",toString:$estr}; },$_._hx_name="GreaterThan",$_.__params__ = ["expr"],$_)
	,LessThanOrEquals: ($_=function(expr) { return {_hx_index:3,expr:expr,__enum__:"haxe.ui.locale._LocaleStringExpression.LocalStringExpressionOperation",toString:$estr}; },$_._hx_name="LessThanOrEquals",$_.__params__ = ["expr"],$_)
	,GreaterThanOrEquals: ($_=function(expr) { return {_hx_index:4,expr:expr,__enum__:"haxe.ui.locale._LocaleStringExpression.LocalStringExpressionOperation",toString:$estr}; },$_._hx_name="GreaterThanOrEquals",$_.__params__ = ["expr"],$_)
	,Range: ($_=function(start,end) { return {_hx_index:5,start:start,end:end,__enum__:"haxe.ui.locale._LocaleStringExpression.LocalStringExpressionOperation",toString:$estr}; },$_._hx_name="Range",$_.__params__ = ["start","end"],$_)
	,Modulus: ($_=function(modulus,expr) { return {_hx_index:6,modulus:modulus,expr:expr,__enum__:"haxe.ui.locale._LocaleStringExpression.LocalStringExpressionOperation",toString:$estr}; },$_._hx_name="Modulus",$_.__params__ = ["modulus","expr"],$_)
	,List: ($_=function(values) { return {_hx_index:7,values:values,__enum__:"haxe.ui.locale._LocaleStringExpression.LocalStringExpressionOperation",toString:$estr}; },$_._hx_name="List",$_.__params__ = ["values"],$_)
	,Value: ($_=function(value) { return {_hx_index:8,value:value,__enum__:"haxe.ui.locale._LocaleStringExpression.LocalStringExpressionOperation",toString:$estr}; },$_._hx_name="Value",$_.__params__ = ["value"],$_)
};
haxe_ui_locale__$LocaleStringExpression_LocalStringExpressionOperation.__constructs__ = [haxe_ui_locale__$LocaleStringExpression_LocalStringExpressionOperation.Equals,haxe_ui_locale__$LocaleStringExpression_LocalStringExpressionOperation.LessThan,haxe_ui_locale__$LocaleStringExpression_LocalStringExpressionOperation.GreaterThan,haxe_ui_locale__$LocaleStringExpression_LocalStringExpressionOperation.LessThanOrEquals,haxe_ui_locale__$LocaleStringExpression_LocalStringExpressionOperation.GreaterThanOrEquals,haxe_ui_locale__$LocaleStringExpression_LocalStringExpressionOperation.Range,haxe_ui_locale__$LocaleStringExpression_LocalStringExpressionOperation.Modulus,haxe_ui_locale__$LocaleStringExpression_LocalStringExpressionOperation.List,haxe_ui_locale__$LocaleStringExpression_LocalStringExpressionOperation.Value];
var haxe_ui_locale_LocaleStringExpressionBlock = function() {
	this.expressions = [];
};
$hxClasses["haxe.ui.locale.LocaleStringExpressionBlock"] = haxe_ui_locale_LocaleStringExpressionBlock;
haxe_ui_locale_LocaleStringExpressionBlock.__name__ = "haxe.ui.locale.LocaleStringExpressionBlock";
haxe_ui_locale_LocaleStringExpressionBlock.prototype = {
	expressions: null
	,evaluate: function(param0,param1,param2,param3) {
		var result = null;
		var _g = 0;
		var _g1 = this.expressions;
		while(_g < _g1.length) {
			var expr = _g1[_g];
			++_g;
			if(expr.isDefault) {
				continue;
			}
			if(expr.evaluate(param0,param1,param2,param3) == true) {
				result = expr.expressionResult;
				break;
			}
		}
		if(result == null) {
			var defaultExpression = this.findDefaultExpression();
			if(defaultExpression != null) {
				result = defaultExpression.expressionResult;
			}
		}
		return result;
	}
	,findDefaultExpression: function() {
		var _g = 0;
		var _g1 = this.expressions;
		while(_g < _g1.length) {
			var expr = _g1[_g];
			++_g;
			if(expr.isDefault) {
				return expr;
			}
		}
		return null;
	}
	,parse: function(s) {
		this.expressions = [];
		s = StringTools.trim(s);
		var lines = s.split("\n");
		var _g = 0;
		while(_g < lines.length) {
			var l = lines[_g];
			++_g;
			var expr = new haxe_ui_locale_LocaleStringExpression();
			expr.parse(l);
			this.expressions.push(expr);
		}
	}
	,__class__: haxe_ui_locale_LocaleStringExpressionBlock
};
var haxe_ui_macros_BackendMacros = function() { };
$hxClasses["haxe.ui.macros.BackendMacros"] = haxe_ui_macros_BackendMacros;
haxe_ui_macros_BackendMacros.__name__ = "haxe.ui.macros.BackendMacros";
var haxe_ui_macros_ComponentMacros = function() { };
$hxClasses["haxe.ui.macros.ComponentMacros"] = haxe_ui_macros_ComponentMacros;
haxe_ui_macros_ComponentMacros.__name__ = "haxe.ui.macros.ComponentMacros";
var haxe_ui_macros_ModuleMacros = function() { };
$hxClasses["haxe.ui.macros.ModuleMacros"] = haxe_ui_macros_ModuleMacros;
haxe_ui_macros_ModuleMacros.__name__ = "haxe.ui.macros.ModuleMacros";
var haxe_ui_macros_NativeMacros = function() { };
$hxClasses["haxe.ui.macros.NativeMacros"] = haxe_ui_macros_NativeMacros;
haxe_ui_macros_NativeMacros.__name__ = "haxe.ui.macros.NativeMacros";
var haxe_ui_parsers_locale_LocaleParser = function() {
};
$hxClasses["haxe.ui.parsers.locale.LocaleParser"] = haxe_ui_parsers_locale_LocaleParser;
haxe_ui_parsers_locale_LocaleParser.__name__ = "haxe.ui.parsers.locale.LocaleParser";
haxe_ui_parsers_locale_LocaleParser.get = function(extension) {
	haxe_ui_parsers_locale_LocaleParser.defaultParsers();
	var cls = haxe_ui_parsers_locale_LocaleParser._parsers.h[extension];
	if(cls == null) {
		throw haxe_Exception.thrown("No locale parser found for \"" + extension + "\"");
	}
	var instance = Type.createInstance(cls,[]);
	if(instance == null) {
		throw haxe_Exception.thrown("Could not create locale parser instance \"" + Std.string(cls) + "\"");
	}
	return instance;
};
haxe_ui_parsers_locale_LocaleParser.defaultParsers = function() {
	haxe_ui_parsers_locale_LocaleParser.register("properties",haxe_ui_parsers_locale_PropertiesParser);
};
haxe_ui_parsers_locale_LocaleParser.register = function(extension,cls) {
	if(haxe_ui_parsers_locale_LocaleParser._parsers == null) {
		haxe_ui_parsers_locale_LocaleParser._parsers = new haxe_ds_StringMap();
	}
	haxe_ui_parsers_locale_LocaleParser._parsers.h[extension] = cls;
};
haxe_ui_parsers_locale_LocaleParser.prototype = {
	parse: function(data) {
		throw haxe_Exception.thrown("Locale parser not implemented!");
	}
	,__class__: haxe_ui_parsers_locale_LocaleParser
};
var haxe_ui_parsers_locale_KeyValuesParser = function() {
	this.STRICT = true;
	this.COMMENT_STRING = "";
	this.SEPARATOR = "";
	haxe_ui_parsers_locale_LocaleParser.call(this);
};
$hxClasses["haxe.ui.parsers.locale.KeyValuesParser"] = haxe_ui_parsers_locale_KeyValuesParser;
haxe_ui_parsers_locale_KeyValuesParser.__name__ = "haxe.ui.parsers.locale.KeyValuesParser";
haxe_ui_parsers_locale_KeyValuesParser.__super__ = haxe_ui_parsers_locale_LocaleParser;
haxe_ui_parsers_locale_KeyValuesParser.prototype = $extend(haxe_ui_parsers_locale_LocaleParser.prototype,{
	SEPARATOR: null
	,COMMENT_STRING: null
	,STRICT: null
	,parse: function(data) {
		if(this.SEPARATOR == "" || this.COMMENT_STRING == "") {
			throw haxe_Exception.thrown("separator and comment needs implementation");
		}
		var result = new haxe_ds_StringMap();
		var lines = data.split("\n");
		var _g = 0;
		while(_g < lines.length) {
			var line = lines[_g];
			++_g;
			line = StringTools.trim(line);
			if(line.length == 0 || StringTools.startsWith(line,this.COMMENT_STRING)) {
				continue;
			}
			var separator = line.indexOf(this.SEPARATOR);
			if(separator == -1) {
				if(this.STRICT) {
					throw haxe_Exception.thrown("Locale parser: Invalid line " + line);
				} else {
					continue;
				}
			}
			var key = StringTools.trim(HxOverrides.substr(line,0,separator));
			var content = HxOverrides.substr(line,separator + 1,null);
			result.h[key] = content;
		}
		return result;
	}
	,__class__: haxe_ui_parsers_locale_KeyValuesParser
});
var haxe_ui_parsers_locale_CSVParser = function() {
	haxe_ui_parsers_locale_KeyValuesParser.call(this);
	this.SEPARATOR = ";";
	this.COMMENT_STRING = "//";
	this.STRICT = false;
};
$hxClasses["haxe.ui.parsers.locale.CSVParser"] = haxe_ui_parsers_locale_CSVParser;
haxe_ui_parsers_locale_CSVParser.__name__ = "haxe.ui.parsers.locale.CSVParser";
haxe_ui_parsers_locale_CSVParser.__super__ = haxe_ui_parsers_locale_KeyValuesParser;
haxe_ui_parsers_locale_CSVParser.prototype = $extend(haxe_ui_parsers_locale_KeyValuesParser.prototype,{
	__class__: haxe_ui_parsers_locale_CSVParser
});
var haxe_ui_parsers_locale_PropertiesParser = function() {
	haxe_ui_parsers_locale_LocaleParser.call(this);
};
$hxClasses["haxe.ui.parsers.locale.PropertiesParser"] = haxe_ui_parsers_locale_PropertiesParser;
haxe_ui_parsers_locale_PropertiesParser.__name__ = "haxe.ui.parsers.locale.PropertiesParser";
haxe_ui_parsers_locale_PropertiesParser.__super__ = haxe_ui_parsers_locale_LocaleParser;
haxe_ui_parsers_locale_PropertiesParser.prototype = $extend(haxe_ui_parsers_locale_LocaleParser.prototype,{
	parse: function(data) {
		var result = new haxe_ds_StringMap();
		var lines = data.split("\n");
		var newLines = [];
		var _g = 0;
		while(_g < lines.length) {
			var line = lines[_g];
			++_g;
			if(StringTools.trim(line).length == 0 || StringTools.startsWith(StringTools.trim(line),"#")) {
				continue;
			}
			newLines.push(line);
		}
		data = newLines.join("\n");
		var inValue = false;
		var propName = "";
		var propValue = "";
		var _g = 0;
		var _g1 = data.length;
		while(_g < _g1) {
			var i = _g++;
			var ch = data.charAt(i);
			switch(ch) {
			case "\n":
				var hasSpace = false;
				var hasEquals = false;
				var _g2 = i + 1;
				var _g3 = data.length;
				while(_g2 < _g3) {
					var j = _g2++;
					var ch2 = data.charAt(j);
					if(ch2 == "=") {
						hasEquals = true;
						break;
					} else if(ch2 == " ") {
						hasSpace = true;
					} else if(ch2 == "\n") {
						break;
					}
				}
				if(hasEquals == true && hasSpace == false) {
					inValue = false;
					result.h[propName] = propValue;
					propName = "";
					propValue = "";
				} else {
					propValue += ch;
				}
				break;
			case "=":
				if(inValue == true) {
					propValue += ch;
				}
				inValue = true;
				break;
			default:
				if(inValue) {
					propValue += ch;
				} else {
					propName += ch;
				}
			}
		}
		if(propName.length > 0 && propValue.length > 0) {
			result.h[propName] = propValue;
		}
		return result;
	}
	,__class__: haxe_ui_parsers_locale_PropertiesParser
});
var haxe_ui_styles_Dimension = $hxEnums["haxe.ui.styles.Dimension"] = { __ename__:"haxe.ui.styles.Dimension",__constructs__:null
	,PERCENT: ($_=function(value) { return {_hx_index:0,value:value,__enum__:"haxe.ui.styles.Dimension",toString:$estr}; },$_._hx_name="PERCENT",$_.__params__ = ["value"],$_)
	,PX: ($_=function(value) { return {_hx_index:1,value:value,__enum__:"haxe.ui.styles.Dimension",toString:$estr}; },$_._hx_name="PX",$_.__params__ = ["value"],$_)
	,VW: ($_=function(value) { return {_hx_index:2,value:value,__enum__:"haxe.ui.styles.Dimension",toString:$estr}; },$_._hx_name="VW",$_.__params__ = ["value"],$_)
	,VH: ($_=function(value) { return {_hx_index:3,value:value,__enum__:"haxe.ui.styles.Dimension",toString:$estr}; },$_._hx_name="VH",$_.__params__ = ["value"],$_)
	,REM: ($_=function(value) { return {_hx_index:4,value:value,__enum__:"haxe.ui.styles.Dimension",toString:$estr}; },$_._hx_name="REM",$_.__params__ = ["value"],$_)
	,CALC: ($_=function(s) { return {_hx_index:5,s:s,__enum__:"haxe.ui.styles.Dimension",toString:$estr}; },$_._hx_name="CALC",$_.__params__ = ["s"],$_)
};
haxe_ui_styles_Dimension.__constructs__ = [haxe_ui_styles_Dimension.PERCENT,haxe_ui_styles_Dimension.PX,haxe_ui_styles_Dimension.VW,haxe_ui_styles_Dimension.VH,haxe_ui_styles_Dimension.REM,haxe_ui_styles_Dimension.CALC];
var haxe_ui_styles_EasingFunction = $hxEnums["haxe.ui.styles.EasingFunction"] = { __ename__:"haxe.ui.styles.EasingFunction",__constructs__:null
	,LINEAR: {_hx_name:"LINEAR",_hx_index:0,__enum__:"haxe.ui.styles.EasingFunction",toString:$estr}
	,EASE: {_hx_name:"EASE",_hx_index:1,__enum__:"haxe.ui.styles.EasingFunction",toString:$estr}
	,EASE_IN: {_hx_name:"EASE_IN",_hx_index:2,__enum__:"haxe.ui.styles.EasingFunction",toString:$estr}
	,EASE_OUT: {_hx_name:"EASE_OUT",_hx_index:3,__enum__:"haxe.ui.styles.EasingFunction",toString:$estr}
	,EASE_IN_OUT: {_hx_name:"EASE_IN_OUT",_hx_index:4,__enum__:"haxe.ui.styles.EasingFunction",toString:$estr}
};
haxe_ui_styles_EasingFunction.__constructs__ = [haxe_ui_styles_EasingFunction.LINEAR,haxe_ui_styles_EasingFunction.EASE,haxe_ui_styles_EasingFunction.EASE_IN,haxe_ui_styles_EasingFunction.EASE_OUT,haxe_ui_styles_EasingFunction.EASE_IN_OUT];
var haxe_ui_styles_Parser = function() {
};
$hxClasses["haxe.ui.styles.Parser"] = haxe_ui_styles_Parser;
haxe_ui_styles_Parser.__name__ = "haxe.ui.styles.Parser";
haxe_ui_styles_Parser.prototype = {
	parse: function(source) {
		var _gthis = this;
		source = source.replace(haxe_ui_styles_Parser.cssCommentsRegex.r,"");
		if(source.indexOf("$") != -1) {
			var n1 = source.indexOf("$");
			while(n1 != -1) {
				var n2 = n1;
				while(n2 <= source.length - 1) {
					var c = source.charAt(n2);
					if(c == " " || c == ";" || c == "\n" || c == ",") {
						break;
					}
					++n2;
				}
				if(n2 != source.length - 1) {
					var key = source.substring(n1 + 1,n2);
					var value = haxe_ui_themes_ThemeManager.get_instance().currentThemeVars.h[key];
					if(value != null) {
						var before = source.substring(0,n1);
						var after = source.substring(n2);
						source = before + value + after;
						n2 = n1 + value.length;
					} else {
						haxe_Log.trace("WARNING: css variable '" + key + "' not defined",{ fileName : "haxe/ui/styles/Parser.hx", lineNumber : 50, className : "haxe.ui.styles.Parser", methodName : "parse"});
					}
				}
				n1 = source.indexOf("$",n2);
			}
		}
		if(source.indexOf("$") != -1) {
			haxe_Log.trace("WARNING: some css variables not resolved",{ fileName : "haxe/ui/styles/Parser.hx", lineNumber : 60, className : "haxe.ui.styles.Parser", methodName : "parse"});
		}
		var styleSheet = new haxe_ui_styles_StyleSheet();
		source = haxe_ui_styles_Parser.cssImportStatementRegex.map(source,function(e) {
			var i = e.matched(0);
			i = HxOverrides.substr(i,7,null);
			var _this_r = new RegExp("\"|'|;","g".split("u").join(""));
			i = i.replace(_this_r,"");
			i = StringTools.trim(i);
			styleSheet.addImport(new haxe_ui_styles_elements_ImportElement(i));
			return "";
		});
		source = haxe_ui_styles_Parser.cssKeyframesRegex.map(source,function(e) {
			var id = e.matched(1);
			var data = e.matched(2);
			var keyframes = [];
			haxe_ui_styles_Parser.cssKeyframeSelectorRegex.map(data,function(e) {
				var selector = e.matched(1);
				var directives = e.matched(2);
				if(selector == "from") {
					selector = "0%";
				} else if(selector == "to") {
					selector = "100%";
				}
				var keyframe = new haxe_ui_styles_elements_AnimationKeyFrame();
				keyframe.time = haxe_ui_styles_ValueTools.parse(selector);
				keyframe.directives = _gthis.parseDirectives(directives);
				keyframes.push(keyframe);
				return null;
			});
			var animation = new haxe_ui_styles_elements_AnimationKeyFrames(id,keyframes);
			styleSheet.addAnimation(animation);
			return "";
		});
		haxe_ui_styles_Parser.combinedCSSMediaRegex.map(source,function(e) {
			var selector = "";
			if(e.matched(2) == null) {
				selector = StringTools.trim(e.matched(5).split("\r\n").join("\n"));
			} else {
				selector = StringTools.trim(e.matched(2).split("\r\n").join("\n"));
			}
			selector = selector.replace(haxe_ui_styles_Parser.newlineRegex.r,"\n");
			if(selector.indexOf("@media") != -1) {
				var n1 = selector.indexOf("(");
				var n2 = selector.lastIndexOf(")");
				var mediaQuery = selector.substring(n1 + 1,n2);
				var mediaStyleSheet = new haxe_ui_styles_Parser().parse(e.matched(3) + "\n}");
				var mq = new haxe_ui_styles_elements_MediaQuery(_gthis.parseDirectives(mediaQuery),mediaStyleSheet);
				styleSheet.addMediaQuery(mq);
			} else {
				var directives = _gthis.parseDirectives(e.matched(6));
				var selectors = selector.split(",");
				var _g = 0;
				while(_g < selectors.length) {
					var s = selectors[_g];
					++_g;
					s = StringTools.trim(s);
					if(s.length > 0) {
						styleSheet.addRule(new haxe_ui_styles_elements_RuleElement(s,directives));
					}
				}
			}
			return null;
		});
		return styleSheet;
	}
	,parseDirectives: function(rulesString) {
		rulesString = rulesString.split("\r\n").join("\n");
		var ret = [];
		var rules = rulesString.split(";");
		var _g = 0;
		while(_g < rules.length) {
			var line = rules[_g];
			++_g;
			var d = this.parseDirective(line);
			if(d != null) {
				ret.push(d);
			}
		}
		return ret;
	}
	,parseDirective: function(line) {
		var d = null;
		line = StringTools.trim(line);
		if(line.length == 0) {
			return null;
		}
		if(line.indexOf(":") != -1) {
			var parts = line.split(":");
			var cssDirective = StringTools.trim(parts[0]);
			var cssValue = StringTools.trim(parts.slice(1).join(":"));
			if(cssDirective.length < 1 || cssValue.length < 1) {
				return null;
			}
			d = new haxe_ui_styles_elements_Directive(cssDirective,haxe_ui_styles_ValueTools.parse(cssValue));
		} else {
			d = new haxe_ui_styles_elements_Directive("",haxe_ui_styles_ValueTools.parse(line),true);
		}
		return d;
	}
	,__class__: haxe_ui_styles_Parser
};
var haxe_ui_styles_StyleBorderType = $hxEnums["haxe.ui.styles.StyleBorderType"] = { __ename__:"haxe.ui.styles.StyleBorderType",__constructs__:null
	,None: {_hx_name:"None",_hx_index:0,__enum__:"haxe.ui.styles.StyleBorderType",toString:$estr}
	,Full: {_hx_name:"Full",_hx_index:1,__enum__:"haxe.ui.styles.StyleBorderType",toString:$estr}
	,Compound: {_hx_name:"Compound",_hx_index:2,__enum__:"haxe.ui.styles.StyleBorderType",toString:$estr}
};
haxe_ui_styles_StyleBorderType.__constructs__ = [haxe_ui_styles_StyleBorderType.None,haxe_ui_styles_StyleBorderType.Full,haxe_ui_styles_StyleBorderType.Compound];
var haxe_ui_styles_Style = function(left,top,autoWidth,width,percentWidth,minWidth,minPercentWidth,maxWidth,maxPercentWidth,initialWidth,initialPercentWidth,autoHeight,height,percentHeight,minHeight,minPercentHeight,maxHeight,maxPercentHeight,initialHeight,initialPercentHeight,padding,paddingTop,paddingLeft,paddingRight,paddingBottom,marginTop,marginLeft,marginRight,marginBottom,horizontalSpacing,verticalSpacing,color,backgroundColor,backgroundOpacity,backgroundColorEnd,backgroundGradientStyle,backgroundImage,backgroundImageRepeat,backgroundPositionX,backgroundPositionY,backgroundImageClipTop,backgroundImageClipLeft,backgroundImageClipBottom,backgroundImageClipRight,backgroundImageSliceTop,backgroundImageSliceLeft,backgroundImageSliceBottom,backgroundImageSliceRight,borderColor,borderTopColor,borderLeftColor,borderBottomColor,borderRightColor,borderSize,borderTopSize,borderLeftSize,borderBottomSize,borderRightSize,borderRadius,borderRadiusTopLeft,borderRadiusTopRight,borderRadiusBottomLeft,borderRadiusBottomRight,borderOpacity,borderStyle,icon,iconPosition,horizontalAlign,verticalAlign,textAlign,opacity,clip,native,fontName,fontSize,fontBold,fontUnderline,fontItalic,fontStrikeThrough,cursor,hidden,filter,backdropFilter,resource,animationName,animationOptions,mode,pointerEvents,contentType,direction,contentWidth,contentWidthPercent,contentHeight,contentHeightPercent,wordWrap,imageRendering,backgroundWidth,backgroundWidthPercent,backgroundHeight,backgroundHeightPercent,layout,includeInLayout,borderType,hasBorder,fullBorderSize) {
	this.left = left;
	this.top = top;
	this.autoWidth = autoWidth;
	this.width = width;
	this.percentWidth = percentWidth;
	this.minWidth = minWidth;
	this.minPercentWidth = minPercentWidth;
	this.maxWidth = maxWidth;
	this.maxPercentWidth = maxPercentWidth;
	this.initialWidth = initialWidth;
	this.initialPercentWidth = initialPercentWidth;
	this.autoHeight = autoHeight;
	this.height = height;
	this.percentHeight = percentHeight;
	this.minHeight = minHeight;
	this.minPercentHeight = minPercentHeight;
	this.maxHeight = maxHeight;
	this.maxPercentHeight = maxPercentHeight;
	this.initialHeight = initialHeight;
	this.initialPercentHeight = initialPercentHeight;
	this.padding = padding;
	this.paddingTop = paddingTop;
	this.paddingLeft = paddingLeft;
	this.paddingRight = paddingRight;
	this.paddingBottom = paddingBottom;
	this.marginTop = marginTop;
	this.marginLeft = marginLeft;
	this.marginRight = marginRight;
	this.marginBottom = marginBottom;
	this.horizontalSpacing = horizontalSpacing;
	this.verticalSpacing = verticalSpacing;
	this.color = color;
	this.backgroundColor = backgroundColor;
	this.backgroundOpacity = backgroundOpacity;
	this.backgroundColorEnd = backgroundColorEnd;
	this.backgroundGradientStyle = backgroundGradientStyle;
	this.backgroundImage = backgroundImage;
	this.backgroundImageRepeat = backgroundImageRepeat;
	this.backgroundPositionX = backgroundPositionX;
	this.backgroundPositionY = backgroundPositionY;
	this.backgroundImageClipTop = backgroundImageClipTop;
	this.backgroundImageClipLeft = backgroundImageClipLeft;
	this.backgroundImageClipBottom = backgroundImageClipBottom;
	this.backgroundImageClipRight = backgroundImageClipRight;
	this.backgroundImageSliceTop = backgroundImageSliceTop;
	this.backgroundImageSliceLeft = backgroundImageSliceLeft;
	this.backgroundImageSliceBottom = backgroundImageSliceBottom;
	this.backgroundImageSliceRight = backgroundImageSliceRight;
	this.borderColor = borderColor;
	this.borderTopColor = borderTopColor;
	this.borderLeftColor = borderLeftColor;
	this.borderBottomColor = borderBottomColor;
	this.borderRightColor = borderRightColor;
	this.borderSize = borderSize;
	this.borderTopSize = borderTopSize;
	this.borderLeftSize = borderLeftSize;
	this.borderBottomSize = borderBottomSize;
	this.borderRightSize = borderRightSize;
	this.borderRadius = borderRadius;
	this.borderRadiusTopLeft = borderRadiusTopLeft;
	this.borderRadiusTopRight = borderRadiusTopRight;
	this.borderRadiusBottomLeft = borderRadiusBottomLeft;
	this.borderRadiusBottomRight = borderRadiusBottomRight;
	this.borderOpacity = borderOpacity;
	this.borderStyle = borderStyle;
	this.icon = icon;
	this.iconPosition = iconPosition;
	this.horizontalAlign = horizontalAlign;
	this.verticalAlign = verticalAlign;
	this.textAlign = textAlign;
	this.opacity = opacity;
	this.clip = clip;
	this.native = native;
	this.fontName = fontName;
	this.fontSize = fontSize;
	this.fontBold = fontBold;
	this.fontUnderline = fontUnderline;
	this.fontItalic = fontItalic;
	this.fontStrikeThrough = fontStrikeThrough;
	this.cursor = cursor;
	this.hidden = hidden;
	this.filter = filter;
	this.backdropFilter = backdropFilter;
	this.resource = resource;
	this.animationName = animationName;
	this.animationOptions = animationOptions;
	this.mode = mode;
	this.pointerEvents = pointerEvents;
	this.contentType = contentType;
	this.direction = direction;
	this.contentWidth = contentWidth;
	this.contentWidthPercent = contentWidthPercent;
	this.contentHeight = contentHeight;
	this.contentHeightPercent = contentHeightPercent;
	this.wordWrap = wordWrap;
	this.imageRendering = imageRendering;
	this.backgroundWidth = backgroundWidth;
	this.backgroundWidthPercent = backgroundWidthPercent;
	this.backgroundHeight = backgroundHeight;
	this.backgroundHeightPercent = backgroundHeightPercent;
	this.layout = layout;
	this.includeInLayout = includeInLayout;
	this.borderType = borderType;
	this.hasBorder = hasBorder;
	this.fullBorderSize = fullBorderSize;
};
$hxClasses["haxe.ui.styles.Style"] = haxe_ui_styles_Style;
haxe_ui_styles_Style.__name__ = "haxe.ui.styles.Style";
haxe_ui_styles_Style.prototype = {
	left: null
	,top: null
	,autoWidth: null
	,width: null
	,percentWidth: null
	,minWidth: null
	,minPercentWidth: null
	,maxWidth: null
	,maxPercentWidth: null
	,initialWidth: null
	,initialPercentWidth: null
	,autoHeight: null
	,height: null
	,percentHeight: null
	,minHeight: null
	,minPercentHeight: null
	,maxHeight: null
	,maxPercentHeight: null
	,initialHeight: null
	,initialPercentHeight: null
	,padding: null
	,paddingTop: null
	,paddingLeft: null
	,paddingRight: null
	,paddingBottom: null
	,set_padding: function(value) {
		this.paddingTop = value;
		this.paddingLeft = value;
		this.paddingRight = value;
		this.paddingBottom = value;
		return value;
	}
	,marginTop: null
	,marginLeft: null
	,marginRight: null
	,marginBottom: null
	,horizontalSpacing: null
	,verticalSpacing: null
	,color: null
	,backgroundColor: null
	,backgroundOpacity: null
	,backgroundColorEnd: null
	,backgroundGradientStyle: null
	,backgroundImage: null
	,backgroundImageRepeat: null
	,backgroundPositionX: null
	,backgroundPositionY: null
	,backgroundImageClipTop: null
	,backgroundImageClipLeft: null
	,backgroundImageClipBottom: null
	,backgroundImageClipRight: null
	,backgroundImageSliceTop: null
	,backgroundImageSliceLeft: null
	,backgroundImageSliceBottom: null
	,backgroundImageSliceRight: null
	,borderColor: null
	,borderTopColor: null
	,borderLeftColor: null
	,borderBottomColor: null
	,borderRightColor: null
	,borderSize: null
	,borderTopSize: null
	,borderLeftSize: null
	,borderBottomSize: null
	,borderRightSize: null
	,borderRadius: null
	,borderRadiusTopLeft: null
	,borderRadiusTopRight: null
	,borderRadiusBottomLeft: null
	,borderRadiusBottomRight: null
	,borderOpacity: null
	,borderStyle: null
	,icon: null
	,iconPosition: null
	,horizontalAlign: null
	,verticalAlign: null
	,textAlign: null
	,opacity: null
	,clip: null
	,native: null
	,fontName: null
	,fontSize: null
	,fontBold: null
	,fontUnderline: null
	,fontItalic: null
	,fontStrikeThrough: null
	,cursor: null
	,hidden: null
	,filter: null
	,backdropFilter: null
	,resource: null
	,animationName: null
	,animationOptions: null
	,mode: null
	,pointerEvents: null
	,contentType: null
	,direction: null
	,contentWidth: null
	,contentWidthPercent: null
	,contentHeight: null
	,contentHeightPercent: null
	,wordWrap: null
	,imageRendering: null
	,backgroundWidth: null
	,backgroundWidthPercent: null
	,backgroundHeight: null
	,backgroundHeightPercent: null
	,layout: null
	,includeInLayout: null
	,borderType: null
	,get_borderType: function() {
		var t = haxe_ui_styles_StyleBorderType.Compound;
		if(this.borderLeftSize != null && this.borderLeftSize > 0 && this.borderLeftSize == this.borderRightSize && this.borderLeftSize == this.borderBottomSize && this.borderLeftSize == this.borderTopSize) {
			t = haxe_ui_styles_StyleBorderType.Full;
		} else if((this.borderLeftSize == null || this.borderLeftSize <= 0) && (this.borderRightSize == null || this.borderRightSize <= 0) && (this.borderBottomSize == null || this.borderRightSize <= 0) && (this.borderTopSize == null || this.borderTopSize <= 0)) {
			t = haxe_ui_styles_StyleBorderType.None;
		}
		return t;
	}
	,hasBorder: null
	,get_hasBorder: function() {
		return this.get_borderType() != haxe_ui_styles_StyleBorderType.None;
	}
	,fullBorderSize: null
	,get_fullBorderSize: function() {
		if(this.get_borderType() == haxe_ui_styles_StyleBorderType.Full) {
			return this.borderLeftSize;
		}
		return 0;
	}
	,mergeDirectives: function(map) {
		var h = map.h;
		var key_h = h;
		var key_keys = Object.keys(h);
		var key_length = key_keys.length;
		var key_current = 0;
		while(key_current < key_length) {
			var key = key_keys[key_current++];
			var v = map.h[key];
			switch(key) {
			case "animation-delay":
				if(this.animationOptions == null) {
					this.animationOptions = new haxe_ui_styles_animation_AnimationOptions(null,null,null,null,null,null);
				}
				this.animationOptions.delay = haxe_ui_styles_ValueTools.time(v.value);
				break;
			case "animation-direction":
				if(this.animationOptions == null) {
					this.animationOptions = new haxe_ui_styles_animation_AnimationOptions(null,null,null,null,null,null);
				}
				this.animationOptions.direction = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "animation-duration":
				if(this.animationOptions == null) {
					this.animationOptions = new haxe_ui_styles_animation_AnimationOptions(null,null,null,null,null,null);
				}
				this.animationOptions.duration = haxe_ui_styles_ValueTools.time(v.value);
				break;
			case "animation-fill-mode":
				if(this.animationOptions == null) {
					this.animationOptions = new haxe_ui_styles_animation_AnimationOptions(null,null,null,null,null,null);
				}
				this.animationOptions.fillMode = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "animation-iteration-count":
				if(this.animationOptions == null) {
					this.animationOptions = new haxe_ui_styles_animation_AnimationOptions(null,null,null,null,null,null);
				}
				var _g = v.value;
				var tmp;
				if(_g._hx_index == 6) {
					var val = _g.v;
					tmp = val == "infinite" ? -1 : 0;
				} else {
					tmp = haxe_ui_styles_ValueTools.int(v.value);
				}
				this.animationOptions.iterationCount = tmp;
				break;
			case "animation-name":
				this.animationName = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "animation-timing-function":
				if(this.animationOptions == null) {
					this.animationOptions = new haxe_ui_styles_animation_AnimationOptions(null,null,null,null,null,null);
				}
				this.animationOptions.easingFunction = haxe_ui_styles_ValueTools.calcEasing(v.value);
				break;
			case "backdrop-filter":
				var _g1 = v.value;
				switch(_g1._hx_index) {
				case 5:
					var f = _g1.f;
					var vl = _g1.vl;
					var arr = haxe_ui_styles_ValueTools.array(vl);
					arr.splice(0,0,f);
					this.backdropFilter = [haxe_ui_filters_FilterParser.parseFilter(arr)];
					break;
				case 6:
					var f1 = _g1.v;
					this.backdropFilter = [haxe_ui_filters_FilterParser.parseFilter([f1])];
					break;
				case 9:
					this.backdropFilter = null;
					break;
				default:
				}
				break;
			case "background-color":
				var _g2 = v.value;
				this.backgroundColor = haxe_ui_styles_ValueTools.int(v.value);
				if(Object.prototype.hasOwnProperty.call(map.h,"background-color-end")) {
					this.backgroundColorEnd = haxe_ui_styles_ValueTools.int(map.h["background-color-end"].value);
				} else {
					this.backgroundColorEnd = null;
				}
				break;
			case "background-color-end":
				this.backgroundColorEnd = haxe_ui_styles_ValueTools.int(v.value);
				break;
			case "background-gradient-style":
				this.backgroundGradientStyle = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "background-height":
				this.backgroundHeight = haxe_ui_styles_ValueTools.calcDimension(v.value);
				this.backgroundHeightPercent = haxe_ui_styles_ValueTools.percent(v.value);
				break;
			case "background-image":
				this.backgroundImage = haxe_ui_styles_ValueTools.variant(v.value);
				break;
			case "background-image-clip-bottom":
				this.backgroundImageClipBottom = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "background-image-clip-left":
				this.backgroundImageClipLeft = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "background-image-clip-right":
				this.backgroundImageClipRight = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "background-image-clip-top":
				this.backgroundImageClipTop = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "background-image-repeat":
				this.backgroundImageRepeat = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "background-image-slice-bottom":
				this.backgroundImageSliceBottom = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "background-image-slice-left":
				this.backgroundImageSliceLeft = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "background-image-slice-right":
				this.backgroundImageSliceRight = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "background-image-slice-top":
				this.backgroundImageSliceTop = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "background-opacity":
				this.backgroundOpacity = haxe_ui_styles_ValueTools.float(v.value);
				break;
			case "background-position-x":
				this.backgroundPositionX = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "background-position-y":
				this.backgroundPositionY = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "background-width":
				this.backgroundWidth = haxe_ui_styles_ValueTools.calcDimension(v.value);
				this.backgroundWidthPercent = haxe_ui_styles_ValueTools.percent(v.value);
				break;
			case "border-bottom-color":
				this.borderBottomColor = haxe_ui_styles_ValueTools.int(v.value);
				break;
			case "border-bottom-left-radius":
				this.borderRadiusBottomLeft = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "border-bottom-right-radius":
				this.borderRadiusBottomRight = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "border-bottom-size":case "border-bottom-width":
				if(v.value == haxe_ui_styles_Value.VNone) {
					this.borderBottomSize = 0;
				} else {
					this.borderBottomSize = haxe_ui_styles_ValueTools.calcDimension(v.value);
				}
				break;
			case "border-color":
				this.borderColor = haxe_ui_styles_ValueTools.int(v.value);
				break;
			case "border-left-color":
				this.borderLeftColor = haxe_ui_styles_ValueTools.int(v.value);
				break;
			case "border-left-size":case "border-left-width":
				if(v.value == haxe_ui_styles_Value.VNone) {
					this.borderLeftSize = 0;
				} else {
					this.borderLeftSize = haxe_ui_styles_ValueTools.calcDimension(v.value);
				}
				break;
			case "border-opacity":
				this.borderOpacity = haxe_ui_styles_ValueTools.float(v.value);
				break;
			case "border-radius":
				this.borderRadius = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "border-right-color":
				this.borderRightColor = haxe_ui_styles_ValueTools.int(v.value);
				break;
			case "border-right-size":case "border-right-width":
				if(v.value == haxe_ui_styles_Value.VNone) {
					this.borderRightSize = 0;
				} else {
					this.borderRightSize = haxe_ui_styles_ValueTools.calcDimension(v.value);
				}
				break;
			case "border-style":
				this.borderStyle = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "border-top-color":
				this.borderTopColor = haxe_ui_styles_ValueTools.int(v.value);
				break;
			case "border-top-left-radius":
				this.borderRadiusTopLeft = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "border-top-right-radius":
				this.borderRadiusTopRight = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "border-top-size":case "border-top-width":
				if(v.value == haxe_ui_styles_Value.VNone) {
					this.borderTopSize = 0;
				} else {
					this.borderTopSize = haxe_ui_styles_ValueTools.calcDimension(v.value);
				}
				break;
			case "clip":
				this.clip = haxe_ui_styles_ValueTools.bool(v.value);
				break;
			case "color":
				this.color = haxe_ui_styles_ValueTools.int(v.value);
				break;
			case "content-height":
				this.contentHeight = haxe_ui_styles_ValueTools.calcDimension(v.value);
				this.contentHeightPercent = haxe_ui_styles_ValueTools.percent(v.value);
				break;
			case "content-type":
				this.contentType = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "content-width":
				this.contentWidth = haxe_ui_styles_ValueTools.calcDimension(v.value);
				this.contentWidthPercent = haxe_ui_styles_ValueTools.percent(v.value);
				break;
			case "cursor":
				this.cursor = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "direction":
				this.direction = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "display":
				this.hidden = haxe_ui_styles_ValueTools.none(v.value);
				break;
			case "filter":
				var _g3 = v.value;
				switch(_g3._hx_index) {
				case 5:
					var f2 = _g3.f;
					var vl1 = _g3.vl;
					var arr1 = haxe_ui_styles_ValueTools.array(vl1);
					arr1.splice(0,0,f2);
					this.filter = [haxe_ui_filters_FilterParser.parseFilter(arr1)];
					break;
				case 6:
					var f3 = _g3.v;
					this.filter = [haxe_ui_filters_FilterParser.parseFilter([f3])];
					break;
				case 9:
					this.filter = null;
					break;
				default:
				}
				break;
			case "font-bold":
				this.fontBold = haxe_ui_styles_ValueTools.bool(v.value);
				break;
			case "font-family":case "font-name":
				this.fontName = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "font-italic":
				this.fontItalic = haxe_ui_styles_ValueTools.bool(v.value);
				break;
			case "font-size":
				this.fontSize = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "font-style":
				if(haxe_ui_styles_ValueTools.string(v.value) != null) {
					this.fontItalic = haxe_ui_styles_ValueTools.string(v.value).toLowerCase() == "italic";
				}
				break;
			case "font-underline":
				this.fontUnderline = haxe_ui_styles_ValueTools.bool(v.value);
				break;
			case "font-weight":
				if(haxe_ui_styles_ValueTools.string(v.value) != null) {
					this.fontBold = haxe_ui_styles_ValueTools.string(v.value).toLowerCase() == "bold";
				}
				break;
			case "height":
				this.autoHeight = haxe_ui_styles_ValueTools.constant(v.value,"auto");
				this.height = haxe_ui_styles_ValueTools.calcDimension(v.value);
				this.percentHeight = haxe_ui_styles_ValueTools.percent(v.value);
				break;
			case "hidden":
				this.hidden = haxe_ui_styles_ValueTools.bool(v.value);
				break;
			case "horizontal-align":
				this.horizontalAlign = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "horizontal-spacing":
				this.horizontalSpacing = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "icon":
				if(v.value._hx_index == 9) {
					this.icon = null;
				} else {
					this.icon = haxe_ui_styles_ValueTools.variant(v.value);
				}
				break;
			case "icon-position":
				this.iconPosition = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "image-rendering":
				if(v.value._hx_index == 9) {
					this.imageRendering = null;
				} else {
					this.imageRendering = haxe_ui_styles_ValueTools.string(v.value);
				}
				break;
			case "include-in-layout":
				this.includeInLayout = haxe_ui_styles_ValueTools.bool(v.value);
				break;
			case "initial-height":
				this.initialHeight = haxe_ui_styles_ValueTools.calcDimension(v.value);
				this.initialPercentHeight = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "initial-width":
				this.initialWidth = haxe_ui_styles_ValueTools.calcDimension(v.value);
				this.initialPercentWidth = haxe_ui_styles_ValueTools.percent(v.value);
				break;
			case "layout":
				if(v.value._hx_index == 9) {
					this.layout = null;
				} else {
					this.layout = haxe_ui_styles_ValueTools.string(v.value);
				}
				break;
			case "left":
				this.left = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "margin-bottom":
				this.marginBottom = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "margin-left":
				this.marginLeft = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "margin-right":
				this.marginRight = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "margin-top":
				this.marginTop = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "max-height":
				this.maxHeight = haxe_ui_styles_ValueTools.calcDimension(v.value);
				this.maxPercentHeight = haxe_ui_styles_ValueTools.percent(v.value);
				break;
			case "max-width":
				this.maxWidth = haxe_ui_styles_ValueTools.calcDimension(v.value);
				this.maxPercentWidth = haxe_ui_styles_ValueTools.percent(v.value);
				break;
			case "min-height":
				this.minHeight = haxe_ui_styles_ValueTools.calcDimension(v.value);
				this.minPercentHeight = haxe_ui_styles_ValueTools.percent(v.value);
				break;
			case "min-width":
				this.minWidth = haxe_ui_styles_ValueTools.calcDimension(v.value);
				this.minPercentWidth = haxe_ui_styles_ValueTools.percent(v.value);
				break;
			case "mode":
				this.mode = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "native":
				this.native = haxe_ui_styles_ValueTools.bool(v.value);
				break;
			case "opacity":
				this.opacity = haxe_ui_styles_ValueTools.float(v.value);
				break;
			case "padding-bottom":
				this.paddingBottom = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "padding-left":
				this.paddingLeft = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "padding-right":
				this.paddingRight = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "padding-top":
				this.paddingTop = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "pointer-events":
				if(v.value._hx_index == 9) {
					this.pointerEvents = "none";
				} else {
					this.pointerEvents = haxe_ui_styles_ValueTools.string(v.value);
				}
				break;
			case "resource":
				this.resource = haxe_ui_styles_ValueTools.variant(v.value);
				break;
			case "text-align":
				this.textAlign = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "text-decoration":
				if(haxe_ui_styles_ValueTools.string(v.value) != null) {
					this.fontUnderline = haxe_ui_styles_ValueTools.string(v.value).toLowerCase() == "underline";
					this.fontStrikeThrough = haxe_ui_styles_ValueTools.string(v.value).toLowerCase() == "line-through";
				}
				break;
			case "top":
				this.top = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "vertical-align":
				this.verticalAlign = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "vertical-spacing":
				this.verticalSpacing = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "width":
				this.autoWidth = haxe_ui_styles_ValueTools.constant(v.value,"auto");
				this.width = haxe_ui_styles_ValueTools.calcDimension(v.value);
				this.percentWidth = haxe_ui_styles_ValueTools.percent(v.value);
				break;
			case "word-wrap":
				this.wordWrap = haxe_ui_styles_ValueTools.bool(v.value);
				break;
			}
		}
	}
	,apply: function(s) {
		if(s.cursor != null) {
			this.cursor = s.cursor;
		}
		if(s.hidden != null) {
			this.hidden = s.hidden;
		}
		if(s.left != null) {
			this.left = s.left;
		}
		if(s.top != null) {
			this.top = s.top;
		}
		if(s.autoWidth != null) {
			this.autoWidth = s.autoWidth;
		}
		if(s.autoHeight != null) {
			this.autoHeight = s.autoHeight;
		}
		if(s.verticalSpacing != null) {
			this.verticalSpacing = s.verticalSpacing;
		}
		if(s.horizontalSpacing != null) {
			this.horizontalSpacing = s.horizontalSpacing;
		}
		if(s.width != null) {
			this.width = s.width;
			this.autoWidth = false;
		}
		if(s.initialWidth != null) {
			this.initialWidth = s.initialWidth;
		}
		if(s.initialPercentWidth != null) {
			this.initialPercentWidth = s.initialPercentWidth;
		}
		if(s.minWidth != null) {
			this.minWidth = s.minWidth;
		}
		if(s.minPercentWidth != null) {
			this.minPercentWidth = s.minPercentWidth;
		}
		if(s.maxWidth != null) {
			this.maxWidth = s.maxWidth;
		}
		if(s.maxPercentWidth != null) {
			this.maxPercentWidth = s.maxPercentWidth;
		}
		if(s.height != null) {
			this.height = s.height;
			this.autoHeight = false;
		}
		if(s.initialHeight != null) {
			this.initialHeight = s.initialHeight;
		}
		if(s.initialPercentHeight != null) {
			this.initialPercentHeight = s.initialPercentHeight;
		}
		if(s.minHeight != null) {
			this.minHeight = s.minHeight;
		}
		if(s.minPercentHeight != null) {
			this.minPercentHeight = s.minPercentHeight;
		}
		if(s.maxHeight != null) {
			this.maxHeight = s.maxHeight;
		}
		if(s.maxPercentHeight != null) {
			this.maxPercentHeight = s.maxPercentHeight;
		}
		if(s.percentWidth != null) {
			this.percentWidth = s.percentWidth;
			this.autoWidth = false;
		}
		if(s.percentHeight != null) {
			this.percentHeight = s.percentHeight;
			this.autoHeight = false;
		}
		if(s.paddingTop != null) {
			this.paddingTop = s.paddingTop;
		}
		if(s.paddingLeft != null) {
			this.paddingLeft = s.paddingLeft;
		}
		if(s.paddingRight != null) {
			this.paddingRight = s.paddingRight;
		}
		if(s.paddingBottom != null) {
			this.paddingBottom = s.paddingBottom;
		}
		if(s.marginTop != null) {
			this.marginTop = s.marginTop;
		}
		if(s.marginLeft != null) {
			this.marginLeft = s.marginLeft;
		}
		if(s.marginRight != null) {
			this.marginRight = s.marginRight;
		}
		if(s.marginBottom != null) {
			this.marginBottom = s.marginBottom;
		}
		if(s.color != null) {
			this.color = s.color;
		}
		if(s.backgroundColor != null) {
			this.backgroundColor = s.backgroundColor;
			this.backgroundColorEnd = null;
		}
		if(s.backgroundColorEnd != null) {
			this.backgroundColorEnd = s.backgroundColorEnd;
		}
		if(s.backgroundGradientStyle != null) {
			this.backgroundGradientStyle = s.backgroundGradientStyle;
		}
		if(s.backgroundOpacity != null) {
			this.backgroundOpacity = s.backgroundOpacity;
		}
		if(s.backgroundImage != null) {
			this.backgroundImage = s.backgroundImage;
		}
		if(s.backgroundImageRepeat != null) {
			this.backgroundImageRepeat = s.backgroundImageRepeat;
		}
		if(s.backgroundImageClipTop != null) {
			this.backgroundImageClipTop = s.backgroundImageClipTop;
		}
		if(s.backgroundImageClipLeft != null) {
			this.backgroundImageClipLeft = s.backgroundImageClipLeft;
		}
		if(s.backgroundImageClipBottom != null) {
			this.backgroundImageClipBottom = s.backgroundImageClipBottom;
		}
		if(s.backgroundImageClipRight != null) {
			this.backgroundImageClipRight = s.backgroundImageClipRight;
		}
		if(s.backgroundImageSliceTop != null) {
			this.backgroundImageSliceTop = s.backgroundImageSliceTop;
		}
		if(s.backgroundImageSliceLeft != null) {
			this.backgroundImageSliceLeft = s.backgroundImageSliceLeft;
		}
		if(s.backgroundImageSliceBottom != null) {
			this.backgroundImageSliceBottom = s.backgroundImageSliceBottom;
		}
		if(s.backgroundImageSliceRight != null) {
			this.backgroundImageSliceRight = s.backgroundImageSliceRight;
		}
		if(s.borderColor != null) {
			this.borderColor = s.borderColor;
		}
		if(s.borderTopColor != null) {
			this.borderTopColor = s.borderTopColor;
		}
		if(s.borderLeftColor != null) {
			this.borderLeftColor = s.borderLeftColor;
		}
		if(s.borderBottomColor != null) {
			this.borderBottomColor = s.borderBottomColor;
		}
		if(s.borderRightColor != null) {
			this.borderRightColor = s.borderRightColor;
		}
		if(s.borderSize != null) {
			this.borderSize = s.borderSize;
		}
		if(s.borderTopSize != null) {
			this.borderTopSize = s.borderTopSize;
		}
		if(s.borderLeftSize != null) {
			this.borderLeftSize = s.borderLeftSize;
		}
		if(s.borderBottomSize != null) {
			this.borderBottomSize = s.borderBottomSize;
		}
		if(s.borderRightSize != null) {
			this.borderRightSize = s.borderRightSize;
		}
		if(s.borderRadius != null) {
			this.borderRadius = s.borderRadius;
		}
		if(s.borderRadiusTopLeft != null) {
			this.borderRadiusTopLeft = s.borderRadiusTopLeft;
		}
		if(s.borderRadiusTopRight != null) {
			this.borderRadiusTopRight = s.borderRadiusTopRight;
		}
		if(s.borderRadiusBottomLeft != null) {
			this.borderRadiusBottomLeft = s.borderRadiusBottomLeft;
		}
		if(s.borderRadiusBottomRight != null) {
			this.borderRadiusBottomRight = s.borderRadiusBottomRight;
		}
		if(s.borderOpacity != null) {
			this.borderOpacity = s.borderOpacity;
		}
		if(s.borderStyle != null) {
			this.borderStyle = s.borderStyle;
		}
		if(s.filter != null) {
			this.filter = s.filter.slice();
		}
		if(s.backdropFilter != null) {
			this.backdropFilter = s.backdropFilter.slice();
		}
		if(s.resource != null) {
			this.resource = s.resource;
		}
		if(s.icon != null) {
			this.icon = s.icon;
		}
		if(s.iconPosition != null) {
			this.iconPosition = s.iconPosition;
		}
		if(s.horizontalAlign != null) {
			this.horizontalAlign = s.horizontalAlign;
		}
		if(s.verticalAlign != null) {
			this.verticalAlign = s.verticalAlign;
		}
		if(s.textAlign != null) {
			this.textAlign = s.textAlign;
		}
		if(s.opacity != null) {
			this.opacity = s.opacity;
		}
		if(s.clip != null) {
			this.clip = s.clip;
		}
		if(s.native != null) {
			this.native = s.native;
		}
		if(s.fontName != null) {
			this.fontName = s.fontName;
		}
		if(s.fontSize != null) {
			this.fontSize = s.fontSize;
		}
		if(s.fontBold != null) {
			this.fontBold = s.fontBold;
		}
		if(s.fontUnderline != null) {
			this.fontUnderline = s.fontUnderline;
		}
		if(s.fontStrikeThrough != null) {
			this.fontStrikeThrough = s.fontStrikeThrough;
		}
		if(s.fontItalic != null) {
			this.fontItalic = s.fontItalic;
		}
		if(s.animationName != null) {
			this.animationName = s.animationName;
		}
		if(s.animationOptions != null) {
			if(this.animationOptions == null) {
				this.animationOptions = new haxe_ui_styles_animation_AnimationOptions(null,null,null,null,null,null);
			}
			if(s.animationOptions.duration != null) {
				this.animationOptions.duration = s.animationOptions.duration;
			}
			if(s.animationOptions.delay != null) {
				this.animationOptions.delay = s.animationOptions.delay;
			}
			if(s.animationOptions.iterationCount != null) {
				this.animationOptions.iterationCount = s.animationOptions.iterationCount;
			}
			if(s.animationOptions.easingFunction != null) {
				this.animationOptions.easingFunction = s.animationOptions.easingFunction;
			}
			if(s.animationOptions.direction != null) {
				this.animationOptions.direction = s.animationOptions.direction;
			}
			if(s.animationOptions.fillMode != null) {
				this.animationOptions.fillMode = s.animationOptions.fillMode;
			}
		}
		if(s.mode != null) {
			this.mode = s.mode;
		}
		if(s.pointerEvents != null) {
			this.pointerEvents = s.pointerEvents;
		}
		if(s.contentType != null) {
			this.contentType = s.contentType;
		}
		if(s.direction != null) {
			this.direction = s.direction;
		}
		if(s.contentWidth != null) {
			this.contentWidth = s.contentWidth;
		}
		if(s.contentWidthPercent != null) {
			this.contentWidthPercent = s.contentWidthPercent;
		}
		if(s.contentHeight != null) {
			this.contentHeight = s.contentHeight;
		}
		if(s.contentHeightPercent != null) {
			this.contentHeightPercent = s.contentHeightPercent;
		}
		if(s.wordWrap != null) {
			this.wordWrap = s.wordWrap;
		}
		if(s.imageRendering != null) {
			this.imageRendering = s.imageRendering;
		}
		if(s.backgroundWidth != null) {
			this.backgroundWidth = s.backgroundWidth;
		}
		if(s.backgroundWidthPercent != null) {
			this.backgroundWidthPercent = s.backgroundWidthPercent;
		}
		if(s.backgroundHeight != null) {
			this.backgroundHeight = s.backgroundHeight;
		}
		if(s.backgroundHeightPercent != null) {
			this.backgroundHeightPercent = s.backgroundHeightPercent;
		}
		if(s.layout != null) {
			this.layout = s.layout;
		}
		if(s.includeInLayout != null) {
			this.includeInLayout = s.includeInLayout;
		}
	}
	,equalTo: function(s) {
		if(s.backgroundColor != this.backgroundColor) {
			return false;
		}
		if(s.backgroundColorEnd != this.backgroundColorEnd) {
			return false;
		}
		if(s.backgroundGradientStyle != this.backgroundGradientStyle) {
			return false;
		}
		if(s.backgroundOpacity != this.backgroundOpacity) {
			return false;
		}
		if(s.borderColor != this.borderColor) {
			return false;
		}
		if(s.borderTopColor != this.borderTopColor) {
			return false;
		}
		if(s.borderLeftColor != this.borderLeftColor) {
			return false;
		}
		if(s.borderBottomColor != this.borderBottomColor) {
			return false;
		}
		if(s.borderRightColor != this.borderRightColor) {
			return false;
		}
		if(s.borderSize != this.borderSize) {
			return false;
		}
		if(s.borderTopSize != this.borderTopSize) {
			return false;
		}
		if(s.borderLeftSize != this.borderLeftSize) {
			return false;
		}
		if(s.borderBottomSize != this.borderBottomSize) {
			return false;
		}
		if(s.borderRightSize != this.borderRightSize) {
			return false;
		}
		if(s.borderRadius != this.borderRadius) {
			return false;
		}
		if(s.borderRadiusTopLeft != this.borderRadiusTopLeft) {
			return false;
		}
		if(s.borderRadiusTopRight != this.borderRadiusTopRight) {
			return false;
		}
		if(s.borderRadiusBottomLeft != this.borderRadiusBottomLeft) {
			return false;
		}
		if(s.borderRadiusBottomRight != this.borderRadiusBottomRight) {
			return false;
		}
		if(s.borderOpacity != this.borderOpacity) {
			return false;
		}
		if(s.borderStyle != this.borderStyle) {
			return false;
		}
		if(s.color != this.color) {
			return false;
		}
		if(s.cursor != this.cursor) {
			return false;
		}
		if(s.hidden != this.hidden) {
			return false;
		}
		if(s.left != this.left) {
			return false;
		}
		if(s.top != this.top) {
			return false;
		}
		if(s.autoWidth != this.autoWidth) {
			return false;
		}
		if(s.autoHeight != this.autoHeight) {
			return false;
		}
		if(s.verticalSpacing != this.verticalSpacing) {
			return false;
		}
		if(s.horizontalSpacing != this.horizontalSpacing) {
			return false;
		}
		if(s.width != this.width) {
			return false;
		}
		if(s.initialWidth != this.initialWidth) {
			return false;
		}
		if(s.initialPercentWidth != this.initialPercentWidth) {
			return false;
		}
		if(s.minWidth != this.minWidth) {
			return false;
		}
		if(s.minPercentWidth != this.minPercentWidth) {
			return false;
		}
		if(s.maxWidth != this.maxWidth) {
			return false;
		}
		if(s.maxPercentWidth != this.maxPercentWidth) {
			return false;
		}
		if(s.height != this.height) {
			return false;
		}
		if(s.initialHeight != this.initialHeight) {
			return false;
		}
		if(s.initialPercentHeight != this.initialPercentHeight) {
			return false;
		}
		if(s.minHeight != this.minHeight) {
			return false;
		}
		if(s.minPercentHeight != this.minPercentHeight) {
			return false;
		}
		if(s.maxHeight != this.maxHeight) {
			return false;
		}
		if(s.maxPercentHeight != this.maxPercentHeight) {
			return false;
		}
		if(s.percentWidth != this.percentWidth) {
			return false;
		}
		if(s.percentHeight != this.percentHeight) {
			return false;
		}
		if(s.paddingTop != this.paddingTop) {
			return false;
		}
		if(s.paddingLeft != this.paddingLeft) {
			return false;
		}
		if(s.paddingRight != this.paddingRight) {
			return false;
		}
		if(s.paddingBottom != this.paddingBottom) {
			return false;
		}
		if(s.marginTop != this.marginTop) {
			return false;
		}
		if(s.marginLeft != this.marginLeft) {
			return false;
		}
		if(s.marginRight != this.marginRight) {
			return false;
		}
		if(s.marginBottom != this.marginBottom) {
			return false;
		}
		if(haxe_ui_util_Variant.neq(s.backgroundImage,this.backgroundImage)) {
			return false;
		}
		if(s.backgroundImageRepeat != this.backgroundImageRepeat) {
			return false;
		}
		if(s.backgroundImageClipTop != this.backgroundImageClipTop) {
			return false;
		}
		if(s.backgroundImageClipLeft != this.backgroundImageClipLeft) {
			return false;
		}
		if(s.backgroundImageClipBottom != this.backgroundImageClipBottom) {
			return false;
		}
		if(s.backgroundImageClipRight != this.backgroundImageClipRight) {
			return false;
		}
		if(s.backgroundImageSliceTop != this.backgroundImageSliceTop) {
			return false;
		}
		if(s.backgroundImageSliceLeft != this.backgroundImageSliceLeft) {
			return false;
		}
		if(s.backgroundImageSliceBottom != this.backgroundImageSliceBottom) {
			return false;
		}
		if(s.backgroundImageSliceRight != this.backgroundImageSliceRight) {
			return false;
		}
		if(s.filter != this.filter) {
			return false;
		}
		if(s.backdropFilter != this.backdropFilter) {
			return false;
		}
		if(haxe_ui_util_Variant.neq(s.resource,this.resource)) {
			return false;
		}
		if(haxe_ui_util_Variant.neq(s.icon,this.icon)) {
			return false;
		}
		if(s.iconPosition != this.iconPosition) {
			return false;
		}
		if(s.horizontalAlign != this.horizontalAlign) {
			return false;
		}
		if(s.verticalAlign != this.verticalAlign) {
			return false;
		}
		if(s.textAlign != this.textAlign) {
			return false;
		}
		if(s.opacity != this.opacity) {
			return false;
		}
		if(s.clip != this.clip) {
			return false;
		}
		if(s.native != this.native) {
			return false;
		}
		if(s.fontName != this.fontName) {
			return false;
		}
		if(s.fontSize != this.fontSize) {
			return false;
		}
		if(s.fontBold != this.fontBold) {
			return false;
		}
		if(s.fontUnderline != this.fontUnderline) {
			return false;
		}
		if(s.fontStrikeThrough != this.fontStrikeThrough) {
			return false;
		}
		if(s.fontItalic != this.fontItalic) {
			return false;
		}
		if(haxe_ui_util_Variant.neq(s.resource,this.resource)) {
			return false;
		}
		if(s.animationName != this.animationName) {
			return false;
		}
		if(this.animationOptions != null && this.animationOptions.compareTo(s.animationOptions) == false) {
			return false;
		}
		if(s.mode != this.mode) {
			return false;
		}
		if(s.pointerEvents != this.pointerEvents) {
			return false;
		}
		if(s.contentType != this.contentType) {
			return false;
		}
		if(s.direction != this.direction) {
			return false;
		}
		if(s.contentWidth != this.contentWidth) {
			return false;
		}
		if(s.contentWidthPercent != this.contentWidthPercent) {
			return false;
		}
		if(s.contentHeight != this.contentHeight) {
			return false;
		}
		if(s.contentHeightPercent != this.contentHeightPercent) {
			return false;
		}
		if(s.wordWrap != this.wordWrap) {
			return false;
		}
		if(s.imageRendering != this.imageRendering) {
			return false;
		}
		if(s.backgroundWidth != this.backgroundWidth) {
			return false;
		}
		if(s.backgroundWidthPercent != this.backgroundWidthPercent) {
			return false;
		}
		if(s.backgroundHeight != this.backgroundHeight) {
			return false;
		}
		if(s.backgroundHeightPercent != this.backgroundHeightPercent) {
			return false;
		}
		if(s.layout != this.layout) {
			return false;
		}
		if(s.includeInLayout != this.includeInLayout) {
			return false;
		}
		return true;
	}
	,createAnimationOptions: function() {
		if(this.animationOptions == null) {
			this.animationOptions = new haxe_ui_styles_animation_AnimationOptions(null,null,null,null,null,null);
		}
	}
	,clone: function() {
		var c = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		c.apply(this);
		return c;
	}
	,__class__: haxe_ui_styles_Style
	,__properties__: {get_fullBorderSize:"get_fullBorderSize",get_hasBorder:"get_hasBorder",get_borderType:"get_borderType",set_padding:"set_padding"}
};
var haxe_ui_styles_StyleLookupMap = function() {
	this._valueMap = new haxe_ds_StringMap();
};
$hxClasses["haxe.ui.styles.StyleLookupMap"] = haxe_ui_styles_StyleLookupMap;
haxe_ui_styles_StyleLookupMap.__name__ = "haxe.ui.styles.StyleLookupMap";
haxe_ui_styles_StyleLookupMap.__properties__ = {get_instance:"get_instance"};
haxe_ui_styles_StyleLookupMap.get_instance = function() {
	if(haxe_ui_styles_StyleLookupMap._instance == null) {
		haxe_ui_styles_StyleLookupMap._instance = new haxe_ui_styles_StyleLookupMap();
	}
	return haxe_ui_styles_StyleLookupMap._instance;
};
haxe_ui_styles_StyleLookupMap.prototype = {
	_valueMap: null
	,set: function(name,value) {
		this._valueMap.h[name] = value;
	}
	,get: function(name) {
		return this._valueMap.h[name];
	}
	,remove: function(name) {
		var _this = this._valueMap;
		if(Object.prototype.hasOwnProperty.call(_this.h,name)) {
			delete(_this.h[name]);
		}
	}
	,__class__: haxe_ui_styles_StyleLookupMap
};
var haxe_ui_styles_StyleSheet = function() {
	this._animations = new haxe_ds_StringMap();
	this._mediaQueries = [];
	this._rules = [];
	this._imports = [];
};
$hxClasses["haxe.ui.styles.StyleSheet"] = haxe_ui_styles_StyleSheet;
haxe_ui_styles_StyleSheet.__name__ = "haxe.ui.styles.StyleSheet";
haxe_ui_styles_StyleSheet.prototype = {
	name: null
	,_imports: null
	,_rules: null
	,_mediaQueries: null
	,_animations: null
	,get_animations: function() {
		return this._animations;
	}
	,addImport: function(el) {
		this._imports.push(el);
	}
	,imports: null
	,get_imports: function() {
		return this._imports;
	}
	,rules: null
	,get_rules: function() {
		var r = this._rules.slice();
		var _g = 0;
		var _g1 = this._mediaQueries;
		while(_g < _g1.length) {
			var mq = _g1[_g];
			++_g;
			if(mq.get_relevant()) {
				r = r.concat(mq.get_styleSheet().get_rules());
			}
		}
		return r;
	}
	,hasMediaQueries: null
	,get_hasMediaQueries: function() {
		return this._mediaQueries.length > 0;
	}
	,findRule: function(selector) {
		var _g = 0;
		var _g1 = this.get_rules();
		while(_g < _g1.length) {
			var r = _g1[_g];
			++_g;
			if(r.selector.toString() == selector) {
				return r;
			}
		}
		return null;
	}
	,findMatchingRules: function(selector) {
		var m = [];
		var _g = 0;
		var _g1 = this.get_rules();
		while(_g < _g1.length) {
			var r = _g1[_g];
			++_g;
			if(r.selector.toString() == selector) {
				m.push(r);
			}
		}
		return m;
	}
	,removeRule: function(selector) {
		var r = this.findRule(selector);
		if(r != null) {
			HxOverrides.remove(this._rules,r);
		}
	}
	,removeAllRules: function() {
		this._rules = [];
	}
	,clear: function() {
		this.removeAllRules();
		this._imports = [];
		this._mediaQueries = [];
		this._animations = new haxe_ds_StringMap();
	}
	,addRule: function(el) {
		if(el.directiveCount == 0) {
			return;
		}
		this._rules.push(el);
	}
	,addMediaQuery: function(el) {
		this._mediaQueries.push(el);
	}
	,addAnimation: function(el) {
		this._animations.h[el.id] = el;
	}
	,parse: function(css) {
		var parser = new haxe_ui_styles_Parser();
		var ss = parser.parse(css);
		var f = new haxe_ui_styles_StyleSheet();
		var _g = 0;
		var _g1 = ss.get_imports();
		while(_g < _g1.length) {
			var i = _g1[_g];
			++_g;
			var importCss = haxe_ui_ToolkitAssets.get_instance().getText(i.url);
			var importStyleSheet = new haxe_ui_styles_Parser().parse(importCss);
			f.merge(importStyleSheet);
		}
		f.merge(ss);
		this.merge(f);
	}
	,merge: function(styleSheet) {
		this._imports = this._imports.concat(styleSheet._imports);
		this._rules = this._rules.concat(styleSheet._rules);
		this._mediaQueries = this._mediaQueries.concat(styleSheet._mediaQueries);
		var h = styleSheet._animations.h;
		var k_h = h;
		var k_keys = Object.keys(h);
		var k_length = k_keys.length;
		var k_current = 0;
		while(k_current < k_length) {
			var k = k_keys[k_current++];
			this._animations.h[k] = styleSheet._animations.h[k];
		}
	}
	,buildStyleFor: function(c,style) {
		if(style == null) {
			style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		var _g = 0;
		var _g1 = this.get_rules();
		while(_g < _g1.length) {
			var r = _g1[_g];
			++_g;
			if(!r.match(c)) {
				continue;
			}
			style.mergeDirectives(r.directives);
		}
		return style;
	}
	,__class__: haxe_ui_styles_StyleSheet
	,__properties__: {get_hasMediaQueries:"get_hasMediaQueries",get_rules:"get_rules",get_imports:"get_imports",get_animations:"get_animations"}
};
var haxe_ui_styles_Value = $hxEnums["haxe.ui.styles.Value"] = { __ename__:"haxe.ui.styles.Value",__constructs__:null
	,VString: ($_=function(v) { return {_hx_index:0,v:v,__enum__:"haxe.ui.styles.Value",toString:$estr}; },$_._hx_name="VString",$_.__params__ = ["v"],$_)
	,VNumber: ($_=function(v) { return {_hx_index:1,v:v,__enum__:"haxe.ui.styles.Value",toString:$estr}; },$_._hx_name="VNumber",$_.__params__ = ["v"],$_)
	,VBool: ($_=function(v) { return {_hx_index:2,v:v,__enum__:"haxe.ui.styles.Value",toString:$estr}; },$_._hx_name="VBool",$_.__params__ = ["v"],$_)
	,VDimension: ($_=function(v) { return {_hx_index:3,v:v,__enum__:"haxe.ui.styles.Value",toString:$estr}; },$_._hx_name="VDimension",$_.__params__ = ["v"],$_)
	,VColor: ($_=function(v) { return {_hx_index:4,v:v,__enum__:"haxe.ui.styles.Value",toString:$estr}; },$_._hx_name="VColor",$_.__params__ = ["v"],$_)
	,VCall: ($_=function(f,vl) { return {_hx_index:5,f:f,vl:vl,__enum__:"haxe.ui.styles.Value",toString:$estr}; },$_._hx_name="VCall",$_.__params__ = ["f","vl"],$_)
	,VConstant: ($_=function(v) { return {_hx_index:6,v:v,__enum__:"haxe.ui.styles.Value",toString:$estr}; },$_._hx_name="VConstant",$_.__params__ = ["v"],$_)
	,VComposite: ($_=function(vl) { return {_hx_index:7,vl:vl,__enum__:"haxe.ui.styles.Value",toString:$estr}; },$_._hx_name="VComposite",$_.__params__ = ["vl"],$_)
	,VTime: ($_=function(v,unit) { return {_hx_index:8,v:v,unit:unit,__enum__:"haxe.ui.styles.Value",toString:$estr}; },$_._hx_name="VTime",$_.__params__ = ["v","unit"],$_)
	,VNone: {_hx_name:"VNone",_hx_index:9,__enum__:"haxe.ui.styles.Value",toString:$estr}
};
haxe_ui_styles_Value.__constructs__ = [haxe_ui_styles_Value.VString,haxe_ui_styles_Value.VNumber,haxe_ui_styles_Value.VBool,haxe_ui_styles_Value.VDimension,haxe_ui_styles_Value.VColor,haxe_ui_styles_Value.VCall,haxe_ui_styles_Value.VConstant,haxe_ui_styles_Value.VComposite,haxe_ui_styles_Value.VTime,haxe_ui_styles_Value.VNone];
var haxe_ui_styles_ValueTools = function() { };
$hxClasses["haxe.ui.styles.ValueTools"] = haxe_ui_styles_ValueTools;
haxe_ui_styles_ValueTools.__name__ = "haxe.ui.styles.ValueTools";
haxe_ui_styles_ValueTools.parse = function(s) {
	var v = null;
	var hasSpace = s.indexOf(" ") != -1;
	if(StringTools.endsWith(s,"%") == true && hasSpace == false) {
		v = haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PERCENT(parseFloat(s)));
	} else if(StringTools.endsWith(s,"px") == true && hasSpace == false) {
		v = haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(parseFloat(s)));
	} else if(StringTools.endsWith(s,"vw") == true && hasSpace == false) {
		v = haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.VW(parseFloat(s)));
	} else if(StringTools.endsWith(s,"vh") == true && hasSpace == false) {
		v = haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.VH(parseFloat(s)));
	} else if(StringTools.endsWith(s,"rem") == true && hasSpace == false) {
		v = haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.REM(parseFloat(s)));
	} else if(haxe_ui_styles_ValueTools.validColor(s)) {
		v = haxe_ui_styles_ValueTools.parseColor(s);
	} else if(s == "none") {
		v = haxe_ui_styles_Value.VNone;
	} else if(s.indexOf("(") != -1 && StringTools.endsWith(s,")")) {
		var n = s.indexOf("(");
		var f = HxOverrides.substr(s,0,n);
		var params = HxOverrides.substr(s,n + 1,s.length - n - 2);
		if(f == "calc") {
			params = "'" + params + "'";
		}
		var vl = [];
		var _g = 0;
		var _g1 = params.split(",");
		while(_g < _g1.length) {
			var p = _g1[_g];
			++_g;
			p = StringTools.trim(p);
			vl.push(haxe_ui_styles_ValueTools.parse(p));
		}
		v = haxe_ui_styles_Value.VCall(f,vl);
	} else if(StringTools.startsWith(s,"\"") && StringTools.endsWith(s,"\"")) {
		v = haxe_ui_styles_Value.VString(HxOverrides.substr(s,1,s.length - 2));
	} else if(StringTools.startsWith(s,"'") && StringTools.endsWith(s,"'")) {
		v = haxe_ui_styles_Value.VString(HxOverrides.substr(s,1,s.length - 2));
	} else if(haxe_ui_styles_ValueTools.isNum(s) == true) {
		v = haxe_ui_styles_Value.VNumber(parseFloat(s));
	} else if(s == "true" || s == "false") {
		v = haxe_ui_styles_Value.VBool(s == "true");
	} else if(haxe_ui_styles_ValueTools.timeEReg.match(s)) {
		v = haxe_ui_styles_Value.VTime(parseFloat(haxe_ui_styles_ValueTools.timeEReg.matched(1)),haxe_ui_styles_ValueTools.timeEReg.matched(2));
	} else {
		var arr = s.split(" ");
		if(arr.length == 1) {
			v = haxe_ui_styles_Value.VConstant(s);
		} else {
			var vl = [];
			var _g = 0;
			while(_g < arr.length) {
				var a = arr[_g];
				++_g;
				a = StringTools.trim(a);
				vl.push(haxe_ui_styles_ValueTools.parse(a));
			}
			v = haxe_ui_styles_Value.VComposite(vl);
		}
	}
	return v;
};
haxe_ui_styles_ValueTools.compositeParts = function(value) {
	if(value == null) {
		return 0;
	}
	if(value._hx_index == 7) {
		var vl = value.vl;
		return vl.length;
	} else {
		return 0;
	}
};
haxe_ui_styles_ValueTools.composite = function(value) {
	if(value == null) {
		return null;
	}
	switch(value._hx_index) {
	case 1:
		var _g = value.v;
		return [value];
	case 3:
		var _g = value.v;
		return [value];
	case 7:
		var vl = value.vl;
		return vl;
	case 9:
		return [];
	default:
		return null;
	}
};
haxe_ui_styles_ValueTools.isNum = function(s) {
	var b = true;
	var _g = 0;
	var _g1 = s.length;
	while(_g < _g1) {
		var i = _g++;
		var c = HxOverrides.cca(s,i);
		if(!(c >= 48 && c <= 57 || c == 46 || c == 45)) {
			b = false;
			break;
		}
	}
	return b;
};
haxe_ui_styles_ValueTools.parseColor = function(s) {
	if(StringTools.startsWith(s,"#")) {
		s = s.substring(1);
		if(s.length == 6) {
			return haxe_ui_styles_Value.VColor(Std.parseInt("0x" + s));
		} else if(s.length == 3) {
			return haxe_ui_styles_Value.VColor(Std.parseInt("0x" + s.charAt(0) + s.charAt(0) + s.charAt(1) + s.charAt(1) + s.charAt(2) + s.charAt(2)));
		}
	} else if(Object.prototype.hasOwnProperty.call(haxe_ui_styles_ValueTools.colors.h,s)) {
		return haxe_ui_styles_Value.VColor(haxe_ui_styles_ValueTools.colors.h[s]);
	}
	return null;
};
haxe_ui_styles_ValueTools.validColor = function(s) {
	if(StringTools.startsWith(s,"#") && (s.length == 7 || s.length == 4)) {
		return true;
	} else if(Object.prototype.hasOwnProperty.call(haxe_ui_styles_ValueTools.colors.h,s)) {
		return true;
	}
	return false;
};
haxe_ui_styles_ValueTools.time = function(value) {
	if(value == null) {
		return null;
	}
	if(value._hx_index == 8) {
		var v = value.v;
		var unit = value.unit;
		switch(unit) {
		case "ms":
			return v / 1000;
		case "s":
			return v;
		default:
			return null;
		}
	} else {
		return null;
	}
};
haxe_ui_styles_ValueTools.variant = function(value) {
	if(value == null) {
		return null;
	}
	switch(value._hx_index) {
	case 0:
		var v = value.v;
		return haxe_ui_util_Variant.fromDynamic(v);
	case 1:
		var v = value.v;
		return haxe_ui_util_Variant.fromDynamic(v);
	case 2:
		var v = value.v;
		return haxe_ui_util_Variant.fromDynamic(v);
	case 5:
		var f = value.f;
		var vl = value.vl;
		return haxe_ui_util_Variant.fromDynamic(haxe_ui_styles_ValueTools.call(f,vl));
	case 6:
		var v = value.v;
		return haxe_ui_util_Variant.fromDynamic(v);
	default:
		return null;
	}
};
haxe_ui_styles_ValueTools.string = function(value) {
	if(value == null) {
		return null;
	}
	switch(value._hx_index) {
	case 0:
		var v = value.v;
		return v;
	case 2:
		var v = value.v;
		if(v == null) {
			return "null";
		} else {
			return "" + v;
		}
		break;
	case 5:
		var f = value.f;
		var vl = value.vl;
		return haxe_ui_styles_ValueTools.call(f,vl);
	case 6:
		var v = value.v;
		return v;
	default:
		return null;
	}
};
haxe_ui_styles_ValueTools.bool = function(value) {
	if(value == null) {
		return null;
	}
	if(value._hx_index == 2) {
		var v = value.v;
		return v;
	} else {
		return null;
	}
};
haxe_ui_styles_ValueTools.none = function(value) {
	if(value == null) {
		return null;
	}
	if(value._hx_index == 9) {
		return true;
	} else {
		return null;
	}
};
haxe_ui_styles_ValueTools.int = function(value) {
	if(value == null) {
		return null;
	}
	switch(value._hx_index) {
	case 1:
		var v = value.v;
		return v | 0;
	case 4:
		var v = value.v;
		return v;
	case 5:
		var f = value.f;
		var vl = value.vl;
		return haxe_ui_styles_ValueTools.call(f,vl);
	case 9:
		return null;
	default:
		return null;
	}
};
haxe_ui_styles_ValueTools.float = function(value) {
	if(value == null) {
		return null;
	}
	switch(value._hx_index) {
	case 1:
		var v = value.v;
		return v;
	case 4:
		var v = value.v;
		return v;
	case 9:
		return null;
	default:
		return null;
	}
};
haxe_ui_styles_ValueTools.any = function(v) {
	if(v == null) {
		return null;
	}
	switch(v._hx_index) {
	case 1:
		var v1 = v.v;
		return v1;
	case 2:
		var v1 = v.v;
		return v1;
	case 3:
		var _g = v.v;
		if(_g._hx_index == 1) {
			var v1 = _g.value;
			return v1;
		} else {
			return null;
		}
		break;
	case 4:
		var v1 = v.v;
		return v1;
	default:
		return null;
	}
};
haxe_ui_styles_ValueTools.array = function(vl) {
	var arr = [];
	var _g = 0;
	while(_g < vl.length) {
		var v = vl[_g];
		++_g;
		var a = haxe_ui_styles_ValueTools.any(v);
		if(a != null) {
			arr.push(a);
		}
	}
	return arr;
};
haxe_ui_styles_ValueTools.percent = function(value) {
	if(value == null) {
		return null;
	}
	if(value._hx_index == 3) {
		var v = value.v;
		if(v._hx_index == 0) {
			var d = v.value;
			return d;
		} else {
			return null;
		}
	} else {
		return null;
	}
};
haxe_ui_styles_ValueTools.constant = function(value,required) {
	if(value == null) {
		return false;
	}
	if(value._hx_index == 6) {
		var v = value.v;
		return v == required;
	} else {
		return false;
	}
};
haxe_ui_styles_ValueTools.calcDimension = function(value) {
	if(value == null) {
		return null;
	}
	switch(value._hx_index) {
	case 1:
		var v = value.v;
		return v;
	case 3:
		var v = value.v;
		switch(v._hx_index) {
		case 1:
			var d = v.value;
			return d;
		case 2:
			var d = v.value;
			return d / 100 * haxe_ui_core_Screen.get_instance().get_width();
		case 3:
			var d = v.value;
			return d / 100 * haxe_ui_core_Screen.get_instance().get_height();
		case 4:
			var d = v.value;
			return d * haxe_ui_Toolkit.pixelsPerRem;
		default:
			return null;
		}
		break;
	case 5:
		var f = value.f;
		var vl = value.vl;
		return haxe_ui_styles_ValueTools.call(f,vl);
	case 9:
		return null;
	default:
		return null;
	}
};
haxe_ui_styles_ValueTools.calcEasing = function(value) {
	switch(value._hx_index) {
	case 0:
		var v = value.v;
		switch(v) {
		case "ease":
			return haxe_ui_styles_EasingFunction.EASE;
		case "ease-in":
			return haxe_ui_styles_EasingFunction.EASE_IN;
		case "ease-in-out":
			return haxe_ui_styles_EasingFunction.EASE_IN_OUT;
		case "ease-out":
			return haxe_ui_styles_EasingFunction.EASE_OUT;
		case "linear":
			return haxe_ui_styles_EasingFunction.LINEAR;
		default:
			return null;
		}
		break;
	case 6:
		var v = value.v;
		switch(v) {
		case "ease":
			return haxe_ui_styles_EasingFunction.EASE;
		case "ease-in":
			return haxe_ui_styles_EasingFunction.EASE_IN;
		case "ease-in-out":
			return haxe_ui_styles_EasingFunction.EASE_IN_OUT;
		case "ease-out":
			return haxe_ui_styles_EasingFunction.EASE_OUT;
		case "linear":
			return haxe_ui_styles_EasingFunction.LINEAR;
		default:
			return null;
		}
		break;
	default:
		return null;
	}
};
haxe_ui_styles_ValueTools.call = function(f,vl) {
	switch(f) {
	case "calc":
		return null;
	case "clamp":
		var valNum = haxe_ui_styles_ValueTools.calcDimension(vl[0]);
		var minNum = haxe_ui_styles_ValueTools.calcDimension(vl[1]);
		var maxNum = haxe_ui_styles_ValueTools.calcDimension(vl[2]);
		if(valNum == null || minNum == null || maxNum == null) {
			return null;
		} else if(valNum < minNum) {
			return minNum;
		} else if(valNum > maxNum) {
			return maxNum;
		} else {
			return valNum;
		}
		break;
	case "lookup":
		return haxe_ui_util_Variant.toDynamic(haxe_ui_styles_StyleLookupMap.get_instance().get(haxe_ui_styles_ValueTools.string(vl[0])));
	case "max":
		var maxv = -Infinity;
		var _g = 0;
		while(_g < vl.length) {
			var val = vl[_g];
			++_g;
			var num = haxe_ui_styles_ValueTools.calcDimension(val);
			if(num == null) {
				return null;
			} else if(num > maxv) {
				maxv = num;
			}
		}
		return maxv;
	case "min":
		var minv = Infinity;
		var _g = 0;
		while(_g < vl.length) {
			var val = vl[_g];
			++_g;
			var num = haxe_ui_styles_ValueTools.calcDimension(val);
			if(num == null) {
				return null;
			} else if(num < minv) {
				minv = num;
			}
		}
		return minv;
	case "platform-color":
		return haxe_ui_core_Platform.get_instance().getColor(haxe_ui_styles_ValueTools.string(vl[0]));
	case "rgb":
		return haxe_ui_util_Color.toInt(haxe_ui_util_Color.fromComponents(haxe_ui_styles_ValueTools.int(vl[0]),haxe_ui_styles_ValueTools.int(vl[1]),haxe_ui_styles_ValueTools.int(vl[2]),0));
	case "theme-icon":case "theme-image":
		return haxe_ui_themes_ThemeManager.get_instance().image(haxe_ui_styles_ValueTools.string(vl[0]));
	default:
		return null;
	}
};
var haxe_ui_styles_animation_AnimationOptions = function(duration,delay,iterationCount,easingFunction,direction,fillMode) {
	this.duration = duration;
	this.delay = delay;
	this.iterationCount = iterationCount;
	this.easingFunction = easingFunction;
	this.direction = direction;
	this.fillMode = fillMode;
};
$hxClasses["haxe.ui.styles.animation.AnimationOptions"] = haxe_ui_styles_animation_AnimationOptions;
haxe_ui_styles_animation_AnimationOptions.__name__ = "haxe.ui.styles.animation.AnimationOptions";
haxe_ui_styles_animation_AnimationOptions.prototype = {
	duration: null
	,delay: null
	,iterationCount: null
	,easingFunction: null
	,direction: null
	,fillMode: null
	,compareTo: function(op) {
		if(op != null && op.duration == this.duration && op.delay == this.delay && op.iterationCount == this.iterationCount && op.easingFunction == this.easingFunction && op.direction == this.direction) {
			return op.fillMode == this.fillMode;
		} else {
			return false;
		}
	}
	,compareToAnimation: function(anim) {
		if((this.duration == null && anim.duration == 0 || this.duration != null && anim.duration == this.duration) && (this.delay == null && anim.delay == 0 || this.delay != null && anim.delay == this.delay) && (this.iterationCount == null && anim.iterationCount == 1 || this.iterationCount != null && anim.iterationCount == this.iterationCount) && (this.easingFunction == null && anim.easingFunction == haxe_ui_styles_animation_AnimationOptions.DEFAULT_EASING_FUNCTION || this.easingFunction != null && anim.easingFunction == this.easingFunction) && (this.direction == null && anim.direction == "normal" || this.direction != null && anim.direction == this.direction)) {
			if(!(this.fillMode == null && anim.fillMode == "forwards")) {
				if(this.fillMode != null) {
					return anim.fillMode == this.fillMode;
				} else {
					return false;
				}
			} else {
				return true;
			}
		} else {
			return false;
		}
	}
	,__class__: haxe_ui_styles_animation_AnimationOptions
};
var haxe_ui_styles_animation_Animation = function(target,options) {
	this._initialized = false;
	this._currentIterationCount = -1;
	this._currentKeyFrameIndex = -1;
	this.iterationCount = 1;
	this.fillMode = "forwards";
	this.easingFunction = haxe_ui_styles_animation_AnimationOptions.DEFAULT_EASING_FUNCTION;
	this.duration = 0;
	this.direction = "normal";
	this.delay = 0;
	this.target = target;
	if(options != null) {
		if(options.duration != null) {
			this.duration = options.duration;
		}
		if(options.easingFunction != null) {
			this.easingFunction = options.easingFunction;
		}
		if(options.delay != null) {
			this.delay = options.delay;
		}
		if(options.iterationCount != null) {
			this.iterationCount = options.iterationCount;
		}
		if(options.direction != null) {
			this.direction = options.direction;
		}
		if(options.fillMode != null) {
			this.fillMode = options.fillMode;
		}
	}
};
$hxClasses["haxe.ui.styles.animation.Animation"] = haxe_ui_styles_animation_Animation;
haxe_ui_styles_animation_Animation.__name__ = "haxe.ui.styles.animation.Animation";
haxe_ui_styles_animation_Animation.createWithKeyFrames = function(animationKeyFrames,target,options) {
	var animation = new haxe_ui_styles_animation_Animation(target,options);
	animation.name = animationKeyFrames.id;
	if(animation._keyframes == null) {
		animation._keyframes = [];
	}
	var _g = 0;
	var _g1 = animationKeyFrames.get_keyFrames();
	while(_g < _g1.length) {
		var keyFrame = _g1[_g];
		++_g;
		var kf = new haxe_ui_styles_animation_KeyFrame();
		var _g2 = keyFrame.time;
		if(_g2._hx_index == 3) {
			var v = _g2.v;
			if(v._hx_index == 0) {
				var p = v.value;
				kf.time = p / 100;
				kf.easingFunction = animation.easingFunction;
				kf.directives = keyFrame.directives;
				animation._keyframes.push(kf);
			}
		}
	}
	return animation;
};
haxe_ui_styles_animation_Animation.prototype = {
	delay: null
	,direction: null
	,duration: null
	,easingFunction: null
	,fillMode: null
	,iterationCount: null
	,name: null
	,running: null
	,target: null
	,run: function(onFinish) {
		if(this.get_keyframeCount() == 0 || this.running) {
			return;
		}
		if(!this._initialized) {
			this._initialize();
		}
		this._currentKeyFrameIndex = -1;
		this._currentIterationCount = 0;
		this.running = true;
		this._saveState();
		this._runNextKeyframe(onFinish);
	}
	,stop: function() {
		if(this.running == false) {
			return;
		}
		this.running = false;
		var currentKF = this.get_currentKeyFrame();
		if(currentKF != null) {
			currentKF.stop();
			this._currentKeyFrameIndex = -1;
		}
		this._keyframes = null;
		this._restoreState();
	}
	,_currentKeyFrameIndex: null
	,_currentIterationCount: null
	,_initialState: null
	,_initialized: null
	,_keyframes: null
	,get_keyframeCount: function() {
		if(this._keyframes == null) {
			return 0;
		} else {
			return this._keyframes.length;
		}
	}
	,get_currentKeyFrame: function() {
		if(this._currentKeyFrameIndex >= 0) {
			return this._keyframes[this._currentKeyFrameIndex];
		} else {
			return null;
		}
	}
	,_initialize: function() {
		switch(this.direction) {
		case "alternate":
			this._addAlternateKeyframes();
			break;
		case "alternate-reverse":
			this._reverseCurrentKeyframes();
			this._addAlternateKeyframes();
			break;
		case "normal":
			break;
		case "reverse":
			this._reverseCurrentKeyframes();
			break;
		}
		var currentTime = 0;
		var _g = 0;
		var _g1 = this._keyframes;
		while(_g < _g1.length) {
			var keyframe = _g1[_g];
			++_g;
			switch(this.direction) {
			case "alternate-reverse":case "reverse":
				keyframe.time = 1 - keyframe.time;
				break;
			case "alternate":case "normal":
				break;
			}
			keyframe.time = this.duration * keyframe.time - currentTime;
			currentTime += keyframe.time;
		}
		if(this.delay > 0) {
			var keyframe = new haxe_ui_styles_animation_KeyFrame();
			keyframe.time = this.delay;
			keyframe.easingFunction = this.easingFunction;
			this._keyframes.unshift(keyframe);
		} else if(this.delay < 0) {
			currentTime = 0;
			var lastKeyframe = null;
			while(this._keyframes.length > 0) {
				var keyframe = this._keyframes[0];
				currentTime -= keyframe.time;
				if(currentTime >= this.delay) {
					lastKeyframe = keyframe;
					this._keyframes.splice(0,1);
				} else {
					keyframe.delay = -(currentTime - this.delay + keyframe.time);
					if(lastKeyframe != null) {
						lastKeyframe.time = 0;
						this._keyframes.unshift(lastKeyframe);
					}
					break;
				}
			}
		}
		this._initialized = true;
	}
	,_runNextKeyframe: function(onFinish) {
		if(this.running == false) {
			return;
		}
		if(++this._currentKeyFrameIndex >= this._keyframes.length) {
			this._currentKeyFrameIndex = -1;
			this._restoreState();
			if(this.iterationCount == -1 || ++this._currentIterationCount < this.iterationCount) {
				this._saveState();
				this._runNextKeyframe(onFinish);
			} else {
				this.running = false;
				if(onFinish != null) {
					onFinish();
				}
			}
			return;
		} else {
			var _g = $bind(this,this._runNextKeyframe);
			var onFinish1 = onFinish;
			var tmp = function() {
				_g(onFinish1);
			};
			this.get_currentKeyFrame().run(this.target,tmp);
		}
	}
	,_addAlternateKeyframes: function() {
		var i = this._keyframes.length;
		while(--i >= 0) {
			var keyframe = this._keyframes[i];
			var newKeyframe = new haxe_ui_styles_animation_KeyFrame();
			newKeyframe.time = 1 - keyframe.time;
			newKeyframe.easingFunction = this._getReverseEasingFunction(keyframe.easingFunction);
			newKeyframe.directives = keyframe.directives;
			this._keyframes.push(newKeyframe);
		}
	}
	,_reverseCurrentKeyframes: function() {
		this._keyframes.reverse();
		var func = this._getReverseEasingFunction(this.easingFunction);
		var _g = 0;
		var _g1 = this._keyframes;
		while(_g < _g1.length) {
			var keyframe = _g1[_g];
			++_g;
			keyframe.easingFunction = func;
		}
	}
	,_getReverseEasingFunction: function(easingFunction) {
		switch(easingFunction._hx_index) {
		case 2:
			return haxe_ui_styles_EasingFunction.EASE_OUT;
		case 3:
			return haxe_ui_styles_EasingFunction.EASE_IN;
		default:
			return easingFunction;
		}
	}
	,_saveState: function() {
		if(!this._shouldRestoreState()) {
			return;
		}
		if(this._initialState == null) {
			this._initialState = new haxe_ds_StringMap();
		}
		var _g = 0;
		var _g1 = this._keyframes;
		while(_g < _g1.length) {
			var keyframe = _g1[_g];
			++_g;
			var _g2 = 0;
			var _g3 = keyframe.directives;
			while(_g2 < _g3.length) {
				var directive = _g3[_g2];
				++_g2;
				var property = haxe_ui_util_StyleUtil.styleProperty2ComponentProperty(directive.directive);
				if(!Object.prototype.hasOwnProperty.call(this._initialState.h,property)) {
					var this1 = this._initialState;
					var value = Reflect.getProperty(this.target,property);
					this1.h[property] = value;
				}
			}
		}
	}
	,_restoreState: function() {
		if(!this._shouldRestoreState()) {
			return;
		}
		if(this._initialState != null) {
			var h = this._initialState.h;
			var property_h = h;
			var property_keys = Object.keys(h);
			var property_length = property_keys.length;
			var property_current = 0;
			while(property_current < property_length) {
				var property = property_keys[property_current++];
				Reflect.setProperty(this.target,property,this._initialState.h[property]);
			}
			this._initialState = null;
		}
	}
	,_shouldRestoreState: function() {
		if(!(this.fillMode == "none" || this.fillMode == "forwards" && this.direction != "normal" && this.direction != "alternate")) {
			if(this.fillMode == "backwards" && this.direction != "reverse") {
				return this.direction != "alternate-reverse";
			} else {
				return false;
			}
		} else {
			return true;
		}
	}
	,__class__: haxe_ui_styles_animation_Animation
	,__properties__: {get_keyframeCount:"get_keyframeCount",get_currentKeyFrame:"get_currentKeyFrame"}
};
var haxe_ui_styles_animation_KeyFrame = function() {
	this.delay = 0;
	this.time = 0;
	this.directives = [];
};
$hxClasses["haxe.ui.styles.animation.KeyFrame"] = haxe_ui_styles_animation_KeyFrame;
haxe_ui_styles_animation_KeyFrame.__name__ = "haxe.ui.styles.animation.KeyFrame";
haxe_ui_styles_animation_KeyFrame.prototype = {
	directives: null
	,time: null
	,delay: null
	,easingFunction: null
	,_actuator: null
	,stop: function() {
		if(this._actuator != null) {
			this._actuator.stop();
			this._actuator = null;
		}
	}
	,run: function(target,cb) {
		var _gthis = this;
		if(this._actuator != null) {
			return;
		}
		var properties = { };
		var _g = 0;
		var _g1 = this.directives;
		while(_g < _g1.length) {
			var d = _g1[_g];
			++_g;
			properties[d.directive] = d.value;
		}
		var hasFrameEvent = target.hasEvent("animationframe");
		this._actuator = new haxe_ui_styles_animation_util_Actuator(target,properties,this.time,new haxe_ui_styles_animation_util_ActuatorOptions(this.delay,this.easingFunction,function() {
			_gthis._actuator = null;
			cb();
		},function(time,delta,position) {
			if(hasFrameEvent) {
				var event = new haxe_ui_events_AnimationEvent("animationframe");
				event.currentTime = time;
				event.delta = delta;
				event.position = position;
				target.dispatch(event);
			}
		}));
		this._actuator.run();
	}
	,__class__: haxe_ui_styles_animation_KeyFrame
};
var haxe_ui_styles_animation_util_ActuatorOptions = function(delay,easingFunction,onComplete,onUpdate) {
	this.delay = delay;
	this.easingFunction = easingFunction;
	this.onComplete = onComplete;
	this.onUpdate = onUpdate;
};
$hxClasses["haxe.ui.styles.animation.util.ActuatorOptions"] = haxe_ui_styles_animation_util_ActuatorOptions;
haxe_ui_styles_animation_util_ActuatorOptions.__name__ = "haxe.ui.styles.animation.util.ActuatorOptions";
haxe_ui_styles_animation_util_ActuatorOptions.prototype = {
	delay: null
	,easingFunction: null
	,onComplete: null
	,onUpdate: null
	,__class__: haxe_ui_styles_animation_util_ActuatorOptions
};
var haxe_ui_styles_animation_util_Actuator = function(target,properties,duration,options) {
	this.delay = 0;
	this.duration = 0;
	this.target = target;
	this.properties = properties;
	this.duration = duration;
	if(options != null) {
		this._easeFunc = haxe_ui_styles_animation_util__$Actuator_Ease.get(options.easingFunction != null ? options.easingFunction : haxe_ui_styles_EasingFunction.EASE);
		if(options.delay != null) {
			this.delay = options.delay;
		}
		if(options.onComplete != null) {
			this._onComplete = options.onComplete;
		}
		if(options.onUpdate != null) {
			this._onUpdate = options.onUpdate;
		}
	}
};
$hxClasses["haxe.ui.styles.animation.util.Actuator"] = haxe_ui_styles_animation_util_Actuator;
haxe_ui_styles_animation_util_Actuator.__name__ = "haxe.ui.styles.animation.util.Actuator";
haxe_ui_styles_animation_util_Actuator.tween = function(target,properties,duration,options) {
	var actuator = new haxe_ui_styles_animation_util_Actuator(target,properties,duration,options);
	actuator.run();
	return actuator;
};
haxe_ui_styles_animation_util_Actuator.registerFrameCallback = function(fn) {
	haxe_ui_styles_animation_util_Actuator.frameCallbacks.push(fn);
	if(haxe_ui_styles_animation_util_Actuator.dispatchingFrameCallbacks == false) {
		haxe_ui_styles_animation_util_Actuator.dispatchingFrameCallbacks = true;
		haxe_ui_styles_animation_util_Actuator.processCallbacks();
	}
};
haxe_ui_styles_animation_util_Actuator.unregisterFrameCallback = function(fn) {
	new haxe_ui_CallLater(function() {
		HxOverrides.remove(haxe_ui_styles_animation_util_Actuator.frameCallbacks,fn);
		if(haxe_ui_styles_animation_util_Actuator.frameCallbacks.length == 0) {
			haxe_ui_styles_animation_util_Actuator.dispatchingFrameCallbacks = false;
		}
	});
};
haxe_ui_styles_animation_util_Actuator.processCallbacks = function() {
	if(haxe_ui_styles_animation_util_Actuator.dispatchingFrameCallbacks == false) {
		return;
	}
	new haxe_ui_CallLater(function() {
		var stamp = HxOverrides.now() / 1000;
		var _g = 0;
		var _g1 = haxe_ui_styles_animation_util_Actuator.frameCallbacks;
		while(_g < _g1.length) {
			var cb = _g1[_g];
			++_g;
			cb(stamp);
		}
		haxe_ui_styles_animation_util_Actuator.processCallbacks();
	});
};
haxe_ui_styles_animation_util_Actuator.prototype = {
	target: null
	,properties: null
	,duration: null
	,delay: null
	,stop: function() {
		this._stopped = true;
		this.target = null;
	}
	,run: function() {
		var _gthis = this;
		this._initialize();
		this._stopped = false;
		if(this.duration == 0) {
			this._apply(1);
			this._finish();
		} else {
			var precision = 2;
			if(precision == null) {
				precision = 0;
			}
			this._currentTime = Math.round(HxOverrides.now() / 1000 * Math.pow(10,precision)) / Math.pow(10,precision);
			if(this.delay > 0) {
				haxe_ui_util_Timer.delay(function() {
					haxe_ui_styles_animation_util_Actuator.registerFrameCallback($bind(_gthis,_gthis._nextFrame));
				},this.delay * 1000 | 0);
			} else {
				haxe_ui_styles_animation_util_Actuator.registerFrameCallback($bind(this,this._nextFrame));
			}
		}
	}
	,_currentTime: null
	,_easeFunc: null
	,_onComplete: null
	,_onUpdate: null
	,_stopped: null
	,_propertyDetails: null
	,_colorPropertyDetails: null
	,_stringPropertyDetails: null
	,_initialize: function() {
		if(this._isValid() == false) {
			this.stop();
			return;
		}
		this._propertyDetails = [];
		this._colorPropertyDetails = [];
		this._stringPropertyDetails = [];
		var _g = 0;
		var _g1 = Reflect.fields(this.properties);
		while(_g < _g1.length) {
			var p = _g1[_g];
			++_g;
			var componentProperty = haxe_ui_util_StyleUtil.styleProperty2ComponentProperty(p);
			var end = Reflect.getProperty(this.properties,p);
			if(end._hx_index == 3) {
				var _g2 = end.v;
				if(_g2._hx_index == 0) {
					var v = _g2.value;
					componentProperty = "percent" + haxe_ui_util_StringUtil.capitalizeFirstLetter(componentProperty);
				}
			}
			var start = Reflect.getProperty(this.target,componentProperty);
			if(start == null) {
				switch(end._hx_index) {
				case 0:
					var v1 = end.v;
					start = v1;
					break;
				case 1:
					var v2 = end.v;
					start = 0;
					break;
				case 3:
					var _g3 = end.v;
					if(_g3._hx_index == 0) {
						var v3 = _g3.value;
						start = 0;
					}
					break;
				default:
				}
			}
			var isVariant = false;
			if(start != null) {
				try {
					if(start._hx_index == 2) {
						var v4 = start.s;
						start = v4;
						isVariant = true;
					}
				} catch( _g4 ) {
					haxe_NativeStackTrace.lastError = _g4;
				}
			}
			if(end != null) {
				try {
					if(end._hx_index == 2) {
						var v5 = end.s;
						end = v5;
						isVariant = true;
					}
				} catch( _g5 ) {
					haxe_NativeStackTrace.lastError = _g5;
				}
			}
			if(start == null || end == null) {
				continue;
			}
			switch(end._hx_index) {
			case 0:
				var v6 = end.v;
				var startVal = start;
				var endVal = haxe_ui_styles_ValueTools.string(end);
				if(endVal.indexOf("[[") != -1) {
					var n1 = endVal.indexOf("[[");
					var n2 = endVal.indexOf("]]") + 2;
					var before = HxOverrides.substr(endVal,0,n1);
					var after = HxOverrides.substr(endVal,n2,null);
					var s = StringTools.replace(startVal,before,"");
					s = StringTools.replace(s,after,"");
					var startInt = Std.parseInt(s);
					var s1 = StringTools.replace(endVal,before + "[[","");
					s1 = StringTools.replace(s1,"]]" + after,"");
					var endInt = Std.parseInt(s1);
					var details = new haxe_ui_styles_animation_util_StringPropertyDetails(this.target,componentProperty,startVal,endVal);
					details.pattern = before + "[[n]]" + after;
					details.startInt = startInt;
					details.changeInt = endInt - startInt;
					var c = js_Boot.getClass(this.target);
					var typeInfo = haxe_ui_core_TypeMap.getTypeInfo(c.__name__,componentProperty);
					if(typeInfo != null && isVariant == false && typeInfo == "Variant") {
						isVariant = true;
					}
					details.isVariant = isVariant;
					this._stringPropertyDetails.push(details);
				} else {
					var details1 = new haxe_ui_styles_animation_util_StringPropertyDetails(this.target,componentProperty,startVal,endVal);
					this._stringPropertyDetails.push(details1);
				}
				break;
			case 3:
				var _g6 = end.v;
				if(_g6._hx_index == 0) {
					var v7 = _g6.value;
					var val = v7;
					if(val != null) {
						var details2 = new haxe_ui_styles_animation_util_PropertyDetails(this.target,componentProperty,start,val - start);
						this._propertyDetails.push(details2);
					}
				} else {
					var val1 = haxe_ui_styles_ValueTools.calcDimension(end);
					if(val1 != null) {
						var details3 = new haxe_ui_styles_animation_util_PropertyDetails(this.target,componentProperty,start,val1 - start);
						this._propertyDetails.push(details3);
					} else {
						var details4 = new haxe_ui_styles_animation_util_PropertyDetails(this.target,componentProperty,start,end - start);
						this._propertyDetails.push(details4);
					}
				}
				break;
			case 4:
				var v8 = end.v;
				var startColor = js_Boot.__cast(start , Int);
				var endColor = v8;
				var details5 = new haxe_ui_styles_animation_util_ColorPropertyDetails(this.target,componentProperty,startColor,(endColor >> 16 & 255) - (startColor >> 16 & 255),(endColor >> 8 & 255) - (startColor >> 8 & 255),(endColor & 255) - (startColor & 255),(endColor >> 24 & 255) - (startColor >> 24 & 255));
				if(this._colorPropertyDetails == null) {
					this._colorPropertyDetails = [];
				}
				this._colorPropertyDetails.push(details5);
				break;
			default:
				var val2 = haxe_ui_styles_ValueTools.calcDimension(end);
				if(val2 != null) {
					var details6 = new haxe_ui_styles_animation_util_PropertyDetails(this.target,componentProperty,start,val2 - start);
					this._propertyDetails.push(details6);
				} else {
					var details7 = new haxe_ui_styles_animation_util_PropertyDetails(this.target,componentProperty,start,end - start);
					this._propertyDetails.push(details7);
				}
			}
		}
	}
	,_nextFrame: function(stamp) {
		if(this._stopped == true) {
			return;
		}
		var currentTime = stamp;
		var delta = currentTime - this._currentTime;
		if(this.delay < 0) {
			delta += -this.delay;
		}
		var tweenPosition = delta / this.duration;
		if(tweenPosition > 1) {
			tweenPosition = 1;
		}
		this._apply(tweenPosition);
		if(this._onUpdate != null) {
			this._onUpdate(currentTime,delta,tweenPosition);
		}
		if(delta >= this.duration) {
			this._finish();
		}
	}
	,_isValid: function() {
		if(this.target == null) {
			return false;
		}
		if(((this.target) instanceof haxe_ui_core_Component)) {
			var c = this.target;
			if(c._isDisposed == true) {
				return false;
			}
		}
		return true;
	}
	,_apply: function(position) {
		if(this._isValid() == false) {
			this.stop();
			return;
		}
		position = this._easeFunc(position);
		var _g = 0;
		var _g1 = this._propertyDetails;
		while(_g < _g1.length) {
			var details = _g1[_g];
			++_g;
			Reflect.setProperty(this.target,details.propertyName,details.start + details.change * position);
		}
		var _g = 0;
		var _g1 = this._stringPropertyDetails;
		while(_g < _g1.length) {
			var details = _g1[_g];
			++_g;
			if(details.pattern != null) {
				var newInt = details.startInt + position * details.changeInt | 0;
				var newString = StringTools.replace(details.pattern,"[[n]]","" + newInt);
				if(details.isVariant) {
					var v = haxe_ui_util_Variant.fromString(newString);
					Reflect.setProperty(this.target,details.propertyName,v);
				} else {
					Reflect.setProperty(this.target,details.propertyName,newString);
				}
			} else if(position != 1) {
				Reflect.setProperty(this.target,details.propertyName,details.start);
			} else {
				Reflect.setProperty(this.target,details.propertyName,details.end);
			}
		}
		var _g = 0;
		var _g1 = this._colorPropertyDetails;
		while(_g < _g1.length) {
			var details = _g1[_g];
			++_g;
			var currentColor = haxe_ui_util_Color.fromComponents((details.start >> 16 & 255) + details.changeR * position | 0,(details.start >> 8 & 255) + details.changeG * position | 0,(details.start & 255) + details.changeB * position | 0,(details.start >> 24 & 255) + details.changeA * position | 0);
			Reflect.setProperty(details.target,details.propertyName,currentColor);
		}
	}
	,_finish: function() {
		this._stopped = true;
		this.target = null;
		haxe_ui_styles_animation_util_Actuator.unregisterFrameCallback($bind(this,this._nextFrame));
		if(this._onComplete != null) {
			this._onComplete();
		}
	}
	,__class__: haxe_ui_styles_animation_util_Actuator
};
var haxe_ui_styles_animation_util__$Actuator_Ease = function() { };
$hxClasses["haxe.ui.styles.animation.util._Actuator.Ease"] = haxe_ui_styles_animation_util__$Actuator_Ease;
haxe_ui_styles_animation_util__$Actuator_Ease.__name__ = "haxe.ui.styles.animation.util._Actuator.Ease";
haxe_ui_styles_animation_util__$Actuator_Ease.get = function(easingFunction) {
	switch(easingFunction._hx_index) {
	case 0:
		return haxe_ui_styles_animation_util__$Actuator_Ease.linear;
	case 2:
		return haxe_ui_styles_animation_util__$Actuator_Ease.easeIn;
	case 3:
		return haxe_ui_styles_animation_util__$Actuator_Ease.easeOut;
	case 1:case 4:
		return haxe_ui_styles_animation_util__$Actuator_Ease.easeInOut;
	}
};
haxe_ui_styles_animation_util__$Actuator_Ease.linear = function(k) {
	return k;
};
haxe_ui_styles_animation_util__$Actuator_Ease.easeIn = function(k) {
	return k * k * k;
};
haxe_ui_styles_animation_util__$Actuator_Ease.easeOut = function(k) {
	return --k * k * k + 1;
};
haxe_ui_styles_animation_util__$Actuator_Ease.easeInOut = function(k) {
	if((k /= 0.5) < 1) {
		return 0.5 * k * k * k;
	} else {
		return 0.5 * ((k -= 2) * k * k + 2);
	}
};
var haxe_ui_styles_animation_util_ColorPropertyDetails = function(target,propertyName,start,changeR,changeG,changeB,changeA) {
	this.target = target;
	this.propertyName = propertyName;
	this.start = start;
	this.changeR = changeR;
	this.changeG = changeG;
	this.changeB = changeB;
	this.changeA = changeA;
};
$hxClasses["haxe.ui.styles.animation.util.ColorPropertyDetails"] = haxe_ui_styles_animation_util_ColorPropertyDetails;
haxe_ui_styles_animation_util_ColorPropertyDetails.__name__ = "haxe.ui.styles.animation.util.ColorPropertyDetails";
haxe_ui_styles_animation_util_ColorPropertyDetails.prototype = {
	changeR: null
	,changeG: null
	,changeB: null
	,changeA: null
	,propertyName: null
	,start: null
	,target: null
	,__class__: haxe_ui_styles_animation_util_ColorPropertyDetails
};
var haxe_ui_styles_animation_util_PropertyDetails = function(target,propertyName,start,change) {
	this.target = target;
	this.propertyName = propertyName;
	this.start = start;
	this.change = change;
};
$hxClasses["haxe.ui.styles.animation.util.PropertyDetails"] = haxe_ui_styles_animation_util_PropertyDetails;
haxe_ui_styles_animation_util_PropertyDetails.__name__ = "haxe.ui.styles.animation.util.PropertyDetails";
haxe_ui_styles_animation_util_PropertyDetails.prototype = {
	change: null
	,propertyName: null
	,start: null
	,target: null
	,__class__: haxe_ui_styles_animation_util_PropertyDetails
};
var haxe_ui_styles_animation_util_StringPropertyDetails = function(target,propertyName,start,end) {
	this.isVariant = false;
	this.pattern = null;
	this.target = target;
	this.propertyName = propertyName;
	this.start = start;
	this.end = end;
};
$hxClasses["haxe.ui.styles.animation.util.StringPropertyDetails"] = haxe_ui_styles_animation_util_StringPropertyDetails;
haxe_ui_styles_animation_util_StringPropertyDetails.__name__ = "haxe.ui.styles.animation.util.StringPropertyDetails";
haxe_ui_styles_animation_util_StringPropertyDetails.prototype = {
	propertyName: null
	,start: null
	,end: null
	,target: null
	,startInt: null
	,changeInt: null
	,pattern: null
	,isVariant: null
	,__class__: haxe_ui_styles_animation_util_StringPropertyDetails
};
var haxe_ui_styles_elements_AnimationKeyFrame = function() {
};
$hxClasses["haxe.ui.styles.elements.AnimationKeyFrame"] = haxe_ui_styles_elements_AnimationKeyFrame;
haxe_ui_styles_elements_AnimationKeyFrame.__name__ = "haxe.ui.styles.elements.AnimationKeyFrame";
haxe_ui_styles_elements_AnimationKeyFrame.prototype = {
	time: null
	,directives: null
	,set: function(directive) {
		var found = false;
		var _g = 0;
		var _g1 = this.directives;
		while(_g < _g1.length) {
			var d = _g1[_g];
			++_g;
			if(d.directive == directive.directive) {
				d.value = directive.value;
				found = true;
			}
		}
		if(found == false) {
			this.directives.push(directive);
		}
	}
	,find: function(id) {
		var _g = 0;
		var _g1 = this.directives;
		while(_g < _g1.length) {
			var d = _g1[_g];
			++_g;
			if(d.directive == id) {
				return d;
			}
		}
		return null;
	}
	,clear: function() {
		this.directives = [];
	}
	,__class__: haxe_ui_styles_elements_AnimationKeyFrame
};
var haxe_ui_styles_elements_AnimationKeyFrames = function(id,keyframes) {
	this._keyframes = [];
	this.id = id;
	this._keyframes = keyframes;
};
$hxClasses["haxe.ui.styles.elements.AnimationKeyFrames"] = haxe_ui_styles_elements_AnimationKeyFrames;
haxe_ui_styles_elements_AnimationKeyFrames.__name__ = "haxe.ui.styles.elements.AnimationKeyFrames";
haxe_ui_styles_elements_AnimationKeyFrames.prototype = {
	id: null
	,_keyframes: null
	,keyFrames: null
	,get_keyFrames: function() {
		return this._keyframes;
	}
	,__class__: haxe_ui_styles_elements_AnimationKeyFrames
	,__properties__: {get_keyFrames:"get_keyFrames"}
};
var haxe_ui_styles_elements_Directive = function(directive,value,defective) {
	if(defective == null) {
		defective = false;
	}
	this.defective = false;
	this.value = null;
	this.directive = null;
	this.directive = directive;
	this.value = value;
	this.defective = defective;
};
$hxClasses["haxe.ui.styles.elements.Directive"] = haxe_ui_styles_elements_Directive;
haxe_ui_styles_elements_Directive.__name__ = "haxe.ui.styles.elements.Directive";
haxe_ui_styles_elements_Directive.prototype = {
	directive: null
	,value: null
	,defective: null
	,__class__: haxe_ui_styles_elements_Directive
};
var haxe_ui_styles_elements_ImportElement = function(url) {
	this.url = url;
};
$hxClasses["haxe.ui.styles.elements.ImportElement"] = haxe_ui_styles_elements_ImportElement;
haxe_ui_styles_elements_ImportElement.__name__ = "haxe.ui.styles.elements.ImportElement";
haxe_ui_styles_elements_ImportElement.prototype = {
	url: null
	,__class__: haxe_ui_styles_elements_ImportElement
};
var haxe_ui_styles_elements_MediaQuery = function(directives,styleSheet) {
	this._directives = [];
	this._directives = directives;
	this._styleSheet = styleSheet;
};
$hxClasses["haxe.ui.styles.elements.MediaQuery"] = haxe_ui_styles_elements_MediaQuery;
haxe_ui_styles_elements_MediaQuery.__name__ = "haxe.ui.styles.elements.MediaQuery";
haxe_ui_styles_elements_MediaQuery.prototype = {
	_directives: null
	,_styleSheet: null
	,addDirective: function(el) {
		this._directives.push(el);
	}
	,relevant: null
	,get_relevant: function() {
		var b = true;
		var _g = 0;
		var _g1 = this._directives;
		while(_g < _g1.length) {
			var d = _g1[_g];
			++_g;
			switch(d.directive) {
			case "backend":
				b = b && haxe_ui_Backend.get_id() == haxe_ui_styles_ValueTools.string(d.value);
				break;
			case "max-aspect-ratio":
				var sr = haxe_ui_core_Screen.get_instance().get_width() / haxe_ui_core_Screen.get_instance().get_height();
				b = b && sr < this.buildRatio(haxe_ui_styles_ValueTools.string(d.value));
				break;
			case "max-height":
				b = b && haxe_ui_core_Screen.get_instance().get_height() < haxe_ui_styles_ValueTools.calcDimension(d.value);
				break;
			case "max-width":
				b = b && haxe_ui_core_Screen.get_instance().get_width() < haxe_ui_styles_ValueTools.calcDimension(d.value);
				break;
			case "min-aspect-ratio":
				var sr1 = haxe_ui_core_Screen.get_instance().get_width() / haxe_ui_core_Screen.get_instance().get_height();
				b = b && sr1 > this.buildRatio(haxe_ui_styles_ValueTools.string(d.value));
				break;
			case "min-height":
				b = b && haxe_ui_core_Screen.get_instance().get_height() > haxe_ui_styles_ValueTools.calcDimension(d.value);
				break;
			case "min-width":
				b = b && haxe_ui_core_Screen.get_instance().get_width() > haxe_ui_styles_ValueTools.calcDimension(d.value);
				break;
			case "orientation":
				var v = haxe_ui_styles_ValueTools.string(d.value);
				if(v == "landscape") {
					b = b && haxe_ui_core_Screen.get_instance().get_width() > haxe_ui_core_Screen.get_instance().get_height();
				} else if(v == "portrait") {
					b = b && haxe_ui_core_Screen.get_instance().get_height() > haxe_ui_core_Screen.get_instance().get_width();
				}
				break;
			default:
				haxe_Log.trace("WARN: media query \"" + d.directive + "\" not recognized",{ fileName : "haxe/ui/styles/elements/MediaQuery.hx", lineNumber : 49, className : "haxe.ui.styles.elements.MediaQuery", methodName : "get_relevant"});
			}
		}
		return b;
	}
	,buildRatio: function(s) {
		var p = s.split("/");
		var w = Std.parseInt(StringTools.trim(p[0]));
		var h = Std.parseInt(StringTools.trim(p[1]));
		return w / h;
	}
	,styleSheet: null
	,get_styleSheet: function() {
		return this._styleSheet;
	}
	,__class__: haxe_ui_styles_elements_MediaQuery
	,__properties__: {get_styleSheet:"get_styleSheet",get_relevant:"get_relevant"}
};
var haxe_ui_styles_elements_RuleElement = function(selector,directives) {
	this.directiveCount = 0;
	this.directives = new haxe_ds_StringMap();
	this.selector = new haxe_ui_styles_elements_Selector(selector);
	var _g = 0;
	while(_g < directives.length) {
		var d = directives[_g];
		++_g;
		this.processDirective(d);
		this.directiveCount++;
	}
};
$hxClasses["haxe.ui.styles.elements.RuleElement"] = haxe_ui_styles_elements_RuleElement;
haxe_ui_styles_elements_RuleElement.__name__ = "haxe.ui.styles.elements.RuleElement";
haxe_ui_styles_elements_RuleElement.ruleMatch = function(c,d) {
	if(c.nodeName == "*") {
		return true;
	}
	if(c.id != null && c.id != d.get_id()) {
		return false;
	}
	if(c.className != null) {
		var _g = 0;
		var _g1 = c.get_classNameParts();
		while(_g < _g1.length) {
			var p = _g1[_g];
			++_g;
			if(d.classes.indexOf(p) != -1 == false) {
				return false;
			}
		}
	}
	if(c.pseudoClass != null) {
		var pc = ":" + c.pseudoClass;
		if(d.classes.indexOf(pc) != -1 == false) {
			return false;
		}
	}
	if(c.nodeName != null) {
		var classNodeName = d.get_nodeName();
		if(c.nodeName != classNodeName) {
			return false;
		}
	}
	if(c.parent != null) {
		if(c.direct == true) {
			var p = d.parentComponent;
			if(p == null) {
				return false;
			}
			if(!haxe_ui_styles_elements_RuleElement.ruleMatch(c.parent,p)) {
				return false;
			}
		} else {
			var p = d.parentComponent;
			while(p != null) {
				if(haxe_ui_styles_elements_RuleElement.ruleMatch(c.parent,p)) {
					break;
				}
				p = p.parentComponent;
			}
			if(p == null) {
				return false;
			}
		}
	}
	return true;
};
haxe_ui_styles_elements_RuleElement.prototype = {
	selector: null
	,directives: null
	,directiveCount: null
	,addDirective: function(directive,value) {
		var d = new haxe_ui_styles_elements_Directive(directive,value);
		this.processDirective(d);
	}
	,match: function(d) {
		return haxe_ui_styles_elements_RuleElement.ruleMatch(this.selector.parts[this.selector.parts.length - 1],d);
	}
	,processDirective: function(d) {
		switch(d.directive) {
		case "animation":
			this.processComposite(d,["animation-name","animation-duration","animation-timing-function","animation-delay","animation-iteration-count","animation-direction","animation-fill-mode"]);
			break;
		case "background":
			this.processComposite(d,["background-color","background-color-end","background-gradient-style"]);
			break;
		case "background-image-clip":
			this.processComposite(d,["background-image-clip-top","background-image-clip-left","background-image-clip-bottom","background-image-clip-right"]);
			break;
		case "background-image-slice":
			this.processComposite(d,["background-image-slice-top","background-image-slice-left","background-image-slice-bottom","background-image-slice-right"]);
			break;
		case "background-position":
			this.processComposite(d,["background-position-x","background-position-y"]);
			break;
		case "background-size":
			var vl = haxe_ui_styles_ValueTools.composite(d.value);
			if(vl.length == 1) {
				this.processComposite(new haxe_ui_styles_elements_Directive("",vl[0]),["background-width","background-height"]);
			} else if(vl.length == 2) {
				this.processComposite(d,["background-width","background-height"]);
			}
			break;
		case "border":
			this.processComposite(d,["border-size","border-style","border-color"]);
			break;
		case "border-bottom":
			this.processComposite(d,["border-bottom-size","border-style","border-bottom-color"]);
			break;
		case "border-color":
			this.processComposite(d,["border-top-color","border-left-color","border-right-color","border-bottom-color"],true);
			break;
		case "border-left":
			this.processComposite(d,["border-left-size","border-style","border-left-color"]);
			break;
		case "border-right":
			this.processComposite(d,["border-right-size","border-style","border-right-color"]);
			break;
		case "border-size":
			this.processComposite(d,["border-top-size","border-left-size","border-right-size","border-bottom-size"]);
			break;
		case "border-top":
			this.processComposite(d,["border-top-size","border-style","border-top-color"]);
			break;
		case "font-style":
			var v1 = haxe_ui_styles_ValueTools.composite(d.value);
			if(v1 == null) {
				v1 = [d.value];
			}
			var _g = 0;
			while(_g < v1.length) {
				var v = v1[_g];
				++_g;
				var s = haxe_ui_styles_ValueTools.string(v).toLowerCase();
				if(s == "bold") {
					var this1 = this.directives;
					var value = new haxe_ui_styles_elements_Directive("font-bold",haxe_ui_styles_Value.VBool(true));
					this1.h["font-bold"] = value;
				} else if(s == "italic") {
					var this2 = this.directives;
					var value1 = new haxe_ui_styles_elements_Directive("font-italic",haxe_ui_styles_Value.VBool(true));
					this2.h["font-italic"] = value1;
				} else if(s == "underline") {
					var this3 = this.directives;
					var value2 = new haxe_ui_styles_elements_Directive("font-underline",haxe_ui_styles_Value.VBool(true));
					this3.h["font-underline"] = value2;
				}
			}
			break;
		case "margin":
			var vl = haxe_ui_styles_ValueTools.composite(d.value);
			if(vl.length == 4 || vl.length == 1) {
				this.processComposite(d,["margin-top","margin-left","margin-right","margin-bottom"]);
			} else if(vl.length == 2) {
				this.processComposite(new haxe_ui_styles_elements_Directive("",vl[0]),["margin-top","margin-bottom"]);
				this.processComposite(new haxe_ui_styles_elements_Directive("",vl[1]),["margin-left","margin-right"]);
			}
			break;
		case "padding":
			var vl = haxe_ui_styles_ValueTools.composite(d.value);
			if(vl.length == 4 || vl.length == 1) {
				this.processComposite(d,["padding-top","padding-left","padding-right","padding-bottom"]);
			} else if(vl.length == 2) {
				this.processComposite(new haxe_ui_styles_elements_Directive("",vl[0]),["padding-top","padding-bottom"]);
				this.processComposite(new haxe_ui_styles_elements_Directive("",vl[1]),["padding-left","padding-right"]);
			} else if(vl.length == 0) {
				this.processComposite(d,["padding-top","padding-left","padding-right","padding-bottom"]);
			}
			break;
		case "spacing":
			this.processComposite(d,["horizontal-spacing","vertical-spacing"]);
			break;
		default:
			this.directives.h[d.directive] = d;
		}
	}
	,processComposite: function(d,parts,duplicate) {
		if(duplicate == null) {
			duplicate = false;
		}
		var _g = 0;
		while(_g < parts.length) {
			var p = parts[_g];
			++_g;
			var _this = this.directives;
			if(Object.prototype.hasOwnProperty.call(_this.h,p)) {
				delete(_this.h[p]);
			}
		}
		var _g = d.value;
		switch(_g._hx_index) {
		case 1:
			var _g1 = _g.v;
			var _g1 = 0;
			while(_g1 < parts.length) {
				var p = parts[_g1];
				++_g1;
				var this1 = this.directives;
				var value = new haxe_ui_styles_elements_Directive(p,d.value);
				this1.h[p] = value;
			}
			break;
		case 3:
			var v = _g.v;
			var _g1 = 0;
			while(_g1 < parts.length) {
				var p = parts[_g1];
				++_g1;
				var this1 = this.directives;
				var value = new haxe_ui_styles_elements_Directive(p,haxe_ui_styles_Value.VDimension(v));
				this1.h[p] = value;
			}
			break;
		case 4:
			var _g1 = _g.v;
			if(duplicate == false) {
				var this1 = this.directives;
				var value = new haxe_ui_styles_elements_Directive(parts[0],d.value);
				this1.h[parts[0]] = value;
			} else {
				var _g1 = 0;
				while(_g1 < parts.length) {
					var p = parts[_g1];
					++_g1;
					var this1 = this.directives;
					var value = new haxe_ui_styles_elements_Directive(p,d.value);
					this1.h[p] = value;
				}
			}
			break;
		case 6:
			var _g1 = _g.v;
			break;
		case 7:
			var vl = _g.vl;
			var n = 0;
			var _g = 0;
			while(_g < parts.length) {
				var p = parts[_g];
				++_g;
				if(vl[n] != null) {
					var nd = new haxe_ui_styles_elements_Directive(p,vl[n]);
					this.processDirective(nd);
					this.directives.h[p] = nd;
				}
				++n;
			}
			break;
		case 9:
			var _g = 0;
			while(_g < parts.length) {
				var p = parts[_g];
				++_g;
				var nd = new haxe_ui_styles_elements_Directive(p,d.value);
				this.processDirective(nd);
				this.directives.h[p] = nd;
			}
			break;
		default:
		}
	}
	,__class__: haxe_ui_styles_elements_RuleElement
};
var haxe_ui_styles_elements_Selector = function(s) {
	this.parts = [];
	s = StringTools.replace(s,">"," > ");
	var p = s.split(" ");
	var parent = null;
	var nextDirect = false;
	var _g = 0;
	while(_g < p.length) {
		var i = p[_g];
		++_g;
		i = StringTools.trim(i);
		if(i.length == 0) {
			continue;
		}
		if(i == ">") {
			nextDirect = true;
			continue;
		}
		var current = new haxe_ui_styles_elements_SelectorPart();
		if(nextDirect == true) {
			current.direct = true;
			nextDirect = false;
		}
		current.parent = parent;
		var p1 = i.split(":");
		current.pseudoClass = p1[1];
		var main = p1[0];
		if(main.charAt(0) == ".") {
			current.className = main.substring(1);
		} else {
			var p2 = main.split(".");
			if(p2[0].charAt(0) == "#") {
				current.id = p2[0].substring(1);
			} else {
				current.nodeName = p2[0].toLowerCase();
			}
			current.className = p2[1];
		}
		this.parts.push(current);
		parent = current;
	}
};
$hxClasses["haxe.ui.styles.elements.Selector"] = haxe_ui_styles_elements_Selector;
haxe_ui_styles_elements_Selector.__name__ = "haxe.ui.styles.elements.Selector";
haxe_ui_styles_elements_Selector.prototype = {
	parts: null
	,toString: function() {
		return this.parts.join(" ");
	}
	,__class__: haxe_ui_styles_elements_Selector
};
var haxe_ui_styles_elements_SelectorPart = function() {
	this._parts = null;
	this.direct = false;
	this.nodeName = null;
	this.id = null;
	this.className = null;
	this.pseudoClass = null;
	this.parent = null;
};
$hxClasses["haxe.ui.styles.elements.SelectorPart"] = haxe_ui_styles_elements_SelectorPart;
haxe_ui_styles_elements_SelectorPart.__name__ = "haxe.ui.styles.elements.SelectorPart";
haxe_ui_styles_elements_SelectorPart.prototype = {
	parent: null
	,pseudoClass: null
	,className: null
	,id: null
	,nodeName: null
	,direct: null
	,_parts: null
	,classNameParts: null
	,get_classNameParts: function() {
		if(this.className == null) {
			return null;
		}
		if(this._parts == null) {
			this._parts = this.className.split(".");
		}
		return this._parts;
	}
	,toString: function() {
		var sb_b = "";
		if(this.id != null) {
			sb_b += Std.string("#" + this.id);
		}
		if(this.nodeName != null) {
			sb_b += Std.string(this.nodeName);
		}
		if(this.className != null) {
			sb_b += Std.string("." + this.className);
		}
		if(this.pseudoClass != null) {
			sb_b += Std.string(":" + this.pseudoClass);
		}
		return sb_b;
	}
	,__class__: haxe_ui_styles_elements_SelectorPart
	,__properties__: {get_classNameParts:"get_classNameParts"}
};
var haxe_ui_themes_Theme = function() {
	this.styles = [];
	this.images = [];
	this.vars = new haxe_ds_StringMap();
};
$hxClasses["haxe.ui.themes.Theme"] = haxe_ui_themes_Theme;
haxe_ui_themes_Theme.__name__ = "haxe.ui.themes.Theme";
haxe_ui_themes_Theme.prototype = {
	parent: null
	,styles: null
	,images: null
	,vars: null
	,__class__: haxe_ui_themes_Theme
};
var haxe_ui_themes_ThemeManager = function() {
	this.currentThemeVars = new haxe_ds_StringMap();
	this._eventMap = null;
	this._themes = new haxe_ds_StringMap();
};
$hxClasses["haxe.ui.themes.ThemeManager"] = haxe_ui_themes_ThemeManager;
haxe_ui_themes_ThemeManager.__name__ = "haxe.ui.themes.ThemeManager";
haxe_ui_themes_ThemeManager.__properties__ = {get_instance:"get_instance"};
haxe_ui_themes_ThemeManager.get_instance = function() {
	if(haxe_ui_themes_ThemeManager._instance == null) {
		haxe_ui_themes_ThemeManager._instance = new haxe_ui_themes_ThemeManager();
	}
	return haxe_ui_themes_ThemeManager._instance;
};
haxe_ui_themes_ThemeManager.prototype = {
	_themes: null
	,_themeImages: null
	,_eventMap: null
	,registerEvent: function(type,listener,priority) {
		if(priority == null) {
			priority = 0;
		}
		if(this._eventMap == null) {
			this._eventMap = new haxe_ui_util_EventMap();
		}
		this._eventMap.add(type,listener);
	}
	,unregisterEvent: function(type,listener) {
		if(this._eventMap == null) {
			return;
		}
		this._eventMap.remove(type,listener);
	}
	,dispatch: function(event) {
		if(this._eventMap == null) {
			return;
		}
		this._eventMap.invoke(event.type,new haxe_ui_events_ThemeEvent(haxe_ui_events_ThemeEvent.THEME_CHANGED));
	}
	,getTheme: function(themeName) {
		var theme = this.findTheme(themeName);
		if(theme == null) {
			theme = new haxe_ui_themes_Theme();
			this._themes.h[themeName] = theme;
		}
		return theme;
	}
	,findTheme: function(themeName) {
		var t = null;
		var h = this._themes.h;
		var name_h = h;
		var name_keys = Object.keys(h);
		var name_length = name_keys.length;
		var name_current = 0;
		while(name_current < name_length) {
			var name = name_keys[name_current++];
			if(name.toLowerCase() == themeName.toLowerCase()) {
				t = this._themes.h[name];
				break;
			}
		}
		return t;
	}
	,addStyleResource: function(themeName,resourceId,priority,styleData) {
		if(priority == null) {
			priority = 0;
		}
		this.getTheme(themeName).styles.push({ resourceId : resourceId, priority : priority, styleData : styleData});
	}
	,setThemeVar: function(themeName,varName,varValue) {
		var theme = this.getTheme(themeName);
		if(theme == null) {
			return;
		}
		theme.vars.h[varName] = varValue;
	}
	,setCurrentThemeVar: function(varName,varValue) {
		this.setThemeVar(haxe_ui_Toolkit.get_theme(),varName,varValue);
	}
	,addImageResource: function(themeName,id,resourceId,priority) {
		if(priority == null) {
			priority = 0;
		}
		this.getTheme(themeName).images.push({ id : id, resourceId : resourceId, priority : priority});
	}
	,currentThemeVars: null
	,applyTheme: function(themeName) {
		if(this.findTheme(themeName) == null) {
			haxe_Log.trace("WARNING: theme '" + themeName + "' not found, falling back to default theme",{ fileName : "haxe/ui/themes/ThemeManager.hx", lineNumber : 105, className : "haxe.ui.themes.ThemeManager", methodName : "applyTheme"});
			themeName = "default";
		}
		haxe_ui_Toolkit.styleSheet.clear("default");
		var finalVars = new haxe_ds_StringMap();
		this.buildThemeVars("global",finalVars);
		this.buildThemeVars(themeName,finalVars);
		this.currentThemeVars = new haxe_ds_StringMap();
		var h = finalVars.h;
		var k_h = h;
		var k_keys = Object.keys(h);
		var k_length = k_keys.length;
		var k_current = 0;
		while(k_current < k_length) {
			var k = k_keys[k_current++];
			this.currentThemeVars.h[k] = finalVars.h[k];
		}
		var entries = [];
		this.buildThemeEntries("global",entries);
		this.buildThemeEntries(themeName,entries);
		haxe_ds_ArraySort.sort(entries,function(a,b) {
			if(a.priority < b.priority) {
				return -1;
			} else if(a.priority > b.priority) {
				return 1;
			}
			return 0;
		});
		var _g = 0;
		while(_g < entries.length) {
			var e = entries[_g];
			++_g;
			this.applyResource(e.resourceId,e.styleData);
		}
		var images = [];
		this.buildThemeImages("global",images);
		this.buildThemeImages(themeName,images);
		haxe_ds_ArraySort.sort(images,function(a,b) {
			if(a.priority < b.priority) {
				return -1;
			} else if(a.priority > b.priority) {
				return 1;
			}
			return 0;
		});
		var _g = 0;
		while(_g < images.length) {
			var i = images[_g];
			++_g;
			if(this._themeImages == null) {
				this._themeImages = new haxe_ds_StringMap();
			}
			this._themeImages.h[i.id] = i;
		}
		this.dispatch(new haxe_ui_events_ThemeEvent(haxe_ui_events_ThemeEvent.THEME_CHANGED));
	}
	,applyResource: function(resourceId,styleData) {
		var style = "";
		if(resourceId != null) {
			style = haxe_ui_Toolkit.get_assets().getText(resourceId);
		}
		if(styleData != null) {
			if(style == null) {
				style = "";
			}
			style += "\n" + styleData;
		}
		if(style != null) {
			this.addStyleString(style);
		} else {
			haxe_Log.trace("WARNING: could not find " + resourceId,{ fileName : "haxe/ui/themes/ThemeManager.hx", lineNumber : 170, className : "haxe.ui.themes.ThemeManager", methodName : "applyResource"});
		}
	}
	,addStyleString: function(style) {
		haxe_ui_Toolkit.styleSheet.parse(style);
	}
	,buildThemeVars: function(themeName,vars) {
		var theme = this.findTheme(themeName);
		if(theme == null) {
			return;
		}
		if(theme.parent != null) {
			this.buildThemeVars(theme.parent,vars);
		}
		var h = theme.vars.h;
		var k_h = h;
		var k_keys = Object.keys(h);
		var k_length = k_keys.length;
		var k_current = 0;
		while(k_current < k_length) {
			var k = k_keys[k_current++];
			var v = theme.vars.h[k];
			vars.h[k] = v;
		}
	}
	,buildThemeEntries: function(themeName,arr) {
		var theme = this.findTheme(themeName);
		if(theme == null) {
			return;
		}
		if(theme.parent != null) {
			this.buildThemeEntries(theme.parent,arr);
		}
		var _g = 0;
		var _g1 = theme.styles;
		while(_g < _g1.length) {
			var s = _g1[_g];
			++_g;
			arr.push(s);
		}
	}
	,buildThemeImages: function(themeName,arr) {
		var theme = this.findTheme(themeName);
		if(theme == null) {
			return;
		}
		if(theme.parent != null) {
			this.buildThemeImages(theme.parent,arr);
		}
		var _g = 0;
		var _g1 = theme.images;
		while(_g < _g1.length) {
			var s = _g1[_g];
			++_g;
			arr.push(s);
		}
	}
	,image: function(id) {
		var image = this._themeImages.h[id];
		if(image == null) {
			return null;
		}
		return image.resourceId;
	}
	,icon: function(id) {
		return this.image(id);
	}
	,__class__: haxe_ui_themes_ThemeManager
};
var haxe_ui_tooltips_ToolTip = function() {
	haxe_ui_containers_Box.call(this);
};
$hxClasses["haxe.ui.tooltips.ToolTip"] = haxe_ui_tooltips_ToolTip;
haxe_ui_tooltips_ToolTip.__name__ = "haxe.ui.tooltips.ToolTip";
haxe_ui_tooltips_ToolTip.__super__ = haxe_ui_containers_Box;
haxe_ui_tooltips_ToolTip.prototype = $extend(haxe_ui_containers_Box.prototype,{
	registerBehaviours: function() {
		haxe_ui_containers_Box.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_Box.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_tooltips_ToolTip();
	}
	,__class__: haxe_ui_tooltips_ToolTip
});
var haxe_ui_tooltips_ToolTipManager = function() {
	this._toolTipContents = null;
	this._toolTip = null;
	this._timer = null;
	this._currentComponent = null;
	this._lastMouseEvent = null;
	this._toolTipOptions = new haxe_ds_ObjectMap();
};
$hxClasses["haxe.ui.tooltips.ToolTipManager"] = haxe_ui_tooltips_ToolTipManager;
haxe_ui_tooltips_ToolTipManager.__name__ = "haxe.ui.tooltips.ToolTipManager";
haxe_ui_tooltips_ToolTipManager.__properties__ = {get_instance:"get_instance"};
haxe_ui_tooltips_ToolTipManager.get_instance = function() {
	if(haxe_ui_tooltips_ToolTipManager._instance == null) {
		haxe_ui_tooltips_ToolTipManager._instance = new haxe_ui_tooltips_ToolTipManager();
	}
	return haxe_ui_tooltips_ToolTipManager._instance;
};
haxe_ui_tooltips_ToolTipManager.prototype = {
	_lastMouseEvent: null
	,_toolTipOptions: null
	,registerTooltip: function(target,options) {
		if(this._toolTipOptions.h.__keys__[target.__id__] != null) {
			return;
		}
		if(options == null) {
			options = { };
		}
		if(options.tipData == null) {
			options.tipData = { text : target.get_tooltip()};
		}
		this._toolTipOptions.set(target,options);
		target.registerEvent("mouseover",$bind(this,this.onTargetMouseOver));
	}
	,unregisterTooltip: function(target) {
		target.unregisterEvent("mouseover",$bind(this,this.onTargetMouseOver));
		target.unregisterEvent("mouseout",$bind(this,this.onTargetMouseOut));
		target.unregisterEvent("mousemove",$bind(this,this.onTargetMouseMove));
		this._toolTipOptions.remove(target);
	}
	,getTooltipOptions: function(target) {
		return this._toolTipOptions.h[target.__id__];
	}
	,updateTooltipRenderer: function(target,renderer) {
		if(this._toolTipOptions.h.__keys__[target.__id__] == null) {
			return;
		}
		var options = this._toolTipOptions.h[target.__id__];
		options.renderer = renderer;
	}
	,_currentComponent: null
	,_timer: null
	,onTargetMouseOver: function(event) {
		event.cancel();
		this.stopCurrent();
		this._lastMouseEvent = event;
		this._currentComponent = event.target;
		event.target.registerEvent("mouseout",$bind(this,this.onTargetMouseOut));
		event.target.registerEvent("mousemove",$bind(this,this.onTargetMouseMove));
		haxe_ui_core_Screen.get_instance().registerEvent("mousemove",$bind(this,this.onScreenMouseMove));
		this.startTimer();
	}
	,onTargetMouseMove: function(event) {
		if(this._toolTip != null && this._toolTip.get_hidden() == false) {
			return;
		}
		this.stopTimer();
		this.startTimer();
	}
	,onTargetMouseOut: function(event) {
		this.stopCurrent();
		this.hideToolTip();
	}
	,onDelayTimer: function() {
		this._timer.stop();
		this._timer = null;
		this.showToolTip();
	}
	,onScreenMouseMove: function(event) {
		this._lastMouseEvent = event;
	}
	,onScreenMouseDown: function(event) {
		this.hideToolTip();
	}
	,startTimer: function() {
		this._timer = new haxe_ui_util_Timer(haxe_ui_tooltips_ToolTipManager.defaultDelay,$bind(this,this.onDelayTimer));
	}
	,stopTimer: function() {
		if(this._timer != null) {
			this._timer.stop();
			this._timer = null;
		}
	}
	,stopCurrent: function() {
		if(this._currentComponent != null) {
			this._currentComponent.unregisterEvent("mouseout",$bind(this,this.onTargetMouseOut));
			this._currentComponent = null;
		}
		this.stopTimer();
		haxe_ui_core_Screen.get_instance().unregisterEvent("mousemove",$bind(this,this.onScreenMouseMove));
	}
	,_toolTip: null
	,_toolTipContents: null
	,createToolTip: function() {
		if(this._toolTip != null) {
			return;
		}
		this._toolTip = new haxe_ui_tooltips_ToolTip();
	}
	,showToolTip: function() {
		var _gthis = this;
		if(this._currentComponent == null) {
			return;
		}
		if(this._currentComponent.get_disabled() == true || this._currentComponent.get_hidden() == true) {
			this.stopCurrent();
			return;
		}
		this.createToolTip();
		this._toolTip.hide();
		var options = this._toolTipOptions.h[this._currentComponent.__id__];
		var renderer = this.createToolTipRenderer(options);
		var _this = this._toolTip;
		if((_this._children == null ? [] : _this._children)[0] != renderer) {
			var _this = this._toolTip;
			if((_this._children == null ? [] : _this._children).length > 0) {
				this._toolTip.removeComponentAt(0,false);
			}
			this._toolTip.addComponent(renderer);
		}
		renderer.set_data(options.tipData);
		haxe_ui_core_Screen.get_instance().addComponent(this._toolTip);
		haxe_ui_core_Screen.get_instance().setComponentIndex(this._toolTip,haxe_ui_core_Screen.get_instance().rootComponents.length - 1);
		this._toolTip.validateNow();
		this.positionToolTip();
		haxe_ui_Toolkit.callLater(function() {
			if(haxe_ui_tooltips_ToolTipManager.fade == true) {
				_gthis._toolTip.fadeIn();
			} else {
				_gthis._toolTip.show();
			}
		});
		haxe_ui_core_Screen.get_instance().registerEvent("mousedown",$bind(this,this.onScreenMouseDown));
	}
	,positionToolTip: function() {
		var x = this._lastMouseEvent.screenX + this._toolTip.get_marginLeft();
		var y = this._lastMouseEvent.screenY + this._toolTip.get_marginTop();
		var w = this._toolTip.get_width();
		var h = this._toolTip.get_height();
		var maxX = haxe_ui_core_Screen.get_instance().get_width();
		var maxY = haxe_ui_core_Screen.get_instance().get_height();
		if(x + w > maxX) {
			x -= w;
		}
		if(y + h > maxY) {
			y = this._lastMouseEvent.screenY - h - this._toolTip.get_marginTop() / 2;
		}
		this._toolTip.set_left(x * haxe_ui_Toolkit.get_scale());
		this._toolTip.set_top(y * haxe_ui_Toolkit.get_scale());
	}
	,hideToolTip: function() {
		if(this._toolTip != null) {
			if(haxe_ui_tooltips_ToolTipManager.fade == true) {
				this._toolTip.fadeOut();
			} else {
				this._toolTip.hide();
			}
		}
		haxe_ui_core_Screen.get_instance().unregisterEvent("mousedown",$bind(this,this.onScreenMouseDown));
	}
	,createToolTipRenderer: function(options) {
		if(options.renderer != null) {
			return options.renderer;
		}
		if(haxe_ui_tooltips_ToolTipManager.defaultRenderer != null) {
			return haxe_ui_tooltips_ToolTipManager.defaultRenderer;
		}
		if(this._toolTipContents != null) {
			return this._toolTipContents;
		}
		this._toolTipContents = new haxe_ui_core_ItemRenderer();
		var label = new haxe_ui_components_Label();
		label.set_id("text");
		this._toolTipContents.addComponent(label);
		return this._toolTipContents;
	}
	,__class__: haxe_ui_tooltips_ToolTipManager
};
var haxe_ui_util_CallbackMap = function() {
	this._map = new haxe_ds_StringMap();
};
$hxClasses["haxe.ui.util.CallbackMap"] = haxe_ui_util_CallbackMap;
haxe_ui_util_CallbackMap.__name__ = "haxe.ui.util.CallbackMap";
haxe_ui_util_CallbackMap.prototype = {
	_map: null
	,add: function(key,callback,priority) {
		if(priority == null) {
			priority = 0;
		}
		if(callback == null) {
			return false;
		}
		var b = false;
		var arr = this._map.h[key];
		if(arr == null) {
			arr = new haxe_ui_util_FunctionArray();
			arr.push(callback,priority);
			this._map.h[key] = arr;
			b = true;
		} else if(arr.contains(callback) == false) {
			arr.push(callback,priority);
		}
		return b;
	}
	,remove: function(key,callback) {
		var b = false;
		var arr = this._map.h[key];
		if(arr != null) {
			arr.remove(callback);
			if(arr.get_length() == 0) {
				var _this = this._map;
				if(Object.prototype.hasOwnProperty.call(_this.h,key)) {
					delete(_this.h[key]);
				}
				b = true;
			}
		}
		return b;
	}
	,removeAll: function(key) {
		var arr = this._map.h[key];
		if(arr != null) {
			while(arr.get_length() > 0) arr.remove(arr.get(0));
			var _this = this._map;
			if(Object.prototype.hasOwnProperty.call(_this.h,key)) {
				delete(_this.h[key]);
			}
		}
	}
	,invoke: function(key,param) {
		var arr = this._map.h[key];
		if(arr != null) {
			arr = arr.copy();
			var listener = arr.iterator();
			while(listener.hasNext()) {
				var listener1 = listener.next();
				listener1.callback(param);
			}
		}
	}
	,invokeAndRemove: function(key,param) {
		var arr = this._map.h[key];
		if(arr != null) {
			arr = arr.copy();
			this.removeAll(key);
			var listener = arr.iterator();
			while(listener.hasNext()) {
				var listener1 = listener.next();
				listener1.callback(param);
			}
		}
	}
	,count: function(key) {
		var n = 0;
		var arr = this._map.h[key];
		if(arr != null) {
			n = arr.get_length();
		}
		return n;
	}
	,__class__: haxe_ui_util_CallbackMap
};
var haxe_ui_util_Color = {};
haxe_ui_util_Color.__properties__ = {set_a:"set_a",get_a:"get_a",set_b:"set_b",get_b:"get_b",set_g:"set_g",get_g:"get_g",set_r:"set_r",get_r:"get_r"};
haxe_ui_util_Color.fromString = function(s) {
	if(StringTools.startsWith(s,"0x") || StringTools.startsWith(s,"#")) {
		return Std.parseInt("0x" + s.substring(s.length - 6));
	}
	switch(s) {
	case "aliceblue":
		return 15792383;
	case "antiquewhite":
		return 16444375;
	case "aqua":
		return 65535;
	case "aquamarine":
		return 8388564;
	case "azure":
		return 15794175;
	case "beige":
		return 16119260;
	case "bisque":
		return 16770244;
	case "black":
		return 0;
	case "blanchedalmond":
		return 16772045;
	case "blue":
		return 255;
	case "blueviolet":
		return 9055202;
	case "brown":
		return 10824234;
	case "burlywood":
		return 14596231;
	case "cadetblue":
		return 6266528;
	case "chartreuse":
		return 8388352;
	case "chocolate":
		return 13789470;
	case "coral":
		return 16744272;
	case "cornflowerblue":
		return 6591981;
	case "cornsilk":
		return 16775388;
	case "crimson":
		return 14423100;
	case "cyan":
		return 65535;
	case "darkblue":
		return 139;
	case "darkcyan":
		return 35723;
	case "darkgoldenrod":
		return 12092939;
	case "darkgray":
		return 11119017;
	case "darkgreen":
		return 25600;
	case "darkkhaki":
		return 12433259;
	case "darkmagenta":
		return 9109643;
	case "darkolivegreen":
		return 5597999;
	case "darkorange":
		return 16747520;
	case "darkorchid":
		return 10040012;
	case "darkred":
		return 9109504;
	case "darksalmon":
		return 15308410;
	case "darkseagreen":
		return 9419919;
	case "darkslateblue":
		return 4734347;
	case "darkslategray":
		return 3100495;
	case "darkturquoise":
		return 52945;
	case "darkviolet":
		return 9699539;
	case "deeppink":
		return 16716947;
	case "deepskyblue":
		return 49151;
	case "dimgray":
		return 6908265;
	case "dodgerblue":
		return 2003199;
	case "firebrick":
		return 11674146;
	case "floralwhite":
		return 16775920;
	case "forestgreen":
		return 2263842;
	case "fuchsia":
		return 16711935;
	case "gainsboro":
		return 14474460;
	case "ghostwhite":
		return 16316671;
	case "gold":
		return 16766720;
	case "goldenrod":
		return 14329120;
	case "green":
		return 32768;
	case "greenyellow":
		return 11403055;
	case "gray":case "grey":
		return 8421504;
	case "honeydew":
		return 15794160;
	case "hotpink":
		return 16738740;
	case "indianred":
		return 13458524;
	case "indigo":
		return 4915330;
	case "ivory":
		return 16777200;
	case "khaki":
		return 15787660;
	case "lavender":
		return 15132410;
	case "lavenderblush":
		return 16773365;
	case "lawngreen":
		return 8190976;
	case "lemonchiffon":
		return 16775885;
	case "lightblue":
		return 11393254;
	case "lightcoral":
		return 15761536;
	case "lightcyan":
		return 14745599;
	case "lightgoldenrodyellow":
		return 16448210;
	case "lightgray":
		return 13882323;
	case "lightgreen":
		return 9498256;
	case "lightpink":
		return 16758465;
	case "lightsalmon":
		return 16752762;
	case "lightseagreen":
		return 2142890;
	case "lightskyblue":
		return 8900346;
	case "lightslategray":
		return 7833753;
	case "lightsteelblue":
		return 11584734;
	case "lightyellow":
		return 16777184;
	case "lime":
		return 65280;
	case "limegreen":
		return 3329330;
	case "linen":
		return 16445670;
	case "magenta":
		return 16711935;
	case "maroon":
		return 8388608;
	case "mediumaquamarine":
		return 6737322;
	case "mediumblue":
		return 205;
	case "mediumorchid":
		return 12211667;
	case "mediumpurple":
		return 9662683;
	case "mediumseagreen":
		return 3978097;
	case "mediumslateblue":
		return 8087790;
	case "mediumspringgreen":
		return 64154;
	case "mediumturquoise":
		return 4772300;
	case "mediumvioletred":
		return 13047173;
	case "midnightblue":
		return 1644912;
	case "mintcream":
		return 16121850;
	case "mistyrose":
		return 16770273;
	case "moccasin":
		return 16770229;
	case "navajowhite":
		return 16768685;
	case "navy":
		return 128;
	case "oldlace":
		return 16643558;
	case "olive":
		return 8421376;
	case "olivedrab":
		return 7048739;
	case "orange":
		return 16753920;
	case "orangered":
		return 16729344;
	case "orchid":
		return 14315734;
	case "palegoldenrod":
		return 15657130;
	case "palegreen":
		return 10025880;
	case "paleturquoise":
		return 11529966;
	case "palevioletred":
		return 14381203;
	case "papayawhip":
		return 16773077;
	case "peachpuff":
		return 16767673;
	case "peru":
		return 13468991;
	case "pink":
		return 16761035;
	case "plum":
		return 14524637;
	case "powderblue":
		return 11591910;
	case "purple":
		return 8388736;
	case "red":
		return 16711680;
	case "rosybrown":
		return 12357519;
	case "royalblue":
		return 4286945;
	case "saddlebrown":
		return 9127187;
	case "salmon":
		return 16416882;
	case "sandybrown":
		return 16032864;
	case "seagreen":
		return 3050327;
	case "seashell":
		return 16774638;
	case "sienna":
		return 10506797;
	case "silver":
		return 12632256;
	case "skyblue":
		return 8900331;
	case "slateblue":
		return 6970061;
	case "slategray":
		return 7372944;
	case "snow":
		return 16775930;
	case "springgreen":
		return 65407;
	case "steelblue":
		return 4620980;
	case "tan":
		return 13808780;
	case "teal":
		return 32896;
	case "thistle":
		return 14204888;
	case "tomato":
		return 16737095;
	case "turquoise":
		return 4251856;
	case "violet":
		return 15631086;
	case "wheat":
		return 16113331;
	case "white":
		return 16777215;
	case "whitesmoke":
		return 16119285;
	case "yellow":
		return 16776960;
	case "yellowgreen":
		return 10145074;
	default:
		return 0;
	}
};
haxe_ui_util_Color.fromComponents = function(r,g,b,a) {
	var result = 0;
	result = (r & 255) << 16 | (g & 255) << 8 | b & 255;
	return result;
};
haxe_ui_util_Color.get_r = function(this1) {
	return this1 >> 16 & 255;
};
haxe_ui_util_Color.set_r = function(this1,value) {
	this1 = (value & 255) << 16 | (this1 >> 8 & 255 & 255) << 8 | this1 & 255 & 255;
	return this1;
};
haxe_ui_util_Color.get_g = function(this1) {
	return this1 >> 8 & 255;
};
haxe_ui_util_Color.set_g = function(this1,value) {
	this1 = (this1 >> 16 & 255 & 255) << 16 | (value & 255) << 8 | this1 & 255 & 255;
	return this1;
};
haxe_ui_util_Color.get_b = function(this1) {
	return this1 & 255;
};
haxe_ui_util_Color.set_b = function(this1,value) {
	this1 = (this1 >> 16 & 255 & 255) << 16 | (this1 >> 8 & 255 & 255) << 8 | value & 255;
	return this1;
};
haxe_ui_util_Color.get_a = function(this1) {
	return this1 >> 24 & 255;
};
haxe_ui_util_Color.set_a = function(this1,value) {
	this1 = (this1 >> 16 & 255 & 255) << 16 | (this1 >> 8 & 255 & 255) << 8 | this1 & 255 & 255;
	return this1;
};
haxe_ui_util_Color.set = function(this1,r,g,b,a) {
	this1 = (r & 255) << 16 | (g & 255) << 8 | b & 255;
	return this1;
};
haxe_ui_util_Color.toInt = function(this1) {
	return this1;
};
haxe_ui_util_Color.toHex = function(this1) {
	return "#" + StringTools.hex(this1 >> 16 & 255,2) + StringTools.hex(this1 >> 8 & 255,2) + StringTools.hex(this1 & 255,2);
};
haxe_ui_util_Color.or = function(a,b) {
	return haxe_ui_util_Color.toInt(a) | haxe_ui_util_Color.toInt(b);
};
haxe_ui_util_Color.sumColor = function(a,b) {
	return haxe_ui_util_Color.toInt(haxe_ui_util_Color.fromComponents((a >> 16 & 255) + (b >> 16 & 255),(a >> 8 & 255) + (b >> 8 & 255),(a & 255) + (b & 255),(a >> 24 & 255) + (b >> 24 & 255)));
};
haxe_ui_util_Color.restColor = function(a,b) {
	return haxe_ui_util_Color.toInt(haxe_ui_util_Color.fromComponents((a >> 16 & 255) - (b >> 16 & 255),(a >> 8 & 255) - (b >> 8 & 255),(a & 255) - (b & 255),(a >> 24 & 255) - (b >> 24 & 255)));
};
haxe_ui_util_Color.sumFloat = function(a,b) {
	var bInt = b | 0;
	return haxe_ui_util_Color.toInt(haxe_ui_util_Color.fromComponents((a >> 16 & 255) - bInt,(a >> 8 & 255) - bInt,(a & 255) - bInt,(a >> 24 & 255) - bInt));
};
haxe_ui_util_Color.mulFloat = function(a,b) {
	return haxe_ui_util_Color.toInt(haxe_ui_util_Color.fromComponents((a >> 16 & 255) * b | 0,(a >> 8 & 255) * b | 0,(a & 255) * b | 0,(a >> 24 & 255) * b | 0));
};
var haxe_ui_util_ColorUtil = function() { };
$hxClasses["haxe.ui.util.ColorUtil"] = haxe_ui_util_ColorUtil;
haxe_ui_util_ColorUtil.__name__ = "haxe.ui.util.ColorUtil";
haxe_ui_util_ColorUtil.toHSL = function(color) {
	var r = (color >> 16 & 255) / 255;
	var g = (color >> 8 & 255) / 255;
	var b = (color & 255) / 255;
	var numbers = [r,g,b];
	var r1 = numbers[0];
	var _g = 0;
	while(_g < numbers.length) {
		var n = numbers[_g];
		++_g;
		if(n < r1) {
			r1 = n;
		}
	}
	var min = r1;
	var numbers = [r,g,b];
	var r1 = numbers[0];
	var _g = 0;
	while(_g < numbers.length) {
		var n = numbers[_g];
		++_g;
		if(n > r1) {
			r1 = n;
		}
	}
	var max = r1;
	var delta = max - min;
	var h = 0;
	var s = 0;
	var l = (max + min) / 2;
	if(delta == 0.0) {
		h = 0.0;
		s = h;
	} else {
		s = l < 0.5 ? delta / (max + min) : delta / (2 - max - min);
		if(r == max) {
			h = (g - b) / delta + (g < b ? 6 : 0);
		} else if(g == max) {
			h = (b - r) / delta + 2;
		} else {
			h = (r - g) / delta + 4;
		}
		h *= 60;
	}
	return { h : Math.round(h), s : s * 100, l : l * 100};
};
haxe_ui_util_ColorUtil.fromHSL = function(hue,saturation,luminosity) {
	saturation /= 100;
	luminosity /= 100;
	var _c = function(d,s,l) {
		var m2 = l <= 0.5 ? l * (1 + s) : l + s - l * s;
		var m1 = 2 * l - m2;
		var v = d;
		v %= 360;
		if(v < 0) {
			v += 360;
		}
		d = v;
		if(d < 60) {
			return m1 + (m2 - m1) * d / 60;
		} else if(d < 180) {
			return m2;
		} else if(d < 240) {
			return m1 + (m2 - m1) * (240 - d) / 60;
		}
		return m1;
	};
	return haxe_ui_util_Color.fromComponents(Math.round(_c(hue + 120,saturation,luminosity) * 255),Math.round(_c(hue,saturation,luminosity) * 255),Math.round(_c(hue - 120,saturation,luminosity) * 255),255);
};
haxe_ui_util_ColorUtil.toHSV = function(color) {
	var r = (color >> 16 & 255) / 255;
	var g = (color >> 8 & 255) / 255;
	var b = (color & 255) / 255;
	var numbers = [r,g,b];
	var r1 = numbers[0];
	var _g = 0;
	while(_g < numbers.length) {
		var n = numbers[_g];
		++_g;
		if(n < r1) {
			r1 = n;
		}
	}
	var min = r1;
	var numbers = [r,g,b];
	var r1 = numbers[0];
	var _g = 0;
	while(_g < numbers.length) {
		var n = numbers[_g];
		++_g;
		if(n > r1) {
			r1 = n;
		}
	}
	var max = r1;
	var delta = max - min;
	var h = 0;
	var s = 0;
	var v = max;
	if(delta != 0) {
		s = delta / max;
	} else {
		s = 0;
		h = 0;
		return { h : Math.round(h), s : s * 100, v : v * 100};
	}
	if(r == max) {
		h = (g - b) / delta;
	} else if(g == max) {
		h = 2 + (b - r) / delta;
	} else {
		h = 4 + (r - g) / delta;
	}
	h *= 60;
	if(h < 0) {
		h += 360;
	}
	return { h : Math.round(h), s : s * 100, v : v * 100};
};
haxe_ui_util_ColorUtil.fromHSV = function(hue,saturation,value) {
	if(saturation == 0) {
		return haxe_ui_util_Color.fromComponents(value | 0,value | 0,value | 0,255);
	}
	saturation /= 100;
	value /= 100;
	var r;
	var g;
	var b;
	var h = hue / 60;
	var i = Math.floor(h);
	var f = h - i;
	var p = value * (1 - saturation);
	var q = value * (1 - f * saturation);
	var t = value * (1 - (1 - f) * saturation);
	switch(i) {
	case 0:
		r = value;
		g = t;
		b = p;
		break;
	case 1:
		r = q;
		g = value;
		b = p;
		break;
	case 2:
		r = p;
		g = value;
		b = t;
		break;
	case 3:
		r = p;
		g = q;
		b = value;
		break;
	case 4:
		r = t;
		g = p;
		b = value;
		break;
	default:
		r = value;
		g = p;
		b = q;
	}
	return haxe_ui_util_Color.fromComponents(Math.round(r * 255),Math.round(g * 255),Math.round(b * 255),255);
};
haxe_ui_util_ColorUtil.hsvToRGBF = function(hue,saturation,value) {
	var tmp = hue == 0 && saturation == 0 && value == 100;
	var tmp = saturation == 0;
	saturation /= 100;
	value /= 100;
	var r;
	var g;
	var b;
	var h = hue / 60;
	var i = Math.floor(h);
	var f = h - i;
	var p = value * (1 - saturation);
	var q = value * (1 - f * saturation);
	var t = value * (1 - (1 - f) * saturation);
	switch(i) {
	case 0:
		r = value;
		g = t;
		b = p;
		break;
	case 1:
		r = q;
		g = value;
		b = p;
		break;
	case 2:
		r = p;
		g = value;
		b = t;
		break;
	case 3:
		r = p;
		g = q;
		b = value;
		break;
	case 4:
		r = t;
		g = p;
		b = value;
		break;
	default:
		r = value;
		g = p;
		b = q;
	}
	return { r : r * 255, g : g * 255, b : b * 255};
};
haxe_ui_util_ColorUtil.rgbToGray = function(r,g,b) {
	var g1 = 0.3 * r + 0.59 * g + 0.11 * b;
	return Math.round(g1);
};
haxe_ui_util_ColorUtil.rgbfToHSV = function(r,g,b) {
	var tmp = Math.round(r) == 255 && Math.round(g) == 255 && Math.round(b) == 255;
	var r1 = r / 255;
	var g1 = g / 255;
	var b1 = b / 255;
	var numbers = [r1,g1,b1];
	var r = numbers[0];
	var _g = 0;
	while(_g < numbers.length) {
		var n = numbers[_g];
		++_g;
		if(n < r) {
			r = n;
		}
	}
	var min = r;
	var numbers = [r1,g1,b1];
	var r = numbers[0];
	var _g = 0;
	while(_g < numbers.length) {
		var n = numbers[_g];
		++_g;
		if(n > r) {
			r = n;
		}
	}
	var max = r;
	var delta = max - min;
	var h = 0;
	var s = 0;
	var v = max;
	if(delta != 0) {
		s = delta / max;
	} else {
		s = 0;
		h = 0;
		return { h : h, s : s * 100, v : v * 100};
	}
	if(r1 == max) {
		h = (g1 - b1) / delta;
	} else if(g1 == max) {
		h = 2 + (b1 - r1) / delta;
	} else {
		h = 4 + (r1 - g1) / delta;
	}
	h *= 60;
	if(h < 0) {
		h += 360;
	}
	if(Math.round(r1) == 255 && Math.round(g1) == 255 && Math.round(b1) == 255) {
		return { h : h, s : 0, v : 100};
	}
	return { h : h, s : s * 100, v : v * 100};
};
haxe_ui_util_ColorUtil.buildColorArray = function(startColor,endColor,size) {
	var array = [];
	var r1 = startColor >> 16 & 255;
	var g1 = startColor >> 8 & 255;
	var b1 = startColor & 255;
	var r2 = endColor >> 16 & 255;
	var g2 = endColor >> 8 & 255;
	var b2 = endColor & 255;
	var rd = r2 - r1;
	var gd = g2 - g1;
	var bd = b2 - b1;
	var ri = rd / (size - 1);
	var gi = gd / (size - 1);
	var bi = bd / (size - 1);
	var r = r1;
	var g = g1;
	var b = b1;
	var c = 0;
	var _g = 0;
	var _g1 = size;
	while(_g < _g1) {
		var n = _g++;
		c = (Math.round(r) & 255) << 16 | (Math.round(g) & 255) << 8 | Math.round(b) & 255;
		array.push(haxe_ui_util_Color.toInt(c));
		r += ri;
		g += gi;
		b += bi;
	}
	return array;
};
haxe_ui_util_ColorUtil.parseColor = function(s) {
	if(StringTools.startsWith(s,"#")) {
		s = s.substring(1,s.length);
	} else if(StringTools.startsWith(s,"0x")) {
		s = s.substring(2,s.length);
	}
	return Std.parseInt("0x" + s);
};
var haxe_ui_util_ComponentUtil = function() { };
$hxClasses["haxe.ui.util.ComponentUtil"] = haxe_ui_util_ComponentUtil;
haxe_ui_util_ComponentUtil.__name__ = "haxe.ui.util.ComponentUtil";
haxe_ui_util_ComponentUtil.getDepth = function(target) {
	var count = 0;
	while(target.parentComponent != null) {
		target = target.parentComponent;
		++count;
	}
	return count;
};
haxe_ui_util_ComponentUtil.dumpComponentTree = function(from,verbose) {
	if(verbose == null) {
		verbose = false;
	}
	haxe_ui_util_ComponentUtil.recurseTreeGrouped(from,verbose);
};
haxe_ui_util_ComponentUtil.walkComponentTree = function(from,cb) {
	haxe_ui_util_ComponentUtil.recurseTree(0,from,cb);
};
haxe_ui_util_ComponentUtil.recurseTree = function(depth,c,cb) {
	cb(depth,c);
	var _g = 0;
	var _g1 = c._children == null ? [] : c._children;
	while(_g < _g1.length) {
		var child = _g1[_g];
		++_g;
		haxe_ui_util_ComponentUtil.recurseTree(depth + 1,child,cb);
	}
};
haxe_ui_util_ComponentUtil.recurseTreeTrace = function(c,level,verbose) {
	var display = c.get_className();
	if(c.get_id() != null) {
		display += "#" + c.get_id();
	}
	var space = StringTools.lpad(""," ",level * 4);
	display = space + display;
	haxe_Log.trace(display,{ fileName : "haxe/ui/util/ComponentUtil.hx", lineNumber : 42, className : "haxe.ui.util.ComponentUtil", methodName : "recurseTreeTrace"});
	var _g = 0;
	var _g1 = c._children == null ? [] : c._children;
	while(_g < _g1.length) {
		var child = _g1[_g];
		++_g;
		haxe_ui_util_ComponentUtil.recurseTreeTrace(child,level + 1,verbose);
	}
};
haxe_ui_util_ComponentUtil.recurseTreeGrouped = function(c,verbose) {
	var display = c.get_className();
	if(c.get_id() != null) {
		display += "#" + c.get_id();
	}
	$global.console.groupCollapsed(display);
	if(verbose == true) {
		$global.console.groupCollapsed("Component Details");
		$global.console.log(c.element);
		$global.console.groupEnd();
	}
	var _g = 0;
	var _g1 = c._children == null ? [] : c._children;
	while(_g < _g1.length) {
		var child = _g1[_g];
		++_g;
		haxe_ui_util_ComponentUtil.recurseTreeGrouped(child,verbose);
	}
	$global.console.groupEnd();
};
var haxe_ui_util_Defines = function() { };
$hxClasses["haxe.ui.util.Defines"] = haxe_ui_util_Defines;
haxe_ui_util_Defines.__name__ = "haxe.ui.util.Defines";
haxe_ui_util_Defines.getAll = function() {
	haxe_ui_util_Defines.popuplate();
	return haxe_ui_util_Defines._map;
};
haxe_ui_util_Defines.set = function(name,value,overwrite) {
	if(overwrite == null) {
		overwrite = false;
	}
	haxe_ui_util_Defines.popuplate();
	if(overwrite == false && Object.prototype.hasOwnProperty.call(haxe_ui_util_Defines._map.h,name)) {
		return;
	}
	haxe_ui_util_Defines._map.h[name] = value;
};
haxe_ui_util_Defines.popuplate = function() {
	if(haxe_ui_util_Defines._map != null) {
		return;
	}
	haxe_ui_util_Defines._map = new haxe_ds_StringMap();
	if(haxe_ui_core_Platform.get_instance().get_isWindows()) {
		haxe_ui_util_Defines.set("windows","1");
	} else if(haxe_ui_core_Platform.get_instance().get_isLinux()) {
		haxe_ui_util_Defines.set("linux","1");
	} else if(haxe_ui_core_Platform.get_instance().get_isMac()) {
		haxe_ui_util_Defines.set("mac","1");
	}
};
haxe_ui_util_Defines.toObject = function() {
	haxe_ui_util_Defines.popuplate();
	var o = { };
	var h = haxe_ui_util_Defines._map.h;
	var k_h = h;
	var k_keys = Object.keys(h);
	var k_length = k_keys.length;
	var k_current = 0;
	while(k_current < k_length) {
		var k = k_keys[k_current++];
		var v = haxe_ui_util_Defines._map.h[k];
		o[k] = v;
	}
	return o;
};
var haxe_ui_util_EventMap = function() {
	this._map = new haxe_ds_StringMap();
};
$hxClasses["haxe.ui.util.EventMap"] = haxe_ui_util_EventMap;
haxe_ui_util_EventMap.__name__ = "haxe.ui.util.EventMap";
haxe_ui_util_EventMap.prototype = {
	_map: null
	,keys: function() {
		return new haxe_ds__$StringMap_StringMapKeyIterator(this._map.h);
	}
	,removeAll: function() {
		var h = this._map.h;
		var type_h = h;
		var type_keys = Object.keys(h);
		var type_length = type_keys.length;
		var type_current = 0;
		while(type_current < type_length) {
			var type = type_keys[type_current++];
			this._map.h[type].removeAll();
		}
	}
	,add: function(type,listener,priority) {
		if(priority == null) {
			priority = 0;
		}
		if(listener == null) {
			return false;
		}
		var b = false;
		var arr = this._map.h[type];
		if(arr == null) {
			arr = new haxe_ui_util_FunctionArray();
			arr.push(listener,priority);
			this._map.h[type] = arr;
			b = true;
		} else if(arr.contains(listener) == false) {
			arr.push(listener,priority);
		}
		return b;
	}
	,remove: function(type,listener) {
		if(listener == null) {
			return false;
		}
		var b = false;
		var arr = this._map.h[type];
		if(arr != null) {
			arr.remove(listener);
			if(arr.get_length() == 0) {
				var _this = this._map;
				if(Object.prototype.hasOwnProperty.call(_this.h,type)) {
					delete(_this.h[type]);
				}
				b = true;
			}
		}
		return b;
	}
	,contains: function(type,listener) {
		var b = false;
		var arr = this._map.h[type];
		if(arr != null) {
			b = listener != null ? arr.contains(listener) : true;
		}
		return b;
	}
	,invoke: function(type,event,target) {
		if(event.bubble && event.target == null) {
			event.target = target;
		}
		var arr = this._map.h[type];
		if(arr != null && arr.get_length() > 0) {
			arr = arr.copy();
			var listener = arr.iterator();
			while(listener.hasNext()) {
				var listener1 = listener.next();
				if(event.canceled) {
					break;
				}
				var c = event.clone();
				if(c.target == null) {
					c.target = target;
				}
				listener1.callback(c);
				event.copyFrom(c);
				event.canceled = c.canceled;
			}
		}
	}
	,listenerCount: function(type) {
		var n = 0;
		var arr = this._map.h[type];
		if(arr != null) {
			n = arr.get_length();
		}
		return n;
	}
	,listeners: function(type) {
		var arr = this._map.h[type];
		if(arr == null) {
			return null;
		}
		return arr;
	}
	,__class__: haxe_ui_util_EventMap
};
var haxe_ui_util_ExpressionUtil = function() { };
$hxClasses["haxe.ui.util.ExpressionUtil"] = haxe_ui_util_ExpressionUtil;
haxe_ui_util_ExpressionUtil.__name__ = "haxe.ui.util.ExpressionUtil";
haxe_ui_util_ExpressionUtil.stringToLanguageExpression = function(s,localeManager) {
	if(localeManager == null) {
		localeManager = "haxe.ui.locale.LocaleManager";
	}
	var fixedParts = [];
	var beforePos = 0;
	var n1 = s.indexOf("{{");
	while(n1 != -1) {
		var before = s.substring(beforePos,n1);
		if(before.length > 0) {
			fixedParts.push("'" + before + "'");
		}
		var n2 = s.indexOf("}}",n1);
		var code = s.substring(n1 + 2,n2);
		var parts = code.split(",");
		var stringId = parts.shift();
		var callString = localeManager + ".instance.lookupString('";
		callString += stringId;
		callString += "'";
		if(parts.length > 0) {
			callString += ", ";
			callString += parts.join(", ");
		}
		callString += ")";
		fixedParts.push(callString);
		n1 = s.indexOf("{{",n2);
		beforePos = n2 + 2;
	}
	if(beforePos < s.length) {
		var before = s.substring(beforePos,s.length);
		if(before.length > 0) {
			fixedParts.push("'" + before + "'");
		}
	}
	var fixedCode = fixedParts.join(" + ");
	return fixedCode;
};
var haxe_ui_util_FunctionArray = function() {
	this._array = [];
};
$hxClasses["haxe.ui.util.FunctionArray"] = haxe_ui_util_FunctionArray;
haxe_ui_util_FunctionArray.__name__ = "haxe.ui.util.FunctionArray";
haxe_ui_util_FunctionArray.prototype = {
	_array: null
	,get: function(index) {
		return this._array[index].callback;
	}
	,length: null
	,get_length: function() {
		return this._array.length;
	}
	,push: function(x,priority) {
		if(priority == null) {
			priority = 0;
		}
		var this1 = new haxe_ui_util__$Listener_ListenerInternal(x,priority);
		var listener = this1;
		var _g = 0;
		var _g1 = this._array.length;
		while(_g < _g1) {
			var i = _g++;
			if(this._array[i].priority < priority) {
				this._array.splice(i,0,listener);
				return i;
			}
		}
		return this._array.push(listener);
	}
	,pop: function() {
		return this._array.pop().callback;
	}
	,indexOf: function(x,fromIndex) {
		if(fromIndex == null) {
			fromIndex = 0;
		}
		var _g = fromIndex;
		var _g1 = this._array.length;
		while(_g < _g1) {
			var i = _g++;
			if(this._array[i].callback == x) {
				return i;
			}
		}
		return -1;
	}
	,remove: function(x) {
		var index = this.indexOf(x);
		if(index != -1) {
			this._array.splice(index,1);
		}
		return index != -1;
	}
	,contains: function(x) {
		return this.indexOf(x) != -1;
	}
	,iterator: function() {
		return new haxe_iterators_ArrayIterator(this._array);
	}
	,copy: function() {
		var fa = new haxe_ui_util_FunctionArray();
		fa._array = this._array.slice();
		return fa;
	}
	,toString: function() {
		var s = "[";
		var iter = this.iterator();
		while(iter.hasNext()) {
			s += Std.string(iter.next());
			if(iter.hasNext()) {
				s += ", ";
			}
		}
		s += "]";
		return s;
	}
	,removeAll: function() {
		this._array = [];
	}
	,__class__: haxe_ui_util_FunctionArray
	,__properties__: {get_length:"get_length"}
};
var haxe_ui_util_GUID = function() { };
$hxClasses["haxe.ui.util.GUID"] = haxe_ui_util_GUID;
haxe_ui_util_GUID.__name__ = "haxe.ui.util.GUID";
haxe_ui_util_GUID.randomIntegerWithinRange = function(min,max) {
	return Math.floor(Math.random() * (1 + max - min) + min);
};
haxe_ui_util_GUID.createRandomIdentifier = function(length,radix) {
	if(radix == null) {
		radix = 61;
	}
	var characters = ["0","1","2","3","4","5","6","7","8","9","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z"];
	var id = [];
	if(radix > 61) {
		radix = 61;
	}
	while(length-- > 0) id.push(characters[Math.floor(Math.random() * (1 + radix))]);
	return id.join("");
};
haxe_ui_util_GUID.uuid = function() {
	var specialChars = ["8","9","A","B"];
	return haxe_ui_util_GUID.createRandomIdentifier(8,15) + "-" + haxe_ui_util_GUID.createRandomIdentifier(4,15) + "-4" + haxe_ui_util_GUID.createRandomIdentifier(3,15) + "-" + specialChars[Math.floor(Math.random() * 4)] + haxe_ui_util_GUID.createRandomIdentifier(3,15) + "-" + haxe_ui_util_GUID.createRandomIdentifier(12,15);
};
var haxe_ui_util_Listener = {};
haxe_ui_util_Listener._new = function(callback,priority) {
	var this1 = new haxe_ui_util__$Listener_ListenerInternal(callback,priority);
	return this1;
};
haxe_ui_util_Listener.compareListener = function(a,b) {
	return a.callback == b.callback;
};
haxe_ui_util_Listener.compareFunction = function(a,b) {
	return a.callback == b;
};
haxe_ui_util_Listener.toFunc = function(this1) {
	return this1.callback;
};
var haxe_ui_util__$Listener_ListenerInternal = function(callback,priority) {
	this.callback = callback;
	this.priority = priority;
};
$hxClasses["haxe.ui.util._Listener.ListenerInternal"] = haxe_ui_util__$Listener_ListenerInternal;
haxe_ui_util__$Listener_ListenerInternal.__name__ = "haxe.ui.util._Listener.ListenerInternal";
haxe_ui_util__$Listener_ListenerInternal.prototype = {
	callback: null
	,priority: null
	,__class__: haxe_ui_util__$Listener_ListenerInternal
};
var haxe_ui_util_MathUtil = function() { };
$hxClasses["haxe.ui.util.MathUtil"] = haxe_ui_util_MathUtil;
haxe_ui_util_MathUtil.__name__ = "haxe.ui.util.MathUtil";
haxe_ui_util_MathUtil.distance = function(x1,y1,x2,y2) {
	return Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));
};
haxe_ui_util_MathUtil.round = function(v,precision) {
	if(precision == null) {
		precision = 0;
	}
	return Math.round(v * Math.pow(10,precision)) / Math.pow(10,precision);
};
haxe_ui_util_MathUtil.roundToNearest = function(v,n) {
	var r = v % n;
	if(r <= n / 2) {
		return Math.round(v - r);
	}
	return Math.round(v + n - r);
};
haxe_ui_util_MathUtil.clamp = function(v,min,max) {
	if(v == null || isNaN(v)) {
		return min;
	}
	if(min != null && v < min) {
		v = min;
	} else if(max != null && v > max) {
		v = max;
	}
	return v;
};
haxe_ui_util_MathUtil.min = function(numbers) {
	var r = numbers[0];
	var _g = 0;
	while(_g < numbers.length) {
		var n = numbers[_g];
		++_g;
		if(n < r) {
			r = n;
		}
	}
	return r;
};
haxe_ui_util_MathUtil.max = function(numbers) {
	var r = numbers[0];
	var _g = 0;
	while(_g < numbers.length) {
		var n = numbers[_g];
		++_g;
		if(n > r) {
			r = n;
		}
	}
	return r;
};
haxe_ui_util_MathUtil.wrapCircular = function(v,max) {
	v %= max;
	if(v < 0) {
		v += max;
	}
	return v;
};
var haxe_ui_util_RTTI = function() { };
$hxClasses["haxe.ui.util.RTTI"] = haxe_ui_util_RTTI;
haxe_ui_util_RTTI.__name__ = "haxe.ui.util.RTTI";
haxe_ui_util_RTTI.addClassProperty = function(className,propertyName,propertyType) {
	className = className.toLowerCase();
	propertyName = propertyName.toLowerCase();
	propertyType = propertyType.toLowerCase();
	if(propertyType == "null<bool>") {
		propertyType = "bool";
	}
	if(propertyType == "null<int>") {
		propertyType = "int";
	}
	if(propertyType == "null<float>") {
		propertyType = "float";
	}
	if(haxe_ui_util_RTTI.classInfo == null) {
		haxe_ui_util_RTTI.classInfo = new haxe_ds_StringMap();
	}
	var entry = haxe_ui_util_RTTI.classInfo.h[className];
	if(entry == null) {
		entry = { };
		haxe_ui_util_RTTI.classInfo.h[className] = entry;
	}
	if(entry.properties == null) {
		entry.properties = new haxe_ds_StringMap();
	}
	entry.properties.h[propertyName] = { propertyName : propertyName, propertyType : propertyType};
};
haxe_ui_util_RTTI.setSuperClass = function(className,superClassName) {
	if(haxe_ui_util_RTTI.classInfo == null) {
		haxe_ui_util_RTTI.classInfo = new haxe_ds_StringMap();
	}
	className = className.toLowerCase();
	superClassName = superClassName.toLowerCase();
	if(StringTools.startsWith(superClassName,".")) {
		superClassName = HxOverrides.substr(superClassName,1,null);
	}
	var entry = haxe_ui_util_RTTI.classInfo.h[className];
	if(entry == null) {
		entry = { properties : new haxe_ds_StringMap()};
		haxe_ui_util_RTTI.classInfo.h[className] = entry;
	}
	entry.superClass = superClassName;
};
haxe_ui_util_RTTI.hasSuperClass = function(className,superClassName) {
	haxe_ui_util_RTTI.load();
	className = className.toLowerCase();
	superClassName = superClassName.toLowerCase();
	if(StringTools.startsWith(superClassName,".")) {
		superClassName = HxOverrides.substr(superClassName,1,null);
	}
	var entry = haxe_ui_util_RTTI.classInfo.h[className];
	if(entry == null) {
		return false;
	}
	if(className == superClassName) {
		return true;
	}
	var testSuper = entry.superClass;
	while(testSuper != null) {
		if(testSuper == superClassName) {
			return true;
		}
		entry = haxe_ui_util_RTTI.classInfo.h[testSuper];
		if(entry == null) {
			return false;
		}
		testSuper = entry.superClass;
	}
	return false;
};
haxe_ui_util_RTTI.hasClassProperty = function(className,propertyName) {
	return haxe_ui_util_RTTI.getClassProperty(className,propertyName) != null;
};
haxe_ui_util_RTTI.load = function() {
	if(haxe_ui_util_RTTI.classInfo != null) {
		return;
	}
	var s = haxe_Resource.getString("haxeui_rtti");
	if(s == null) {
		return;
	}
	var unserializer = new haxe_Unserializer(s);
	haxe_ui_util_RTTI.classInfo = unserializer.unserialize();
};
haxe_ui_util_RTTI.getClassInfo = function(className) {
	haxe_ui_util_RTTI.load();
	if(haxe_ui_util_RTTI.classInfo == null) {
		return null;
	}
	className = className.toLowerCase();
	var entry = haxe_ui_util_RTTI.classInfo.h[className];
	return entry;
};
haxe_ui_util_RTTI.getClassProperty = function(className,propertyName) {
	if(className == null || propertyName == null) {
		return null;
	}
	className = className.toLowerCase();
	propertyName = propertyName.toLowerCase();
	var entry = haxe_ui_util_RTTI.getClassInfo(className);
	if(entry == null) {
		return null;
	}
	var propInfo = null;
	if(entry.properties != null && Object.prototype.hasOwnProperty.call(entry.properties.h,propertyName)) {
		propInfo = entry.properties.h[propertyName];
	}
	if(propInfo == null && entry.superClass != null) {
		propInfo = haxe_ui_util_RTTI.getClassProperty(entry.superClass,propertyName);
	}
	return propInfo;
};
haxe_ui_util_RTTI.save = function() {
};
var haxe_ui_util_SimpleExpressionEvaluatorOperation = $hxEnums["haxe.ui.util.SimpleExpressionEvaluatorOperation"] = { __ename__:"haxe.ui.util.SimpleExpressionEvaluatorOperation",__constructs__:null
	,Add: {_hx_name:"Add",_hx_index:0,__enum__:"haxe.ui.util.SimpleExpressionEvaluatorOperation",toString:$estr}
	,Subtract: {_hx_name:"Subtract",_hx_index:1,__enum__:"haxe.ui.util.SimpleExpressionEvaluatorOperation",toString:$estr}
	,Multiply: {_hx_name:"Multiply",_hx_index:2,__enum__:"haxe.ui.util.SimpleExpressionEvaluatorOperation",toString:$estr}
	,Divide: {_hx_name:"Divide",_hx_index:3,__enum__:"haxe.ui.util.SimpleExpressionEvaluatorOperation",toString:$estr}
	,Equals: {_hx_name:"Equals",_hx_index:4,__enum__:"haxe.ui.util.SimpleExpressionEvaluatorOperation",toString:$estr}
	,NotEquals: {_hx_name:"NotEquals",_hx_index:5,__enum__:"haxe.ui.util.SimpleExpressionEvaluatorOperation",toString:$estr}
	,GreaterThan: {_hx_name:"GreaterThan",_hx_index:6,__enum__:"haxe.ui.util.SimpleExpressionEvaluatorOperation",toString:$estr}
	,GreaterThanOrEquals: {_hx_name:"GreaterThanOrEquals",_hx_index:7,__enum__:"haxe.ui.util.SimpleExpressionEvaluatorOperation",toString:$estr}
	,LessThan: {_hx_name:"LessThan",_hx_index:8,__enum__:"haxe.ui.util.SimpleExpressionEvaluatorOperation",toString:$estr}
	,LessThanOrEquals: {_hx_name:"LessThanOrEquals",_hx_index:9,__enum__:"haxe.ui.util.SimpleExpressionEvaluatorOperation",toString:$estr}
	,LogicalAnd: {_hx_name:"LogicalAnd",_hx_index:10,__enum__:"haxe.ui.util.SimpleExpressionEvaluatorOperation",toString:$estr}
	,LogicalOr: {_hx_name:"LogicalOr",_hx_index:11,__enum__:"haxe.ui.util.SimpleExpressionEvaluatorOperation",toString:$estr}
};
haxe_ui_util_SimpleExpressionEvaluatorOperation.__constructs__ = [haxe_ui_util_SimpleExpressionEvaluatorOperation.Add,haxe_ui_util_SimpleExpressionEvaluatorOperation.Subtract,haxe_ui_util_SimpleExpressionEvaluatorOperation.Multiply,haxe_ui_util_SimpleExpressionEvaluatorOperation.Divide,haxe_ui_util_SimpleExpressionEvaluatorOperation.Equals,haxe_ui_util_SimpleExpressionEvaluatorOperation.NotEquals,haxe_ui_util_SimpleExpressionEvaluatorOperation.GreaterThan,haxe_ui_util_SimpleExpressionEvaluatorOperation.GreaterThanOrEquals,haxe_ui_util_SimpleExpressionEvaluatorOperation.LessThan,haxe_ui_util_SimpleExpressionEvaluatorOperation.LessThanOrEquals,haxe_ui_util_SimpleExpressionEvaluatorOperation.LogicalAnd,haxe_ui_util_SimpleExpressionEvaluatorOperation.LogicalOr];
var haxe_ui_util_SimpleExpressionEvaluator = function() { };
$hxClasses["haxe.ui.util.SimpleExpressionEvaluator"] = haxe_ui_util_SimpleExpressionEvaluator;
haxe_ui_util_SimpleExpressionEvaluator.__name__ = "haxe.ui.util.SimpleExpressionEvaluator";
haxe_ui_util_SimpleExpressionEvaluator.evalCondition = function(condition) {
	return haxe_ui_util_SimpleExpressionEvaluator.eval(condition,{ Backend : haxe_ui_Backend, backend : haxe_ui_Backend.get_id(), defined : haxe_ui_util_SimpleExpressionEvaluator.defined});
};
haxe_ui_util_SimpleExpressionEvaluator.defined = function(key) {
	var this1 = haxe_ui_util_Defines.getAll();
	return Object.prototype.hasOwnProperty.call(this1.h,key);
};
haxe_ui_util_SimpleExpressionEvaluator.eval = function(s,context) {
	var r = null;
	if(s.indexOf("||") != -1) {
		var parts = s.split("||");
		var _g = 0;
		while(_g < parts.length) {
			var p = parts[_g];
			++_g;
			if(r == null) {
				r = haxe_ui_util_SimpleExpressionEvaluator.evalSingle(StringTools.trim(p),context);
			} else {
				r = r || haxe_ui_util_SimpleExpressionEvaluator.evalSingle(StringTools.trim(p),context);
			}
		}
	} else if(s.indexOf("&&") != -1) {
		var parts = s.split("&&");
		var _g = 0;
		while(_g < parts.length) {
			var p = parts[_g];
			++_g;
			if(r == null) {
				r = haxe_ui_util_SimpleExpressionEvaluator.evalSingle(StringTools.trim(p),context);
			} else {
				r = r && haxe_ui_util_SimpleExpressionEvaluator.evalSingle(StringTools.trim(p),context);
			}
		}
	} else {
		r = haxe_ui_util_SimpleExpressionEvaluator.evalSingle(s,context);
	}
	return r;
};
haxe_ui_util_SimpleExpressionEvaluator.evalSingle = function(s,context) {
	var result = null;
	var operation = null;
	var token = "";
	var inString = false;
	var _g = 0;
	var _g1 = s.length;
	while(_g < _g1) {
		var i = _g++;
		var ch = s.charAt(i);
		var next = s.charAt(i + 1);
		if(ch == "'" || ch == "\"") {
			inString = !inString;
		}
		if(inString == false) {
			if(ch == "+") {
				operation = haxe_ui_util_SimpleExpressionEvaluatorOperation.Add;
				s = HxOverrides.substr(s,i + 1,null);
				break;
			} else if(ch == "-") {
				operation = haxe_ui_util_SimpleExpressionEvaluatorOperation.Subtract;
				s = HxOverrides.substr(s,i + 1,null);
				break;
			} else if(ch == "*") {
				operation = haxe_ui_util_SimpleExpressionEvaluatorOperation.Multiply;
				s = HxOverrides.substr(s,i + 1,null);
				break;
			} else if(ch == "/") {
				operation = haxe_ui_util_SimpleExpressionEvaluatorOperation.Divide;
				s = HxOverrides.substr(s,i + 1,null);
				break;
			} else if(ch == ">" && next != "=") {
				operation = haxe_ui_util_SimpleExpressionEvaluatorOperation.GreaterThan;
				s = HxOverrides.substr(s,i + 1,null);
				break;
			} else if(ch == "<" && next != "=") {
				operation = haxe_ui_util_SimpleExpressionEvaluatorOperation.LessThan;
				s = HxOverrides.substr(s,i + 1,null);
				break;
			} else if(ch == "=" && next == "=") {
				operation = haxe_ui_util_SimpleExpressionEvaluatorOperation.Equals;
				s = HxOverrides.substr(s,i + 2,null);
				break;
			} else if(ch == "!" && next == "=") {
				operation = haxe_ui_util_SimpleExpressionEvaluatorOperation.NotEquals;
				s = HxOverrides.substr(s,i + 2,null);
				break;
			} else if(ch == ">" && next == "=") {
				operation = haxe_ui_util_SimpleExpressionEvaluatorOperation.GreaterThanOrEquals;
				s = HxOverrides.substr(s,i + 2,null);
				break;
			} else if(ch == "<" && next == "=") {
				operation = haxe_ui_util_SimpleExpressionEvaluatorOperation.LessThanOrEquals;
				s = HxOverrides.substr(s,i + 2,null);
				break;
			} else if(ch == "&" && next == "&") {
				operation = haxe_ui_util_SimpleExpressionEvaluatorOperation.LogicalAnd;
				s = HxOverrides.substr(s,i + 2,null);
				break;
			} else if(ch == "|" && next == "|") {
				operation = haxe_ui_util_SimpleExpressionEvaluatorOperation.LogicalOr;
				s = HxOverrides.substr(s,i + 2,null);
				break;
			}
		}
		token += ch;
		if(i == s.length - 1) {
			s = "";
			break;
		}
	}
	var r = null;
	if(s.length > 0) {
		r = haxe_ui_util_SimpleExpressionEvaluator.evalSingle(s,context);
	}
	var trimmedToken = StringTools.trim(token);
	var v = parseFloat(trimmedToken);
	if(!isNaN(v) && isFinite(v)) {
		result = parseFloat(trimmedToken);
	} else {
		var value = trimmedToken;
		value = value.toLowerCase();
		if(value == "true" || value == "false") {
			result = trimmedToken.toLowerCase() == "true";
		} else if(StringTools.startsWith(trimmedToken,"'") && StringTools.endsWith(trimmedToken,"'") ? true : StringTools.startsWith(trimmedToken,"\"") && StringTools.endsWith(trimmedToken,"\"")) {
			result = HxOverrides.substr(trimmedToken,1,trimmedToken.length - 2);
		} else {
			var token = "";
			var bracketsOpen = 0;
			var call = null;
			var callParams = null;
			var _g = 0;
			var _g1 = trimmedToken.length;
			while(_g < _g1) {
				var i = _g++;
				var ch = trimmedToken.charAt(i);
				if(ch == "(") {
					++bracketsOpen;
					if(bracketsOpen == 1) {
						call = token;
						token = "";
					} else {
						token += ch;
					}
				} else if(ch == ")") {
					--bracketsOpen;
					if(bracketsOpen == 0) {
						callParams = token;
					} else {
						token += ")";
					}
				} else {
					token += ch;
				}
			}
			var prop = null;
			if(call == null) {
				prop = token;
			}
			var parsedCallParams = [];
			if(callParams != null) {
				bracketsOpen = 0;
				token = "";
				var _g = 0;
				var _g1 = callParams.length;
				while(_g < _g1) {
					var i = _g++;
					var ch = callParams.charAt(i);
					if(ch == "(") {
						++bracketsOpen;
					} else if(ch == ")") {
						--bracketsOpen;
					}
					if(ch == ",") {
						if(bracketsOpen == 0) {
							parsedCallParams.push(token);
							token = "";
						} else {
							token += ch;
						}
					} else {
						token += ch;
					}
				}
				if(token.length != 0) {
					parsedCallParams.push(token);
				}
			}
			if(call != null) {
				var trimmedCall = StringTools.trim(call);
				if(trimmedCall.length > 0) {
					var callParts = trimmedCall.split(".");
					var ref = context;
					var prevRef = null;
					var _g = 0;
					while(_g < callParts.length) {
						var callPart = callParts[_g];
						++_g;
						prevRef = ref;
						if(Object.prototype.hasOwnProperty.call(ref,callPart)) {
							ref = Reflect.field(ref,callPart);
						} else {
							ref = Reflect.getProperty(ref,callPart);
						}
						if(ref == null) {
							throw haxe_Exception.thrown(callPart + " not found");
						}
					}
					if(ref != null && Reflect.isFunction(ref)) {
						var paramValues = [];
						var _g = 0;
						while(_g < parsedCallParams.length) {
							var param = parsedCallParams[_g];
							++_g;
							var paramResult = haxe_ui_util_SimpleExpressionEvaluator.evalSingle(param,context);
							paramValues.push(paramResult);
						}
						result = ref.apply(prevRef,paramValues);
					}
				}
			} else if(prop != null) {
				var trimmedProp = StringTools.trim(prop);
				if(trimmedProp.length > 0) {
					var propParts = trimmedProp.split(".");
					var propName = propParts.pop();
					var ref = context;
					var _g = 0;
					while(_g < propParts.length) {
						var propPart = propParts[_g];
						++_g;
						ref = Reflect.field(ref,propPart);
					}
					if(Object.prototype.hasOwnProperty.call(ref,propName)) {
						result = Reflect.field(ref,propName);
					} else {
						result = Reflect.getProperty(ref,propName);
					}
				}
			}
		}
	}
	if(r != null) {
		switch(operation._hx_index) {
		case 0:
			result += r;
			break;
		case 1:
			result -= r;
			break;
		case 2:
			result *= r;
			break;
		case 3:
			result /= r;
			break;
		case 4:
			result = result == r;
			break;
		case 5:
			result = result != r;
			break;
		case 6:
			result = result > r;
			break;
		case 7:
			result = result >= r;
			break;
		case 8:
			result = result < r;
			break;
		case 9:
			result = result <= r;
			break;
		case 10:
			result = result && r;
			break;
		case 11:
			result = result || r;
			break;
		}
	}
	return result;
};
haxe_ui_util_SimpleExpressionEvaluator.isNum = function(value) {
	var v = parseFloat(value);
	if(!isNaN(v)) {
		return isFinite(v);
	} else {
		return false;
	}
};
haxe_ui_util_SimpleExpressionEvaluator.isString = function(value) {
	if(StringTools.startsWith(value,"'") && StringTools.endsWith(value,"'")) {
		return true;
	}
	if(StringTools.startsWith(value,"\"") && StringTools.endsWith(value,"\"")) {
		return true;
	}
	return false;
};
haxe_ui_util_SimpleExpressionEvaluator.isBool = function(value) {
	value = value.toLowerCase();
	if(value != "true") {
		return value == "false";
	} else {
		return true;
	}
};
var haxe_ui_util_StringUtil = function() { };
$hxClasses["haxe.ui.util.StringUtil"] = haxe_ui_util_StringUtil;
haxe_ui_util_StringUtil.__name__ = "haxe.ui.util.StringUtil";
haxe_ui_util_StringUtil.uncapitalizeFirstLetter = function(s) {
	s = HxOverrides.substr(s,0,1).toLowerCase() + HxOverrides.substr(s,1,s.length);
	return s;
};
haxe_ui_util_StringUtil.capitalizeFirstLetter = function(s) {
	s = HxOverrides.substr(s,0,1).toUpperCase() + HxOverrides.substr(s,1,s.length);
	return s;
};
haxe_ui_util_StringUtil.capitalizeHyphens = function(s) {
	return haxe_ui_util_StringUtil.capitalizeDelim(s,"-");
};
haxe_ui_util_StringUtil.capitalizeDelim = function(s,d) {
	var r = s;
	var n = r.indexOf(d);
	while(n != -1) {
		var before = HxOverrides.substr(r,0,n);
		var after = HxOverrides.substr(r,n + 1,r.length);
		r = before + haxe_ui_util_StringUtil.capitalizeFirstLetter(after);
		n = r.indexOf(d,n + 1);
	}
	return r;
};
haxe_ui_util_StringUtil.toDashes = function(s,toLower) {
	if(toLower == null) {
		toLower = true;
	}
	var s1 = new EReg("([a-zA-Z])(?=[A-Z])","g").map(s,function(re) {
		return "" + re.matched(1) + "-";
	});
	if(toLower == true) {
		s1 = s1.toLowerCase();
	}
	return s1;
};
haxe_ui_util_StringUtil.replaceVars = function(s,params) {
	if(params != null) {
		var h = params.h;
		var k_h = h;
		var k_keys = Object.keys(h);
		var k_length = k_keys.length;
		var k_current = 0;
		while(k_current < k_length) {
			var k = k_keys[k_current++];
			s = StringTools.replace(s,"${" + k + "}",params.h[k]);
		}
	}
	return s;
};
haxe_ui_util_StringUtil.rpad = function(s,count,c) {
	if(c == null) {
		c = " ";
	}
	var _g = 0;
	var _g1 = count;
	while(_g < _g1) {
		var i = _g++;
		s += c;
	}
	return s;
};
haxe_ui_util_StringUtil.padDecimal = function(v,precision) {
	var s = v == null ? "null" : "" + v;
	if(precision == null || precision <= 0) {
		return s;
	}
	var n = s.indexOf(".");
	if(n == -1) {
		n = s.length;
		s += ".";
	}
	var delta = precision - (s.length - n - 1);
	return haxe_ui_util_StringUtil.rpad(s,delta,"0");
};
haxe_ui_util_StringUtil.countTokens = function(s,token) {
	if(s == null || s == "") {
		return 0;
	}
	return s.split(token).length - 1;
};
var haxe_ui_util_StyleUtil = function() { };
$hxClasses["haxe.ui.util.StyleUtil"] = haxe_ui_util_StyleUtil;
haxe_ui_util_StyleUtil.__name__ = "haxe.ui.util.StyleUtil";
haxe_ui_util_StyleUtil.styleProperty2ComponentProperty = function(property) {
	return haxe_ui_util_StyleUtil.style2ComponentEReg.map(property,function(re) {
		return re.matched(1).toUpperCase();
	});
};
haxe_ui_util_StyleUtil.componentProperty2StyleProperty = function(property) {
	return haxe_ui_util_StyleUtil.component2StyleEReg.map(property,function(re) {
		return "-" + re.matched(1).toLowerCase();
	});
};
var haxe_ui_util_Timer = function(delay,callback) {
	haxe_ui_backend_TimerImpl.call(this,delay,callback);
};
$hxClasses["haxe.ui.util.Timer"] = haxe_ui_util_Timer;
haxe_ui_util_Timer.__name__ = "haxe.ui.util.Timer";
haxe_ui_util_Timer.delay = function(f,timeMs) {
	var t = null;
	t = new haxe_ui_util_Timer(timeMs,function() {
		t.stop();
		f();
	});
	return t;
};
haxe_ui_util_Timer.__super__ = haxe_ui_backend_TimerImpl;
haxe_ui_util_Timer.prototype = $extend(haxe_ui_backend_TimerImpl.prototype,{
	stop: function() {
		haxe_ui_backend_TimerImpl.prototype.stop.call(this);
	}
	,__class__: haxe_ui_util_Timer
});
var haxe_ui_util_TypeConverter = function() { };
$hxClasses["haxe.ui.util.TypeConverter"] = haxe_ui_util_TypeConverter;
haxe_ui_util_TypeConverter.__name__ = "haxe.ui.util.TypeConverter";
haxe_ui_util_TypeConverter.convertFrom = function(input) {
	var output = input;
	var _g = Type.typeof(input);
	if(_g._hx_index == 6) {
		if(_g.c == String) {
			var s = Std.string(input);
			if(s == "true" || s == "false") {
				output = s == "true";
			} else if(new EReg("^-?[0-9]*$","i").match(s == null ? "null" : "" + s)) {
				output = Std.parseInt(s);
			} else if(new EReg("^-?[0-9]*\\.[0-9]*$","i").match(s == null ? "null" : "" + s)) {
				output = parseFloat(s);
			}
		}
	}
	return output;
};
haxe_ui_util_TypeConverter.convertTo = function(input,type) {
	if(type == null) {
		return input;
	}
	switch(type.toLowerCase()) {
	case "bool":
		return Std.string(input) == "true";
	case "float":
		if(input == null) {
			return 0;
		}
		var r = parseFloat(Std.string(input));
		if(isNaN(r)) {
			return 0;
		}
		return r;
	case "int":
		if(input == null) {
			return 0;
		}
		var r = Std.parseInt(Std.string(input));
		if(r == null) {
			return 0;
		}
		return r;
	case "dynamic":case "scalemode":case "selectionmode":case "variant":
		return input;
	case "string":
		return Std.string(input);
	default:
		haxe_Log.trace("dont know how to convert from type '" + type + "', returning input",{ fileName : "haxe/ui/util/TypeConverter.hx", lineNumber : 56, className : "haxe.ui.util.TypeConverter", methodName : "convertTo"});
	}
	return input;
};
var haxe_ui_util_VariantType = $hxEnums["haxe.ui.util.VariantType"] = { __ename__:"haxe.ui.util.VariantType",__constructs__:null
	,VT_Int: ($_=function(s) { return {_hx_index:0,s:s,__enum__:"haxe.ui.util.VariantType",toString:$estr}; },$_._hx_name="VT_Int",$_.__params__ = ["s"],$_)
	,VT_Float: ($_=function(s) { return {_hx_index:1,s:s,__enum__:"haxe.ui.util.VariantType",toString:$estr}; },$_._hx_name="VT_Float",$_.__params__ = ["s"],$_)
	,VT_String: ($_=function(s) { return {_hx_index:2,s:s,__enum__:"haxe.ui.util.VariantType",toString:$estr}; },$_._hx_name="VT_String",$_.__params__ = ["s"],$_)
	,VT_Bool: ($_=function(s) { return {_hx_index:3,s:s,__enum__:"haxe.ui.util.VariantType",toString:$estr}; },$_._hx_name="VT_Bool",$_.__params__ = ["s"],$_)
	,VT_Array: ($_=function(s) { return {_hx_index:4,s:s,__enum__:"haxe.ui.util.VariantType",toString:$estr}; },$_._hx_name="VT_Array",$_.__params__ = ["s"],$_)
	,VT_DataSource: ($_=function(s) { return {_hx_index:5,s:s,__enum__:"haxe.ui.util.VariantType",toString:$estr}; },$_._hx_name="VT_DataSource",$_.__params__ = ["s"],$_)
	,VT_Component: ($_=function(s) { return {_hx_index:6,s:s,__enum__:"haxe.ui.util.VariantType",toString:$estr}; },$_._hx_name="VT_Component",$_.__params__ = ["s"],$_)
	,VT_Date: ($_=function(s) { return {_hx_index:7,s:s,__enum__:"haxe.ui.util.VariantType",toString:$estr}; },$_._hx_name="VT_Date",$_.__params__ = ["s"],$_)
	,VT_ImageData: ($_=function(s) { return {_hx_index:8,s:s,__enum__:"haxe.ui.util.VariantType",toString:$estr}; },$_._hx_name="VT_ImageData",$_.__params__ = ["s"],$_)
};
haxe_ui_util_VariantType.__constructs__ = [haxe_ui_util_VariantType.VT_Int,haxe_ui_util_VariantType.VT_Float,haxe_ui_util_VariantType.VT_String,haxe_ui_util_VariantType.VT_Bool,haxe_ui_util_VariantType.VT_Array,haxe_ui_util_VariantType.VT_DataSource,haxe_ui_util_VariantType.VT_Component,haxe_ui_util_VariantType.VT_Date,haxe_ui_util_VariantType.VT_ImageData];
var haxe_ui_util_Variant = {};
haxe_ui_util_Variant.__properties__ = {get_isNull:"get_isNull",get_isDataSource:"get_isDataSource",get_isImageData:"get_isImageData",get_isComponent:"get_isComponent",get_isDate:"get_isDate",get_isArray:"get_isArray",get_isBool:"get_isBool",get_isNumber:"get_isNumber",get_isInt:"get_isInt",get_isFloat:"get_isFloat",get_isString:"get_isString"};
haxe_ui_util_Variant.fromString = function(s) {
	return haxe_ui_util_VariantType.VT_String(s);
};
haxe_ui_util_Variant.toString = function(this1) {
	if(this1 == null) {
		return null;
	}
	switch(this1._hx_index) {
	case 0:
		var s = this1.s;
		if(s == null) {
			return "null";
		} else {
			return "" + s;
		}
		break;
	case 1:
		var s = this1.s;
		if(s == null) {
			return "null";
		} else {
			return "" + s;
		}
		break;
	case 2:
		var s = this1.s;
		return s;
	case 3:
		var s = this1.s;
		if(s == null) {
			return "null";
		} else {
			return "" + s;
		}
		break;
	case 4:
		var s = this1.s;
		return Std.string(s);
	case 5:
		var s = this1.s;
		if(s == null) {
			return null;
		} else {
			return "";
		}
		break;
	case 6:
		var s = this1.s;
		if(s == null) {
			return null;
		} else {
			return "";
		}
		break;
	case 7:
		var s = this1.s;
		return Std.string(s);
	case 8:
		var s = this1.s;
		if(s == null) {
			return null;
		} else {
			return "";
		}
		break;
	}
};
haxe_ui_util_Variant.get_isString = function(this1) {
	if(this1._hx_index == 2) {
		var _g = this1.s;
		return true;
	} else {
		return false;
	}
};
haxe_ui_util_Variant.fromFloat = function(s) {
	return haxe_ui_util_VariantType.VT_Float(s);
};
haxe_ui_util_Variant.toFloat = function(this1) {
	if(haxe_ui_util_Variant.get_isNull(this1)) {
		return null;
	}
	switch(this1._hx_index) {
	case 0:
		var s = this1.s;
		return s;
	case 1:
		var s = this1.s;
		return s;
	default:
		throw haxe_Exception.thrown("Variant Type Error (" + Std.string(this1) + ")");
	}
};
haxe_ui_util_Variant.get_isFloat = function(this1) {
	if(this1._hx_index == 1) {
		var _g = this1.s;
		return true;
	} else {
		return false;
	}
};
haxe_ui_util_Variant.fromInt = function(s) {
	return haxe_ui_util_VariantType.VT_Int(s);
};
haxe_ui_util_Variant.toInt = function(this1) {
	if(haxe_ui_util_Variant.get_isNull(this1)) {
		return null;
	}
	switch(this1._hx_index) {
	case 0:
		var s = this1.s;
		return s;
	case 1:
		var s = this1.s;
		return s | 0;
	default:
		throw haxe_Exception.thrown("Variant Type Error (" + Std.string(this1) + ")");
	}
};
haxe_ui_util_Variant.get_isInt = function(this1) {
	if(this1._hx_index == 0) {
		var _g = this1.s;
		return true;
	} else {
		return false;
	}
};
haxe_ui_util_Variant.get_isNumber = function(this1) {
	switch(this1._hx_index) {
	case 0:
		var _g = this1.s;
		return true;
	case 1:
		var _g = this1.s;
		return true;
	default:
		return false;
	}
};
haxe_ui_util_Variant.toNumber = function(this1) {
	switch(this1._hx_index) {
	case 0:
		var s = this1.s;
		return s;
	case 1:
		var s = this1.s;
		return s;
	default:
		throw haxe_Exception.thrown("Variant Type Error (" + Std.string(this1) + ")");
	}
};
haxe_ui_util_Variant.fromBool = function(s) {
	return haxe_ui_util_VariantType.VT_Bool(s);
};
haxe_ui_util_Variant.toBool = function(this1) {
	if(this1 == null) {
		return false;
	}
	switch(this1._hx_index) {
	case 2:
		var s = this1.s;
		return s == "true";
	case 3:
		var s = this1.s;
		return s;
	default:
		throw haxe_Exception.thrown("Variant Type Error (" + Std.string(this1) + ")");
	}
};
haxe_ui_util_Variant.get_isBool = function(this1) {
	if(this1._hx_index == 3) {
		var _g = this1.s;
		return true;
	}
	return false;
};
haxe_ui_util_Variant.fromArray = function(s) {
	if(s == null) {
		return null;
	} else {
		return haxe_ui_util_VariantType.VT_Array(s);
	}
};
haxe_ui_util_Variant.toArray = function(this1) {
	if(this1 == null) {
		return null;
	}
	if(this1._hx_index == 4) {
		var s = this1.s;
		return s;
	} else {
		throw haxe_Exception.thrown("Variant Type Error (" + Std.string(this1) + ")");
	}
};
haxe_ui_util_Variant.get_isArray = function(this1) {
	if(this1._hx_index == 4) {
		var _g = this1.s;
		return true;
	}
	return false;
};
haxe_ui_util_Variant.fromDate = function(s) {
	return haxe_ui_util_VariantType.VT_Date(s);
};
haxe_ui_util_Variant.toDate = function(this1) {
	if(this1 == null) {
		return null;
	}
	if(this1._hx_index == 7) {
		var s = this1.s;
		return s;
	} else {
		throw haxe_Exception.thrown("Variant Type Error (" + Std.string(this1) + ")");
	}
};
haxe_ui_util_Variant.get_isDate = function(this1) {
	if(this1._hx_index == 7) {
		var _g = this1.s;
		return true;
	}
	return false;
};
haxe_ui_util_Variant.fromComponent = function(s) {
	return haxe_ui_util_VariantType.VT_Component(s);
};
haxe_ui_util_Variant.toComponent = function(this1) {
	if(this1 == null) {
		return null;
	}
	if(this1._hx_index == 6) {
		var s = this1.s;
		return s;
	} else {
		throw haxe_Exception.thrown("Variant Type Error (" + Std.string(this1) + ")");
	}
};
haxe_ui_util_Variant.get_isComponent = function(this1) {
	if(this1._hx_index == 6) {
		var _g = this1.s;
		return true;
	}
	return false;
};
haxe_ui_util_Variant.fromImageData = function(s) {
	return haxe_ui_util_VariantType.VT_ImageData(s);
};
haxe_ui_util_Variant.toImageData = function(this1) {
	if(this1 == null) {
		return null;
	}
	if(this1._hx_index == 8) {
		var s = this1.s;
		return s;
	} else {
		throw haxe_Exception.thrown("Variant Type Error (" + Std.string(this1) + ")");
	}
};
haxe_ui_util_Variant.get_isImageData = function(this1) {
	if(this1._hx_index == 8) {
		var _g = this1.s;
		return true;
	}
	return false;
};
haxe_ui_util_Variant.fromDataSource = function(s) {
	return haxe_ui_util_VariantType.VT_DataSource(s);
};
haxe_ui_util_Variant.toDataSource = function(this1) {
	if(this1 == null) {
		return null;
	}
	if(this1._hx_index == 5) {
		var s = this1.s;
		return s;
	} else {
		throw haxe_Exception.thrown("Variant Type Error (" + Std.string(this1) + ")");
	}
};
haxe_ui_util_Variant.get_isDataSource = function(this1) {
	if(this1._hx_index == 5) {
		var _g = this1.s;
		return true;
	}
	return false;
};
haxe_ui_util_Variant.addFloat = function(lhs,rhs) {
	return lhs + haxe_ui_util_Variant.toNumber(rhs);
};
haxe_ui_util_Variant.addInt = function(lhs,rhs) {
	return lhs + haxe_ui_util_Variant.toInt(rhs);
};
haxe_ui_util_Variant.subtractFloat = function(lhs,rhs) {
	return lhs - haxe_ui_util_Variant.toNumber(rhs);
};
haxe_ui_util_Variant.subtractInt = function(lhs,rhs) {
	return lhs - haxe_ui_util_Variant.toInt(rhs);
};
haxe_ui_util_Variant.add = function(this1,rhs) {
	var tmp;
	var tmp1;
	switch(this1._hx_index) {
	case 0:
		var _g = this1.s;
		tmp1 = true;
		break;
	case 1:
		var _g = this1.s;
		tmp1 = true;
		break;
	default:
		tmp1 = false;
	}
	if(tmp1) {
		switch(rhs._hx_index) {
		case 0:
			var _g = rhs.s;
			tmp = true;
			break;
		case 1:
			var _g = rhs.s;
			tmp = true;
			break;
		default:
			tmp = false;
		}
	} else {
		tmp = false;
	}
	if(tmp) {
		return haxe_ui_util_Variant.fromFloat(haxe_ui_util_Variant.toNumber(this1) + haxe_ui_util_Variant.toNumber(rhs));
	} else if(haxe_ui_util_Variant.get_isString(this1) && haxe_ui_util_Variant.get_isString(rhs)) {
		return haxe_ui_util_Variant.fromString(haxe_ui_util_Variant.toString(this1) + haxe_ui_util_Variant.toString(rhs));
	}
	throw haxe_Exception.thrown("Variant operation error");
};
haxe_ui_util_Variant.postInc = function(this1) {
	var tmp;
	switch(this1._hx_index) {
	case 0:
		var _g = this1.s;
		tmp = true;
		break;
	case 1:
		var _g = this1.s;
		tmp = true;
		break;
	default:
		tmp = false;
	}
	if(tmp) {
		var old = this1;
		this1 = haxe_ui_util_VariantType.VT_Float(haxe_ui_util_Variant.toNumber(this1) + 1);
		return old;
	} else {
		throw haxe_Exception.thrown("Variant operation error");
	}
};
haxe_ui_util_Variant.preInc = function(this1) {
	var tmp;
	switch(this1._hx_index) {
	case 0:
		var _g = this1.s;
		tmp = true;
		break;
	case 1:
		var _g = this1.s;
		tmp = true;
		break;
	default:
		tmp = false;
	}
	if(tmp) {
		this1 = haxe_ui_util_VariantType.VT_Float(haxe_ui_util_Variant.toNumber(this1) + 1);
		return this1;
	} else {
		throw haxe_Exception.thrown("Variant operation error");
	}
};
haxe_ui_util_Variant.subtract = function(this1,rhs) {
	var tmp;
	var tmp1;
	switch(this1._hx_index) {
	case 0:
		var _g = this1.s;
		tmp1 = true;
		break;
	case 1:
		var _g = this1.s;
		tmp1 = true;
		break;
	default:
		tmp1 = false;
	}
	if(tmp1) {
		switch(rhs._hx_index) {
		case 0:
			var _g = rhs.s;
			tmp = true;
			break;
		case 1:
			var _g = rhs.s;
			tmp = true;
			break;
		default:
			tmp = false;
		}
	} else {
		tmp = false;
	}
	if(tmp) {
		return haxe_ui_util_Variant.fromFloat(haxe_ui_util_Variant.toNumber(this1) - haxe_ui_util_Variant.toNumber(rhs));
	} else if(haxe_ui_util_Variant.get_isString(this1) && haxe_ui_util_Variant.get_isString(rhs)) {
		return haxe_ui_util_Variant.fromString(StringTools.replace(haxe_ui_util_Variant.toString(this1),haxe_ui_util_Variant.toString(rhs),""));
	}
	throw haxe_Exception.thrown("Variant operation error");
};
haxe_ui_util_Variant.postDeinc = function(this1) {
	var tmp;
	switch(this1._hx_index) {
	case 0:
		var _g = this1.s;
		tmp = true;
		break;
	case 1:
		var _g = this1.s;
		tmp = true;
		break;
	default:
		tmp = false;
	}
	if(tmp) {
		var old = this1;
		this1 = haxe_ui_util_VariantType.VT_Float(haxe_ui_util_Variant.toNumber(this1) - 1);
		return old;
	} else {
		throw haxe_Exception.thrown("Variant operation error");
	}
};
haxe_ui_util_Variant.preDeinc = function(this1) {
	var tmp;
	switch(this1._hx_index) {
	case 0:
		var _g = this1.s;
		tmp = true;
		break;
	case 1:
		var _g = this1.s;
		tmp = true;
		break;
	default:
		tmp = false;
	}
	if(tmp) {
		this1 = haxe_ui_util_VariantType.VT_Float(haxe_ui_util_Variant.toNumber(this1) - 1);
		return this1;
	} else {
		throw haxe_Exception.thrown("Variant operation error");
	}
};
haxe_ui_util_Variant.multiply = function(this1,rhs) {
	var tmp;
	var tmp1;
	switch(this1._hx_index) {
	case 0:
		var _g = this1.s;
		tmp1 = true;
		break;
	case 1:
		var _g = this1.s;
		tmp1 = true;
		break;
	default:
		tmp1 = false;
	}
	if(tmp1) {
		switch(rhs._hx_index) {
		case 0:
			var _g = rhs.s;
			tmp = true;
			break;
		case 1:
			var _g = rhs.s;
			tmp = true;
			break;
		default:
			tmp = false;
		}
	} else {
		tmp = false;
	}
	if(tmp) {
		return haxe_ui_util_Variant.fromFloat(haxe_ui_util_Variant.toNumber(this1) * haxe_ui_util_Variant.toNumber(rhs));
	}
	throw haxe_Exception.thrown("Variant operation error");
};
haxe_ui_util_Variant.divide = function(this1,rhs) {
	var tmp;
	var tmp1;
	switch(this1._hx_index) {
	case 0:
		var _g = this1.s;
		tmp1 = true;
		break;
	case 1:
		var _g = this1.s;
		tmp1 = true;
		break;
	default:
		tmp1 = false;
	}
	if(tmp1) {
		switch(rhs._hx_index) {
		case 0:
			var _g = rhs.s;
			tmp = true;
			break;
		case 1:
			var _g = rhs.s;
			tmp = true;
			break;
		default:
			tmp = false;
		}
	} else {
		tmp = false;
	}
	if(tmp) {
		return haxe_ui_util_Variant.fromFloat(haxe_ui_util_Variant.toNumber(this1) / haxe_ui_util_Variant.toNumber(rhs));
	}
	throw haxe_Exception.thrown("Variant operation error");
};
haxe_ui_util_Variant.gt = function(this1,rhs) {
	var tmp;
	switch(this1._hx_index) {
	case 0:
		var _g = this1.s;
		tmp = true;
		break;
	case 1:
		var _g = this1.s;
		tmp = true;
		break;
	default:
		tmp = false;
	}
	if(tmp) {
		return haxe_ui_util_Variant.toNumber(this1) > haxe_ui_util_Variant.toNumber(rhs);
	} else if(haxe_ui_util_Variant.get_isString(this1)) {
		return haxe_ui_util_Variant.toString(this1) > haxe_ui_util_Variant.toString(rhs);
	}
	throw haxe_Exception.thrown("Variant operation error");
};
haxe_ui_util_Variant.gte = function(this1,rhs) {
	var tmp;
	switch(this1._hx_index) {
	case 0:
		var _g = this1.s;
		tmp = true;
		break;
	case 1:
		var _g = this1.s;
		tmp = true;
		break;
	default:
		tmp = false;
	}
	if(tmp) {
		return haxe_ui_util_Variant.toNumber(this1) >= haxe_ui_util_Variant.toNumber(rhs);
	} else if(haxe_ui_util_Variant.get_isString(this1)) {
		return haxe_ui_util_Variant.toString(this1) >= haxe_ui_util_Variant.toString(rhs);
	}
	throw haxe_Exception.thrown("Variant operation error");
};
haxe_ui_util_Variant.lt = function(this1,rhs) {
	var tmp;
	switch(this1._hx_index) {
	case 0:
		var _g = this1.s;
		tmp = true;
		break;
	case 1:
		var _g = this1.s;
		tmp = true;
		break;
	default:
		tmp = false;
	}
	if(tmp) {
		return haxe_ui_util_Variant.toNumber(this1) < haxe_ui_util_Variant.toNumber(rhs);
	} else if(haxe_ui_util_Variant.get_isString(this1)) {
		return haxe_ui_util_Variant.toString(this1) < haxe_ui_util_Variant.toString(rhs);
	}
	throw haxe_Exception.thrown("Variant operation error");
};
haxe_ui_util_Variant.lte = function(this1,rhs) {
	var tmp;
	switch(this1._hx_index) {
	case 0:
		var _g = this1.s;
		tmp = true;
		break;
	case 1:
		var _g = this1.s;
		tmp = true;
		break;
	default:
		tmp = false;
	}
	if(tmp) {
		return haxe_ui_util_Variant.toNumber(this1) <= haxe_ui_util_Variant.toNumber(rhs);
	} else if(haxe_ui_util_Variant.get_isString(this1)) {
		return haxe_ui_util_Variant.toString(this1) <= haxe_ui_util_Variant.toString(rhs);
	}
	throw haxe_Exception.thrown("Variant operation error");
};
haxe_ui_util_Variant.negate = function(this1) {
	var tmp;
	switch(this1._hx_index) {
	case 0:
		var _g = this1.s;
		tmp = true;
		break;
	case 1:
		var _g = this1.s;
		tmp = true;
		break;
	default:
		tmp = false;
	}
	if(tmp) {
		return haxe_ui_util_Variant.fromFloat(-haxe_ui_util_Variant.toNumber(this1));
	}
	throw haxe_Exception.thrown("Variant operation error");
};
haxe_ui_util_Variant.invert = function(this1) {
	if(haxe_ui_util_Variant.get_isBool(this1)) {
		var v = haxe_ui_util_Variant.toBool(this1);
		v = !v;
		return haxe_ui_util_Variant.fromBool(v);
	}
	throw haxe_Exception.thrown("Variant operation error");
};
haxe_ui_util_Variant.eq = function(this1,rhs) {
	if(haxe_ui_util_Variant.get_isNull(this1) && haxe_ui_util_Variant.get_isNull(rhs)) {
		return true;
	}
	if(haxe_ui_util_Variant.get_isNull(this1) && !haxe_ui_util_Variant.get_isNull(rhs)) {
		return false;
	}
	if(!haxe_ui_util_Variant.get_isNull(this1) && haxe_ui_util_Variant.get_isNull(rhs)) {
		return false;
	}
	var tmp;
	var tmp1;
	switch(this1._hx_index) {
	case 0:
		var _g = this1.s;
		tmp1 = true;
		break;
	case 1:
		var _g = this1.s;
		tmp1 = true;
		break;
	default:
		tmp1 = false;
	}
	if(tmp1) {
		switch(rhs._hx_index) {
		case 0:
			var _g = rhs.s;
			tmp = true;
			break;
		case 1:
			var _g = rhs.s;
			tmp = true;
			break;
		default:
			tmp = false;
		}
	} else {
		tmp = false;
	}
	if(tmp) {
		return haxe_ui_util_Variant.toNumber(this1) == haxe_ui_util_Variant.toNumber(rhs);
	} else if(haxe_ui_util_Variant.get_isBool(this1) && haxe_ui_util_Variant.get_isBool(rhs)) {
		return haxe_ui_util_Variant.toBool(this1) == haxe_ui_util_Variant.toBool(rhs);
	} else if(haxe_ui_util_Variant.get_isString(this1) && haxe_ui_util_Variant.get_isString(rhs)) {
		return haxe_ui_util_Variant.toString(this1) == haxe_ui_util_Variant.toString(rhs);
	}
	return false;
};
haxe_ui_util_Variant.neq = function(this1,rhs) {
	return !haxe_ui_util_Variant.eq(this1,rhs);
};
haxe_ui_util_Variant.get_isNull = function(this1) {
	if(this1 == null) {
		return true;
	}
	return haxe_ui_util_Variant.toString(this1) == null;
};
haxe_ui_util_Variant.fromDynamic = function(r) {
	var v = null;
	if(r != null) {
		var unstringable = ((r) instanceof haxe_ui_core_Component) || ((r) instanceof HTMLImageElement) || ((r) instanceof Array) || ((r) instanceof haxe_ui_data_DataSource);
		if(unstringable == false) {
			var tmp;
			if(haxe_ui_util_Variant.containsOnlyDigits(r)) {
				var f = parseFloat(("" + Std.string(r)));
				tmp = isNaN(f) == false;
			} else {
				tmp = false;
			}
			if(tmp) {
				if(Std.string(r).indexOf(".") != -1) {
					v = haxe_ui_util_Variant.fromFloat(parseFloat(("" + Std.string(r))));
				} else {
					v = haxe_ui_util_Variant.fromInt(Std.parseInt("" + Std.string(r)));
				}
			} else if("" + Std.string(r) == "true" || Std.string(r) + "" == "false") {
				v = haxe_ui_util_Variant.fromBool("" + Std.string(r) == "true");
			} else if(typeof(r) == "string") {
				v = haxe_ui_util_Variant.fromString(js_Boot.__cast(r , String));
			} else {
				v = r;
			}
		} else if(((r) instanceof haxe_ui_core_Component)) {
			v = haxe_ui_util_Variant.fromComponent(js_Boot.__cast(r , haxe_ui_core_Component));
		} else if(((r) instanceof haxe_ui_data_DataSource)) {
			v = r;
		} else if(((r) instanceof Array)) {
			v = r;
		} else if(((r) instanceof Date)) {
			v = haxe_ui_util_Variant.fromDate(js_Boot.__cast(r , Date));
		} else if(((r) instanceof HTMLImageElement)) {
			v = haxe_ui_util_Variant.fromImageData(js_Boot.__cast(r , HTMLImageElement));
		} else {
			v = r;
		}
	}
	return v;
};
haxe_ui_util_Variant.containsOnlyDigits = function(s) {
	if(((s) instanceof haxe_ui_core_Component) || ((s) instanceof HTMLImageElement) || ((s) instanceof Array) || ((s) instanceof haxe_ui_data_DataSource)) {
		return false;
	}
	if(typeof(s) == "number" && ((s | 0) === s) || typeof(s) == "number") {
		return true;
	}
	var t = Std.string(s);
	var _g = 0;
	var _g1 = t.length;
	while(_g < _g1) {
		var i = _g++;
		var c = t.charAt(i);
		if(c != "0" && c != "1" && c != "2" && c != "3" && c != "4" && c != "5" && c != "6" && c != "7" && c != "8" && c != "9" && c != "." && c != "-") {
			return false;
		}
	}
	return true;
};
haxe_ui_util_Variant.toDynamic = function(v) {
	var d = v;
	if(v != null) {
		switch(v._hx_index) {
		case 0:
			var y = v.s;
			d = y;
			break;
		case 1:
			var y = v.s;
			d = y;
			break;
		case 2:
			var y = v.s;
			d = y;
			break;
		case 3:
			var y = v.s;
			d = y;
			break;
		case 4:
			var y = v.s;
			d = y;
			break;
		case 5:
			var y = v.s;
			d = y;
			break;
		case 6:
			var y = v.s;
			d = y;
			break;
		case 7:
			var y = v.s;
			d = y;
			break;
		case 8:
			var y = v.s;
			d = y;
			break;
		}
	}
	return d;
};
var haxe_ui_validation_ValidationManager = function() {
	this._displayQueue = [];
	this._queue = [];
	this.isValidating = false;
	this.isPending = false;
};
$hxClasses["haxe.ui.validation.ValidationManager"] = haxe_ui_validation_ValidationManager;
haxe_ui_validation_ValidationManager.__name__ = "haxe.ui.validation.ValidationManager";
haxe_ui_validation_ValidationManager.__properties__ = {get_instance:"get_instance"};
haxe_ui_validation_ValidationManager.get_instance = function() {
	if(haxe_ui_validation_ValidationManager.instance == null) {
		haxe_ui_validation_ValidationManager.instance = new haxe_ui_validation_ValidationManager();
	}
	return haxe_ui_validation_ValidationManager.instance;
};
haxe_ui_validation_ValidationManager.prototype = {
	isValidating: null
	,isPending: null
	,_queue: null
	,_displayQueue: null
	,_events: null
	,registerEvent: function(type,listener) {
		if(this._events == null) {
			this._events = new haxe_ui_util_EventMap();
		}
		this._events.add(type,listener);
	}
	,unregisterEvent: function(type,listener) {
		if(this._events == null) {
			this._events.remove(type,listener);
		}
	}
	,dispatch: function(event) {
		if(this._events != null) {
			this._events.invoke(event.type,event);
		}
	}
	,dispose: function() {
		this.isValidating = false;
		this._queue.splice(0,this._queue.length);
	}
	,add: function(object) {
		if(this._queue.indexOf(object) != -1) {
			return;
		}
		var queueLength = this._queue.length;
		if(this.isValidating == true) {
			var depth = object.get_depth();
			var min = 0;
			var max = queueLength;
			var i = 0;
			var otherDepth = 0;
			while(max > min) {
				i = min + max >>> 1;
				otherDepth = this._queue[i].get_depth();
				if(otherDepth == depth) {
					break;
				} else if(otherDepth < depth) {
					max = i;
				} else {
					min = i + 1;
				}
			}
			if(otherDepth >= depth) {
				++i;
			}
			this._queue.splice(i,0,object);
		} else {
			this._queue[queueLength] = object;
			if(this.isPending == false) {
				this.isPending = true;
				haxe_ui_Toolkit.callLater($bind(this,this.process));
			}
		}
	}
	,addDisplay: function(item,nextFrame) {
		if(nextFrame == null) {
			nextFrame = true;
		}
		if(this._displayQueue.indexOf(item) == -1) {
			this._displayQueue.push(item);
		}
		if(nextFrame == false) {
			this.process();
		}
	}
	,process: function() {
		if(this.isValidating == true || this.isPending == false) {
			return;
		}
		var queueLength = this._queue.length;
		if(queueLength == 0) {
			this.isPending = false;
			return;
		}
		this.isValidating = true;
		if(queueLength > 1) {
			this._queue.sort($bind(this,this.queueSortFunction));
		}
		this.dispatch(new haxe_ui_events_ValidationEvent("validationstart"));
		while(this._queue.length > 0) {
			var item = this._queue.shift();
			if(item.get_depth() < 0) {
				continue;
			}
			item.validateComponent();
		}
		var _g = 0;
		var _g1 = this._displayQueue.length;
		while(_g < _g1) {
			var i = _g++;
			var item = this._displayQueue[i];
			item.updateComponentDisplay();
		}
		this._displayQueue.splice(0,this._displayQueue.length);
		this.isValidating = false;
		this.isPending = false;
		this.dispatch(new haxe_ui_events_ValidationEvent("validationstop"));
	}
	,queueSortFunction: function(first,second) {
		var difference = second.get_depth() - first.get_depth();
		if(difference > 0) {
			return 1;
		} else if(difference < 0) {
			return -1;
		} else {
			return 0;
		}
	}
	,__class__: haxe_ui_validation_ValidationManager
};
var haxe_ui_validators_IValidator = function() { };
$hxClasses["haxe.ui.validators.IValidator"] = haxe_ui_validators_IValidator;
haxe_ui_validators_IValidator.__name__ = "haxe.ui.validators.IValidator";
haxe_ui_validators_IValidator.__isInterface__ = true;
haxe_ui_validators_IValidator.prototype = {
	invalidMessage: null
	,setup: null
	,validate: null
	,setProperty: null
	,__class__: haxe_ui_validators_IValidator
};
var haxe_ui_validators_Validator = function() {
	this.invalidStyleName = "invalid-value";
	this.validStyleName = "valid-value";
	this.applyInvalid = true;
	this.applyValid = true;
};
$hxClasses["haxe.ui.validators.Validator"] = haxe_ui_validators_Validator;
haxe_ui_validators_Validator.__name__ = "haxe.ui.validators.Validator";
haxe_ui_validators_Validator.__interfaces__ = [haxe_ui_validators_IValidator];
haxe_ui_validators_Validator.prototype = {
	invalidMessage: null
	,applyValid: null
	,applyInvalid: null
	,validStyleName: null
	,invalidStyleName: null
	,setup: function(component) {
	}
	,validate: function(component) {
		return this.validateInternal(component);
	}
	,validateInternal: function(component) {
		var valid = null;
		var _g = Type.typeof(component.get_value());
		switch(_g._hx_index) {
		case 0:
			valid = this.validateString(null);
			break;
		case 4:
			valid = this.validateString(component.get_text());
			break;
		case 6:
			if(_g.c == String) {
				var stringValue = null;
				if(component.get_value() != null) {
					stringValue = Std.string(component.get_value());
				}
				valid = this.validateString(stringValue);
			} else {
				haxe_Log.trace("unsupported",{ fileName : "haxe/ui/validators/Validator.hx", lineNumber : 38, className : "haxe.ui.validators.Validator", methodName : "validateInternal", customParams : [Type.typeof(component.get_value()),component.get_id(),component.get_className(),component.get_value()]});
			}
			break;
		default:
			haxe_Log.trace("unsupported",{ fileName : "haxe/ui/validators/Validator.hx", lineNumber : 38, className : "haxe.ui.validators.Validator", methodName : "validateInternal", customParams : [Type.typeof(component.get_value()),component.get_id(),component.get_className(),component.get_value()]});
		}
		if(valid == null) {
			this.onReset(component);
			return valid;
		}
		if(valid) {
			if(this.applyValid) {
				this.onValid(component);
			} else {
				this.onReset(component);
			}
		} else if(this.applyInvalid) {
			this.onInvalid(component);
		} else {
			this.onReset(component);
		}
		return valid;
	}
	,onReset: function(component) {
		component.removeClasses([this.validStyleName,this.invalidStyleName]);
	}
	,onValid: function(component) {
		component.swapClass(this.validStyleName,this.invalidStyleName);
	}
	,onInvalid: function(component) {
		component.swapClass(this.invalidStyleName,this.validStyleName);
	}
	,validateString: function(s) {
		return null;
	}
	,setProperty: function(name,value) {
		switch(name) {
		case "applyInvalid":
			this.applyInvalid = value;
			break;
		case "applyValid":
			this.applyValid = value;
			break;
		case "invalidMessage":
			this.invalidMessage = value;
			break;
		}
	}
	,__class__: haxe_ui_validators_Validator
};
var haxe_ui_validators_PatternValidator = function() {
	this.pattern = null;
	haxe_ui_validators_Validator.call(this);
};
$hxClasses["haxe.ui.validators.PatternValidator"] = haxe_ui_validators_PatternValidator;
haxe_ui_validators_PatternValidator.__name__ = "haxe.ui.validators.PatternValidator";
haxe_ui_validators_PatternValidator.__super__ = haxe_ui_validators_Validator;
haxe_ui_validators_PatternValidator.prototype = $extend(haxe_ui_validators_Validator.prototype,{
	pattern: null
	,validateString: function(s) {
		if(this.pattern == null) {
			return null;
		}
		var valid = null;
		if(s != null && s.length > 0) {
			valid = this.pattern.match(s);
		}
		return valid;
	}
	,setProperty: function(name,value) {
		if(name == "pattern") {
			this.pattern = new EReg(Std.string(value),"gm");
		} else {
			haxe_ui_validators_Validator.prototype.setProperty.call(this,name,value);
		}
	}
	,__class__: haxe_ui_validators_PatternValidator
});
var haxe_ui_validators_EmailValidator = function() {
	haxe_ui_validators_PatternValidator.call(this);
	this.invalidMessage = "Invalid email address";
	this.pattern = new EReg("^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$","gm");
};
$hxClasses["haxe.ui.validators.EmailValidator"] = haxe_ui_validators_EmailValidator;
haxe_ui_validators_EmailValidator.__name__ = "haxe.ui.validators.EmailValidator";
haxe_ui_validators_EmailValidator.__super__ = haxe_ui_validators_PatternValidator;
haxe_ui_validators_EmailValidator.prototype = $extend(haxe_ui_validators_PatternValidator.prototype,{
	__class__: haxe_ui_validators_EmailValidator
});
var haxe_ui_validators_RequiredValidator = function() {
	haxe_ui_validators_Validator.call(this);
	this.invalidMessage = "Field is required";
	this.invalidStyleName = "required-value";
};
$hxClasses["haxe.ui.validators.RequiredValidator"] = haxe_ui_validators_RequiredValidator;
haxe_ui_validators_RequiredValidator.__name__ = "haxe.ui.validators.RequiredValidator";
haxe_ui_validators_RequiredValidator.__super__ = haxe_ui_validators_Validator;
haxe_ui_validators_RequiredValidator.prototype = $extend(haxe_ui_validators_Validator.prototype,{
	setup: function(component) {
		component.addClass("required");
	}
	,validateString: function(s) {
		var valid = null;
		if(s == null) {
			valid = false;
		} else {
			valid = s.length > 0;
		}
		return valid;
	}
	,onValid: function(component) {
		component.removeClass(this.invalidStyleName);
	}
	,onInvalid: function(component) {
		component.addClass(this.invalidStyleName);
	}
	,__class__: haxe_ui_validators_RequiredValidator
});
var haxe_ui_validators_ValidatorManager = function() {
	this._registeredValidators = new haxe_ds_StringMap();
};
$hxClasses["haxe.ui.validators.ValidatorManager"] = haxe_ui_validators_ValidatorManager;
haxe_ui_validators_ValidatorManager.__name__ = "haxe.ui.validators.ValidatorManager";
haxe_ui_validators_ValidatorManager.__properties__ = {get_instance:"get_instance"};
haxe_ui_validators_ValidatorManager.get_instance = function() {
	if(haxe_ui_validators_ValidatorManager.instance == null) {
		haxe_ui_validators_ValidatorManager.instance = new haxe_ui_validators_ValidatorManager();
	}
	return haxe_ui_validators_ValidatorManager.instance;
};
haxe_ui_validators_ValidatorManager.prototype = {
	_registeredValidators: null
	,registerValidator: function(id,ctor,defaultProperties) {
		this._registeredValidators.h[id] = { ctor : ctor, defaultProperties : defaultProperties};
	}
	,createValidator: function(id,config) {
		var item = this._registeredValidators.h[id];
		if(item == null) {
			return null;
		}
		var v = item.ctor();
		if(item.defaultProperties != null) {
			var h = item.defaultProperties.h;
			var k_h = h;
			var k_keys = Object.keys(h);
			var k_length = k_keys.length;
			var k_current = 0;
			while(k_current < k_length) {
				var k = k_keys[k_current++];
				v.setProperty(k,item.defaultProperties.h[k]);
			}
		}
		return v;
	}
	,__class__: haxe_ui_validators_ValidatorManager
};
var helpers_CookieHelper = function(name,expire) {
	if(expire == null) {
		expire = 604800;
	}
	this.name = name;
	this.expire = expire;
	this.s = new haxe_Serializer();
	this.loc = $global.location;
};
$hxClasses["helpers.CookieHelper"] = helpers_CookieHelper;
helpers_CookieHelper.__name__ = "helpers.CookieHelper";
helpers_CookieHelper.prototype = {
	name: null
	,s: null
	,loc: null
	,expire: null
	,flush: function(name,o) {
		try {
			this.s.serialize(o);
			tstool_utils_CookieBB.set(name,this.s.toString(),this.expire,this.loc.pathname,this.loc.hostname);
		} catch( _g ) {
			var e = haxe_Exception.caught(_g);
			haxe_Log.trace(e,{ fileName : "helpers/CookieHelper.hx", lineNumber : 43, className : "helpers.CookieHelper", methodName : "flush"});
		}
	}
	,clearCockie: function(cookieName) {
		if(cookieName == null) {
			cookieName = "";
		}
		tstool_utils_CookieBB.remove(cookieName == "" ? this.name : cookieName,this.loc.pathname,this.loc.hostname);
	}
	,retrieve: function(name) {
		if(name == null) {
			name = "";
		}
		var _name = name == "" ? this.name : name;
		if(tstool_utils_CookieBB.exists(_name)) {
			var d = new haxe_Unserializer(tstool_utils_CookieBB.get(_name));
			return d.unserialize();
		} else {
			throw new haxe_Exception("Cookie " + name + " not found");
		}
	}
	,__class__: helpers_CookieHelper
};
var http_LoginHelper = function(url) {
	haxe_http_HttpJs.call(this,url);
	this._mainDebug = $global.location.origin.indexOf("salt.ch") > -1;
	this.async = true;
	this.canRequest = false;
	this.successSignal = new signals_Signal1();
	this.searchSignal = new signals_Signal1();
	this.manySignal = new signals_Signal3();
	this.statusSignal = new signals_Signal1();
	this.errorSignal = new signals_Signal1();
	this.teamTlSignal = new signals_Signal1();
	this.onError = $bind(this,this.onMyError);
	this.onStatus = $bind(this,this.onMyStatus);
};
$hxClasses["http.LoginHelper"] = http_LoginHelper;
http_LoginHelper.__name__ = "http.LoginHelper";
http_LoginHelper.__super__ = haxe_http_HttpJs;
http_LoginHelper.prototype = $extend(haxe_http_HttpJs.prototype,{
	successSignal: null
	,searchSignal: null
	,statusSignal: null
	,errorSignal: null
	,_mainDebug: null
	,canRequest: null
	,teamTlSignal: null
	,manySignal: null
	,onMyStatus: function(status) {
		this.statusSignal.dispatch(status);
	}
	,onMyError: function(error) {
		this.errorSignal.dispatch(error);
	}
	,onMySearch: function(data) {
		haxe_Log.trace("http.LoginHelper::onMySearch::data",{ fileName : "http/LoginHelper.hx", lineNumber : 74, className : "http.LoginHelper", methodName : "onMySearch", customParams : [data]});
		var d = JSON.parse(data);
		var searched = d.attributes;
		if(searched.error != null) {
			this.successSignal.dispatch(new roles_Monitoree({ mail : "error@salt.ch", samaccountname : searched.error},false));
		} else {
			if(d.boss != null && d.boss.error == null) {
				searched.boss = d.boss;
			}
			this.successSignal.dispatch(new roles_Monitoree(searched));
		}
	}
	,onMyData: function(data) {
		haxe_Log.trace("http.LoginHelper::onMyData",{ fileName : "http/LoginHelper.hx", lineNumber : 92, className : "http.LoginHelper", methodName : "onMyData"});
		haxe_Log.trace(data,{ fileName : "http/LoginHelper.hx", lineNumber : 93, className : "http.LoginHelper", methodName : "onMyData"});
		if(data == "{}" && !this._mainDebug) {
			var tmp = this.successSignal;
			haxe_Log.trace("Coach::CREATE_DUMMY created",{ fileName : "roles/Coach.hx", lineNumber : 22, className : "roles.Coach", methodName : "CREATE_DUMMY"});
			tmp.dispatch(new roles_Coach({ directReports : [{ samaccountname : "apeter", mail : "Aron.Peter@salt.ch", distinguishedname : "CN=Péter Áron,OU=Users,OU=Domain-Users,DC=ad,DC=salt,DC=ch", description : "25840 / Internal employee / Translator and Communication Specialist"},{ samaccountname : "awarmers", mail : "Alexandra.Warmers@salt.ch", distinguishedname : "CN=Warmers Alexandra,OU=Users,OU=Domain-Users,DC=ad,DC=salt,DC=ch", description : "30680 / Internal employee / Translator and Communication Specialist"},{ samaccountname : "grappaz1", mail : "Giovanna.Rappazzo@salt.ch", distinguishedname : "CN=Rappazzo Giovanna,OU=Users,OU=Domain-Users,DC=ad,DC=salt,DC=ch", description : "30850 / Internal employee / Translator and Communication Specialist"}], mail : "Bruno.Baudry@salt.ch", samaccountname : "bbaudry", givenname : "Bruno", sn : "Baudry", mobile : "+41 78 787 8673", company : "Salt Mobile SA", l : "Biel", division : "Customer Operations", department : "Process & Quality", distinguishedname : "CN=Baudry Bruno,OU=Domain-Generic-Accounts,DC=ad,DC=salt,DC=ch", accountexpires : "0", msexchuserculture : "fr-FR", title : "Manager Knowledge & Learning", initials : "BB", memberof : ["Microsoft - Teams Members - Standard","Customer Operations - Training","RA-PulseSecure-Laptops-Salt","SG-PasswordSync","RA-EasyConnect-Web-Mobile-Qook","Customer Operations - Knowledge - Management","Customer Operations - Direct Reports","Customer Operations - Fiber Back Office","DOLPHIN_REC","Application-GIT_SALT-Operator","Application-GIT_SALT-Visitor","SG-OCH-WLAN_Users","SG-OCH-EnterpriseVault_DefaultProvisioningGroup","Entrust_SMS","MIS Mobile Users","GI-EBU-OR-CH-MobileUsers","Floor Marshalls Biel","CO_Knowledge And Translation Mgmt","co training admin_ud","Exchange_Customer Operations Management_ud","Exchange_CustomerCareServiceDesign_ud"], thumbnailphoto : "/9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0aHBwgJC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJCQwLDBgNDRgyIRwhMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjL/wAARCABAAEADASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDwMM8XCsRn0pQryvk5J96sIVkbgA4qzDD+83YoAj0yA/bULQ+YoOStal7fw3dyFt7SSXb8uIl+X/69XNC0eXW9YTTogVUjfcMvVYh1/E9K9Zt9IsdOgWK2tY1VRgACgDx7T9d1vQLrz7BJLX+9vjGPxyK1Ne8SXPi63j/tF0TaPl2KMA/hXb63oy6hayReX5ZYZBYdDXkd3FPp9w8B+VlJDKeR1oAp3tutvLgqSCOGU8Gqm7ByuRWiXFxA0THJPzL7GqBglAzsOKAL+n3sNlIWaESZrqNPtU1gLP8AJBEvUetcN3xV+K5uVg8tJGC+gNAHXWSy6adUuLFZmfzVAmikK8Afd9ySc49BXX382pS+F7Wc+assyb5EU7XUZ9ff+tUvBF3YWngsi9jWSZ7pztIzknAH6Vp3XiK0u7spaxzhotqmN4jtcemegoAwbDVJ7W5W2ks5z5ihvOjlaReRnDDv746Vi+OtKltZYdQCERTLtb/Zb3/D+VemJf6XHb+daKsbMOQeCK43xhfvqtibaFd+XHQUAeaxLIGacLlI+GOaRr2TkcYPTiusvrGHTfDux0XfcOCh24bH8QP0xXIOAZcdqALh0LUEOTATj0NONrcxD54HUfSvVI7GWMSBlPXimy2K5VGiBDeq0Ac14OleQ3UEWEniUSxmVSVB6E4/KtNbvVzckLNZM2cMTCyjP1rm5fEyab4sRoEU2Vs5jkCDmQEYb689PpXS3PjLQvJLKysx5GFOaALMtjJdxl5pdkgHPlHhjWBr13DpmmyQLKVmkG1SPve5rPvfG7szfZY+MYUniuTubma7naady8jHkmgC/ca3eXzB72Z53Vdil8fKPbFMgt1lIYuBk96zwcHNdNZaFFqWnJd27yICdrA9iOtAHSw6/ch8rKSM9DW03i6GHTpppbQSyRRFgoONxA9axRZ2TMcwlee1M1DS7d9KujE8u9YmYKGxnAz1oA83Y7mJxjJzikoooAKKVVLMFUZJOAK9L8K+GotO06e+1HTFlmUB1llVnVB2AUdSfU9qAPNvKk8sSeW2wnAbHBq5pmr3elTF7d/kb78bcq31H9a9YkuLS3E8ssbtEBlTOi/MwGdu0Djd1AA/HtXI+KtK0y8086xpNv5TcGaOL7g9SB25NAH/2Q==", boss : { mail : "fabien.renard@salt.ch", samaccountname : "frenard", distinguishedname : "CN=Renard Fabien,OU=Domain-Generic-Accounts,DC=ad,DC=salt,DC=ch"}},true));
			return;
		}
		var d = JSON.parse(data);
		var coach = null;
		if(Object.prototype.hasOwnProperty.call(d,"authorized") && Reflect.field(d,"authorized")) {
			if(Object.prototype.hasOwnProperty.call(d,"attributes") && Object.prototype.hasOwnProperty.call(d,"directReports")) {
				d.attributes["directReports"] = Reflect.field(d,"directReports");
			} else {
				haxe_Log.trace("http.LoginHelper::onMyData:: " + "directReports" + " did not yield any data",{ fileName : "http/LoginHelper.hx", lineNumber : 117, className : "http.LoginHelper", methodName : "onMyData"});
			}
			if(Object.prototype.hasOwnProperty.call(d,"boss")) {
				d.attributes["boss"] = Reflect.field(d,"boss");
			} else {
				haxe_Log.trace("http.LoginHelper::onMyData:: Coachs has no manager",{ fileName : "http/LoginHelper.hx", lineNumber : 125, className : "http.LoginHelper", methodName : "onMyData"});
			}
			coach = new roles_Coach(d.attributes);
		} else {
			d.mail = "";
			d.samaccountname = d.username;
			d.title = d.status;
			if(!this._mainDebug) {
				haxe_Log.trace("Coach::CREATE_DUMMY created",{ fileName : "roles/Coach.hx", lineNumber : 22, className : "roles.Coach", methodName : "CREATE_DUMMY"});
				coach = new roles_Coach({ directReports : [{ samaccountname : "apeter", mail : "Aron.Peter@salt.ch", distinguishedname : "CN=Péter Áron,OU=Users,OU=Domain-Users,DC=ad,DC=salt,DC=ch", description : "25840 / Internal employee / Translator and Communication Specialist"},{ samaccountname : "awarmers", mail : "Alexandra.Warmers@salt.ch", distinguishedname : "CN=Warmers Alexandra,OU=Users,OU=Domain-Users,DC=ad,DC=salt,DC=ch", description : "30680 / Internal employee / Translator and Communication Specialist"},{ samaccountname : "grappaz1", mail : "Giovanna.Rappazzo@salt.ch", distinguishedname : "CN=Rappazzo Giovanna,OU=Users,OU=Domain-Users,DC=ad,DC=salt,DC=ch", description : "30850 / Internal employee / Translator and Communication Specialist"}], mail : "Bruno.Baudry@salt.ch", samaccountname : "bbaudry", givenname : "Bruno", sn : "Baudry", mobile : "+41 78 787 8673", company : "Salt Mobile SA", l : "Biel", division : "Customer Operations", department : "Process & Quality", distinguishedname : "CN=Baudry Bruno,OU=Domain-Generic-Accounts,DC=ad,DC=salt,DC=ch", accountexpires : "0", msexchuserculture : "fr-FR", title : "Manager Knowledge & Learning", initials : "BB", memberof : ["Microsoft - Teams Members - Standard","Customer Operations - Training","RA-PulseSecure-Laptops-Salt","SG-PasswordSync","RA-EasyConnect-Web-Mobile-Qook","Customer Operations - Knowledge - Management","Customer Operations - Direct Reports","Customer Operations - Fiber Back Office","DOLPHIN_REC","Application-GIT_SALT-Operator","Application-GIT_SALT-Visitor","SG-OCH-WLAN_Users","SG-OCH-EnterpriseVault_DefaultProvisioningGroup","Entrust_SMS","MIS Mobile Users","GI-EBU-OR-CH-MobileUsers","Floor Marshalls Biel","CO_Knowledge And Translation Mgmt","co training admin_ud","Exchange_Customer Operations Management_ud","Exchange_CustomerCareServiceDesign_ud"], thumbnailphoto : "/9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0aHBwgJC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJCQwLDBgNDRgyIRwhMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjL/wAARCABAAEADASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDwMM8XCsRn0pQryvk5J96sIVkbgA4qzDD+83YoAj0yA/bULQ+YoOStal7fw3dyFt7SSXb8uIl+X/69XNC0eXW9YTTogVUjfcMvVYh1/E9K9Zt9IsdOgWK2tY1VRgACgDx7T9d1vQLrz7BJLX+9vjGPxyK1Ne8SXPi63j/tF0TaPl2KMA/hXb63oy6hayReX5ZYZBYdDXkd3FPp9w8B+VlJDKeR1oAp3tutvLgqSCOGU8Gqm7ByuRWiXFxA0THJPzL7GqBglAzsOKAL+n3sNlIWaESZrqNPtU1gLP8AJBEvUetcN3xV+K5uVg8tJGC+gNAHXWSy6adUuLFZmfzVAmikK8Afd9ySc49BXX382pS+F7Wc+assyb5EU7XUZ9ff+tUvBF3YWngsi9jWSZ7pztIzknAH6Vp3XiK0u7spaxzhotqmN4jtcemegoAwbDVJ7W5W2ks5z5ihvOjlaReRnDDv746Vi+OtKltZYdQCERTLtb/Zb3/D+VemJf6XHb+daKsbMOQeCK43xhfvqtibaFd+XHQUAeaxLIGacLlI+GOaRr2TkcYPTiusvrGHTfDux0XfcOCh24bH8QP0xXIOAZcdqALh0LUEOTATj0NONrcxD54HUfSvVI7GWMSBlPXimy2K5VGiBDeq0Ac14OleQ3UEWEniUSxmVSVB6E4/KtNbvVzckLNZM2cMTCyjP1rm5fEyab4sRoEU2Vs5jkCDmQEYb689PpXS3PjLQvJLKysx5GFOaALMtjJdxl5pdkgHPlHhjWBr13DpmmyQLKVmkG1SPve5rPvfG7szfZY+MYUniuTubma7naady8jHkmgC/ca3eXzB72Z53Vdil8fKPbFMgt1lIYuBk96zwcHNdNZaFFqWnJd27yICdrA9iOtAHSw6/ch8rKSM9DW03i6GHTpppbQSyRRFgoONxA9axRZ2TMcwlee1M1DS7d9KujE8u9YmYKGxnAz1oA83Y7mJxjJzikoooAKKVVLMFUZJOAK9L8K+GotO06e+1HTFlmUB1llVnVB2AUdSfU9qAPNvKk8sSeW2wnAbHBq5pmr3elTF7d/kb78bcq31H9a9YkuLS3E8ssbtEBlTOi/MwGdu0Djd1AA/HtXI+KtK0y8086xpNv5TcGaOL7g9SB25NAH/2Q==", boss : { mail : "fabien.renard@salt.ch", samaccountname : "frenard", distinguishedname : "CN=Renard Fabien,OU=Domain-Generic-Accounts,DC=ad,DC=salt,DC=ch"}},true);
				return;
			}
			haxe_Log.trace("UnAuthorised",{ fileName : "http/LoginHelper.hx", lineNumber : 143, className : "http.LoginHelper", methodName : "onMyData"});
		}
		this.successSignal.dispatch(coach);
	}
	,prepareCredentials: function(username,pwd,withDirectReports,attributes) {
		if(withDirectReports == null) {
			withDirectReports = false;
		}
		haxe_Log.trace("http.LoginHelper::prepareCredentials",{ fileName : "http/LoginHelper.hx", lineNumber : 166, className : "http.LoginHelper", methodName : "prepareCredentials"});
		if(username == null || StringTools.trim(username) == "" || pwd == null || StringTools.trim(pwd) == "") {
			throw haxe_Exception.thrown("null credentials");
		}
		this.params = [];
		this.setParameter("username",username);
		this.setParameter("pwd",haxe_crypto_Base64.encode(haxe_io_Bytes.ofString(pwd)));
		this.setSubParams(username,withDirectReports,attributes);
		this.canRequest = true;
	}
	,searchUserFromCookie: function(username,withDirectReports,attributes) {
		if(withDirectReports == null) {
			withDirectReports = false;
		}
		haxe_Log.trace("http.LoginHelper::searchUserFromCookie",{ fileName : "http/LoginHelper.hx", lineNumber : 191, className : "http.LoginHelper", methodName : "searchUserFromCookie"});
		this.params = [];
		this.setParameter("search",username);
		this.setSubParams(username,withDirectReports,attributes);
		this.canRequest = true;
	}
	,setSubParams: function(username,withDirectReports,attributes) {
		if(withDirectReports == null) {
			withDirectReports = false;
		}
		this.setParameter("manager","true");
		if(withDirectReports) {
			this.setParameter("directReports",username);
		}
		if(attributes != null) {
			this.setParameter("attr-add","false");
			this.setParameter("main",attributes.join("_"));
		}
	}
	,searchAgent: function(nt,withDirectReports) {
		if(withDirectReports == null) {
			withDirectReports = true;
		}
		this.params = [];
		if(nt != null && nt != "") {
			this.setParameter("search",nt);
			this.setParameter("manager","true");
			if(withDirectReports) {
				this.setParameter("directReports",nt);
			}
			this.onData = $bind(this,this.onMySearch);
			this.request(true);
		} else {
			throw haxe_Exception.thrown("search is null");
		}
	}
	,searchActorByNT: function(nt,withDirectReports,withBoss) {
		if(withBoss == null) {
			withBoss = false;
		}
		if(withDirectReports == null) {
			withDirectReports = false;
		}
		if(nt == null || nt == "") {
			throw new haxe_Exception("no NT given");
		}
		this.setParameter("search",nt);
		if(withDirectReports) {
			this.setParameter("directReports","true");
		}
		if(withBoss) {
			this.setParameter("manager","true");
		}
		this.onData = $bind(this,this.onSearchActorByNt);
		this.request(true);
	}
	,onSearchActorByNt: function(data) {
		haxe_Log.trace("http.LoginHelper::onSearchActorByNt::data",{ fileName : "http/LoginHelper.hx", lineNumber : 257, className : "http.LoginHelper", methodName : "onSearchActorByNt", customParams : [data]});
		if(data == "{}" && !this._mainDebug) {
			var tmp = this.searchSignal;
			var authorised = false;
			if(authorised == null) {
				authorised = true;
			}
			haxe_Log.trace("Coach::CREATE_DUMMY created",{ fileName : "roles/Coach.hx", lineNumber : 22, className : "roles.Coach", methodName : "CREATE_DUMMY"});
			tmp.dispatch(new roles_Coach({ directReports : [{ samaccountname : "apeter", mail : "Aron.Peter@salt.ch", distinguishedname : "CN=Péter Áron,OU=Users,OU=Domain-Users,DC=ad,DC=salt,DC=ch", description : "25840 / Internal employee / Translator and Communication Specialist"},{ samaccountname : "awarmers", mail : "Alexandra.Warmers@salt.ch", distinguishedname : "CN=Warmers Alexandra,OU=Users,OU=Domain-Users,DC=ad,DC=salt,DC=ch", description : "30680 / Internal employee / Translator and Communication Specialist"},{ samaccountname : "grappaz1", mail : "Giovanna.Rappazzo@salt.ch", distinguishedname : "CN=Rappazzo Giovanna,OU=Users,OU=Domain-Users,DC=ad,DC=salt,DC=ch", description : "30850 / Internal employee / Translator and Communication Specialist"}], mail : "Bruno.Baudry@salt.ch", samaccountname : "bbaudry", givenname : "Bruno", sn : "Baudry", mobile : "+41 78 787 8673", company : "Salt Mobile SA", l : "Biel", division : "Customer Operations", department : "Process & Quality", distinguishedname : "CN=Baudry Bruno,OU=Domain-Generic-Accounts,DC=ad,DC=salt,DC=ch", accountexpires : "0", msexchuserculture : "fr-FR", title : "Manager Knowledge & Learning", initials : "BB", memberof : ["Microsoft - Teams Members - Standard","Customer Operations - Training","RA-PulseSecure-Laptops-Salt","SG-PasswordSync","RA-EasyConnect-Web-Mobile-Qook","Customer Operations - Knowledge - Management","Customer Operations - Direct Reports","Customer Operations - Fiber Back Office","DOLPHIN_REC","Application-GIT_SALT-Operator","Application-GIT_SALT-Visitor","SG-OCH-WLAN_Users","SG-OCH-EnterpriseVault_DefaultProvisioningGroup","Entrust_SMS","MIS Mobile Users","GI-EBU-OR-CH-MobileUsers","Floor Marshalls Biel","CO_Knowledge And Translation Mgmt","co training admin_ud","Exchange_Customer Operations Management_ud","Exchange_CustomerCareServiceDesign_ud"], thumbnailphoto : "/9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0aHBwgJC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJCQwLDBgNDRgyIRwhMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjL/wAARCABAAEADASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDwMM8XCsRn0pQryvk5J96sIVkbgA4qzDD+83YoAj0yA/bULQ+YoOStal7fw3dyFt7SSXb8uIl+X/69XNC0eXW9YTTogVUjfcMvVYh1/E9K9Zt9IsdOgWK2tY1VRgACgDx7T9d1vQLrz7BJLX+9vjGPxyK1Ne8SXPi63j/tF0TaPl2KMA/hXb63oy6hayReX5ZYZBYdDXkd3FPp9w8B+VlJDKeR1oAp3tutvLgqSCOGU8Gqm7ByuRWiXFxA0THJPzL7GqBglAzsOKAL+n3sNlIWaESZrqNPtU1gLP8AJBEvUetcN3xV+K5uVg8tJGC+gNAHXWSy6adUuLFZmfzVAmikK8Afd9ySc49BXX382pS+F7Wc+assyb5EU7XUZ9ff+tUvBF3YWngsi9jWSZ7pztIzknAH6Vp3XiK0u7spaxzhotqmN4jtcemegoAwbDVJ7W5W2ks5z5ihvOjlaReRnDDv746Vi+OtKltZYdQCERTLtb/Zb3/D+VemJf6XHb+daKsbMOQeCK43xhfvqtibaFd+XHQUAeaxLIGacLlI+GOaRr2TkcYPTiusvrGHTfDux0XfcOCh24bH8QP0xXIOAZcdqALh0LUEOTATj0NONrcxD54HUfSvVI7GWMSBlPXimy2K5VGiBDeq0Ac14OleQ3UEWEniUSxmVSVB6E4/KtNbvVzckLNZM2cMTCyjP1rm5fEyab4sRoEU2Vs5jkCDmQEYb689PpXS3PjLQvJLKysx5GFOaALMtjJdxl5pdkgHPlHhjWBr13DpmmyQLKVmkG1SPve5rPvfG7szfZY+MYUniuTubma7naady8jHkmgC/ca3eXzB72Z53Vdil8fKPbFMgt1lIYuBk96zwcHNdNZaFFqWnJd27yICdrA9iOtAHSw6/ch8rKSM9DW03i6GHTpppbQSyRRFgoONxA9axRZ2TMcwlee1M1DS7d9KujE8u9YmYKGxnAz1oA83Y7mJxjJzikoooAKKVVLMFUZJOAK9L8K+GotO06e+1HTFlmUB1llVnVB2AUdSfU9qAPNvKk8sSeW2wnAbHBq5pmr3elTF7d/kb78bcq31H9a9YkuLS3E8ssbtEBlTOi/MwGdu0Djd1AA/HtXI+KtK0y8086xpNv5TcGaOL7g9SB25NAH/2Q==", boss : { mail : "fabien.renard@salt.ch", samaccountname : "frenard", distinguishedname : "CN=Renard Fabien,OU=Domain-Generic-Accounts,DC=ad,DC=salt,DC=ch"}},authorised));
			return;
		}
		var d = JSON.parse(data);
		if(d.status != "ldap could bind") {
			var tmp = this.searchSignal;
			var authorised = false;
			if(authorised == null) {
				authorised = true;
			}
			haxe_Log.trace("Coach::CREATE_DUMMY created",{ fileName : "roles/Coach.hx", lineNumber : 22, className : "roles.Coach", methodName : "CREATE_DUMMY"});
			tmp.dispatch(new roles_Coach({ directReports : [{ samaccountname : "apeter", mail : "Aron.Peter@salt.ch", distinguishedname : "CN=Péter Áron,OU=Users,OU=Domain-Users,DC=ad,DC=salt,DC=ch", description : "25840 / Internal employee / Translator and Communication Specialist"},{ samaccountname : "awarmers", mail : "Alexandra.Warmers@salt.ch", distinguishedname : "CN=Warmers Alexandra,OU=Users,OU=Domain-Users,DC=ad,DC=salt,DC=ch", description : "30680 / Internal employee / Translator and Communication Specialist"},{ samaccountname : "grappaz1", mail : "Giovanna.Rappazzo@salt.ch", distinguishedname : "CN=Rappazzo Giovanna,OU=Users,OU=Domain-Users,DC=ad,DC=salt,DC=ch", description : "30850 / Internal employee / Translator and Communication Specialist"}], mail : "Bruno.Baudry@salt.ch", samaccountname : "bbaudry", givenname : "Bruno", sn : "Baudry", mobile : "+41 78 787 8673", company : "Salt Mobile SA", l : "Biel", division : "Customer Operations", department : "Process & Quality", distinguishedname : "CN=Baudry Bruno,OU=Domain-Generic-Accounts,DC=ad,DC=salt,DC=ch", accountexpires : "0", msexchuserculture : "fr-FR", title : "Manager Knowledge & Learning", initials : "BB", memberof : ["Microsoft - Teams Members - Standard","Customer Operations - Training","RA-PulseSecure-Laptops-Salt","SG-PasswordSync","RA-EasyConnect-Web-Mobile-Qook","Customer Operations - Knowledge - Management","Customer Operations - Direct Reports","Customer Operations - Fiber Back Office","DOLPHIN_REC","Application-GIT_SALT-Operator","Application-GIT_SALT-Visitor","SG-OCH-WLAN_Users","SG-OCH-EnterpriseVault_DefaultProvisioningGroup","Entrust_SMS","MIS Mobile Users","GI-EBU-OR-CH-MobileUsers","Floor Marshalls Biel","CO_Knowledge And Translation Mgmt","co training admin_ud","Exchange_Customer Operations Management_ud","Exchange_CustomerCareServiceDesign_ud"], thumbnailphoto : "/9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0aHBwgJC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJCQwLDBgNDRgyIRwhMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjL/wAARCABAAEADASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDwMM8XCsRn0pQryvk5J96sIVkbgA4qzDD+83YoAj0yA/bULQ+YoOStal7fw3dyFt7SSXb8uIl+X/69XNC0eXW9YTTogVUjfcMvVYh1/E9K9Zt9IsdOgWK2tY1VRgACgDx7T9d1vQLrz7BJLX+9vjGPxyK1Ne8SXPi63j/tF0TaPl2KMA/hXb63oy6hayReX5ZYZBYdDXkd3FPp9w8B+VlJDKeR1oAp3tutvLgqSCOGU8Gqm7ByuRWiXFxA0THJPzL7GqBglAzsOKAL+n3sNlIWaESZrqNPtU1gLP8AJBEvUetcN3xV+K5uVg8tJGC+gNAHXWSy6adUuLFZmfzVAmikK8Afd9ySc49BXX382pS+F7Wc+assyb5EU7XUZ9ff+tUvBF3YWngsi9jWSZ7pztIzknAH6Vp3XiK0u7spaxzhotqmN4jtcemegoAwbDVJ7W5W2ks5z5ihvOjlaReRnDDv746Vi+OtKltZYdQCERTLtb/Zb3/D+VemJf6XHb+daKsbMOQeCK43xhfvqtibaFd+XHQUAeaxLIGacLlI+GOaRr2TkcYPTiusvrGHTfDux0XfcOCh24bH8QP0xXIOAZcdqALh0LUEOTATj0NONrcxD54HUfSvVI7GWMSBlPXimy2K5VGiBDeq0Ac14OleQ3UEWEniUSxmVSVB6E4/KtNbvVzckLNZM2cMTCyjP1rm5fEyab4sRoEU2Vs5jkCDmQEYb689PpXS3PjLQvJLKysx5GFOaALMtjJdxl5pdkgHPlHhjWBr13DpmmyQLKVmkG1SPve5rPvfG7szfZY+MYUniuTubma7naady8jHkmgC/ca3eXzB72Z53Vdil8fKPbFMgt1lIYuBk96zwcHNdNZaFFqWnJd27yICdrA9iOtAHSw6/ch8rKSM9DW03i6GHTpppbQSyRRFgoONxA9axRZ2TMcwlee1M1DS7d9KujE8u9YmYKGxnAz1oA83Y7mJxjJzikoooAKKVVLMFUZJOAK9L8K+GotO06e+1HTFlmUB1llVnVB2AUdSfU9qAPNvKk8sSeW2wnAbHBq5pmr3elTF7d/kb78bcq31H9a9YkuLS3E8ssbtEBlTOi/MwGdu0Djd1AA/HtXI+KtK0y8086xpNv5TcGaOL7g9SB25NAH/2Q==", boss : { mail : "fabien.renard@salt.ch", samaccountname : "frenard", distinguishedname : "CN=Renard Fabien,OU=Domain-Generic-Accounts,DC=ad,DC=salt,DC=ch"}},authorised));
			return;
		}
		d.attributes.directReports = d.directReports;
		var c = new roles_Coach(d.attributes,true);
		this.searchSignal.dispatch(c);
	}
	,searchMany: function(strings,withManager) {
		if(withManager == null) {
			withManager = false;
		}
		var subAttrParams = ["manager","givenName"];
		this.params = [];
		if(strings != null && strings != []) {
			var result = new Array(strings.length);
			var _g = 0;
			var _g1 = strings.length;
			while(_g < _g1) {
				var i = _g++;
				result[i] = StringTools.trim(strings[i]);
			}
			var _g = [];
			var _g1 = 0;
			var _g2 = result;
			while(_g1 < _g2.length) {
				var v = _g2[_g1];
				++_g1;
				if(v != "" && v != "\n") {
					_g.push(v);
				}
			}
			strings = _g;
			var s = strings.join("|");
			this.setParameter("findmany",encodeURIComponent(s));
			if(withManager) {
				this.setParameter("manager","true");
				this.setParameter("ad-subattr",subAttrParams.join("_"));
			}
			this.onData = $bind(this,this.ondata);
			this.request(true);
		} else {
			throw haxe_Exception.thrown("search is null");
		}
	}
	,ondata: function(d) {
		var notFoundCount = 0;
		var rejected_error = [];
		var rejected_helper = [];
		var pool = [];
		var poolLeavers = [];
		var j = JSON.parse(d);
		haxe_Log.trace("http.LoginHelper::ondata::j",{ fileName : "http/LoginHelper.hx", lineNumber : 325, className : "http.LoginHelper", methodName : "ondata", customParams : [j]});
		if(Object.prototype.hasOwnProperty.call(j,"findmany") && Reflect.field(j,"findmany") != null && Reflect.field(j,"findmany").length > 0) {
			var findMany = js_Boot.__cast(Reflect.field(j,"findmany") , Array);
			var _g = 0;
			while(_g < findMany.length) {
				var i = findMany[_g];
				++_g;
				try {
					pool.push(new roles_Actor(i));
				} catch( _g1 ) {
					var e = haxe_Exception.caught(_g1);
					haxe_Log.trace(e,{ fileName : "http/LoginHelper.hx", lineNumber : 347, className : "http.LoginHelper", methodName : "ondata"});
					haxe_Log.trace(i,{ fileName : "http/LoginHelper.hx", lineNumber : 348, className : "http.LoginHelper", methodName : "ondata"});
					rejected_error.push("" + Std.string(i.samaccountname) + " " + e.get_message());
				}
			}
		}
		if(Object.prototype.hasOwnProperty.call(j,"rejected") && Reflect.field(j,"rejected") != null) {
			rejected_helper = Reflect.field(j,"rejected");
		}
		if(Object.prototype.hasOwnProperty.call(j,"notfound_count")) {
			if(Object.prototype.hasOwnProperty.call(j,"failedFindmany")) {
				rejected_helper = Lambda.concat(rejected_helper,Reflect.field(j,"failedFindmany"));
			}
			notFoundCount = Reflect.field(j,"notfound_count");
		}
		if(Object.prototype.hasOwnProperty.call(j,"leaversResult") && Reflect.field(j,"leaversResult") != null) {
			var leavers = js_Boot.__cast(Reflect.field(j,"leaversResult") , Array);
			var _g = 0;
			while(_g < leavers.length) {
				var i = leavers[_g];
				++_g;
				try {
					poolLeavers.push(new roles_Actor(i));
				} catch( _g1 ) {
					var e = haxe_Exception.caught(_g1);
					haxe_Log.trace(e,{ fileName : "http/LoginHelper.hx", lineNumber : 393, className : "http.LoginHelper", methodName : "ondata"});
					haxe_Log.trace(i,{ fileName : "http/LoginHelper.hx", lineNumber : 394, className : "http.LoginHelper", methodName : "ondata"});
					rejected_error.push("" + Std.string(i.samaccountname) + " " + e.get_message());
				}
			}
		}
		this.manySignal.dispatch(pool,Lambda.concat(rejected_error,rejected_helper),poolLeavers);
	}
	,send: function() {
		haxe_Log.trace("http.LoginHelper::send 1",{ fileName : "http/LoginHelper.hx", lineNumber : 406, className : "http.LoginHelper", methodName : "send"});
		if(!this._mainDebug) {
			this.onMyData("{}");
			return;
		}
		haxe_Log.trace("should not come here in local",{ fileName : "http/LoginHelper.hx", lineNumber : 417, className : "http.LoginHelper", methodName : "send"});
		if(this.canRequest) {
			this.onData = $bind(this,this.onMyData);
			this.request(true);
		} else {
			throw new haxe_Exception("cannot request. Missing credetnitals I guess");
		}
	}
	,readTeamTl: function() {
		this.onData = $bind(this,this.onFetchTeamTL);
		this.setParameter("teamTl","");
		this.request(false);
	}
	,onFetchTeamTL: function(d) {
		var j = JSON.parse(d);
		if(Object.prototype.hasOwnProperty.call(j,"teamTl") && Reflect.field(j,"teamTl") != null) {
			this.teamTlSignal.dispatch(js_Boot.__cast(Reflect.field(j,"teamTl") , String));
		} else {
			haxe_Log.trace(j,{ fileName : "http/LoginHelper.hx", lineNumber : 451, className : "http.LoginHelper", methodName : "onFetchTeamTL"});
		}
	}
	,writeTeamTl: function(s) {
		this.onData = $bind(this,this.onFetchTeamTL);
		this.setParameter("teamTl",s);
		this.request(false);
	}
	,cretaDummyAgent: function() {
		return { status : "ldap could bind", authorized : true, username : "bbaudry", attributes : { description : "20973 / Internal employee / Manager Knowledge & Learning", mail : "Bruno.Baudry@salt.ch", samaccountname : "bbaudry", givenname : "Bruno", sn : "Baudry", mobile : "+41 78 787 8673", company : "Salt Mobile SA", l : "Biel", division : "Customer Operations", department : "Process & Quality", directreports : "CN=qook,OU=Domain-Generic-Accounts,DC=ad,DC=salt,DC=ch", accountexpires : "0", msexchuserculture : "fr-FR", title : "Manager Knowledge & Learning", initials : "BB", mamanger : "", memberof : ["Microsoft - Teams Members - Standard","Customer Operations - Training","RA-PulseSecure-Laptops-Salt","SG-PasswordSync","RA-EasyConnect-Web-Mobile-Qook","Customer Operations - Knowledge - Management","Customer Operations - Direct Reports","Customer Operations - Fiber Back Office","DOLPHIN_REC","Application-GIT_SALT-Operator","Application-GIT_SALT-Visitor","SG-OCH-WLAN_Users","SG-OCH-EnterpriseVault_DefaultProvisioningGroup","Entrust_SMS","MIS Mobile Users","GI-EBU-OR-CH-MobileUsers","Floor Marshalls Biel","CO_Knowledge And Translation Mgmt","co training admin_ud","Exchange_Customer Operations Management_ud","Exchange_CustomerCareServiceDesign_ud"], directReports : [{ "samaccountname" : "apeter", "mail" : "Aron.Peter@salt.ch", "distinguishedname" : "CN=Péter Áron,OU=Users,OU=Domain-Users,DC=ad,DC=salt,DC=ch", "description" : "25840 / Internal employee / Translator and Communication Specialist"},{ "samaccountname" : "awarmers", "mail" : "Alexandra.Warmers@salt.ch", "distinguishedname" : "CN=Warmers Alexandra,OU=Users,OU=Domain-Users,DC=ad,DC=salt,DC=ch", "description" : "30680 / Internal employee / Translator and Communication Specialist"},{ "samaccountname" : "grappaz1", "mail" : "Giovanna.Rappazzo@salt.ch", "distinguishedname" : "CN=Rappazzo Giovanna,OU=Users,OU=Domain-Users,DC=ad,DC=salt,DC=ch", "description" : "30850 / Internal employee / Translator and Communication Specialist"}], thumbnailphoto : "%FF%D8%FF%E0%00%10JFIF%00%01%01%01%00%60%00%60%00%00%FF%DB%00C%00%08%06%06%07%06%05%08%07%07%07%09%09%08%0A%0C%14%0D%0C%0B%0B%0C%19%12%13%0F%14%1D%1A%1F%1E%1D%1A%1C%1C%20%24.%27%20%22%2C%23%1C%1C%287%29%2C01444%1F%279%3D82%3C.342%FF%DB%00C%01%09%09%09%0C%0B%0C%18%0D%0D%182%21%1C%2122222222222222222222222222222222222222222222222222%FF%C0%00%11%08%00%40%00%40%03%01%22%00%02%11%01%03%11%01%FF%C4%00%1F%00%00%01%05%01%01%01%01%01%01%00%00%00%00%00%00%00%00%01%02%03%04%05%06%07%08%09%0A%0B%FF%C4%00%B5%10%00%02%01%03%03%02%04%03%05%05%04%04%00%00%01%7D%01%02%03%00%04%11%05%12%211A%06%13Qa%07%22q%142%81%91%A1%08%23B%B1%C1%15R%D1%F0%243br%82%09%0A%16%17%18%19%1A%25%26%27%28%29%2A456789%3ACDEFGHIJSTUVWXYZcdefghijstuvwxyz%83%84%85%86%87%88%89%8A%92%93%94%95%96%97%98%99%9A%A2%A3%A4%A5%A6%A7%A8%A9%AA%B2%B3%B4%B5%B6%B7%B8%B9%BA%C2%C3%C4%C5%C6%C7%C8%C9%CA%D2%D3%D4%D5%D6%D7%D8%D9%DA%E1%E2%E3%E4%E5%E6%E7%E8%E9%EA%F1%F2%F3%F4%F5%F6%F7%F8%F9%FA%FF%C4%00%1F%01%00%03%01%01%01%01%01%01%01%01%01%00%00%00%00%00%00%01%02%03%04%05%06%07%08%09%0A%0B%FF%C4%00%B5%11%00%02%01%02%04%04%03%04%07%05%04%04%00%01%02w%00%01%02%03%11%04%05%211%06%12AQ%07aq%13%222%81%08%14B%91%A1%B1%C1%09%233R%F0%15br%D1%0A%16%244%E1%25%F1%17%18%19%1A%26%27%28%29%2A56789%3ACDEFGHIJSTUVWXYZcdefghijstuvwxyz%82%83%84%85%86%87%88%89%8A%92%93%94%95%96%97%98%99%9A%A2%A3%A4%A5%A6%A7%A8%A9%AA%B2%B3%B4%B5%B6%B7%B8%B9%BA%C2%C3%C4%C5%C6%C7%C8%C9%CA%D2%D3%D4%D5%D6%D7%D8%D9%DA%E2%E3%E4%E5%E6%E7%E8%E9%EA%F2%F3%F4%F5%F6%F7%F8%F9%FA%FF%DA%00%0C%03%01%00%02%11%03%11%00%3F%00%E6%B5%8B%E0%EF%FC8%0B%80%08%1E%95%CE%3C%85%9F%3F%D2%AD_N%CF%3F%27%00c%1C%FBU%12%C1%88%CF%E5%8A%C1%2B%1A%C9%8F%DC1%B8%01%9FaW%F4%DD%2A%FBV%9C%C7gl%F2%B8%FB%CC%06%00%FA%9E%95WF%88j%DA%E4%1Az%12%10%9D%F2%B0%EA%14%7F%5E%83%F1%AF%A0%B4%3D%3E%CA%CA%D28m%A2D%409%C0%EFY%D4%A9%CB%A25%A5K%9Fs%CA%8F%80%F5%D8b%DE%D0BI%E4%2F%99%FF%00%D6%AC%89%AD%EE%AC%AE%7C%B9%A1h%A5%5EJ%BA%F5%FAW%BF%18768%60%0F%15%91%E2%0D%1E%D3S%D3%DE%1B%98%C2%B1%1F%2C%80%7C%C8%7B%11S%0A%8D%EEi%3A%29-%0F%1Ey%01%8F%23%18%3E%D5c%C3NN%BDnx%F9w%1E%9E%D5R%EE%DE%5B%2B%9B%8B9%BF%D6F%D88%1C%1Fq%ECG5%2F%86%9F%1A%C2%B7%F7P%D6%E8%E4h%E7fb%5B%A7n%95F%F2o%2A%13%83%83%EBV_%27%07%A5cj7%0D%E6%EC%1D%07L%D0%86w%FE%00%F0%FE%A1cw-%E5%F5%A3%C4.%11%16%17b%08%20%92ON%87%81%C7Z%EF%1F%C72i%F3%B4V%DA4%D7%91Fv%99%04%AA%BB%88%FE%EA%93%93%F5%AA%FA-%CF%DA%DA%DEc%1AGo41%18%82%8F%BCJ%E5%9B%D3%BE%2BZ%EB%C0%D6%3A%8B%AC%C2%2Bo%BC%1F%7B%A6NGJ%E4r%E6%95%D9%DD%18r%C6%D154%3F%17Z%EBvr%CEm.%2C%CC%3F%EB%12u%00%8F%CA%B2%AE%BCy%E1%8B%B9%DA%DA%3DZ%0F3v%D0%ACH%E6%AD%7Fb%C3%A5%F8wRH%BE%7F%3D%95%0B%0E%06%07%1CW%157%84%2Fr%E6YD%90K%C3%AC%90%A9%1B1%CE%1B%19%CF%7Fj%B8%D8%25%CCb%F8%96r%FE%24%94%83%82%15y%FATZH%F25%16%90%7D%C6%5E%3E%BE%94%EF%16i%C9%A7%CDev%B3%B9%92%E9yF%C6%02%A8%C0%C7z%ABcs%B4%ED%E9%BB%8E%B5%D1%1D%8E9%ADN~R1%BA%B0o%1Fu%C15%AB%2B%FC%A4%8FJ%A1%16%9Bu%7D%234h%160%0B%19%24%3BW%03%A9%F7%A6%8C%D9%DF%F8%03X%BB%9BIkyd%DE%96r%04%83%3DUXg%1FJ%F4%09%B5%BB%98Z%28%CD%B4%B3%DB2d%F9jI%1F%5Ct%15%E7%BF%0D%EC%226%D7%91H%E7%CC%BA%1B%E1%E3%19%D9%9E%9F%A9%AE%BFB%D6%86%9D%25%DC%17%84%07%0D%D5%9B%00%AF%B5sM%7B%EC%EC%A7%27%CA%86%9F%11%EB%10%C14-%7B%1C%96Rs%FB%EF%9AA%CF%2B%CD%5E%7F%11y%DA3%F9%8D%E5%2A%927%C8x%03%D75N%5DF%CA9%24%9C_Ou%1B%9C%A4nW%09%F58%C9%AE%2F%C5%FA%9D%C4%DAu%AC~_%93%15%C33%2Awd%07%A9%FA%9F%E5W%18%DF%40%9DD%B63%FCW%AD%A6%AD%AF4%B6%D2%16%B5%85DV%E7%1Br%A3%A9%C7%B9%CDCaq%99%15I%EB%FAV%1E%40%EBW-%25%C4%8B%F5%AD%ADc%95%BB%BB%9A%97ZTz%3C%0A%F7l%97%17-%80%22%1Fq%3D%CF%F7%BF%95K%60%14%40%EDq%FB%E9.0%A7%23%80%BD%B1%EC%0DW%D6%CC%B2%AB%B9%CEW%04%8Am%84%81%89s%D98%FC%29%5BA_R%F5%85%DB%0BheG%2B%2Cm%9C%8E%A3%D2%BA%ABX4%EF%10%27%9Bu%1B%991%89%02%1E%FF%00%85p%C8%FED%F1%A3%10%23.%D1%B7%B79%07%FC%FA%D5%A8%F5%F94%8DJ%D6K%40%5D%99%C6%E1%D0%14%CF9%F752%8D%CB%8C%ECv%C9%E1%3D%12%D2%EA%27%B7I%A5f%E4%23%CAX%0F%C2%B8_%17%EA%8B%A8x%8B%CBS%FE%8D%116%D1%15%E8%0A%F5%3F%9EG%E1%5D%EF%8B5%86%D0%B4%3B%9B%A8%94-%D4%A3%CA%88%E3%18%27%BDy%1C%A3%29%0CY%2C%F1I%83%C7%A1%C9%3F%CC%FE5P%5DGU%A5%A2%17%08%CF%B2%40U%B3%80%C2%A4he%B6ef%1B%90%9E%19z%1A%8E%E914a2Y%9B%8A%D3%85%8E%D2%BFxc%0C%0FCV%CC%91%FF%D9"}};
	}
	,__class__: http_LoginHelper
});
var http_Parameters = $hxEnums["http.Parameters"] = { __ename__:"http.Parameters",__constructs__:null
	,subject: {_hx_name:"subject",_hx_index:0,__enum__:"http.Parameters",toString:$estr}
	,from_email: {_hx_name:"from_email",_hx_index:1,__enum__:"http.Parameters",toString:$estr}
	,from_full_name: {_hx_name:"from_full_name",_hx_index:2,__enum__:"http.Parameters",toString:$estr}
	,to_email: {_hx_name:"to_email",_hx_index:3,__enum__:"http.Parameters",toString:$estr}
	,to_full_name: {_hx_name:"to_full_name",_hx_index:4,__enum__:"http.Parameters",toString:$estr}
	,cc_email: {_hx_name:"cc_email",_hx_index:5,__enum__:"http.Parameters",toString:$estr}
	,cc_full_name: {_hx_name:"cc_full_name",_hx_index:6,__enum__:"http.Parameters",toString:$estr}
	,bcc_email: {_hx_name:"bcc_email",_hx_index:7,__enum__:"http.Parameters",toString:$estr}
	,bcc_full_name: {_hx_name:"bcc_full_name",_hx_index:8,__enum__:"http.Parameters",toString:$estr}
	,body: {_hx_name:"body",_hx_index:9,__enum__:"http.Parameters",toString:$estr}
};
http_Parameters.__constructs__ = [http_Parameters.subject,http_Parameters.from_email,http_Parameters.from_full_name,http_Parameters.to_email,http_Parameters.to_full_name,http_Parameters.cc_email,http_Parameters.cc_full_name,http_Parameters.bcc_email,http_Parameters.bcc_full_name,http_Parameters.body];
var http_VersionHelper = function(commonlibs,scriptName) {
	haxe_http_HttpJs.call(this,commonlibs + "version/index.php");
	this.scriptName = scriptName;
	this.addParameter("scriptfile",scriptName);
	this.extension = "";
	this.reg = new EReg("^\\.\\/" + scriptName + "_(\\d{8}_\\d{6})" + this.extension + ".js$","g");
	haxe_Log.trace(this.reg,{ fileName : "http/VersionHelper.hx", lineNumber : 31, className : "http.VersionHelper", methodName : "new"});
	this.scriptChangedSignal = new signals_Signal1();
	this.async = true;
	this.onData = $bind(this,this.ondata);
	this.onError = $bind(this,this.onerror);
	this.onStatus = $bind(this,this.onstatus);
	this.cachedVersion = this.getVersion();
};
$hxClasses["http.VersionHelper"] = http_VersionHelper;
http_VersionHelper.__name__ = "http.VersionHelper";
http_VersionHelper.__super__ = haxe_http_HttpJs;
http_VersionHelper.prototype = $extend(haxe_http_HttpJs.prototype,{
	reg: null
	,scriptName: null
	,extension: null
	,scriptChangedSignal: null
	,cachedVersion: null
	,getFullVersion: function() {
		return this.get_scriptName() + "_" + this.get_cachedVersion();
	}
	,getVersion: function() {
		var scripts = window.document.getElementsByTagName("script");
		var version = "";
		var _g = 0;
		var _g1 = scripts.length;
		while(_g < _g1) {
			var i = _g++;
			if(scripts[i].attributes.getNamedItem("src") != null && scripts[i].attributes.getNamedItem("src").nodeValue.indexOf(this.get_scriptName() + "_") == 0) {
				version = scripts[i].attributes.getNamedItem("src").nodeValue;
				break;
			}
		}
		return StringTools.replace(StringTools.replace(version,this.extension + ".js",""),this.get_scriptName() + "_","");
	}
	,get_cachedVersion: function() {
		return this.cachedVersion;
	}
	,ondata: function(data) {
		haxe_Log.trace("http.VersionHelper::ondata::data " + data,{ fileName : "http/VersionHelper.hx", lineNumber : 71, className : "http.VersionHelper", methodName : "ondata"});
		if(Main._mainDebug) {
			haxe_Log.trace("version " + this.get_cachedVersion() + " vs " + (this.get_scriptName() + "_" + data),{ fileName : "http/VersionHelper.hx", lineNumber : 77, className : "http.VersionHelper", methodName : "ondata"});
		}
		if(data > this.get_cachedVersion()) {
			haxe_Log.trace("update " + this.get_cachedVersion() + " to " + data,{ fileName : "http/VersionHelper.hx", lineNumber : 83, className : "http.VersionHelper", methodName : "ondata"});
			this.scriptChangedSignal.dispatch(true);
		} else {
			haxe_Log.trace("current version " + this.get_cachedVersion() + " is aligned with " + data + " or debugging ",{ fileName : "http/VersionHelper.hx", lineNumber : 90, className : "http.VersionHelper", methodName : "ondata"});
			this.scriptChangedSignal.dispatch(false);
		}
	}
	,onerror: function(n) {
		haxe_Log.trace(n,{ fileName : "http/VersionHelper.hx", lineNumber : 100, className : "http.VersionHelper", methodName : "onerror"});
	}
	,get_scriptName: function() {
		return this.scriptName;
	}
	,onstatus: function(n) {
		haxe_Log.trace(n,{ fileName : "http/VersionHelper.hx", lineNumber : 112, className : "http.VersionHelper", methodName : "onstatus"});
	}
	,__class__: http_VersionHelper
	,__properties__: $extend(haxe_http_HttpJs.prototype.__properties__,{get_cachedVersion:"get_cachedVersion",get_scriptName:"get_scriptName"})
});
var js_Boot = function() { };
$hxClasses["js.Boot"] = js_Boot;
js_Boot.__name__ = "js.Boot";
js_Boot.getClass = function(o) {
	if(o == null) {
		return null;
	} else if(((o) instanceof Array)) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o.__enum__) {
			var e = $hxEnums[o.__enum__];
			var con = e.__constructs__[o._hx_index];
			var n = con._hx_name;
			if(con.__params__) {
				s = s + "\t";
				return n + "(" + ((function($this) {
					var $r;
					var _g = [];
					{
						var _g1 = 0;
						var _g2 = con.__params__;
						while(true) {
							if(!(_g1 < _g2.length)) {
								break;
							}
							var p = _g2[_g1];
							_g1 = _g1 + 1;
							_g.push(js_Boot.__string_rec(o[p],s));
						}
					}
					$r = _g;
					return $r;
				}(this))).join(",") + ")";
			} else {
				return n;
			}
		}
		if(((o) instanceof Array)) {
			var str = "[";
			s += "\t";
			var _g = 0;
			var _g1 = o.length;
			while(_g < _g1) {
				var i = _g++;
				str += (i > 0 ? "," : "") + js_Boot.__string_rec(o[i],s);
			}
			str += "]";
			return str;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( _g ) {
			haxe_NativeStackTrace.lastError = _g;
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var str = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		var k = null;
		for( k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str.length != 2) {
			str += ", \n";
		}
		str += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str += "\n" + s + "}";
		return str;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) {
		return false;
	}
	if(cc == cl) {
		return true;
	}
	var intf = cc.__interfaces__;
	if(intf != null) {
		var _g = 0;
		var _g1 = intf.length;
		while(_g < _g1) {
			var i = _g++;
			var i1 = intf[i];
			if(i1 == cl || js_Boot.__interfLoop(i1,cl)) {
				return true;
			}
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) {
		return false;
	}
	switch(cl) {
	case Array:
		return ((o) instanceof Array);
	case Bool:
		return typeof(o) == "boolean";
	case Dynamic:
		return o != null;
	case Float:
		return typeof(o) == "number";
	case Int:
		if(typeof(o) == "number") {
			return ((o | 0) === o);
		} else {
			return false;
		}
		break;
	case String:
		return typeof(o) == "string";
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(js_Boot.__downcastCheck(o,cl)) {
					return true;
				}
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(((o) instanceof cl)) {
					return true;
				}
			}
		} else {
			return false;
		}
		if(cl == Class ? o.__name__ != null : false) {
			return true;
		}
		if(cl == Enum ? o.__ename__ != null : false) {
			return true;
		}
		return o.__enum__ != null ? $hxEnums[o.__enum__] == cl : false;
	}
};
js_Boot.__downcastCheck = function(o,cl) {
	if(!((o) instanceof cl)) {
		if(cl.__isInterface__) {
			return js_Boot.__interfLoop(js_Boot.getClass(o),cl);
		} else {
			return false;
		}
	} else {
		return true;
	}
};
js_Boot.__implements = function(o,iface) {
	return js_Boot.__interfLoop(js_Boot.getClass(o),iface);
};
js_Boot.__cast = function(o,t) {
	if(o == null || js_Boot.__instanceof(o,t)) {
		return o;
	} else {
		throw haxe_Exception.thrown("Cannot cast " + Std.string(o) + " to " + Std.string(t));
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var js_Browser = function() { };
$hxClasses["js.Browser"] = js_Browser;
js_Browser.__name__ = "js.Browser";
js_Browser.__properties__ = {get_supported:"get_supported"};
js_Browser.get_supported = function() {
	if(typeof(window) != "undefined" && typeof(window.location) != "undefined") {
		return typeof(window.location.protocol) == "string";
	} else {
		return false;
	}
};
js_Browser.createXMLHttpRequest = function() {
	if(typeof XMLHttpRequest != "undefined") {
		return new XMLHttpRequest();
	}
	if(typeof ActiveXObject != "undefined") {
		return new ActiveXObject("Microsoft.XMLHTTP");
	}
	throw haxe_Exception.thrown("Unable to create XMLHttpRequest object.");
};
var ldap_Params = function() { };
$hxClasses["ldap.Params"] = ldap_Params;
ldap_Params.__name__ = "ldap.Params";
var ldap_Results = function() { };
$hxClasses["ldap.Results"] = ldap_Results;
ldap_Results.__name__ = "ldap.Results";
var mail_Params = function() { };
$hxClasses["mail.Params"] = mail_Params;
mail_Params.__name__ = "mail.Params";
var regex_ExpReg = function() { };
$hxClasses["regex.ExpReg"] = regex_ExpReg;
regex_ExpReg.__name__ = "regex.ExpReg";
regex_ExpReg.STRING_TO_REG = function(s,opt) {
	if(opt == null) {
		opt = "gi";
	}
	return new EReg(s,opt);
};
regex_ExpReg.ALL_INSIDE_TAG_REG = function(tag) {
	return new EReg("<" + tag + "\\S?.*?>(.*?)<\\/" + tag + ">","gsm");
};
var xapi_types_IObject = function() { };
$hxClasses["xapi.types.IObject"] = xapi_types_IObject;
xapi_types_IObject.__name__ = "xapi.types.IObject";
xapi_types_IObject.__isInterface__ = true;
xapi_types_IObject.prototype = {
	objectType: null
	,get_objectType: null
	,__class__: xapi_types_IObject
	,__properties__: {get_objectType:"get_objectType"}
};
var xapi_types_IActor = function() { };
$hxClasses["xapi.types.IActor"] = xapi_types_IActor;
xapi_types_IActor.__name__ = "xapi.types.IActor";
xapi_types_IActor.__isInterface__ = true;
xapi_types_IActor.__interfaces__ = [xapi_types_IObject];
xapi_types_IActor.prototype = {
	objectType: null
	,__class__: xapi_types_IActor
};
var xapi_Agent = function(email,name) {
	if(name == null) {
		name = "";
	}
	this.objectType = "Agent";
	this.mbox = "";
	if(email.indexOf("mailto:") == -1) {
		this.mbox = "mailto:";
	}
	this.mbox = this.get_mbox() + email.toLowerCase();
	this.name = name == "" ? email : name.toLowerCase();
	if(this.get_mbox() == "mailto:") {
		throw haxe_Exception.thrown(new xapi_MissingActorIri(this));
	}
	if(!xapi_types_Standards.EMAIL.match(this.get_mbox())) {
		throw haxe_Exception.thrown(new xapi_BadEmailFormat(this.get_mbox()));
	}
};
$hxClasses["xapi.Agent"] = xapi_Agent;
xapi_Agent.__name__ = "xapi.Agent";
xapi_Agent.__interfaces__ = [xapi_types_IActor];
xapi_Agent.FROM_JSON = function(json) {
	try {
		return new xapi_Agent(Reflect.field(json,"mbox"),Reflect.field(json,"name"));
	} catch( _g ) {
		return null;
	}
};
xapi_Agent.prototype = {
	mbox: null
	,name: null
	,objectType: null
	,getSimpleEmail: function() {
		return StringTools.replace(this.get_mbox(),"mailto:","");
	}
	,getActorUrl: function() {
		var s = "{\"name\":\"" + this.get_name() + "\",\"mbox\":\"" + this.get_mbox() + "\"}";
		return "&actor=" + encodeURIComponent(s);
	}
	,getFirstName: function() {
		return StringTools.replace(this.get_mbox().split(".")[0],"mailto:","");
	}
	,getLastName: function() {
		return this.get_mbox().split(".")[1].split("@")[0];
	}
	,get_name: function() {
		return this.name;
	}
	,get_mbox: function() {
		return this.mbox;
	}
	,get_objectType: function() {
		return this.objectType;
	}
	,__class__: xapi_Agent
	,__properties__: {get_objectType:"get_objectType",get_name:"get_name",get_mbox:"get_mbox"}
};
var roles_Actor = function(jsonUser,authorised) {
	if(authorised == null) {
		authorised = true;
	}
	this.authorised = authorised;
	this.set_canDispach(authorised);
	this.set_statement("");
	haxe_Log.trace("Actor::Actor::jsonUser " + Std.string(jsonUser.directReports),{ fileName : "roles/Actor.hx", lineNumber : 53, className : "roles.Actor", methodName : "new", customParams : [jsonUser.directReports == null]});
	if(jsonUser != null) {
		try {
			xapi_Agent.call(this,jsonUser.mail,jsonUser.samaccountname);
			this.manager = jsonUser.boss == null ? null : new roles_Actor(jsonUser.boss,false);
			if(jsonUser.samaccountname == null) {
				throw haxe_Exception.thrown("sAMAccountName is null");
			} else {
				this.sAMAccountName = jsonUser.samaccountname;
			}
			this.firstName = jsonUser.givenname;
			this.sirName = jsonUser.sn;
			this.mobile = jsonUser.mobile;
			this.company = jsonUser.company;
			this.workLocation = jsonUser.l;
			this.division = jsonUser.division;
			this.department = jsonUser.department;
			this.set_directReports(jsonUser.directReports == null ? [] : this.toActorsArray(jsonUser.directReports));
			this.set_peers(jsonUser.peers == null ? [] : this.toActorsArray(jsonUser.peers));
			this.distinguishedName = jsonUser.distinguishedname;
			this.accountExpires = jsonUser.accountexpires;
			this.set_mainLanguage(jsonUser.msexchuserculture == null ? "en-GB" : jsonUser.msexchuserculture);
			this.title = jsonUser.title;
			this.initials = jsonUser.initials;
			this.memberOf = jsonUser.memberof;
			this.description = jsonUser.description;
			this.thumbnailphoto = jsonUser.thumbnailphoto;
		} catch( _g ) {
			var e = haxe_Exception.caught(_g);
			haxe_Log.trace(e,{ fileName : "roles/Actor.hx", lineNumber : 85, className : "roles.Actor", methodName : "new"});
		}
	} else {
		haxe_Log.trace("jsonUser is null",{ fileName : "roles/Actor.hx", lineNumber : 90, className : "roles.Actor", methodName : "new"});
	}
};
$hxClasses["roles.Actor"] = roles_Actor;
roles_Actor.__name__ = "roles.Actor";
roles_Actor.__super__ = xapi_Agent;
roles_Actor.prototype = $extend(xapi_Agent.prototype,{
	xapiClone: null
	,thumbnailphoto: null
	,manager: null
	,authorised: null
	,sAMAccountName: null
	,firstName: null
	,sirName: null
	,mobile: null
	,company: null
	,workLocation: null
	,division: null
	,department: null
	,description: null
	,directReports: null
	,peers: null
	,distinguishedName: null
	,accountExpires: null
	,title: null
	,initials: null
	,memberOf: null
	,canDispach: null
	,mainLanguage: null
	,statement: null
	,cloneForXapi: function() {
		if(this.xapiClone == null) {
			this.xapiClone = new xapi_Agent(this.get_mbox(),this.get_name());
		}
		return this.xapiClone;
	}
	,hasDirectReport: function(sAMAccountName) {
		if(this.get_directReports() == null || this.get_directReports() == []) {
			return false;
		}
		var _g = 0;
		var _g1 = this.get_directReports();
		while(_g < _g1.length) {
			var i = _g1[_g];
			++_g;
			if(i.get_sAMAccountName() == sAMAccountName) {
				return true;
			}
		}
		return false;
	}
	,getDirectReportsAMAccountNames: function() {
		var _g = [];
		var x = $getIterator(this.get_directReports());
		while(x.hasNext()) {
			var x1 = x.next();
			_g.push(x1.get_sAMAccountName());
		}
		return _g;
	}
	,toActorsArray: function(list) {
		var a = [];
		var _g = 0;
		while(_g < list.length) {
			var i = list[_g];
			++_g;
			a.push(new roles_Actor(i));
		}
		return a;
	}
	,isMember: function(groupName) {
		if(this.get_memberOf() == null || this.get_memberOf() == []) {
			return false;
		}
		return this.get_memberOf().indexOf(groupName) > -1;
	}
	,isManyMember: function(groups,all) {
		if(all == null) {
			all = false;
		}
		var tmp = false;
		var _g = 0;
		while(_g < groups.length) {
			var i = groups[_g];
			++_g;
			if(!this.isMember(i)) {
				if(all) {
					return false;
				} else {
					continue;
				}
			} else if(!all) {
				return true;
			} else {
				tmp = true;
			}
		}
		return tmp;
	}
	,twoCharsLang: function(caps) {
		if(caps == null) {
			caps = true;
		}
		if(caps) {
			return this.get_mainLanguage().substring(0,2).toUpperCase();
		} else {
			return this.get_mainLanguage().substring(0,2).toLowerCase();
		}
	}
	,buildEmailBody: function() {
		var bodyList = "<li>" + this.get_firstName() + " " + this.get_sirName() + " (" + this.get_sAMAccountName() + ") " + this.get_title() + "</li>";
		bodyList += "<li>";
		bodyList += this.get_company() == null ? "" : this.get_company();
		bodyList += this.get_department() == null ? "" : " | " + this.get_department();
		bodyList += this.get_division() == null ? "" : " | " + this.get_division();
		bodyList += this.get_workLocation() == null ? "" : " | " + this.get_workLocation();
		bodyList += "</li>";
		return "<ul>" + bodyList + "</ul>";
	}
	,findDirectReportBysAMAccountName: function(who) {
		return Lambda.find(this.get_directReports(),function(e) {
			return e.get_sAMAccountName() == who;
		});
	}
	,get_sAMAccountName: function() {
		return this.sAMAccountName;
	}
	,get_firstName: function() {
		return this.firstName;
	}
	,get_sirName: function() {
		return this.sirName;
	}
	,get_mobile: function() {
		return this.mobile;
	}
	,get_company: function() {
		return this.company;
	}
	,get_workLocation: function() {
		return this.workLocation;
	}
	,get_division: function() {
		return this.division;
	}
	,get_department: function() {
		return this.department;
	}
	,get_mainLanguage: function() {
		return this.mainLanguage;
	}
	,set_mainLanguage: function(value) {
		return this.mainLanguage = value;
	}
	,get_title: function() {
		return this.title;
	}
	,get_initials: function() {
		return this.initials;
	}
	,get_memberOf: function() {
		return this.memberOf;
	}
	,get_accountExpires: function() {
		return this.accountExpires;
	}
	,get_canDispach: function() {
		return this.canDispach;
	}
	,set_canDispach: function(value) {
		return this.canDispach = value;
	}
	,get_authorised: function() {
		return this.authorised;
	}
	,get_statement: function() {
		return this.statement;
	}
	,set_statement: function(value) {
		return this.statement = value;
	}
	,get_manager: function() {
		return this.manager;
	}
	,get_distinguishedName: function() {
		return this.distinguishedName;
	}
	,get_directReports: function() {
		return this.directReports;
	}
	,set_directReports: function(value) {
		return this.directReports = value;
	}
	,get_peers: function() {
		return this.peers;
	}
	,get_description: function() {
		return this.description;
	}
	,get_thumbnailphoto: function() {
		return this.thumbnailphoto;
	}
	,set_peers: function(value) {
		return this.peers = value;
	}
	,__class__: roles_Actor
	,__properties__: $extend(xapi_Agent.prototype.__properties__,{set_statement:"set_statement",get_statement:"get_statement",set_mainLanguage:"set_mainLanguage",get_mainLanguage:"get_mainLanguage",set_canDispach:"set_canDispach",get_canDispach:"get_canDispach",get_memberOf:"get_memberOf",get_initials:"get_initials",get_title:"get_title",get_accountExpires:"get_accountExpires",get_distinguishedName:"get_distinguishedName",set_peers:"set_peers",get_peers:"get_peers",set_directReports:"set_directReports",get_directReports:"get_directReports",get_description:"get_description",get_department:"get_department",get_division:"get_division",get_workLocation:"get_workLocation",get_company:"get_company",get_mobile:"get_mobile",get_sirName:"get_sirName",get_firstName:"get_firstName",get_sAMAccountName:"get_sAMAccountName",get_authorised:"get_authorised",get_manager:"get_manager",get_thumbnailphoto:"get_thumbnailphoto"})
});
var roles_Coach = function(jsonUser,authorised) {
	if(authorised == null) {
		authorised = true;
	}
	roles_Actor.call(this,jsonUser,authorised);
};
$hxClasses["roles.Coach"] = roles_Coach;
roles_Coach.__name__ = "roles.Coach";
roles_Coach.CREATE_DUMMY = function(authorised) {
	if(authorised == null) {
		authorised = true;
	}
	haxe_Log.trace("Coach::CREATE_DUMMY created",{ fileName : "roles/Coach.hx", lineNumber : 22, className : "roles.Coach", methodName : "CREATE_DUMMY"});
	return new roles_Coach({ directReports : [{ samaccountname : "apeter", mail : "Aron.Peter@salt.ch", distinguishedname : "CN=Péter Áron,OU=Users,OU=Domain-Users,DC=ad,DC=salt,DC=ch", description : "25840 / Internal employee / Translator and Communication Specialist"},{ samaccountname : "awarmers", mail : "Alexandra.Warmers@salt.ch", distinguishedname : "CN=Warmers Alexandra,OU=Users,OU=Domain-Users,DC=ad,DC=salt,DC=ch", description : "30680 / Internal employee / Translator and Communication Specialist"},{ samaccountname : "grappaz1", mail : "Giovanna.Rappazzo@salt.ch", distinguishedname : "CN=Rappazzo Giovanna,OU=Users,OU=Domain-Users,DC=ad,DC=salt,DC=ch", description : "30850 / Internal employee / Translator and Communication Specialist"}], mail : "Bruno.Baudry@salt.ch", samaccountname : "bbaudry", givenname : "Bruno", sn : "Baudry", mobile : "+41 78 787 8673", company : "Salt Mobile SA", l : "Biel", division : "Customer Operations", department : "Process & Quality", distinguishedname : "CN=Baudry Bruno,OU=Domain-Generic-Accounts,DC=ad,DC=salt,DC=ch", accountexpires : "0", msexchuserculture : "fr-FR", title : "Manager Knowledge & Learning", initials : "BB", memberof : ["Microsoft - Teams Members - Standard","Customer Operations - Training","RA-PulseSecure-Laptops-Salt","SG-PasswordSync","RA-EasyConnect-Web-Mobile-Qook","Customer Operations - Knowledge - Management","Customer Operations - Direct Reports","Customer Operations - Fiber Back Office","DOLPHIN_REC","Application-GIT_SALT-Operator","Application-GIT_SALT-Visitor","SG-OCH-WLAN_Users","SG-OCH-EnterpriseVault_DefaultProvisioningGroup","Entrust_SMS","MIS Mobile Users","GI-EBU-OR-CH-MobileUsers","Floor Marshalls Biel","CO_Knowledge And Translation Mgmt","co training admin_ud","Exchange_Customer Operations Management_ud","Exchange_CustomerCareServiceDesign_ud"], thumbnailphoto : "/9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0aHBwgJC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJCQwLDBgNDRgyIRwhMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjL/wAARCABAAEADASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDwMM8XCsRn0pQryvk5J96sIVkbgA4qzDD+83YoAj0yA/bULQ+YoOStal7fw3dyFt7SSXb8uIl+X/69XNC0eXW9YTTogVUjfcMvVYh1/E9K9Zt9IsdOgWK2tY1VRgACgDx7T9d1vQLrz7BJLX+9vjGPxyK1Ne8SXPi63j/tF0TaPl2KMA/hXb63oy6hayReX5ZYZBYdDXkd3FPp9w8B+VlJDKeR1oAp3tutvLgqSCOGU8Gqm7ByuRWiXFxA0THJPzL7GqBglAzsOKAL+n3sNlIWaESZrqNPtU1gLP8AJBEvUetcN3xV+K5uVg8tJGC+gNAHXWSy6adUuLFZmfzVAmikK8Afd9ySc49BXX382pS+F7Wc+assyb5EU7XUZ9ff+tUvBF3YWngsi9jWSZ7pztIzknAH6Vp3XiK0u7spaxzhotqmN4jtcemegoAwbDVJ7W5W2ks5z5ihvOjlaReRnDDv746Vi+OtKltZYdQCERTLtb/Zb3/D+VemJf6XHb+daKsbMOQeCK43xhfvqtibaFd+XHQUAeaxLIGacLlI+GOaRr2TkcYPTiusvrGHTfDux0XfcOCh24bH8QP0xXIOAZcdqALh0LUEOTATj0NONrcxD54HUfSvVI7GWMSBlPXimy2K5VGiBDeq0Ac14OleQ3UEWEniUSxmVSVB6E4/KtNbvVzckLNZM2cMTCyjP1rm5fEyab4sRoEU2Vs5jkCDmQEYb689PpXS3PjLQvJLKysx5GFOaALMtjJdxl5pdkgHPlHhjWBr13DpmmyQLKVmkG1SPve5rPvfG7szfZY+MYUniuTubma7naady8jHkmgC/ca3eXzB72Z53Vdil8fKPbFMgt1lIYuBk96zwcHNdNZaFFqWnJd27yICdrA9iOtAHSw6/ch8rKSM9DW03i6GHTpppbQSyRRFgoONxA9axRZ2TMcwlee1M1DS7d9KujE8u9YmYKGxnAz1oA83Y7mJxjJzikoooAKKVVLMFUZJOAK9L8K+GotO06e+1HTFlmUB1llVnVB2AUdSfU9qAPNvKk8sSeW2wnAbHBq5pmr3elTF7d/kb78bcq31H9a9YkuLS3E8ssbtEBlTOi/MwGdu0Djd1AA/HtXI+KtK0y8086xpNv5TcGaOL7g9SB25NAH/2Q==", boss : { mail : "fabien.renard@salt.ch", samaccountname : "frenard", distinguishedname : "CN=Renard Fabien,OU=Domain-Generic-Accounts,DC=ad,DC=salt,DC=ch"}},authorised);
};
roles_Coach.CREATE_ERROR = function(error) {
	return new roles_Coach({ mail : "error@salt.ch", samaccountname : error, title : "User not found or incorrect password"},false);
};
roles_Coach.__super__ = roles_Actor;
roles_Coach.prototype = $extend(roles_Actor.prototype,{
	__class__: roles_Coach
});
var roles_Monitoree = function(jsonUser,authorised) {
	if(authorised == null) {
		authorised = true;
	}
	roles_Actor.call(this,jsonUser,authorised);
};
$hxClasses["roles.Monitoree"] = roles_Monitoree;
roles_Monitoree.__name__ = "roles.Monitoree";
roles_Monitoree.CREATE_DUMMY = function(samaccountname) {
	return new roles_Monitoree({ mail : "Bruno.Baudry@salt.ch", samaccountname : samaccountname, givenname : "Bruno", sn : "Baudry", mobile : "+41 78 787 8673", company : "Salt Mobile SA", l : "Biel", division : "Customer Operations", department : "Process & Quality", directreports : "CN=qook,OU=Domain-Generic-Accounts,DC=ad,DC=salt,DC=ch", accountexpires : "0", msexchuserculture : "fr-FR", title : "Manager Knowledge & Learning", initials : "BB", memberof : ["Microsoft - Teams Members - Standard","Customer Operations - Training","RA-PulseSecure-Laptops-Salt","SG-PasswordSync","RA-EasyConnect-Web-Mobile-Qook","Customer Operations - Knowledge - Management","Customer Operations - Direct Reports","Customer Operations - Fiber Back Office","DOLPHIN_REC","Application-GIT_SALT-Operator","Application-GIT_SALT-Visitor","SG-OCH-WLAN_Users","SG-OCH-EnterpriseVault_DefaultProvisioningGroup","Entrust_SMS","MIS Mobile Users","GI-EBU-OR-CH-MobileUsers","Floor Marshalls Biel","CO_Knowledge And Translation Mgmt","co training admin_ud","Exchange_Customer Operations Management_ud","Exchange_CustomerCareServiceDesign_ud"], boss : { mail : "fabien.reanard@salt.ch", samaccountname : "frenard", distinguishedname : "CN=Renard Fabien,OU=Domain-Generic-Accounts,DC=ad,DC=salt,DC=ch"}},true);
};
roles_Monitoree.CREATE_ERROR = function(error) {
	return new roles_Monitoree({ mail : "error@salt.ch", samaccountname : error},false);
};
roles_Monitoree.__super__ = roles_Actor;
roles_Monitoree.prototype = $extend(roles_Actor.prototype,{
	__class__: roles_Monitoree
});
var signals_BaseSignal = $hx_exports["BaseSignal"] = function(fireOnAdd) {
	if(fireOnAdd == null) {
		fireOnAdd = false;
	}
	this.defaultCallbackProps = 0;
	this.requiresSort = false;
	this.toTrigger = [];
	this.callbacks = [];
	this.mute = false;
	this._fireOnAdd = false;
	this._fireOnAdd = fireOnAdd;
};
$hxClasses["signals.BaseSignal"] = signals_BaseSignal;
signals_BaseSignal.__name__ = "signals.BaseSignal";
signals_BaseSignal.prototype = {
	numListeners: null
	,hasListeners: null
	,_fireOnAdd: null
	,mute: null
	,currentCallback: null
	,callbacks: null
	,toTrigger: null
	,requiresSort: null
	,defaultCallbackProps: null
	,sortPriority: function() {
		if(this.requiresSort) {
			this.callbacks.sort($bind(this,this.sortCallbacks));
			this.requiresSort = false;
		}
	}
	,dispatchCallbacks: function() {
		var i = 0;
		while(i < this.callbacks.length) {
			var callbackData = this.callbacks[i];
			if(callbackData.repeat < 0 || callbackData.callCount <= callbackData.repeat) {
				this.toTrigger.push(callbackData);
			} else {
				callbackData.remove = true;
			}
			callbackData.callCount++;
			++i;
		}
		var j = this.callbacks.length - 1;
		while(j >= 0) {
			var callbackData = this.callbacks[j];
			if(callbackData.remove == true) {
				this.callbacks.splice(j,1);
			}
			--j;
		}
		var _g = 0;
		var _g1 = this.toTrigger.length;
		while(_g < _g1) {
			var l = _g++;
			if(this.toTrigger[l] != null) {
				this.toTrigger[l].dispatchMethod(this.toTrigger[l].callback,this.toTrigger[l]);
			}
		}
		this.toTrigger = [];
	}
	,dispatchCallback: function(callback,callbackData) {
		throw haxe_Exception.thrown("implement in override");
	}
	,dispatchCallback1: function(callback,callbackData) {
		throw haxe_Exception.thrown("implement in override");
	}
	,dispatchCallback2: function(callback,callbackData) {
		throw haxe_Exception.thrown("implement in override");
	}
	,dispatchCallback3: function(callback,callbackData) {
		throw haxe_Exception.thrown("implement in override");
	}
	,dispatchCheck: function(callback,callbackData) {
		try {
			this.dispatchCallback(callback,callbackData);
		} catch( _g ) {
			haxe_NativeStackTrace.lastError = _g;
			var e = haxe_Exception.caught(_g).unwrap();
			if(e == "Invalid call") {
				return;
			}
		}
		callbackData.dispatchMethod = $bind(this,this.dispatchCallback);
	}
	,dispatchCheck1: function(callback,callbackData) {
		try {
			this.dispatchCallback1(callback,callbackData);
		} catch( _g ) {
			haxe_NativeStackTrace.lastError = _g;
			var e = haxe_Exception.caught(_g).unwrap();
			if(e == "Invalid call") {
				this.dispatchCallback(callback,callbackData);
				return;
			}
		}
		callbackData.dispatchMethod = $bind(this,this.dispatchCallback1);
	}
	,dispatchCheck2: function(callback,callbackData) {
		try {
			this.dispatchCallback2(callback,callbackData);
		} catch( _g ) {
			haxe_NativeStackTrace.lastError = _g;
			var e = haxe_Exception.caught(_g).unwrap();
			if(e == "Invalid call") {
				this.dispatchCheck1(callback,callbackData);
				return;
			}
		}
		callbackData.dispatchMethod = $bind(this,this.dispatchCallback2);
	}
	,dispatchCheck3: function(callback,callbackData) {
		try {
			this.dispatchCallback3(callback,callbackData);
		} catch( _g ) {
			haxe_NativeStackTrace.lastError = _g;
			var e = haxe_Exception.caught(_g).unwrap();
			if(e == "Invalid call") {
				this.dispatchCheck2(callback,callbackData);
				return;
			}
		}
		callbackData.dispatchMethod = $bind(this,this.dispatchCallback3);
	}
	,sortCallbacks: function(s1,s2) {
		if(s1.priority > s2.priority) {
			return -1;
		} else if(s1.priority < s2.priority) {
			return 1;
		} else {
			return 0;
		}
	}
	,get_numListeners: function() {
		return this.callbacks.length;
	}
	,get_hasListeners: function() {
		return this.get_numListeners() > 0;
	}
	,add: function(callback,fireOnce,priority,fireOnAdd) {
		if(priority == null) {
			priority = 0;
		}
		if(fireOnce == null) {
			fireOnce = false;
		}
		if(fireOnce != false || priority != 0 || fireOnAdd != null) {
			var warningMessage = "\nWARNING: fireOnce, priority and fireOnAdd params will be removed from 'Signals' in a future release\nInstead use daisy chain methods, eg: obj.add(callback).repeat(5).priority(1000).fireOnAdd();";
			console.warn(warningMessage);
		}
		var numParams = this.getNumParams(callback);
		var repeat = -1;
		if(fireOnce == true) {
			repeat = 0;
		}
		this.currentCallback = { params : numParams, callback : callback, callCount : 0, repeat : repeat, priority : priority, remove : false};
		if(numParams == 0) {
			this.currentCallback.dispatchMethod = $bind(this,this.dispatchCheck);
		} else if(numParams == 1) {
			this.currentCallback.dispatchMethod = $bind(this,this.dispatchCheck1);
		} else if(numParams == 2) {
			this.currentCallback.dispatchMethod = $bind(this,this.dispatchCheck2);
		} else if(numParams == 3) {
			this.currentCallback.dispatchMethod = $bind(this,this.dispatchCheck3);
		}
		this.callbacks.push(this.currentCallback);
		if(priority != 0) {
			this.requiresSort = true;
		}
		if(fireOnAdd == true || this._fireOnAdd == true) {
			this.currentCallback.dispatchMethod(callback,this.currentCallback);
		}
		return this;
	}
	,getNumParams: function(callback) {
		var length = Reflect.getProperty(callback,"length");
		if(length != null) {
			return length;
		}
		return this.defaultCallbackProps;
	}
	,priority: function(value) {
		if(this.currentCallback == null) {
			return this;
		}
		this.currentCallback.priority = value;
		this.requiresSort = true;
		return this;
	}
	,repeat: function(value) {
		if(value == null) {
			value = -1;
		}
		if(this.currentCallback == null) {
			return this;
		}
		this.currentCallback.repeat = value;
		return this;
	}
	,fireOnAdd: function() {
		if(this.currentCallback == null) {
			return;
		}
		this.currentCallback.callCount++;
		this.currentCallback.dispatchMethod(this.currentCallback.callback,this.currentCallback);
	}
	,remove: function(callback) {
		if(callback == null) {
			callback = false;
		}
		if(callback == true) {
			this.callbacks = [];
		} else {
			var j = 0;
			while(j < this.callbacks.length) if(this.callbacks[j].callback == callback) {
				this.callbacks.splice(j,1);
			} else {
				++j;
			}
		}
	}
	,__class__: signals_BaseSignal
	,__properties__: {get_hasListeners:"get_hasListeners",get_numListeners:"get_numListeners"}
};
var signals_Signal = $hx_exports["Signal"] = function(fireOnAdd) {
	if(fireOnAdd == null) {
		fireOnAdd = false;
	}
	signals_BaseSignal.call(this,fireOnAdd);
};
$hxClasses["signals.Signal"] = signals_Signal;
signals_Signal.__name__ = "signals.Signal";
signals_Signal.__super__ = signals_BaseSignal;
signals_Signal.prototype = $extend(signals_BaseSignal.prototype,{
	dispatch: function() {
		if(this.mute) {
			return;
		}
		if(this.requiresSort) {
			this.callbacks.sort($bind(this,this.sortCallbacks));
			this.requiresSort = false;
		}
		var i = 0;
		while(i < this.callbacks.length) {
			var callbackData = this.callbacks[i];
			if(callbackData.repeat < 0 || callbackData.callCount <= callbackData.repeat) {
				this.toTrigger.push(callbackData);
			} else {
				callbackData.remove = true;
			}
			callbackData.callCount++;
			++i;
		}
		var j = this.callbacks.length - 1;
		while(j >= 0) {
			var callbackData = this.callbacks[j];
			if(callbackData.remove == true) {
				this.callbacks.splice(j,1);
			}
			--j;
		}
		var _g = 0;
		var _g1 = this.toTrigger.length;
		while(_g < _g1) {
			var l = _g++;
			if(this.toTrigger[l] != null) {
				this.toTrigger[l].dispatchMethod(this.toTrigger[l].callback,this.toTrigger[l]);
			}
		}
		this.toTrigger = [];
	}
	,dispatchCallback: function(callback,callbackData) {
		callback();
	}
	,dispatchCallback1: function(callback,callbackData) {
		throw haxe_Exception.thrown("Use Signal 1");
	}
	,dispatchCallback2: function(callback,callbackData) {
		throw haxe_Exception.thrown("Use Signal 2");
	}
	,dispatchCallback3: function(callback,callbackData) {
		throw haxe_Exception.thrown("Use Signal 3");
	}
	,__class__: signals_Signal
});
var signals_Signal1 = $hx_exports["Signal1"] = function() {
	signals_BaseSignal.call(this);
	this.defaultCallbackProps = 1;
};
$hxClasses["signals.Signal1"] = signals_Signal1;
signals_Signal1.__name__ = "signals.Signal1";
signals_Signal1.__super__ = signals_BaseSignal;
signals_Signal1.prototype = $extend(signals_BaseSignal.prototype,{
	value: null
	,dispatch: function(value1) {
		if(this.requiresSort) {
			this.callbacks.sort($bind(this,this.sortCallbacks));
			this.requiresSort = false;
		}
		this.value = value1;
		var i = 0;
		while(i < this.callbacks.length) {
			var callbackData = this.callbacks[i];
			if(callbackData.repeat < 0 || callbackData.callCount <= callbackData.repeat) {
				this.toTrigger.push(callbackData);
			} else {
				callbackData.remove = true;
			}
			callbackData.callCount++;
			++i;
		}
		var j = this.callbacks.length - 1;
		while(j >= 0) {
			var callbackData = this.callbacks[j];
			if(callbackData.remove == true) {
				this.callbacks.splice(j,1);
			}
			--j;
		}
		var _g = 0;
		var _g1 = this.toTrigger.length;
		while(_g < _g1) {
			var l = _g++;
			if(this.toTrigger[l] != null) {
				this.toTrigger[l].dispatchMethod(this.toTrigger[l].callback,this.toTrigger[l]);
			}
		}
		this.toTrigger = [];
		this.value = null;
	}
	,dispatchCallback: function(callback,callbackData) {
		callback();
	}
	,dispatchCallback1: function(callback,callbackData) {
		callback(this.value);
	}
	,dispatchCallback2: function(callback,callbackData) {
		throw haxe_Exception.thrown("Use Signal 2");
	}
	,dispatchCallback3: function(callback,callbackData) {
		throw haxe_Exception.thrown("Use Signal 3");
	}
	,__class__: signals_Signal1
});
var signals_Signal3 = $hx_exports["Signal3"] = function() {
	signals_BaseSignal.call(this);
	this.defaultCallbackProps = 3;
};
$hxClasses["signals.Signal3"] = signals_Signal3;
signals_Signal3.__name__ = "signals.Signal3";
signals_Signal3.__super__ = signals_BaseSignal;
signals_Signal3.prototype = $extend(signals_BaseSignal.prototype,{
	value1: null
	,value2: null
	,value3: null
	,dispatch: function(value1,value2,value3) {
		if(this.requiresSort) {
			this.callbacks.sort($bind(this,this.sortCallbacks));
			this.requiresSort = false;
		}
		this.value1 = value1;
		this.value2 = value2;
		this.value3 = value3;
		var i = 0;
		while(i < this.callbacks.length) {
			var callbackData = this.callbacks[i];
			if(callbackData.repeat < 0 || callbackData.callCount <= callbackData.repeat) {
				this.toTrigger.push(callbackData);
			} else {
				callbackData.remove = true;
			}
			callbackData.callCount++;
			++i;
		}
		var j = this.callbacks.length - 1;
		while(j >= 0) {
			var callbackData = this.callbacks[j];
			if(callbackData.remove == true) {
				this.callbacks.splice(j,1);
			}
			--j;
		}
		var _g = 0;
		var _g1 = this.toTrigger.length;
		while(_g < _g1) {
			var l = _g++;
			if(this.toTrigger[l] != null) {
				this.toTrigger[l].dispatchMethod(this.toTrigger[l].callback,this.toTrigger[l]);
			}
		}
		this.toTrigger = [];
		value1 = null;
		value2 = null;
		value3 = null;
	}
	,dispatchCallback: function(callback,callbackData) {
		callback();
	}
	,dispatchCallback1: function(callback,callbackData) {
		callback(this.value1);
	}
	,dispatchCallback2: function(callback,callbackData) {
		callback(this.value1,this.value2);
	}
	,dispatchCallback3: function(callback,callbackData) {
		callback(this.value1,this.value2,this.value3);
	}
	,__class__: signals_Signal3
});
var string_StringUtils = function() { };
$hxClasses["string.StringUtils"] = string_StringUtils;
string_StringUtils.__name__ = "string.StringUtils";
string_StringUtils.intlToLocalMSISDN = function(s) {
	return "0" + HxOverrides.substr(s,2,null);
};
string_StringUtils.removeWhite = function(s) {
	return s.split(" ").join("");
};
string_StringUtils.phonSpaces = function(s) {
	var t = s.split("");
	t.splice(8,0," ");
	t.splice(6,0," ");
	t.splice(3,0," ");
	return t.join("");
};
string_StringUtils.lineFeedToHTMLbr = function(s,lineFeed) {
	if(lineFeed == null) {
		lineFeed = "\n";
	}
	return s.split(lineFeed).join("<br/>");
};
string_StringUtils.removeBlankLines = function(s) {
	var f = string_StringUtils.isNotBlank;
	var _g = [];
	var _g1 = 0;
	var _g2 = s.split("\n");
	while(_g1 < _g2.length) {
		var v = _g2[_g1];
		++_g1;
		if(f(v)) {
			_g.push(v);
		}
	}
	return _g.join("\n");
};
string_StringUtils.lineFeedRemove = function(s,lineFeed) {
	if(lineFeed == null) {
		lineFeed = "\n";
	}
	return s.split(lineFeed).join(". ");
};
string_StringUtils.occurencesOf = function(s,sub) {
	return s.split(sub).length - 1;
};
string_StringUtils.buildSOLink = function(id) {
	return "<a href=\"https://cs.salt.ch/scripts/ticket.fcgi?_sf=0&action=doScreenDefinition&idString=viewCase&entryId=" + id + "\">" + id + "</a>";
};
string_StringUtils.buildMarilynLink = function(id) {
	return "<a href=\"https://customercare.salt.ch/admin/contracts/customer/?q=" + id.split(" ").join("") + "\">" + id + "</a>";
};
string_StringUtils.buildVtiProneLink = function(voip,contractor) {
	return "<a href=\"https://vti.salt.ch/index.php?module=Contractors&action=BasicAjax&mode=redirectToContractor&phone=" + voip + "\">" + contractor + "</a>";
};
string_StringUtils.roundedFloat = function(f) {
	var ff = f - (f | 0);
	haxe_Log.trace("string.StringUtils::roundedFloat::ff " + ff,{ fileName : "string/StringUtils.hx", lineNumber : 72, className : "string.StringUtils", methodName : "roundedFloat"});
	haxe_Log.trace("string.StringUtils::roundedFloat::ff (ff * 100) % 10",{ fileName : "string/StringUtils.hx", lineNumber : 73, className : "string.StringUtils", methodName : "roundedFloat", customParams : [ff * 100 % 10]});
	var add = ff > 0 && ff < 1 ? "0" : "";
	haxe_Log.trace("string.StringUtils::roundedFloat::add  " + add,{ fileName : "string/StringUtils.hx", lineNumber : 77, className : "string.StringUtils", methodName : "roundedFloat"});
	return (f == null ? "null" : "" + f) + add;
};
string_StringUtils.zeroLead = function(i) {
	return (i < 10 ? "0" : "") + (i == null ? "null" : "" + i);
};
string_StringUtils.isMinimalText = function(s,defaultText,minimalLength) {
	if(minimalLength == null) {
		minimalLength = 2;
	}
	if(defaultText == null) {
		defaultText = "";
	}
	if(StringTools.trim(s) != defaultText) {
		var f = string_StringUtils.isNotBlank;
		var _g = [];
		var _g1 = 0;
		var _g2 = s.split(" ");
		while(_g1 < _g2.length) {
			var v = _g2[_g1];
			++_g1;
			if(f(v)) {
				_g.push(v);
			}
		}
		return _g.length > minimalLength;
	} else {
		return false;
	}
};
string_StringUtils.wordCount = function(s) {
	var f = string_StringUtils.isNotBlank;
	var _g = [];
	var _g1 = 0;
	var _g2 = s.split(" ");
	while(_g1 < _g2.length) {
		var v = _g2[_g1];
		++_g1;
		if(f(v)) {
			_g.push(v);
		}
	}
	return _g.length;
};
string_StringUtils.isBlank = function(s) {
	return StringTools.trim(s) == "";
};
string_StringUtils.isNotBlank = function(s) {
	return StringTools.trim(s) != "";
};
string_StringUtils.getTags = function(s,tag) {
	return { start : s.indexOf("<" + tag + ">"), end : s.indexOf("</" + tag + ">") + ("</" + tag + ">").length};
};
string_StringUtils.removeTagsAndContent = function(s,tag) {
	var tmp = s;
	while(true) {
		var inlobj_start = tmp.indexOf("<" + tag + ">");
		var inlobj_end = tmp.indexOf("</" + tag + ">") + ("</" + tag + ">").length;
		if(!(inlobj_start != -1)) {
			break;
		}
		var tmpSub_start = tmp.indexOf("<" + tag + ">");
		var tmpSub_end = tmp.indexOf("</" + tag + ">") + ("</" + tag + ">").length;
		tmp = StringTools.replace(tmp,tmp.substring(tmpSub_start,tmpSub_end),"");
	}
	return tmp;
};
string_StringUtils.strHexToRGBInt = function(s) {
	var f = function(e) {
		if(e.length != 6) {
			return e.length == 8;
		} else {
			return true;
		}
	};
	var allgood = false;
	var rgbString = s.indexOf("#") == 0 ? HxOverrides.substr(s,1,null) : s.indexOf("0x") == 0 ? HxOverrides.substr(s,2,null) : s;
	if(f(rgbString)) {
		return { r : Std.parseInt("0x" + HxOverrides.substr(rgbString,0,2)), g : Std.parseInt("0x" + HxOverrides.substr(rgbString,2,2)), b : Std.parseInt("0x" + HxOverrides.substr(rgbString,4,2)), alpha : Math.round((Std.parseInt("0x" + HxOverrides.substr(rgbString,6,2)) == null ? 0 : Std.parseInt("0x" + HxOverrides.substr(rgbString,6,2))) / 2)};
	} else {
		return { r : 0, g : 0, b : 0, alpha : 0};
	}
};
var thx_Arrays = function() { };
$hxClasses["thx.Arrays"] = thx_Arrays;
thx_Arrays.__name__ = "thx.Arrays";
thx_Arrays.append = function(array,element) {
	array.push(element);
	return array;
};
thx_Arrays.appendIf = function(array,cond,element) {
	if(cond) {
		array.push(element);
	}
	return array;
};
thx_Arrays.applyIndexes = function(array,indexes,incrementDuplicates) {
	if(incrementDuplicates == null) {
		incrementDuplicates = false;
	}
	if(indexes.length != array.length) {
		throw new thx_Error("`Arrays.applyIndexes` can only be applied to two arrays with the same length",null,{ fileName : "thx/Arrays.hx", lineNumber : 55, className : "thx.Arrays", methodName : "applyIndexes"});
	}
	var result = [];
	if(incrementDuplicates) {
		var usedIndexes = thx_Set.createInt();
		var _g = 0;
		var _g1 = array.length;
		while(_g < _g1) {
			var i = _g++;
			var index = indexes[i];
			while(usedIndexes.h.hasOwnProperty(index)) ++index;
			thx_Set.add(usedIndexes,index);
			result[index] = array[i];
		}
	} else {
		var _g = 0;
		var _g1 = array.length;
		while(_g < _g1) {
			var i = _g++;
			result[indexes[i]] = array[i];
		}
	}
	return result;
};
thx_Arrays.monoid = function() {
	return { zero : [], append : function(a,b) {
		return a.concat(b);
	}};
};
thx_Arrays.after = function(array,element) {
	return array.slice(thx_ReadonlyArray.indexOf(array,element) + 1);
};
thx_Arrays.atIndex = function(array,i) {
	if(i >= 0 && i < array.length) {
		return haxe_ds_Option.Some(array[i]);
	} else {
		return haxe_ds_Option.None;
	}
};
thx_Arrays.getOption = function(array,i) {
	var value = array[i];
	if(null == value) {
		return haxe_ds_Option.None;
	} else {
		return haxe_ds_Option.Some(value);
	}
};
thx_Arrays.each = function(arr,effect) {
	var _g = 0;
	var _g1 = arr.length;
	while(_g < _g1) {
		var i = _g++;
		effect(arr[i]);
	}
};
thx_Arrays.eachi = function(arr,effect) {
	var _g = 0;
	var _g1 = arr.length;
	while(_g < _g1) {
		var i = _g++;
		effect(arr[i],i);
	}
};
thx_Arrays.all = function(arr,predicate) {
	var _g = 0;
	var _g1 = arr.length;
	while(_g < _g1) {
		var i = _g++;
		if(!predicate(arr[i])) {
			return false;
		}
	}
	return true;
};
thx_Arrays.any = function(arr,predicate) {
	var _g = 0;
	var _g1 = arr.length;
	while(_g < _g1) {
		var i = _g++;
		if(predicate(arr[i])) {
			return true;
		}
	}
	return false;
};
thx_Arrays.at = function(arr,indexes) {
	var result = new Array(indexes.length);
	var _g = 0;
	var _g1 = indexes.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = arr[indexes[i]];
	}
	return result;
};
thx_Arrays.before = function(array,element) {
	return array.slice(0,thx_ReadonlyArray.indexOf(array,element));
};
thx_Arrays.commonsFromStart = function(self,other,equality) {
	if(null == equality) {
		equality = thx_Functions.equality;
	}
	var count = 0;
	var _g = 0;
	var _g1 = thx_Arrays.zip(self,other);
	while(_g < _g1.length) {
		var pair = _g1[_g];
		++_g;
		if(equality(pair._0,pair._1)) {
			++count;
		} else {
			break;
		}
	}
	return self.slice(0,count);
};
thx_Arrays.compact = function(arr) {
	var _g = [];
	var _g1 = 0;
	var _g2 = arr;
	while(_g1 < _g2.length) {
		var v = _g2[_g1];
		++_g1;
		if(null != v) {
			_g.push(v);
		}
	}
	return _g;
};
thx_Arrays.compare = function(a,b) {
	var v = thx_Ints.compare(a.length,b.length);
	if(v != 0) {
		return v;
	}
	var _g = 0;
	var _g1 = a.length;
	while(_g < _g1) {
		var i = _g++;
		v = thx_Dynamics.compare(a[i],b[i]);
		if(v != 0) {
			return v;
		}
	}
	return 0;
};
thx_Arrays.containsExact = function(array,element,eq) {
	if(null == eq) {
		return thx_ReadonlyArray.indexOf(array,element) >= 0;
	} else {
		var _g = 0;
		var _g1 = array.length;
		while(_g < _g1) {
			var i = _g++;
			if(eq(array[i],element)) {
				return true;
			}
		}
		return false;
	}
};
thx_Arrays.containsEq = function(array,element,eq) {
	var _g = 0;
	var _g1 = array.length;
	while(_g < _g1) {
		var i = _g++;
		if(eq(array[i],element)) {
			return true;
		}
	}
	return false;
};
thx_Arrays.containsAllExact = function(array,elements,eq) {
	var el = $getIterator(elements);
	while(el.hasNext()) {
		var el1 = el.next();
		if(!thx_Arrays.containsExact(array,el1,eq)) {
			return false;
		}
	}
	return true;
};
thx_Arrays.containsAllEq = function(array,elements,eq) {
	var el = $getIterator(elements);
	while(el.hasNext()) {
		var el1 = el.next();
		if(!thx_Arrays.containsEq(array,el1,eq)) {
			return false;
		}
	}
	return true;
};
thx_Arrays.containsAnyExact = function(array,elements,eq) {
	var el = $getIterator(elements);
	while(el.hasNext()) {
		var el1 = el.next();
		if(thx_Arrays.containsExact(array,el1,eq)) {
			return true;
		}
	}
	return false;
};
thx_Arrays.containsAnyEq = function(array,elements,eq) {
	var el = $getIterator(elements);
	while(el.hasNext()) {
		var el1 = el.next();
		if(thx_Arrays.containsEq(array,el1,eq)) {
			return true;
		}
	}
	return false;
};
thx_Arrays.create = function(length,fillWith) {
	var arr = length > 0 ? new Array(length) : [];
	var _g = 0;
	var _g1 = length;
	while(_g < _g1) {
		var i = _g++;
		arr[i] = fillWith;
	}
	return arr;
};
thx_Arrays.fromItem = function(t) {
	return [t];
};
thx_Arrays.cross = function(a,b) {
	var r = [];
	var _g_current = 0;
	var _g_array = a;
	while(_g_current < _g_array.length) {
		var va = _g_array[_g_current++];
		var _g1_current = 0;
		var _g1_array = b;
		while(_g1_current < _g1_array.length) {
			var vb = _g1_array[_g1_current++];
			r.push([va,vb]);
		}
	}
	return r;
};
thx_Arrays.crossMulti = function(array) {
	var acopy = array.slice();
	var _this = acopy.shift();
	var result = new Array(_this.length);
	var _g = 0;
	var _g1 = _this.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = [_this[i]];
	}
	var result1 = result;
	while(acopy.length > 0) {
		var array = acopy.shift();
		var tresult = result1;
		result1 = [];
		var _g_current = 0;
		var _g_array = array;
		while(_g_current < _g_array.length) {
			var v = _g_array[_g_current++];
			var _g = 0;
			while(_g < tresult.length) {
				var ar = tresult[_g];
				++_g;
				var t = ar.slice();
				t.push(v);
				result1.push(t);
			}
		}
	}
	return result1;
};
thx_Arrays.distinct = function(array,predicate) {
	var result = [];
	if(array.length <= 1) {
		return array.slice();
	}
	if(null == predicate) {
		predicate = thx_Functions.equality;
	}
	var _g_current = 0;
	var _g_array = array;
	while(_g_current < _g_array.length) {
		var v = [_g_array[_g_current++]];
		var keep = !thx_Arrays.any(result,(function(v) {
			return function(r) {
				return predicate(r,v[0]);
			};
		})(v));
		if(keep) {
			result.push(v[0]);
		}
	}
	return result;
};
thx_Arrays.eachPair = function(array,callback) {
	var _g = 0;
	var _g1 = array.length;
	while(_g < _g1) {
		var i = _g++;
		var _g2 = i;
		var _g3 = array.length;
		while(_g2 < _g3) {
			var j = _g2++;
			if(!callback(array[i],array[j])) {
				return;
			}
		}
	}
};
thx_Arrays.equals = function(a,b,equality) {
	if(a == null || b == null || a.length != b.length) {
		return false;
	}
	if(null == equality) {
		equality = thx_Functions.equality;
	}
	var _g = 0;
	var _g1 = a.length;
	while(_g < _g1) {
		var i = _g++;
		if(!equality(a[i],b[i])) {
			return false;
		}
	}
	return true;
};
thx_Arrays.extract = function(a,predicate) {
	var _g = 0;
	var _g1 = a.length;
	while(_g < _g1) {
		var i = _g++;
		if(predicate(a[i])) {
			return a.splice(i,1)[0];
		}
	}
	return null;
};
thx_Arrays.filterNull = function(a) {
	var arr = [];
	var _g_current = 0;
	var _g_array = a;
	while(_g_current < _g_array.length) {
		var v = _g_array[_g_current++];
		if(null != v) {
			arr.push(v);
		}
	}
	return arr;
};
thx_Arrays.filterOption = function(a) {
	return thx_Arrays.reduce(a,function(acc,maybeV) {
		switch(maybeV._hx_index) {
		case 0:
			var v = maybeV.v;
			acc.push(v);
			break;
		case 1:
			break;
		}
		return acc;
	},[]);
};
thx_Arrays.flattenOptions = function(a) {
	var acc = [];
	var _g_current = 0;
	var _g_array = a;
	while(_g_current < _g_array.length) {
		var e = _g_array[_g_current++];
		switch(e._hx_index) {
		case 0:
			var v = e.v;
			acc.push(v);
			break;
		case 1:
			return haxe_ds_Option.None;
		}
	}
	return haxe_ds_Option.Some(acc);
};
thx_Arrays.find = function(array,predicate) {
	var _g_current = 0;
	var _g_array = array;
	while(_g_current < _g_array.length) {
		var element = _g_array[_g_current++];
		if(predicate(element)) {
			return element;
		}
	}
	return null;
};
thx_Arrays.findi = function(array,predicate) {
	var _g = 0;
	var _g1 = array.length;
	while(_g < _g1) {
		var i = _g++;
		if(predicate(array[i],i)) {
			return array[i];
		}
	}
	return null;
};
thx_Arrays.findiOption = function(array,predicate) {
	var _g = 0;
	var _g1 = array.length;
	while(_g < _g1) {
		var i = _g++;
		if(predicate(array[i],i)) {
			return haxe_ds_Option.Some(array[i]);
		}
	}
	return haxe_ds_Option.None;
};
thx_Arrays.findOption = function(array,predicate) {
	var _g_current = 0;
	var _g_array = array;
	while(_g_current < _g_array.length) {
		var element = _g_array[_g_current++];
		if(predicate(element)) {
			return haxe_ds_Option.Some(element);
		}
	}
	return haxe_ds_Option.None;
};
thx_Arrays.findMap = function(values,f) {
	var _g_current = 0;
	var _g_array = values;
	while(_g_current < _g_array.length) {
		var value = _g_array[_g_current++];
		var opt = f(value);
		if(!thx_Options.isNone(opt)) {
			return opt;
		}
	}
	return haxe_ds_Option.None;
};
thx_Arrays.filterMap = function(values,f) {
	var acc = [];
	var _g_current = 0;
	var _g_array = values;
	while(_g_current < _g_array.length) {
		var value = _g_array[_g_current++];
		var _g = f(value);
		switch(_g._hx_index) {
		case 0:
			var v = _g.v;
			acc.push(v);
			break;
		case 1:
			break;
		}
	}
	return acc;
};
thx_Arrays.findSome = function(options) {
	var _g_current = 0;
	var _g_array = options;
	while(_g_current < _g_array.length) {
		var option = _g_array[_g_current++];
		if(!thx_Options.isNone(option)) {
			return option;
		}
	}
	return haxe_ds_Option.None;
};
thx_Arrays.findIndex = function(array,predicate) {
	var _g = 0;
	var _g1 = array.length;
	while(_g < _g1) {
		var i = _g++;
		if(predicate(array[i])) {
			return i;
		}
	}
	return -1;
};
thx_Arrays.findLast = function(array,predicate) {
	var len = array.length;
	var j;
	var _g = 0;
	var _g1 = len;
	while(_g < _g1) {
		var i = _g++;
		j = len - i - 1;
		if(predicate(array[j])) {
			return array[j];
		}
	}
	return null;
};
thx_Arrays.first = function(array) {
	return array[0];
};
thx_Arrays.firstOption = function(array) {
	var value = array[0];
	if(null == value) {
		return haxe_ds_Option.None;
	} else {
		return haxe_ds_Option.Some(value);
	}
};
thx_Arrays.flatMap = function(array,callback) {
	var result = new Array(array.length);
	var _g = 0;
	var _g1 = array.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = callback(array[i]);
	}
	return Array.prototype.concat.apply([],result);
};
thx_Arrays.flatten = function(array) {
	return Array.prototype.concat.apply([],array);
};
thx_Arrays.from = function(array,element) {
	return array.slice(thx_ReadonlyArray.indexOf(array,element));
};
thx_Arrays.groupByAppend = function(arr,resolver,map) {
	var _g = 0;
	var _g1 = arr.length;
	while(_g < _g1) {
		var i = _g++;
		var v = arr[i];
		var key = resolver(v);
		var acc = map.get(key);
		if(null == acc) {
			map.set(key,[v]);
		} else {
			acc.push(v);
		}
	}
	return map;
};
thx_Arrays.spanByIndex = function(arr,spanKey) {
	var acc = [];
	var cur = null;
	var j = -1;
	var _g = 0;
	var _g1 = arr.length;
	while(_g < _g1) {
		var i = _g++;
		var k = spanKey(i);
		if(k == null) {
			throw new thx_Error("spanKey function returned null for index " + i,null,{ fileName : "thx/Arrays.hx", lineNumber : 675, className : "thx.Arrays", methodName : "spanByIndex"});
		}
		if(cur == k) {
			acc[j].push(arr[i]);
		} else {
			cur = k;
			++j;
			acc.push([arr[i]]);
		}
	}
	return acc;
};
thx_Arrays.hasElements = function(array) {
	if(null != array) {
		return array.length > 0;
	} else {
		return false;
	}
};
thx_Arrays.head = function(array) {
	return array[0];
};
thx_Arrays.ifEmpty = function(array,alt) {
	if(null != array && 0 != array.length) {
		return array;
	} else {
		return alt;
	}
};
thx_Arrays.initial = function(array) {
	return array.slice(0,array.length - 1);
};
thx_Arrays.intersperse = function(array,value) {
	return thx_Arrays.reducei(array,function(acc,v,i) {
		acc[i * 2] = v;
		return acc;
	},thx_Arrays.create(array.length * 2 - 1,value));
};
thx_Arrays.interspersef = function(array,f) {
	if(array.length == 0) {
		return [];
	}
	var acc = [array[0]];
	var _g = 1;
	var _g1 = array.length;
	while(_g < _g1) {
		var i = _g++;
		acc.push(f());
		acc.push(array[i]);
	}
	return acc;
};
thx_Arrays.isEmpty = function(array) {
	if(null != array) {
		return array.length == 0;
	} else {
		return true;
	}
};
thx_Arrays.last = function(array) {
	return array[array.length - 1];
};
thx_Arrays.lastOption = function(array) {
	var value = array[array.length - 1];
	if(null == value) {
		return haxe_ds_Option.None;
	} else {
		return haxe_ds_Option.Some(value);
	}
};
thx_Arrays.map = function(array,callback) {
	var r = [];
	var _g = 0;
	var _g1 = array.length;
	while(_g < _g1) {
		var i = _g++;
		r.push(callback(array[i]));
	}
	return r;
};
thx_Arrays.mapi = function(array,callback) {
	var r = [];
	var _g = 0;
	var _g1 = array.length;
	while(_g < _g1) {
		var i = _g++;
		r.push(callback(array[i],i));
	}
	return r;
};
thx_Arrays.mapRight = function(array,callback) {
	var i = array.length;
	var result = [];
	while(--i >= 0) result.push(callback(array[i]));
	return result;
};
thx_Arrays.order = function(array,sort) {
	var n = array.slice();
	n.sort(sort);
	return n;
};
thx_Arrays.pull = function(array,toRemove,equality) {
	var _g_current = 0;
	var _g_array = toRemove;
	while(_g_current < _g_array.length) {
		var element = _g_array[_g_current++];
		thx_Arrays.removeAll(array,element,equality);
	}
};
thx_Arrays.pushIf = function(array,condition,value) {
	if(condition) {
		array.push(value);
	}
	return array;
};
thx_Arrays.rank = function(array,compare,incrementDuplicates) {
	if(incrementDuplicates == null) {
		incrementDuplicates = true;
	}
	var r = [];
	var _g = 0;
	var _g1 = array.length;
	while(_g < _g1) {
		var i = _g++;
		var this1 = { _0 : array[i], _1 : i};
		r.push(this1);
	}
	var arr = r;
	arr.sort(function(a,b) {
		return compare(a._0,b._0);
	});
	if(incrementDuplicates) {
		var usedIndexes = thx_Set.createInt();
		return thx_Arrays.reducei(arr,function(acc,x,i) {
			var index = i > 0 && compare(arr[i - 1]._0,x._0) == 0 ? acc[arr[i - 1]._1] : i;
			while(usedIndexes.h.hasOwnProperty(index)) ++index;
			thx_Set.add(usedIndexes,index);
			acc[x._1] = index;
			return acc;
		},[]);
	} else {
		return thx_Arrays.reducei(arr,function(acc,x,i) {
			acc[x._1] = i > 0 && compare(arr[i - 1]._0,x._0) == 0 ? acc[arr[i - 1]._1] : i;
			return acc;
		},[]);
	}
};
thx_Arrays.reduce = function(array,f,initial) {
	var _g_current = 0;
	var _g_array = array;
	while(_g_current < _g_array.length) {
		var v = _g_array[_g_current++];
		initial = f(initial,v);
	}
	return initial;
};
thx_Arrays.foldLeft = function(array,init,f) {
	return thx_Arrays.reduce(array,f,init);
};
thx_Arrays.foldLeft1 = function(array,f) {
	var tail = thx_Arrays.dropLeft(array,1);
	var head = array[0];
	if(head == null) {
		return haxe_ds_Option.None;
	} else {
		return haxe_ds_Option.Some(thx_Arrays.reduce(tail,f,head));
	}
};
thx_Arrays.foldLeftEither = function(array,init,f) {
	var acc = thx_Either.Right(init);
	var _g_current = 0;
	var _g_array = array;
	while(_g_current < _g_array.length) {
		var a = _g_array[_g_current++];
		switch(acc._hx_index) {
		case 0:
			var error = acc.value;
			return acc;
		case 1:
			var b = acc.value;
			acc = f(b,a);
			break;
		}
	}
	return acc;
};
thx_Arrays.foldMap = function(array,f,m) {
	var result = new Array(array.length);
	var _g = 0;
	var _g1 = array.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = f(array[i]);
	}
	var _e = m;
	return thx_Arrays.reduce(result,function(a0,a1) {
		return thx_Monoid.append(_e,a0,a1);
	},thx_Monoid.get_zero(m));
};
thx_Arrays.fold = function(array,m) {
	return thx_Arrays.foldMap(array,thx_Functions.identity,m);
};
thx_Arrays.nel = function(array) {
	return thx_Nel.fromArray(array);
};
thx_Arrays.foldS = function(array,s) {
	return thx_Options.map(thx_Arrays.nel(array),function(x) {
		return thx_Nel.fold(x,s);
	});
};
thx_Arrays.resize = function(array,length,fill) {
	while(array.length < length) array.push(fill);
	array.splice(length,array.length - length);
	return array;
};
thx_Arrays.resized = function(array,length,fill) {
	array = array.slice();
	return thx_Arrays.resize(array,length,fill);
};
thx_Arrays.reducei = function(array,f,initial) {
	var _g = 0;
	var _g1 = array.length;
	while(_g < _g1) {
		var i = _g++;
		initial = f(initial,array[i],i);
	}
	return initial;
};
thx_Arrays.reduceRight = function(array,f,initial) {
	var i = array.length;
	while(--i >= 0) initial = f(initial,array[i]);
	return initial;
};
thx_Arrays.removeAll = function(array,element,equality) {
	if(null == equality) {
		equality = thx_Functions.equality;
	}
	var i = array.length;
	while(--i >= 0) if(equality(array[i],element)) {
		array.splice(i,1);
	}
};
thx_Arrays.rest = function(array) {
	return array.slice(1);
};
thx_Arrays.reversed = function(array) {
	var result = array.slice();
	result.reverse();
	return result;
};
thx_Arrays.sample = function(array,n) {
	var b = array.length;
	if(n >= b) {
		n = b;
	}
	var copy = array.slice();
	var result = [];
	var _g = 0;
	var _g1 = n;
	while(_g < _g1) {
		var i = _g++;
		result.push(copy.splice(Std.random(copy.length),1)[0]);
	}
	return result;
};
thx_Arrays.sampleOne = function(array) {
	return array[Std.random(array.length)];
};
thx_Arrays.string = function(arr) {
	var f = thx_Dynamics.string;
	var result = new Array(arr.length);
	var _g = 0;
	var _g1 = arr.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = f(arr[i]);
	}
	var strings = result;
	return "[" + strings.join(", ") + "]";
};
thx_Arrays.shuffle = function(a) {
	var t = thx_Ints.range(a.length);
	var array = [];
	while(t.length > 0) {
		var pos = Std.random(t.length);
		var index = t[pos];
		t.splice(pos,1);
		array.push(a[index]);
	}
	return array;
};
thx_Arrays.split = function(array,parts) {
	var len = Math.ceil(array.length / parts);
	return thx_Arrays.splitBy(array,len);
};
thx_Arrays.splitBy = function(array,len) {
	var res = [];
	var b = array.length;
	if(len >= b) {
		len = b;
	}
	var _g = 0;
	var _g1 = Math.ceil(array.length / len);
	while(_g < _g1) {
		var p = _g++;
		res.push(array.slice(p * len,(p + 1) * len));
	}
	return res;
};
thx_Arrays.splitByPad = function(arr,len,pad) {
	var res = thx_Arrays.splitBy(arr,len);
	while(res[res.length - 1].length < len) res[res.length - 1].push(pad);
	return res;
};
thx_Arrays.tail = function(array) {
	return array.slice(1);
};
thx_Arrays.take = function(arr,n) {
	return arr.slice(0,n);
};
thx_Arrays.takeLast = function(arr,n) {
	return arr.slice(arr.length - n);
};
thx_Arrays.traverseOption = function(arr,f) {
	return thx_Arrays.reduce(arr,function(acc,t) {
		return thx_Options.ap(f(t),thx_Options.map(acc,function(ux) {
			return function(u) {
				ux.push(u);
				return ux;
			};
		}));
	},haxe_ds_Option.Some([]));
};
thx_Arrays.traverseEither = function(arr,f) {
	return thx_Arrays.reduce(arr,function(acc,t) {
		return thx_Eithers.ap(f(t),thx_Eithers.map(acc,function(ux) {
			return function(u) {
				ux.push(u);
				return ux;
			};
		}));
	},thx_Either.Right([]));
};
thx_Arrays.traverseValidation = function(arr,f,s) {
	return thx_Arrays.reduce(arr,function(acc,t) {
		return thx_Validation.ap(f(t),thx_Validation.map(acc,function(ux) {
			return function(u) {
				ux.push(u);
				return ux;
			};
		}),s);
	},thx_Either.Right([]));
};
thx_Arrays.traverseValidationIndexed = function(arr,f,s) {
	return thx_Arrays.reducei(arr,function(acc,t,i) {
		return thx_Validation.ap(f(t,i),thx_Validation.map(acc,function(ux) {
			return function(u) {
				ux.push(u);
				return ux;
			};
		}),s);
	},thx_Either.Right([]));
};
thx_Arrays.rotate = function(arr) {
	var result = [];
	var _g = 0;
	var _g1 = arr[0].length;
	while(_g < _g1) {
		var i = _g++;
		var row = [];
		result.push(row);
		var _g2 = 0;
		var _g3 = arr.length;
		while(_g2 < _g3) {
			var j = _g2++;
			row.push(arr[j][i]);
		}
	}
	return result;
};
thx_Arrays.sliding2 = function(arr,f) {
	if(arr.length < 2) {
		return [];
	} else {
		var result = [];
		var _g = 0;
		var _g1 = arr.length - 1;
		while(_g < _g1) {
			var i = _g++;
			result.push(f(arr[i],arr[i + 1]));
		}
		return result;
	}
};
thx_Arrays.unzip = function(array) {
	var a1 = [];
	var a2 = [];
	var result = new Array(array.length);
	var _g = 0;
	var _g1 = array.length;
	while(_g < _g1) {
		var i = _g++;
		var t = array[i];
		a1.push(t._0);
		a2.push(t._1);
		result[i] = null;
	}
	var this1 = { _0 : a1, _1 : a2};
	return this1;
};
thx_Arrays.unzip3 = function(array) {
	var a1 = [];
	var a2 = [];
	var a3 = [];
	var result = new Array(array.length);
	var _g = 0;
	var _g1 = array.length;
	while(_g < _g1) {
		var i = _g++;
		var t = array[i];
		a1.push(t._0);
		a2.push(t._1);
		a3.push(t._2);
		result[i] = null;
	}
	var this1 = { _0 : a1, _1 : a2, _2 : a3};
	return this1;
};
thx_Arrays.unzip4 = function(array) {
	var a1 = [];
	var a2 = [];
	var a3 = [];
	var a4 = [];
	var result = new Array(array.length);
	var _g = 0;
	var _g1 = array.length;
	while(_g < _g1) {
		var i = _g++;
		var t = array[i];
		a1.push(t._0);
		a2.push(t._1);
		a3.push(t._2);
		a4.push(t._3);
		result[i] = null;
	}
	var this1 = { _0 : a1, _1 : a2, _2 : a3, _3 : a4};
	return this1;
};
thx_Arrays.unzip5 = function(array) {
	var a1 = [];
	var a2 = [];
	var a3 = [];
	var a4 = [];
	var a5 = [];
	var result = new Array(array.length);
	var _g = 0;
	var _g1 = array.length;
	while(_g < _g1) {
		var i = _g++;
		var t = array[i];
		a1.push(t._0);
		a2.push(t._1);
		a3.push(t._2);
		a4.push(t._3);
		a5.push(t._4);
		result[i] = null;
	}
	var this1 = { _0 : a1, _1 : a2, _2 : a3, _3 : a4, _4 : a5};
	return this1;
};
thx_Arrays.zip = function(array1,array2) {
	var a = array1.length;
	var b = array2.length;
	var length = a < b ? a : b;
	var array = [];
	var _g = 0;
	var _g1 = length;
	while(_g < _g1) {
		var i = _g++;
		var this1 = { _0 : array1[i], _1 : array2[i]};
		array.push(this1);
	}
	return array;
};
thx_Arrays.zip3 = function(array1,array2,array3) {
	var length = thx_ArrayInts.min([array1.length,array2.length,array3.length]);
	var array = [];
	var _g = 0;
	var _g1 = length;
	while(_g < _g1) {
		var i = _g++;
		var this1 = { _0 : array1[i], _1 : array2[i], _2 : array3[i]};
		array.push(this1);
	}
	return array;
};
thx_Arrays.zip4 = function(array1,array2,array3,array4) {
	var length = thx_ArrayInts.min([array1.length,array2.length,array3.length,array4.length]);
	var array = [];
	var _g = 0;
	var _g1 = length;
	while(_g < _g1) {
		var i = _g++;
		var this1 = { _0 : array1[i], _1 : array2[i], _2 : array3[i], _3 : array4[i]};
		array.push(this1);
	}
	return array;
};
thx_Arrays.zip5 = function(array1,array2,array3,array4,array5) {
	var length = thx_ArrayInts.min([array1.length,array2.length,array3.length,array4.length,array5.length]);
	var array = [];
	var _g = 0;
	var _g1 = length;
	while(_g < _g1) {
		var i = _g++;
		var this1 = { _0 : array1[i], _1 : array2[i], _2 : array3[i], _3 : array4[i], _4 : array5[i]};
		array.push(this1);
	}
	return array;
};
thx_Arrays.zipAp = function(ax,fx) {
	var result = [];
	var _g = 0;
	var a = ax.length;
	var b = fx.length;
	var _g1 = a < b ? a : b;
	while(_g < _g1) {
		var i = _g++;
		result.push(fx[i](ax[i]));
	}
	return result;
};
thx_Arrays.zip2Ap = function(f,ax,bx) {
	var f1 = thx_Functions2.curry(f);
	var result = new Array(ax.length);
	var _g = 0;
	var _g1 = ax.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = f1(ax[i]);
	}
	return thx_Arrays.zipAp(bx,result);
};
thx_Arrays.zip3Ap = function(f,ax,bx,cx) {
	var f1 = f;
	return thx_Arrays.zipAp(cx,thx_Arrays.zip2Ap(function(a,b) {
		return function(c) {
			return f1(a,b,c);
		};
	},ax,bx));
};
thx_Arrays.zip4Ap = function(f,ax,bx,cx,dx) {
	var f1 = f;
	return thx_Arrays.zipAp(dx,thx_Arrays.zip3Ap(function(a,b,c) {
		return function(d) {
			return f1(a,b,c,d);
		};
	},ax,bx,cx));
};
thx_Arrays.zip5Ap = function(f,ax,bx,cx,dx,ex) {
	var f1 = f;
	return thx_Arrays.zipAp(ex,thx_Arrays.zip4Ap(function(a,b,c,d) {
		return function(e) {
			return f1(a,b,c,d,e);
		};
	},ax,bx,cx,dx));
};
thx_Arrays.withPrepend = function(arr,el) {
	return [el].concat(arr);
};
thx_Arrays.with = function(arr,el) {
	return arr.concat([el]);
};
thx_Arrays.withSlice = function(arr,other,start,length) {
	if(length == null) {
		length = 0;
	}
	return arr.slice(0,start).concat(other).concat(arr.slice(start + length));
};
thx_Arrays.withInsert = function(arr,el,pos) {
	return arr.slice(0,pos).concat([el]).concat(arr.slice(pos));
};
thx_Arrays.maxBy = function(arr,ord) {
	if(arr.length == 0) {
		return haxe_ds_Option.None;
	} else {
		var _e = ord;
		return haxe_ds_Option.Some(thx_Arrays.reduce(arr,function(a0,a1) {
			return thx_Ord.max(_e,a0,a1);
		},arr[0]));
	}
};
thx_Arrays.minBy = function(arr,ord) {
	if(arr.length == 0) {
		return haxe_ds_Option.None;
	} else {
		var _e = ord;
		return haxe_ds_Option.Some(thx_Arrays.reduce(arr,function(a0,a1) {
			return thx_Ord.min(_e,a0,a1);
		},arr[0]));
	}
};
thx_Arrays.toMap = function(arr,keyOrder) {
	var m = thx_fp_MapImpl.Tip;
	var collisions = [];
	var _g = 0;
	var _g1 = arr.length;
	while(_g < _g1) {
		var i = _g++;
		var tuple = arr[i];
		if(thx_Options.isNone(thx_fp_Map.lookup(m,tuple._0,keyOrder))) {
			m = thx_fp_Map.insert(m,tuple._0,tuple._1,keyOrder);
		} else {
			collisions.push(tuple._0);
		}
	}
	return thx_Options.toFailure(thx_Nel.fromArray(collisions),m);
};
thx_Arrays.toStringMap = function(arr) {
	return thx_Arrays.reduce(arr,function(acc,t) {
		acc.h[t._0] = t._1;
		return acc;
	},new haxe_ds_StringMap());
};
thx_Arrays.partition = function(arr,f) {
	var this1 = { _0 : [], _1 : []};
	return thx_Arrays.reduce(arr,function(a,b) {
		if(f(b)) {
			a._0.push(b);
		} else {
			a._1.push(b);
		}
		return a;
	},this1);
};
thx_Arrays.partitionWhile = function(arr,f) {
	var partitioning = true;
	var this1 = { _0 : [], _1 : []};
	return thx_Arrays.reduce(arr,function(a,b) {
		if(partitioning) {
			if(f(b)) {
				a._0.push(b);
			} else {
				partitioning = false;
				a._1.push(b);
			}
		} else {
			a._1.push(b);
		}
		return a;
	},this1);
};
thx_Arrays.dropLeft = function(a,n) {
	if(n >= a.length) {
		return [];
	} else {
		return a.slice(n);
	}
};
thx_Arrays.dropRight = function(a,n) {
	if(n >= a.length) {
		return [];
	} else {
		return a.slice(0,a.length - n);
	}
};
thx_Arrays.dropWhile = function(a,p) {
	var r = [].concat(a);
	var _g_current = 0;
	var _g_array = a;
	while(_g_current < _g_array.length) {
		var e = _g_array[_g_current++];
		if(p(e)) {
			r.shift();
		} else {
			break;
		}
	}
	return r;
};
thx_Arrays.pad = function(arr,len,def) {
	var len0 = len - arr.length;
	var arr0 = [];
	var _g = 0;
	var _g1 = len0;
	while(_g < _g1) {
		var i = _g++;
		arr0.push(def);
	}
	return arr.concat(arr0);
};
thx_Arrays.fill = function(arr,def) {
	var result = new Array(arr.length);
	var _g = 0;
	var _g1 = arr.length;
	while(_g < _g1) {
		var i = _g++;
		var x = arr[i];
		result[i] = x == null ? def : x;
	}
	return result;
};
var thx_ArrayFloats = function() { };
$hxClasses["thx.ArrayFloats"] = thx_ArrayFloats;
thx_ArrayFloats.__name__ = "thx.ArrayFloats";
thx_ArrayFloats.average = function(arr) {
	return thx_ArrayFloats.sum(arr) / arr.length;
};
thx_ArrayFloats.compact = function(arr) {
	var _g = [];
	var _g1 = 0;
	var _g2 = arr;
	while(_g1 < _g2.length) {
		var v = _g2[_g1];
		++_g1;
		if(null != v && isFinite(v)) {
			_g.push(v);
		}
	}
	return _g;
};
thx_ArrayFloats.max = function(arr) {
	return thx_Options.get(thx_Arrays.maxBy(arr,thx_Floats.order));
};
thx_ArrayFloats.min = function(arr) {
	return thx_Options.get(thx_Arrays.minBy(arr,thx_Floats.order));
};
thx_ArrayFloats.resize = function(array,length,fill) {
	if(fill == null) {
		fill = 0.0;
	}
	while(array.length < length) array.push(fill);
	array.splice(length,array.length - length);
	return array;
};
thx_ArrayFloats.resized = function(array,length,fill) {
	if(fill == null) {
		fill = 0.0;
	}
	array = array.slice();
	return thx_ArrayFloats.resize(array,length,fill);
};
thx_ArrayFloats.standardDeviation = function(array) {
	if(array.length < 2) {
		return 0.0;
	}
	var mean = thx_ArrayFloats.average(array);
	var variance = thx_Arrays.reduce(array,function(acc,val) {
		return acc + Math.pow(val - mean,2);
	},0) / (array.length - 1);
	return Math.sqrt(variance);
};
thx_ArrayFloats.sum = function(arr) {
	return thx_Arrays.reduce(arr,function(tot,v) {
		return tot + v;
	},0.0);
};
var thx_ArrayInts = function() { };
$hxClasses["thx.ArrayInts"] = thx_ArrayInts;
thx_ArrayInts.__name__ = "thx.ArrayInts";
thx_ArrayInts.average = function(arr) {
	return thx_ArrayInts.sum(arr) / arr.length;
};
thx_ArrayInts.max = function(arr) {
	return thx_Options.get(thx_Arrays.maxBy(arr,thx_Ints.order));
};
thx_ArrayInts.min = function(arr) {
	return thx_Options.get(thx_Arrays.minBy(arr,thx_Ints.order));
};
thx_ArrayInts.resize = function(array,length,fill) {
	if(fill == null) {
		fill = 0;
	}
	while(array.length < length) array.push(fill);
	array.splice(length,array.length - length);
	return array;
};
thx_ArrayInts.resized = function(array,length,fill) {
	if(fill == null) {
		fill = 0;
	}
	array = array.slice();
	return thx_ArrayInts.resize(array,length,fill);
};
thx_ArrayInts.sum = function(arr) {
	return thx_Arrays.reduce(arr,function(tot,v) {
		return tot + v;
	},0);
};
var thx_ArrayStrings = function() { };
$hxClasses["thx.ArrayStrings"] = thx_ArrayStrings;
thx_ArrayStrings.__name__ = "thx.ArrayStrings";
thx_ArrayStrings.compact = function(arr) {
	var _g = [];
	var _g1 = 0;
	var _g2 = arr;
	while(_g1 < _g2.length) {
		var v = _g2[_g1];
		++_g1;
		if(!thx_Strings.isEmpty(v)) {
			_g.push(v);
		}
	}
	return _g;
};
thx_ArrayStrings.max = function(arr) {
	return thx_Options.getOrElse(thx_Arrays.maxBy(arr,thx_Strings.order),null);
};
thx_ArrayStrings.min = function(arr) {
	return thx_Options.getOrElse(thx_Arrays.minBy(arr,thx_Strings.order),null);
};
var thx_Bools = function() { };
$hxClasses["thx.Bools"] = thx_Bools;
thx_Bools.__name__ = "thx.Bools";
thx_Bools.compare = function(a,b) {
	if(a == b) {
		return 0;
	} else if(a) {
		return -1;
	} else {
		return 1;
	}
};
thx_Bools.toInt = function(v) {
	if(v) {
		return 1;
	} else {
		return 0;
	}
};
thx_Bools.canParse = function(v) {
	var _g = v.toLowerCase();
	if(_g == null) {
		return true;
	} else {
		switch(_g) {
		case "0":case "1":case "false":case "off":case "on":case "true":
			return true;
		default:
			return false;
		}
	}
};
thx_Bools.parse = function(v) {
	var _g = v.toLowerCase();
	if(_g == null) {
		return false;
	} else {
		switch(_g) {
		case "1":case "on":case "true":
			return true;
		case "0":case "false":case "off":
			return false;
		default:
			var v = _g;
			throw haxe_Exception.thrown("unable to parse \"" + v + "\"");
		}
	}
};
thx_Bools.xor = function(a,b) {
	return a != b;
};
thx_Bools.option = function(cond,a) {
	if(cond) {
		return haxe_ds_Option.Some(a);
	} else {
		return haxe_ds_Option.None;
	}
};
var thx_DateTime = {};
thx_DateTime.__properties__ = {get_timeOfDay:"get_timeOfDay",get_dayOfYear:"get_dayOfYear",get_dayOfWeek:"get_dayOfWeek",get_monthDays:"get_monthDays",get_isInLeapYear:"get_isInLeapYear",get_tickInSecond:"get_tickInSecond",get_microsecond:"get_microsecond",get_millisecond:"get_millisecond",get_second:"get_second",get_minute:"get_minute",get_hour:"get_hour",get_day:"get_day",get_month:"get_month",get_year:"get_year",get_offset:"get_offset",get_utc:"get_utc"};
thx_DateTime.localOffset = function() {
	var now = thx_DateTimeUtc.now();
	var local = new Date(thx_DateTimeUtc.getDatePart(now,thx_DateTimeUtc.DATE_PART_YEAR),thx_DateTimeUtc.getDatePart(now,thx_DateTimeUtc.DATE_PART_MONTH) - 1,thx_DateTimeUtc.getDatePart(now,thx_DateTimeUtc.DATE_PART_DAY),thx_DateTimeUtc.get_hour(now),thx_DateTimeUtc.get_minute(now),thx_DateTimeUtc.get_second(now));
	var a = now;
	var b = thx_DateTimeUtc.unixEpochTicks;
	var high = a.high - b.high | 0;
	var low = a.low - b.low | 0;
	if(haxe_Int32.ucompare(a.low,b.low) < 0) {
		var ret = high--;
		high = high | 0;
	}
	var this1 = new haxe__$Int64__$_$_$Int64(high,low);
	var delta = Math.floor(thx_Int64s.toFloat(haxe_Int64.divMod(this1,thx_DateTimeUtc.ticksPerMillisecondI64).quotient) / 1000) * 1000 - local.getTime();
	var a = thx_Int64s.fromFloat(delta);
	var b = thx_DateTimeUtc.ticksPerMillisecondI64;
	var mask = 65535;
	var al = a.low & mask;
	var ah = a.low >>> 16;
	var bl = b.low & mask;
	var bh = b.low >>> 16;
	var p00 = haxe_Int32._mul(al,bl);
	var p10 = haxe_Int32._mul(ah,bl);
	var p01 = haxe_Int32._mul(al,bh);
	var p11 = haxe_Int32._mul(ah,bh);
	var low = p00;
	var high = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
	p01 <<= 16;
	low = low + p01 | 0;
	if(haxe_Int32.ucompare(low,p01) < 0) {
		var ret = high++;
		high = high | 0;
	}
	p10 <<= 16;
	low = low + p10 | 0;
	if(haxe_Int32.ucompare(low,p10) < 0) {
		var ret = high++;
		high = high | 0;
	}
	high = high + (haxe_Int32._mul(a.low,b.high) + haxe_Int32._mul(a.high,b.low) | 0) | 0;
	var this1 = new haxe__$Int64__$_$_$Int64(high,low);
	var this2 = this1;
	return this2;
};
thx_DateTime.now = function() {
	var this1 = [thx_DateTimeUtc.now(),thx_DateTime.localOffset()];
	return this1;
};
thx_DateTime.nowUtc = function() {
	var this1 = [thx_DateTimeUtc.now(),thx_Time.zero];
	return this1;
};
thx_DateTime.fromDate = function(date) {
	var this1 = [thx_DateTimeUtc.fromTime(date.getTime()),thx_DateTime.localOffset()];
	return this1;
};
thx_DateTime.fromDateWithOffset = function(date,offset) {
	var this1 = [thx_DateTimeUtc.fromTime(date.getTime()),offset];
	return this1;
};
thx_DateTime.fromTime = function(timestamp) {
	var this1 = [thx_DateTimeUtc.fromTime(timestamp),thx_Time.zero];
	return this1;
};
thx_DateTime.fromString = function(s) {
	if(s == null) {
		throw new thx_Error("null String cannot be parsed to DateTime",null,{ fileName : "thx/DateTime.hx", lineNumber : 99, className : "thx._DateTime.DateTime_Impl_", methodName : "fromString"});
	}
	var pattern = new EReg("^([-])?(\\d+)[-](\\d{2})[-](\\d{2})(?:[T ](\\d{2})[:](\\d{2})[:](\\d{2})(?:\\.(\\d+))?(Z|([+-]\\d{2})[:](\\d{2}))?)?$","");
	if(!pattern.match(s)) {
		throw new thx_Error("unable to parse DateTime string: \"" + s + "\"",null,{ fileName : "thx/DateTime.hx", lineNumber : 102, className : "thx._DateTime.DateTime_Impl_", methodName : "fromString"});
	}
	var smticks = pattern.matched(8);
	var mticks = 0;
	if(null != smticks) {
		smticks = "1" + thx_Strings.rpad(smticks,"0",7).substring(0,7);
		mticks = Std.parseInt(smticks) - 10000000;
	}
	var time = thx_Time.zero;
	var timepart = pattern.matched(9);
	if(null != timepart && "Z" != timepart) {
		var hours = pattern.matched(10);
		if(hours.substring(0,1) == "+") {
			hours = hours.substring(1);
		}
		time = thx_Time.create(Std.parseInt(hours),Std.parseInt(pattern.matched(11)),0);
	}
	var year = Std.parseInt(pattern.matched(2));
	var month = Std.parseInt(pattern.matched(3));
	var day = Std.parseInt(pattern.matched(4));
	var hour = Std.parseInt(pattern.matched(5));
	var minute = Std.parseInt(pattern.matched(6));
	var second = Std.parseInt(pattern.matched(7));
	var millisecond = 0;
	if(millisecond == null) {
		millisecond = 0;
	}
	if(second == null) {
		second = 0;
	}
	if(minute == null) {
		minute = 0;
	}
	if(hour == null) {
		hour = 0;
	}
	var this_0 = thx_DateTimeUtc.create(year,month,day,hour,minute,second,millisecond);
	var this_1 = time;
	var this1 = this_0;
	var a = this1;
	var b = time;
	var high = a.high - b.high | 0;
	var low = a.low - b.low | 0;
	if(haxe_Int32.ucompare(a.low,b.low) < 0) {
		var ret = high--;
		high = high | 0;
	}
	var this1 = new haxe__$Int64__$_$_$Int64(high,low);
	var this2 = this_1;
	var this_0 = thx_DateTimeUtc.fromInt64(this1);
	var this_1 = this2;
	var ticks_high = mticks >> 31;
	var ticks_low = mticks;
	var this1 = this_0;
	var a = this1;
	var high = a.high + ticks_high | 0;
	var low = a.low + ticks_low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this1 = new haxe__$Int64__$_$_$Int64(high,low);
	var this2 = this_1;
	var this3 = [thx_DateTimeUtc.fromInt64(this1),this2];
	var date = this3;
	if(pattern.matched(1) == "-") {
		var this1 = date[0];
		var x = this1;
		var high = ~x.high;
		var low = ~x.low + 1 | 0;
		if(low == 0) {
			var ret = high++;
			high = high | 0;
		}
		var this1 = new haxe__$Int64__$_$_$Int64(high,low);
		var this2 = [thx_DateTimeUtc.fromInt64(this1),time];
		return this2;
	}
	return date;
};
thx_DateTime.is = function(v) {
	if(v == null) {
		return false;
	}
	if(!((v) instanceof Array)) {
		return false;
	}
	var vs = v;
	if(vs.length != 2) {
		return false;
	}
	return thx_Arrays.all(vs,haxe_Int64.isInt64);
};
thx_DateTime.parse = function(s) {
	try {
		return thx_Either.Right(thx_DateTime.fromString(s));
	} catch( _g ) {
		haxe_NativeStackTrace.lastError = _g;
		var e = haxe_Exception.caught(_g).unwrap();
		return thx_Either.Left(thx_Error.fromDynamic(e,{ fileName : "thx/DateTime.hx", lineNumber : 149, className : "thx._DateTime.DateTime_Impl_", methodName : "parse"}).message);
	}
};
thx_DateTime.daysRange = function(start,end) {
	if(thx_DateTime.compareTo(end,start) < 0) {
		return [];
	}
	var days = [];
	while(!thx_DateTime.sameDay(start,end)) {
		days.push(start);
		start = thx_DateTime.jump(start,thx_TimePeriod.Day,1);
	}
	days.push(end);
	return days;
};
thx_DateTime.compare = function(a,b) {
	return thx_DateTime.compareTo(a,b);
};
thx_DateTime.ord = function() {
	return thx_Ord.fromIntComparison(thx_DateTime.compare);
};
thx_DateTime.create = function(year,month,day,hour,minute,second,millisecond,offset) {
	if(millisecond == null) {
		millisecond = 0;
	}
	if(second == null) {
		second = 0;
	}
	if(minute == null) {
		minute = 0;
	}
	if(hour == null) {
		hour = 0;
	}
	var this_0 = thx_DateTimeUtc.create(year,month,day,hour,minute,second,millisecond);
	var this_1 = offset;
	var this1 = this_0;
	var a = this1;
	var b = offset;
	var high = a.high - b.high | 0;
	var low = a.low - b.low | 0;
	if(haxe_Int32.ucompare(a.low,b.low) < 0) {
		var ret = high--;
		high = high | 0;
	}
	var this1 = new haxe__$Int64__$_$_$Int64(high,low);
	var this2 = this_1;
	var this3 = [thx_DateTimeUtc.fromInt64(this1),this2];
	return this3;
};
thx_DateTime._new = function(dateTime,offset) {
	var this1 = [dateTime,offset];
	return this1;
};
thx_DateTime.min = function(this1,other) {
	var this2 = this1[0];
	var this3 = other[0];
	if(thx_DateTimeUtc.compareTo(this2,this3) <= 0) {
		return this1;
	} else {
		return other;
	}
};
thx_DateTime.max = function(this1,other) {
	var this2 = this1[0];
	var this3 = other[0];
	if(thx_DateTimeUtc.compareTo(this2,this3) >= 0) {
		return this1;
	} else {
		return other;
	}
};
thx_DateTime.jump = function(this1,period,amount) {
	var this2 = this1[0];
	var a = this2;
	var this2 = this1[1];
	var b = this2;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	var this3 = this2;
	var sec = thx_DateTimeUtc.get_second(this3);
	var this2 = this1[0];
	var a = this2;
	var this2 = this1[1];
	var b = this2;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	var this3 = this2;
	var min = thx_DateTimeUtc.get_minute(this3);
	var this2 = this1[0];
	var a = this2;
	var this2 = this1[1];
	var b = this2;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	var this3 = this2;
	var hr = thx_DateTimeUtc.get_hour(this3);
	var this2 = this1[0];
	var a = this2;
	var this2 = this1[1];
	var b = this2;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	var this3 = this2;
	var day = thx_DateTimeUtc.getDatePart(this3,thx_DateTimeUtc.DATE_PART_DAY);
	var this2 = this1[0];
	var a = this2;
	var this2 = this1[1];
	var b = this2;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	var this3 = this2;
	var mon = thx_DateTimeUtc.getDatePart(this3,thx_DateTimeUtc.DATE_PART_MONTH);
	var this2 = this1[0];
	var a = this2;
	var this2 = this1[1];
	var b = this2;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	var this3 = this2;
	var yr = thx_DateTimeUtc.getDatePart(this3,thx_DateTimeUtc.DATE_PART_YEAR);
	switch(period._hx_index) {
	case 0:
		sec += amount;
		break;
	case 1:
		min += amount;
		break;
	case 2:
		hr += amount;
		break;
	case 3:
		day += amount;
		break;
	case 4:
		day += amount * 7;
		break;
	case 5:
		mon += amount;
		break;
	case 6:
		yr += amount;
		break;
	}
	var hour = hr;
	var minute = min;
	var second = sec;
	var this2 = this1[0];
	var a = this2;
	var this2 = this1[1];
	var b = this2;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	var this3 = this2;
	var millisecond = thx_DateTimeUtc.get_millisecond(this3);
	var this2 = this1[1];
	var offset = this2;
	if(millisecond == null) {
		millisecond = 0;
	}
	if(second == null) {
		second = 0;
	}
	if(minute == null) {
		minute = 0;
	}
	if(hour == null) {
		hour = 0;
	}
	var this_0 = thx_DateTimeUtc.create(yr,mon,day,hour,minute,second,millisecond);
	var this_1 = offset;
	var this1 = this_0;
	var a = this1;
	var b = offset;
	var high = a.high - b.high | 0;
	var low = a.low - b.low | 0;
	if(haxe_Int32.ucompare(a.low,b.low) < 0) {
		var ret = high--;
		high = high | 0;
	}
	var this1 = new haxe__$Int64__$_$_$Int64(high,low);
	var this2 = this_1;
	var this3 = [thx_DateTimeUtc.fromInt64(this1),this2];
	return this3;
};
thx_DateTime.daysInThisMonth = function(this1) {
	var this2 = this1[0];
	var a = this2;
	var this2 = this1[1];
	var b = this2;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	var this3 = this2;
	var tmp = thx_DateTimeUtc.getDatePart(this3,thx_DateTimeUtc.DATE_PART_YEAR);
	var this2 = this1[0];
	var a = this2;
	var this2 = this1[1];
	var b = this2;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this1 = new haxe__$Int64__$_$_$Int64(high,low);
	var this2 = this1;
	return thx_DateTimeUtc.daysInMonth(tmp,thx_DateTimeUtc.getDatePart(this2,thx_DateTimeUtc.DATE_PART_MONTH));
};
thx_DateTime.prevYear = function(this1) {
	return thx_DateTime.jump(this1,thx_TimePeriod.Year,-1);
};
thx_DateTime.nextYear = function(this1) {
	return thx_DateTime.jump(this1,thx_TimePeriod.Year,1);
};
thx_DateTime.prevMonth = function(this1) {
	return thx_DateTime.jump(this1,thx_TimePeriod.Month,-1);
};
thx_DateTime.nextMonth = function(this1) {
	return thx_DateTime.jump(this1,thx_TimePeriod.Month,1);
};
thx_DateTime.prevWeek = function(this1) {
	return thx_DateTime.jump(this1,thx_TimePeriod.Week,-1);
};
thx_DateTime.nextWeek = function(this1) {
	return thx_DateTime.jump(this1,thx_TimePeriod.Week,1);
};
thx_DateTime.prevDay = function(this1) {
	return thx_DateTime.jump(this1,thx_TimePeriod.Day,-1);
};
thx_DateTime.nextDay = function(this1) {
	return thx_DateTime.jump(this1,thx_TimePeriod.Day,1);
};
thx_DateTime.prevHour = function(this1) {
	return thx_DateTime.jump(this1,thx_TimePeriod.Hour,-1);
};
thx_DateTime.nextHour = function(this1) {
	return thx_DateTime.jump(this1,thx_TimePeriod.Hour,1);
};
thx_DateTime.prevMinute = function(this1) {
	return thx_DateTime.jump(this1,thx_TimePeriod.Minute,-1);
};
thx_DateTime.nextMinute = function(this1) {
	return thx_DateTime.jump(this1,thx_TimePeriod.Minute,1);
};
thx_DateTime.prevSecond = function(this1) {
	return thx_DateTime.jump(this1,thx_TimePeriod.Second,-1);
};
thx_DateTime.nextSecond = function(this1) {
	return thx_DateTime.jump(this1,thx_TimePeriod.Second,1);
};
thx_DateTime.snapToWeekDay = function(this1,weekday,firstDayOfWk) {
	if(firstDayOfWk == null) {
		firstDayOfWk = 0;
	}
	var this2 = this1[0];
	var a = this2;
	var this2 = this1[1];
	var b = this2;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	var this3 = this2;
	var d = thx_DateTimeUtc.get_dayOfWeek(this3);
	var s = weekday;
	if(s < firstDayOfWk) {
		s += 7;
	}
	if(d < firstDayOfWk) {
		d += 7;
	}
	return thx_DateTime.jump(this1,thx_TimePeriod.Day,s - d);
};
thx_DateTime.snapNextWeekDay = function(this1,weekday) {
	var this2 = this1[0];
	var a = this2;
	var this2 = this1[1];
	var b = this2;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	var this3 = this2;
	var d = thx_DateTimeUtc.get_dayOfWeek(this3);
	var s = weekday;
	if(s < d) {
		s += 7;
	}
	return thx_DateTime.jump(this1,thx_TimePeriod.Day,s - d);
};
thx_DateTime.snapPrevWeekDay = function(this1,weekday) {
	var this2 = this1[0];
	var a = this2;
	var this2 = this1[1];
	var b = this2;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	var this3 = this2;
	var d = thx_DateTimeUtc.get_dayOfWeek(this3);
	var s = weekday;
	if(s > d) {
		s -= 7;
	}
	return thx_DateTime.jump(this1,thx_TimePeriod.Day,s - d);
};
thx_DateTime.snapNext = function(this1,period) {
	switch(period._hx_index) {
	case 0:
		var this2 = this1[0];
		var a = thx_Int64s.divCeil(this2,thx_DateTimeUtc.ticksPerSecondI64);
		var b = thx_DateTimeUtc.ticksPerSecondI64;
		var mask = 65535;
		var al = a.low & mask;
		var ah = a.low >>> 16;
		var bl = b.low & mask;
		var bh = b.low >>> 16;
		var p00 = haxe_Int32._mul(al,bl);
		var p10 = haxe_Int32._mul(ah,bl);
		var p01 = haxe_Int32._mul(al,bh);
		var p11 = haxe_Int32._mul(ah,bh);
		var low = p00;
		var high = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
		p01 <<= 16;
		low = low + p01 | 0;
		if(haxe_Int32.ucompare(low,p01) < 0) {
			var ret = high++;
			high = high | 0;
		}
		p10 <<= 16;
		low = low + p10 | 0;
		if(haxe_Int32.ucompare(low,p10) < 0) {
			var ret = high++;
			high = high | 0;
		}
		high = high + (haxe_Int32._mul(a.low,b.high) + haxe_Int32._mul(a.high,b.low) | 0) | 0;
		var this2 = new haxe__$Int64__$_$_$Int64(high,low);
		var this3 = this2;
		var this2 = this1[1];
		var this4 = [this3,this2];
		return this4;
	case 1:
		var this2 = this1[0];
		var a = thx_Int64s.divCeil(this2,thx_DateTimeUtc.ticksPerMinuteI64);
		var b = thx_DateTimeUtc.ticksPerMinuteI64;
		var mask = 65535;
		var al = a.low & mask;
		var ah = a.low >>> 16;
		var bl = b.low & mask;
		var bh = b.low >>> 16;
		var p00 = haxe_Int32._mul(al,bl);
		var p10 = haxe_Int32._mul(ah,bl);
		var p01 = haxe_Int32._mul(al,bh);
		var p11 = haxe_Int32._mul(ah,bh);
		var low = p00;
		var high = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
		p01 <<= 16;
		low = low + p01 | 0;
		if(haxe_Int32.ucompare(low,p01) < 0) {
			var ret = high++;
			high = high | 0;
		}
		p10 <<= 16;
		low = low + p10 | 0;
		if(haxe_Int32.ucompare(low,p10) < 0) {
			var ret = high++;
			high = high | 0;
		}
		high = high + (haxe_Int32._mul(a.low,b.high) + haxe_Int32._mul(a.high,b.low) | 0) | 0;
		var this2 = new haxe__$Int64__$_$_$Int64(high,low);
		var this3 = this2;
		var this2 = this1[1];
		var this4 = [this3,this2];
		return this4;
	case 2:
		var this2 = this1[0];
		var a = thx_Int64s.divCeil(this2,thx_DateTimeUtc.ticksPerHourI64);
		var b = thx_DateTimeUtc.ticksPerHourI64;
		var mask = 65535;
		var al = a.low & mask;
		var ah = a.low >>> 16;
		var bl = b.low & mask;
		var bh = b.low >>> 16;
		var p00 = haxe_Int32._mul(al,bl);
		var p10 = haxe_Int32._mul(ah,bl);
		var p01 = haxe_Int32._mul(al,bh);
		var p11 = haxe_Int32._mul(ah,bh);
		var low = p00;
		var high = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
		p01 <<= 16;
		low = low + p01 | 0;
		if(haxe_Int32.ucompare(low,p01) < 0) {
			var ret = high++;
			high = high | 0;
		}
		p10 <<= 16;
		low = low + p10 | 0;
		if(haxe_Int32.ucompare(low,p10) < 0) {
			var ret = high++;
			high = high | 0;
		}
		high = high + (haxe_Int32._mul(a.low,b.high) + haxe_Int32._mul(a.high,b.low) | 0) | 0;
		var this2 = new haxe__$Int64__$_$_$Int64(high,low);
		var this3 = this2;
		var this2 = this1[1];
		var this4 = [this3,this2];
		return this4;
	case 3:
		var this2 = this1[0];
		var a = this2;
		var this2 = this1[1];
		var b = this2;
		var high = a.high + b.high | 0;
		var low = a.low + b.low | 0;
		if(haxe_Int32.ucompare(low,a.low) < 0) {
			var ret = high++;
			high = high | 0;
		}
		var this2 = new haxe__$Int64__$_$_$Int64(high,low);
		var this3 = this2;
		var year = thx_DateTimeUtc.getDatePart(this3,thx_DateTimeUtc.DATE_PART_YEAR);
		var this2 = this1[0];
		var a = this2;
		var this2 = this1[1];
		var b = this2;
		var high = a.high + b.high | 0;
		var low = a.low + b.low | 0;
		if(haxe_Int32.ucompare(low,a.low) < 0) {
			var ret = high++;
			high = high | 0;
		}
		var this2 = new haxe__$Int64__$_$_$Int64(high,low);
		var this3 = this2;
		var month = thx_DateTimeUtc.getDatePart(this3,thx_DateTimeUtc.DATE_PART_MONTH);
		var this2 = this1[0];
		var a = this2;
		var this2 = this1[1];
		var b = this2;
		var high = a.high + b.high | 0;
		var low = a.low + b.low | 0;
		if(haxe_Int32.ucompare(low,a.low) < 0) {
			var ret = high++;
			high = high | 0;
		}
		var this2 = new haxe__$Int64__$_$_$Int64(high,low);
		var this3 = this2;
		var day = thx_DateTimeUtc.getDatePart(this3,thx_DateTimeUtc.DATE_PART_DAY) + 1;
		var hour = 0;
		var minute = 0;
		var second = 0;
		var this2 = this1[1];
		var offset = this2;
		if(second == null) {
			second = 0;
		}
		if(minute == null) {
			minute = 0;
		}
		if(hour == null) {
			hour = 0;
		}
		var this_0 = thx_DateTimeUtc.create(year,month,day,hour,minute,second,0);
		var this_1 = offset;
		var this2 = this_0;
		var a = this2;
		var b = offset;
		var high = a.high - b.high | 0;
		var low = a.low - b.low | 0;
		if(haxe_Int32.ucompare(a.low,b.low) < 0) {
			var ret = high--;
			high = high | 0;
		}
		var this2 = new haxe__$Int64__$_$_$Int64(high,low);
		var this3 = this_1;
		var this4 = [thx_DateTimeUtc.fromInt64(this2),this3];
		return this4;
	case 4:
		var this2 = this1[0];
		var a = this2;
		var this2 = this1[1];
		var b = this2;
		var high = a.high + b.high | 0;
		var low = a.low + b.low | 0;
		if(haxe_Int32.ucompare(low,a.low) < 0) {
			var ret = high++;
			high = high | 0;
		}
		var this2 = new haxe__$Int64__$_$_$Int64(high,low);
		var this3 = this2;
		var wd = thx_DateTimeUtc.get_dayOfWeek(this3);
		var this2 = this1[0];
		var a = this2;
		var this2 = this1[1];
		var b = this2;
		var high = a.high + b.high | 0;
		var low = a.low + b.low | 0;
		if(haxe_Int32.ucompare(low,a.low) < 0) {
			var ret = high++;
			high = high | 0;
		}
		var this2 = new haxe__$Int64__$_$_$Int64(high,low);
		var this3 = this2;
		var year = thx_DateTimeUtc.getDatePart(this3,thx_DateTimeUtc.DATE_PART_YEAR);
		var this2 = this1[0];
		var a = this2;
		var this2 = this1[1];
		var b = this2;
		var high = a.high + b.high | 0;
		var low = a.low + b.low | 0;
		if(haxe_Int32.ucompare(low,a.low) < 0) {
			var ret = high++;
			high = high | 0;
		}
		var this2 = new haxe__$Int64__$_$_$Int64(high,low);
		var this3 = this2;
		var month = thx_DateTimeUtc.getDatePart(this3,thx_DateTimeUtc.DATE_PART_MONTH);
		var this2 = this1[0];
		var a = this2;
		var this2 = this1[1];
		var b = this2;
		var high = a.high + b.high | 0;
		var low = a.low + b.low | 0;
		if(haxe_Int32.ucompare(low,a.low) < 0) {
			var ret = high++;
			high = high | 0;
		}
		var this2 = new haxe__$Int64__$_$_$Int64(high,low);
		var this3 = this2;
		var day = thx_DateTimeUtc.getDatePart(this3,thx_DateTimeUtc.DATE_PART_DAY) + 7 - wd;
		var hour = 0;
		var minute = 0;
		var second = 0;
		var this2 = this1[1];
		var offset = this2;
		if(second == null) {
			second = 0;
		}
		if(minute == null) {
			minute = 0;
		}
		if(hour == null) {
			hour = 0;
		}
		var this_0 = thx_DateTimeUtc.create(year,month,day,hour,minute,second,0);
		var this_1 = offset;
		var this2 = this_0;
		var a = this2;
		var b = offset;
		var high = a.high - b.high | 0;
		var low = a.low - b.low | 0;
		if(haxe_Int32.ucompare(a.low,b.low) < 0) {
			var ret = high--;
			high = high | 0;
		}
		var this2 = new haxe__$Int64__$_$_$Int64(high,low);
		var this3 = this_1;
		var this4 = [thx_DateTimeUtc.fromInt64(this2),this3];
		return this4;
	case 5:
		var this2 = this1[0];
		var a = this2;
		var this2 = this1[1];
		var b = this2;
		var high = a.high + b.high | 0;
		var low = a.low + b.low | 0;
		if(haxe_Int32.ucompare(low,a.low) < 0) {
			var ret = high++;
			high = high | 0;
		}
		var this2 = new haxe__$Int64__$_$_$Int64(high,low);
		var this3 = this2;
		var year = thx_DateTimeUtc.getDatePart(this3,thx_DateTimeUtc.DATE_PART_YEAR);
		var this2 = this1[0];
		var a = this2;
		var this2 = this1[1];
		var b = this2;
		var high = a.high + b.high | 0;
		var low = a.low + b.low | 0;
		if(haxe_Int32.ucompare(low,a.low) < 0) {
			var ret = high++;
			high = high | 0;
		}
		var this2 = new haxe__$Int64__$_$_$Int64(high,low);
		var this3 = this2;
		var month = thx_DateTimeUtc.getDatePart(this3,thx_DateTimeUtc.DATE_PART_MONTH) + 1;
		var hour = 0;
		var minute = 0;
		var second = 0;
		var this2 = this1[1];
		var offset = this2;
		if(second == null) {
			second = 0;
		}
		if(minute == null) {
			minute = 0;
		}
		if(hour == null) {
			hour = 0;
		}
		var this_0 = thx_DateTimeUtc.create(year,month,1,hour,minute,second,0);
		var this_1 = offset;
		var this2 = this_0;
		var a = this2;
		var b = offset;
		var high = a.high - b.high | 0;
		var low = a.low - b.low | 0;
		if(haxe_Int32.ucompare(a.low,b.low) < 0) {
			var ret = high--;
			high = high | 0;
		}
		var this2 = new haxe__$Int64__$_$_$Int64(high,low);
		var this3 = this_1;
		var this4 = [thx_DateTimeUtc.fromInt64(this2),this3];
		return this4;
	case 6:
		var this2 = this1[0];
		var a = this2;
		var this2 = this1[1];
		var b = this2;
		var high = a.high + b.high | 0;
		var low = a.low + b.low | 0;
		if(haxe_Int32.ucompare(low,a.low) < 0) {
			var ret = high++;
			high = high | 0;
		}
		var this2 = new haxe__$Int64__$_$_$Int64(high,low);
		var this3 = this2;
		var year = thx_DateTimeUtc.getDatePart(this3,thx_DateTimeUtc.DATE_PART_YEAR) + 1;
		var hour = 0;
		var minute = 0;
		var second = 0;
		var this2 = this1[1];
		var offset = this2;
		if(second == null) {
			second = 0;
		}
		if(minute == null) {
			minute = 0;
		}
		if(hour == null) {
			hour = 0;
		}
		var this_0 = thx_DateTimeUtc.create(year,1,1,hour,minute,second,0);
		var this_1 = offset;
		var this1 = this_0;
		var a = this1;
		var b = offset;
		var high = a.high - b.high | 0;
		var low = a.low - b.low | 0;
		if(haxe_Int32.ucompare(a.low,b.low) < 0) {
			var ret = high--;
			high = high | 0;
		}
		var this1 = new haxe__$Int64__$_$_$Int64(high,low);
		var this2 = this_1;
		var this3 = [thx_DateTimeUtc.fromInt64(this1),this2];
		return this3;
	}
};
thx_DateTime.snapPrev = function(this1,period) {
	switch(period._hx_index) {
	case 0:
		var this2 = this1[0];
		var a = thx_Int64s.divFloor(this2,thx_DateTimeUtc.ticksPerSecondI64);
		var b = thx_DateTimeUtc.ticksPerSecondI64;
		var mask = 65535;
		var al = a.low & mask;
		var ah = a.low >>> 16;
		var bl = b.low & mask;
		var bh = b.low >>> 16;
		var p00 = haxe_Int32._mul(al,bl);
		var p10 = haxe_Int32._mul(ah,bl);
		var p01 = haxe_Int32._mul(al,bh);
		var p11 = haxe_Int32._mul(ah,bh);
		var low = p00;
		var high = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
		p01 <<= 16;
		low = low + p01 | 0;
		if(haxe_Int32.ucompare(low,p01) < 0) {
			var ret = high++;
			high = high | 0;
		}
		p10 <<= 16;
		low = low + p10 | 0;
		if(haxe_Int32.ucompare(low,p10) < 0) {
			var ret = high++;
			high = high | 0;
		}
		high = high + (haxe_Int32._mul(a.low,b.high) + haxe_Int32._mul(a.high,b.low) | 0) | 0;
		var this2 = new haxe__$Int64__$_$_$Int64(high,low);
		var this3 = this2;
		var this2 = this1[1];
		var this4 = [this3,this2];
		return this4;
	case 1:
		var this2 = this1[0];
		var a = thx_Int64s.divFloor(this2,thx_DateTimeUtc.ticksPerMinuteI64);
		var b = thx_DateTimeUtc.ticksPerMinuteI64;
		var mask = 65535;
		var al = a.low & mask;
		var ah = a.low >>> 16;
		var bl = b.low & mask;
		var bh = b.low >>> 16;
		var p00 = haxe_Int32._mul(al,bl);
		var p10 = haxe_Int32._mul(ah,bl);
		var p01 = haxe_Int32._mul(al,bh);
		var p11 = haxe_Int32._mul(ah,bh);
		var low = p00;
		var high = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
		p01 <<= 16;
		low = low + p01 | 0;
		if(haxe_Int32.ucompare(low,p01) < 0) {
			var ret = high++;
			high = high | 0;
		}
		p10 <<= 16;
		low = low + p10 | 0;
		if(haxe_Int32.ucompare(low,p10) < 0) {
			var ret = high++;
			high = high | 0;
		}
		high = high + (haxe_Int32._mul(a.low,b.high) + haxe_Int32._mul(a.high,b.low) | 0) | 0;
		var this2 = new haxe__$Int64__$_$_$Int64(high,low);
		var this3 = this2;
		var this2 = this1[1];
		var this4 = [this3,this2];
		return this4;
	case 2:
		var this2 = this1[0];
		var a = thx_Int64s.divFloor(this2,thx_DateTimeUtc.ticksPerHourI64);
		var b = thx_DateTimeUtc.ticksPerHourI64;
		var mask = 65535;
		var al = a.low & mask;
		var ah = a.low >>> 16;
		var bl = b.low & mask;
		var bh = b.low >>> 16;
		var p00 = haxe_Int32._mul(al,bl);
		var p10 = haxe_Int32._mul(ah,bl);
		var p01 = haxe_Int32._mul(al,bh);
		var p11 = haxe_Int32._mul(ah,bh);
		var low = p00;
		var high = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
		p01 <<= 16;
		low = low + p01 | 0;
		if(haxe_Int32.ucompare(low,p01) < 0) {
			var ret = high++;
			high = high | 0;
		}
		p10 <<= 16;
		low = low + p10 | 0;
		if(haxe_Int32.ucompare(low,p10) < 0) {
			var ret = high++;
			high = high | 0;
		}
		high = high + (haxe_Int32._mul(a.low,b.high) + haxe_Int32._mul(a.high,b.low) | 0) | 0;
		var this2 = new haxe__$Int64__$_$_$Int64(high,low);
		var this3 = this2;
		var this2 = this1[1];
		var this4 = [this3,this2];
		return this4;
	case 3:
		var this2 = this1[0];
		var a = this2;
		var this2 = this1[1];
		var b = this2;
		var high = a.high + b.high | 0;
		var low = a.low + b.low | 0;
		if(haxe_Int32.ucompare(low,a.low) < 0) {
			var ret = high++;
			high = high | 0;
		}
		var this2 = new haxe__$Int64__$_$_$Int64(high,low);
		var this3 = this2;
		var year = thx_DateTimeUtc.getDatePart(this3,thx_DateTimeUtc.DATE_PART_YEAR);
		var this2 = this1[0];
		var a = this2;
		var this2 = this1[1];
		var b = this2;
		var high = a.high + b.high | 0;
		var low = a.low + b.low | 0;
		if(haxe_Int32.ucompare(low,a.low) < 0) {
			var ret = high++;
			high = high | 0;
		}
		var this2 = new haxe__$Int64__$_$_$Int64(high,low);
		var this3 = this2;
		var month = thx_DateTimeUtc.getDatePart(this3,thx_DateTimeUtc.DATE_PART_MONTH);
		var this2 = this1[0];
		var a = this2;
		var this2 = this1[1];
		var b = this2;
		var high = a.high + b.high | 0;
		var low = a.low + b.low | 0;
		if(haxe_Int32.ucompare(low,a.low) < 0) {
			var ret = high++;
			high = high | 0;
		}
		var this2 = new haxe__$Int64__$_$_$Int64(high,low);
		var this3 = this2;
		var day = thx_DateTimeUtc.getDatePart(this3,thx_DateTimeUtc.DATE_PART_DAY);
		var hour = 0;
		var minute = 0;
		var second = 0;
		var this2 = this1[1];
		var offset = this2;
		if(second == null) {
			second = 0;
		}
		if(minute == null) {
			minute = 0;
		}
		if(hour == null) {
			hour = 0;
		}
		var this_0 = thx_DateTimeUtc.create(year,month,day,hour,minute,second,0);
		var this_1 = offset;
		var this2 = this_0;
		var a = this2;
		var b = offset;
		var high = a.high - b.high | 0;
		var low = a.low - b.low | 0;
		if(haxe_Int32.ucompare(a.low,b.low) < 0) {
			var ret = high--;
			high = high | 0;
		}
		var this2 = new haxe__$Int64__$_$_$Int64(high,low);
		var this3 = this_1;
		var this4 = [thx_DateTimeUtc.fromInt64(this2),this3];
		return this4;
	case 4:
		var this2 = this1[0];
		var a = this2;
		var this2 = this1[1];
		var b = this2;
		var high = a.high + b.high | 0;
		var low = a.low + b.low | 0;
		if(haxe_Int32.ucompare(low,a.low) < 0) {
			var ret = high++;
			high = high | 0;
		}
		var this2 = new haxe__$Int64__$_$_$Int64(high,low);
		var this3 = this2;
		var wd = thx_DateTimeUtc.get_dayOfWeek(this3);
		var this2 = this1[0];
		var a = this2;
		var this2 = this1[1];
		var b = this2;
		var high = a.high + b.high | 0;
		var low = a.low + b.low | 0;
		if(haxe_Int32.ucompare(low,a.low) < 0) {
			var ret = high++;
			high = high | 0;
		}
		var this2 = new haxe__$Int64__$_$_$Int64(high,low);
		var this3 = this2;
		var year = thx_DateTimeUtc.getDatePart(this3,thx_DateTimeUtc.DATE_PART_YEAR);
		var this2 = this1[0];
		var a = this2;
		var this2 = this1[1];
		var b = this2;
		var high = a.high + b.high | 0;
		var low = a.low + b.low | 0;
		if(haxe_Int32.ucompare(low,a.low) < 0) {
			var ret = high++;
			high = high | 0;
		}
		var this2 = new haxe__$Int64__$_$_$Int64(high,low);
		var this3 = this2;
		var month = thx_DateTimeUtc.getDatePart(this3,thx_DateTimeUtc.DATE_PART_MONTH);
		var this2 = this1[0];
		var a = this2;
		var this2 = this1[1];
		var b = this2;
		var high = a.high + b.high | 0;
		var low = a.low + b.low | 0;
		if(haxe_Int32.ucompare(low,a.low) < 0) {
			var ret = high++;
			high = high | 0;
		}
		var this2 = new haxe__$Int64__$_$_$Int64(high,low);
		var this3 = this2;
		var day = thx_DateTimeUtc.getDatePart(this3,thx_DateTimeUtc.DATE_PART_DAY) - wd;
		var hour = 0;
		var minute = 0;
		var second = 0;
		var this2 = this1[1];
		var offset = this2;
		if(second == null) {
			second = 0;
		}
		if(minute == null) {
			minute = 0;
		}
		if(hour == null) {
			hour = 0;
		}
		var this_0 = thx_DateTimeUtc.create(year,month,day,hour,minute,second,0);
		var this_1 = offset;
		var this2 = this_0;
		var a = this2;
		var b = offset;
		var high = a.high - b.high | 0;
		var low = a.low - b.low | 0;
		if(haxe_Int32.ucompare(a.low,b.low) < 0) {
			var ret = high--;
			high = high | 0;
		}
		var this2 = new haxe__$Int64__$_$_$Int64(high,low);
		var this3 = this_1;
		var this4 = [thx_DateTimeUtc.fromInt64(this2),this3];
		return this4;
	case 5:
		var this2 = this1[0];
		var a = this2;
		var this2 = this1[1];
		var b = this2;
		var high = a.high + b.high | 0;
		var low = a.low + b.low | 0;
		if(haxe_Int32.ucompare(low,a.low) < 0) {
			var ret = high++;
			high = high | 0;
		}
		var this2 = new haxe__$Int64__$_$_$Int64(high,low);
		var this3 = this2;
		var year = thx_DateTimeUtc.getDatePart(this3,thx_DateTimeUtc.DATE_PART_YEAR);
		var this2 = this1[0];
		var a = this2;
		var this2 = this1[1];
		var b = this2;
		var high = a.high + b.high | 0;
		var low = a.low + b.low | 0;
		if(haxe_Int32.ucompare(low,a.low) < 0) {
			var ret = high++;
			high = high | 0;
		}
		var this2 = new haxe__$Int64__$_$_$Int64(high,low);
		var this3 = this2;
		var month = thx_DateTimeUtc.getDatePart(this3,thx_DateTimeUtc.DATE_PART_MONTH);
		var hour = 0;
		var minute = 0;
		var second = 0;
		var this2 = this1[1];
		var offset = this2;
		if(second == null) {
			second = 0;
		}
		if(minute == null) {
			minute = 0;
		}
		if(hour == null) {
			hour = 0;
		}
		var this_0 = thx_DateTimeUtc.create(year,month,1,hour,minute,second,0);
		var this_1 = offset;
		var this2 = this_0;
		var a = this2;
		var b = offset;
		var high = a.high - b.high | 0;
		var low = a.low - b.low | 0;
		if(haxe_Int32.ucompare(a.low,b.low) < 0) {
			var ret = high--;
			high = high | 0;
		}
		var this2 = new haxe__$Int64__$_$_$Int64(high,low);
		var this3 = this_1;
		var this4 = [thx_DateTimeUtc.fromInt64(this2),this3];
		return this4;
	case 6:
		var this2 = this1[0];
		var a = this2;
		var this2 = this1[1];
		var b = this2;
		var high = a.high + b.high | 0;
		var low = a.low + b.low | 0;
		if(haxe_Int32.ucompare(low,a.low) < 0) {
			var ret = high++;
			high = high | 0;
		}
		var this2 = new haxe__$Int64__$_$_$Int64(high,low);
		var this3 = this2;
		var year = thx_DateTimeUtc.getDatePart(this3,thx_DateTimeUtc.DATE_PART_YEAR);
		var hour = 0;
		var minute = 0;
		var second = 0;
		var this2 = this1[1];
		var offset = this2;
		if(second == null) {
			second = 0;
		}
		if(minute == null) {
			minute = 0;
		}
		if(hour == null) {
			hour = 0;
		}
		var this_0 = thx_DateTimeUtc.create(year,1,1,hour,minute,second,0);
		var this_1 = offset;
		var this1 = this_0;
		var a = this1;
		var b = offset;
		var high = a.high - b.high | 0;
		var low = a.low - b.low | 0;
		if(haxe_Int32.ucompare(a.low,b.low) < 0) {
			var ret = high--;
			high = high | 0;
		}
		var this1 = new haxe__$Int64__$_$_$Int64(high,low);
		var this2 = this_1;
		var this3 = [thx_DateTimeUtc.fromInt64(this1),this2];
		return this3;
	}
};
thx_DateTime.snapTo = function(this1,period) {
	switch(period._hx_index) {
	case 0:
		var this2 = this1[0];
		var a = thx_Int64s.divRound(this2,thx_DateTimeUtc.ticksPerSecondI64);
		var b = thx_DateTimeUtc.ticksPerSecondI64;
		var mask = 65535;
		var al = a.low & mask;
		var ah = a.low >>> 16;
		var bl = b.low & mask;
		var bh = b.low >>> 16;
		var p00 = haxe_Int32._mul(al,bl);
		var p10 = haxe_Int32._mul(ah,bl);
		var p01 = haxe_Int32._mul(al,bh);
		var p11 = haxe_Int32._mul(ah,bh);
		var low = p00;
		var high = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
		p01 <<= 16;
		low = low + p01 | 0;
		if(haxe_Int32.ucompare(low,p01) < 0) {
			var ret = high++;
			high = high | 0;
		}
		p10 <<= 16;
		low = low + p10 | 0;
		if(haxe_Int32.ucompare(low,p10) < 0) {
			var ret = high++;
			high = high | 0;
		}
		high = high + (haxe_Int32._mul(a.low,b.high) + haxe_Int32._mul(a.high,b.low) | 0) | 0;
		var this2 = new haxe__$Int64__$_$_$Int64(high,low);
		var this3 = this2;
		var this2 = this1[1];
		var this4 = [this3,this2];
		return this4;
	case 1:
		var this2 = this1[0];
		var a = thx_Int64s.divRound(this2,thx_DateTimeUtc.ticksPerMinuteI64);
		var b = thx_DateTimeUtc.ticksPerMinuteI64;
		var mask = 65535;
		var al = a.low & mask;
		var ah = a.low >>> 16;
		var bl = b.low & mask;
		var bh = b.low >>> 16;
		var p00 = haxe_Int32._mul(al,bl);
		var p10 = haxe_Int32._mul(ah,bl);
		var p01 = haxe_Int32._mul(al,bh);
		var p11 = haxe_Int32._mul(ah,bh);
		var low = p00;
		var high = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
		p01 <<= 16;
		low = low + p01 | 0;
		if(haxe_Int32.ucompare(low,p01) < 0) {
			var ret = high++;
			high = high | 0;
		}
		p10 <<= 16;
		low = low + p10 | 0;
		if(haxe_Int32.ucompare(low,p10) < 0) {
			var ret = high++;
			high = high | 0;
		}
		high = high + (haxe_Int32._mul(a.low,b.high) + haxe_Int32._mul(a.high,b.low) | 0) | 0;
		var this2 = new haxe__$Int64__$_$_$Int64(high,low);
		var this3 = this2;
		var this2 = this1[1];
		var this4 = [this3,this2];
		return this4;
	case 2:
		var this2 = this1[0];
		var a = thx_Int64s.divRound(this2,thx_DateTimeUtc.ticksPerHourI64);
		var b = thx_DateTimeUtc.ticksPerHourI64;
		var mask = 65535;
		var al = a.low & mask;
		var ah = a.low >>> 16;
		var bl = b.low & mask;
		var bh = b.low >>> 16;
		var p00 = haxe_Int32._mul(al,bl);
		var p10 = haxe_Int32._mul(ah,bl);
		var p01 = haxe_Int32._mul(al,bh);
		var p11 = haxe_Int32._mul(ah,bh);
		var low = p00;
		var high = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
		p01 <<= 16;
		low = low + p01 | 0;
		if(haxe_Int32.ucompare(low,p01) < 0) {
			var ret = high++;
			high = high | 0;
		}
		p10 <<= 16;
		low = low + p10 | 0;
		if(haxe_Int32.ucompare(low,p10) < 0) {
			var ret = high++;
			high = high | 0;
		}
		high = high + (haxe_Int32._mul(a.low,b.high) + haxe_Int32._mul(a.high,b.low) | 0) | 0;
		var this2 = new haxe__$Int64__$_$_$Int64(high,low);
		var this3 = this2;
		var this2 = this1[1];
		var this4 = [this3,this2];
		return this4;
	case 3:
		var this2 = this1[0];
		var a = this2;
		var this2 = this1[1];
		var b = this2;
		var high = a.high + b.high | 0;
		var low = a.low + b.low | 0;
		if(haxe_Int32.ucompare(low,a.low) < 0) {
			var ret = high++;
			high = high | 0;
		}
		var this2 = new haxe__$Int64__$_$_$Int64(high,low);
		var this3 = this2;
		var mod = thx_DateTimeUtc.get_hour(this3) >= 12 ? 1 : 0;
		var this2 = this1[0];
		var a = this2;
		var this2 = this1[1];
		var b = this2;
		var high = a.high + b.high | 0;
		var low = a.low + b.low | 0;
		if(haxe_Int32.ucompare(low,a.low) < 0) {
			var ret = high++;
			high = high | 0;
		}
		var this2 = new haxe__$Int64__$_$_$Int64(high,low);
		var this3 = this2;
		var year = thx_DateTimeUtc.getDatePart(this3,thx_DateTimeUtc.DATE_PART_YEAR);
		var this2 = this1[0];
		var a = this2;
		var this2 = this1[1];
		var b = this2;
		var high = a.high + b.high | 0;
		var low = a.low + b.low | 0;
		if(haxe_Int32.ucompare(low,a.low) < 0) {
			var ret = high++;
			high = high | 0;
		}
		var this2 = new haxe__$Int64__$_$_$Int64(high,low);
		var this3 = this2;
		var month = thx_DateTimeUtc.getDatePart(this3,thx_DateTimeUtc.DATE_PART_MONTH);
		var this2 = this1[0];
		var a = this2;
		var this2 = this1[1];
		var b = this2;
		var high = a.high + b.high | 0;
		var low = a.low + b.low | 0;
		if(haxe_Int32.ucompare(low,a.low) < 0) {
			var ret = high++;
			high = high | 0;
		}
		var this2 = new haxe__$Int64__$_$_$Int64(high,low);
		var this3 = this2;
		var day = thx_DateTimeUtc.getDatePart(this3,thx_DateTimeUtc.DATE_PART_DAY) + mod;
		var hour = 0;
		var minute = 0;
		var second = 0;
		var this2 = this1[1];
		var offset = this2;
		if(second == null) {
			second = 0;
		}
		if(minute == null) {
			minute = 0;
		}
		if(hour == null) {
			hour = 0;
		}
		var this_0 = thx_DateTimeUtc.create(year,month,day,hour,minute,second,0);
		var this_1 = offset;
		var this2 = this_0;
		var a = this2;
		var b = offset;
		var high = a.high - b.high | 0;
		var low = a.low - b.low | 0;
		if(haxe_Int32.ucompare(a.low,b.low) < 0) {
			var ret = high--;
			high = high | 0;
		}
		var this2 = new haxe__$Int64__$_$_$Int64(high,low);
		var this3 = this_1;
		var this4 = [thx_DateTimeUtc.fromInt64(this2),this3];
		return this4;
	case 4:
		var this2 = this1[0];
		var a = this2;
		var this2 = this1[1];
		var b = this2;
		var high = a.high + b.high | 0;
		var low = a.low + b.low | 0;
		if(haxe_Int32.ucompare(low,a.low) < 0) {
			var ret = high++;
			high = high | 0;
		}
		var this2 = new haxe__$Int64__$_$_$Int64(high,low);
		var this3 = this2;
		var wd = thx_DateTimeUtc.get_dayOfWeek(this3);
		var mod;
		if(wd < 3) {
			mod = -wd;
		} else if(wd > 3) {
			mod = 7 - wd;
		} else {
			var this2 = this1[0];
			var a = this2;
			var this2 = this1[1];
			var b = this2;
			var high = a.high + b.high | 0;
			var low = a.low + b.low | 0;
			if(haxe_Int32.ucompare(low,a.low) < 0) {
				var ret = high++;
				high = high | 0;
			}
			var this2 = new haxe__$Int64__$_$_$Int64(high,low);
			var this3 = this2;
			mod = thx_DateTimeUtc.get_hour(this3) < 12 ? -wd : 7 - wd;
		}
		var this2 = this1[0];
		var a = this2;
		var this2 = this1[1];
		var b = this2;
		var high = a.high + b.high | 0;
		var low = a.low + b.low | 0;
		if(haxe_Int32.ucompare(low,a.low) < 0) {
			var ret = high++;
			high = high | 0;
		}
		var this2 = new haxe__$Int64__$_$_$Int64(high,low);
		var this3 = this2;
		var year = thx_DateTimeUtc.getDatePart(this3,thx_DateTimeUtc.DATE_PART_YEAR);
		var this2 = this1[0];
		var a = this2;
		var this2 = this1[1];
		var b = this2;
		var high = a.high + b.high | 0;
		var low = a.low + b.low | 0;
		if(haxe_Int32.ucompare(low,a.low) < 0) {
			var ret = high++;
			high = high | 0;
		}
		var this2 = new haxe__$Int64__$_$_$Int64(high,low);
		var this3 = this2;
		var month = thx_DateTimeUtc.getDatePart(this3,thx_DateTimeUtc.DATE_PART_MONTH);
		var this2 = this1[0];
		var a = this2;
		var this2 = this1[1];
		var b = this2;
		var high = a.high + b.high | 0;
		var low = a.low + b.low | 0;
		if(haxe_Int32.ucompare(low,a.low) < 0) {
			var ret = high++;
			high = high | 0;
		}
		var this2 = new haxe__$Int64__$_$_$Int64(high,low);
		var this3 = this2;
		var day = thx_DateTimeUtc.getDatePart(this3,thx_DateTimeUtc.DATE_PART_DAY) + mod;
		var hour = 0;
		var minute = 0;
		var second = 0;
		var this2 = this1[1];
		var offset = this2;
		if(second == null) {
			second = 0;
		}
		if(minute == null) {
			minute = 0;
		}
		if(hour == null) {
			hour = 0;
		}
		var this_0 = thx_DateTimeUtc.create(year,month,day,hour,minute,second,0);
		var this_1 = offset;
		var this2 = this_0;
		var a = this2;
		var b = offset;
		var high = a.high - b.high | 0;
		var low = a.low - b.low | 0;
		if(haxe_Int32.ucompare(a.low,b.low) < 0) {
			var ret = high--;
			high = high | 0;
		}
		var this2 = new haxe__$Int64__$_$_$Int64(high,low);
		var this3 = this_1;
		var this4 = [thx_DateTimeUtc.fromInt64(this2),this3];
		return this4;
	case 5:
		var this2 = this1[0];
		var a = this2;
		var this2 = this1[1];
		var b = this2;
		var high = a.high + b.high | 0;
		var low = a.low + b.low | 0;
		if(haxe_Int32.ucompare(low,a.low) < 0) {
			var ret = high++;
			high = high | 0;
		}
		var this2 = new haxe__$Int64__$_$_$Int64(high,low);
		var this3 = this2;
		var mod = thx_DateTimeUtc.getDatePart(this3,thx_DateTimeUtc.DATE_PART_DAY);
		var this2 = this1[0];
		var a = this2;
		var this2 = this1[1];
		var b = this2;
		var high = a.high + b.high | 0;
		var low = a.low + b.low | 0;
		if(haxe_Int32.ucompare(low,a.low) < 0) {
			var ret = high++;
			high = high | 0;
		}
		var this2 = new haxe__$Int64__$_$_$Int64(high,low);
		var this3 = this2;
		var mod1 = thx_DateTimeUtc.getDatePart(this3,thx_DateTimeUtc.DATE_PART_YEAR);
		var this2 = this1[0];
		var a = this2;
		var this2 = this1[1];
		var b = this2;
		var high = a.high + b.high | 0;
		var low = a.low + b.low | 0;
		if(haxe_Int32.ucompare(low,a.low) < 0) {
			var ret = high++;
			high = high | 0;
		}
		var this2 = new haxe__$Int64__$_$_$Int64(high,low);
		var this3 = this2;
		var mod2 = mod > Math.round(thx_DateTimeUtc.daysInMonth(mod1,thx_DateTimeUtc.getDatePart(this3,thx_DateTimeUtc.DATE_PART_MONTH)) / 2) ? 1 : 0;
		var this2 = this1[0];
		var a = this2;
		var this2 = this1[1];
		var b = this2;
		var high = a.high + b.high | 0;
		var low = a.low + b.low | 0;
		if(haxe_Int32.ucompare(low,a.low) < 0) {
			var ret = high++;
			high = high | 0;
		}
		var this2 = new haxe__$Int64__$_$_$Int64(high,low);
		var this3 = this2;
		var year = thx_DateTimeUtc.getDatePart(this3,thx_DateTimeUtc.DATE_PART_YEAR);
		var this2 = this1[0];
		var a = this2;
		var this2 = this1[1];
		var b = this2;
		var high = a.high + b.high | 0;
		var low = a.low + b.low | 0;
		if(haxe_Int32.ucompare(low,a.low) < 0) {
			var ret = high++;
			high = high | 0;
		}
		var this2 = new haxe__$Int64__$_$_$Int64(high,low);
		var this3 = this2;
		var month = thx_DateTimeUtc.getDatePart(this3,thx_DateTimeUtc.DATE_PART_MONTH) + mod2;
		var hour = 0;
		var minute = 0;
		var second = 0;
		var this2 = this1[1];
		var offset = this2;
		if(second == null) {
			second = 0;
		}
		if(minute == null) {
			minute = 0;
		}
		if(hour == null) {
			hour = 0;
		}
		var this_0 = thx_DateTimeUtc.create(year,month,1,hour,minute,second,0);
		var this_1 = offset;
		var this2 = this_0;
		var a = this2;
		var b = offset;
		var high = a.high - b.high | 0;
		var low = a.low - b.low | 0;
		if(haxe_Int32.ucompare(a.low,b.low) < 0) {
			var ret = high--;
			high = high | 0;
		}
		var this2 = new haxe__$Int64__$_$_$Int64(high,low);
		var this3 = this_1;
		var this4 = [thx_DateTimeUtc.fromInt64(this2),this3];
		return this4;
	case 6:
		var this2 = this1[0];
		var a = this2;
		var this2 = this1[1];
		var b = this2;
		var high = a.high + b.high | 0;
		var low = a.low + b.low | 0;
		if(haxe_Int32.ucompare(low,a.low) < 0) {
			var ret = high++;
			high = high | 0;
		}
		var this2 = new haxe__$Int64__$_$_$Int64(high,low);
		var this3 = this2;
		var year = thx_DateTimeUtc.getDatePart(this3,thx_DateTimeUtc.DATE_PART_YEAR);
		var hour = 0;
		var minute = 0;
		var second = 0;
		var this2 = this1[1];
		var offset = this2;
		if(second == null) {
			second = 0;
		}
		if(minute == null) {
			minute = 0;
		}
		if(hour == null) {
			hour = 0;
		}
		var this_0 = thx_DateTimeUtc.create(year,6,2,hour,minute,second,0);
		var this_1 = offset;
		var this2 = this_0;
		var a = this2;
		var b = offset;
		var high = a.high - b.high | 0;
		var low = a.low - b.low | 0;
		if(haxe_Int32.ucompare(a.low,b.low) < 0) {
			var ret = high--;
			high = high | 0;
		}
		var this2 = new haxe__$Int64__$_$_$Int64(high,low);
		var this3 = this_1;
		var this4 = [thx_DateTimeUtc.fromInt64(this2),this3];
		var other = this4;
		var mod = thx_DateTime.compareTo(this1,other) > 0 ? 1 : 0;
		var this2 = this1[0];
		var a = this2;
		var this2 = this1[1];
		var b = this2;
		var high = a.high + b.high | 0;
		var low = a.low + b.low | 0;
		if(haxe_Int32.ucompare(low,a.low) < 0) {
			var ret = high++;
			high = high | 0;
		}
		var this2 = new haxe__$Int64__$_$_$Int64(high,low);
		var this3 = this2;
		var year = thx_DateTimeUtc.getDatePart(this3,thx_DateTimeUtc.DATE_PART_YEAR) + mod;
		var hour = 0;
		var minute = 0;
		var second = 0;
		var this2 = this1[1];
		var offset = this2;
		if(second == null) {
			second = 0;
		}
		if(minute == null) {
			minute = 0;
		}
		if(hour == null) {
			hour = 0;
		}
		var this_0 = thx_DateTimeUtc.create(year,1,1,hour,minute,second,0);
		var this_1 = offset;
		var this1 = this_0;
		var a = this1;
		var b = offset;
		var high = a.high - b.high | 0;
		var low = a.low - b.low | 0;
		if(haxe_Int32.ucompare(a.low,b.low) < 0) {
			var ret = high--;
			high = high | 0;
		}
		var this1 = new haxe__$Int64__$_$_$Int64(high,low);
		var this2 = this_1;
		var this3 = [thx_DateTimeUtc.fromInt64(this1),this2];
		return this3;
	}
};
thx_DateTime.sameYear = function(this1,other) {
	var this2 = this1[0];
	var a = this2;
	var this2 = this1[1];
	var b = this2;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this1 = new haxe__$Int64__$_$_$Int64(high,low);
	var this2 = this1;
	var tmp = thx_DateTimeUtc.getDatePart(this2,thx_DateTimeUtc.DATE_PART_YEAR);
	var this1 = other[0];
	var a = this1;
	var this1 = other[1];
	var b = this1;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this1 = new haxe__$Int64__$_$_$Int64(high,low);
	var this2 = this1;
	return tmp == thx_DateTimeUtc.getDatePart(this2,thx_DateTimeUtc.DATE_PART_YEAR);
};
thx_DateTime.sameMonth = function(this1,other) {
	if(thx_DateTime.sameYear(this1,other)) {
		var this2 = this1[0];
		var a = this2;
		var this2 = this1[1];
		var b = this2;
		var high = a.high + b.high | 0;
		var low = a.low + b.low | 0;
		if(haxe_Int32.ucompare(low,a.low) < 0) {
			var ret = high++;
			high = high | 0;
		}
		var this1 = new haxe__$Int64__$_$_$Int64(high,low);
		var this2 = this1;
		var tmp = thx_DateTimeUtc.getDatePart(this2,thx_DateTimeUtc.DATE_PART_MONTH);
		var this1 = other[0];
		var a = this1;
		var this1 = other[1];
		var b = this1;
		var high = a.high + b.high | 0;
		var low = a.low + b.low | 0;
		if(haxe_Int32.ucompare(low,a.low) < 0) {
			var ret = high++;
			high = high | 0;
		}
		var this1 = new haxe__$Int64__$_$_$Int64(high,low);
		var this2 = this1;
		return tmp == thx_DateTimeUtc.getDatePart(this2,thx_DateTimeUtc.DATE_PART_MONTH);
	} else {
		return false;
	}
};
thx_DateTime.sameDay = function(this1,other) {
	if(thx_DateTime.sameMonth(this1,other)) {
		var this2 = this1[0];
		var a = this2;
		var this2 = this1[1];
		var b = this2;
		var high = a.high + b.high | 0;
		var low = a.low + b.low | 0;
		if(haxe_Int32.ucompare(low,a.low) < 0) {
			var ret = high++;
			high = high | 0;
		}
		var this1 = new haxe__$Int64__$_$_$Int64(high,low);
		var this2 = this1;
		var tmp = thx_DateTimeUtc.getDatePart(this2,thx_DateTimeUtc.DATE_PART_DAY);
		var this1 = other[0];
		var a = this1;
		var this1 = other[1];
		var b = this1;
		var high = a.high + b.high | 0;
		var low = a.low + b.low | 0;
		if(haxe_Int32.ucompare(low,a.low) < 0) {
			var ret = high++;
			high = high | 0;
		}
		var this1 = new haxe__$Int64__$_$_$Int64(high,low);
		var this2 = this1;
		return tmp == thx_DateTimeUtc.getDatePart(this2,thx_DateTimeUtc.DATE_PART_DAY);
	} else {
		return false;
	}
};
thx_DateTime.sameHour = function(this1,other) {
	if(thx_DateTime.sameDay(this1,other)) {
		var this2 = this1[0];
		var a = this2;
		var this2 = this1[1];
		var b = this2;
		var high = a.high + b.high | 0;
		var low = a.low + b.low | 0;
		if(haxe_Int32.ucompare(low,a.low) < 0) {
			var ret = high++;
			high = high | 0;
		}
		var this1 = new haxe__$Int64__$_$_$Int64(high,low);
		var this2 = this1;
		var tmp = thx_DateTimeUtc.get_hour(this2);
		var this1 = other[0];
		var a = this1;
		var this1 = other[1];
		var b = this1;
		var high = a.high + b.high | 0;
		var low = a.low + b.low | 0;
		if(haxe_Int32.ucompare(low,a.low) < 0) {
			var ret = high++;
			high = high | 0;
		}
		var this1 = new haxe__$Int64__$_$_$Int64(high,low);
		var this2 = this1;
		return tmp == thx_DateTimeUtc.get_hour(this2);
	} else {
		return false;
	}
};
thx_DateTime.sameMinute = function(this1,other) {
	if(thx_DateTime.sameHour(this1,other)) {
		var this2 = this1[0];
		var a = this2;
		var this2 = this1[1];
		var b = this2;
		var high = a.high + b.high | 0;
		var low = a.low + b.low | 0;
		if(haxe_Int32.ucompare(low,a.low) < 0) {
			var ret = high++;
			high = high | 0;
		}
		var this1 = new haxe__$Int64__$_$_$Int64(high,low);
		var this2 = this1;
		var tmp = thx_DateTimeUtc.get_minute(this2);
		var this1 = other[0];
		var a = this1;
		var this1 = other[1];
		var b = this1;
		var high = a.high + b.high | 0;
		var low = a.low + b.low | 0;
		if(haxe_Int32.ucompare(low,a.low) < 0) {
			var ret = high++;
			high = high | 0;
		}
		var this1 = new haxe__$Int64__$_$_$Int64(high,low);
		var this2 = this1;
		return tmp == thx_DateTimeUtc.get_minute(this2);
	} else {
		return false;
	}
};
thx_DateTime.sameSecond = function(this1,other) {
	if(thx_DateTime.sameMinute(this1,other)) {
		var this2 = this1[0];
		var a = this2;
		var this2 = this1[1];
		var b = this2;
		var high = a.high + b.high | 0;
		var low = a.low + b.low | 0;
		if(haxe_Int32.ucompare(low,a.low) < 0) {
			var ret = high++;
			high = high | 0;
		}
		var this1 = new haxe__$Int64__$_$_$Int64(high,low);
		var this2 = this1;
		var tmp = thx_DateTimeUtc.get_second(this2);
		var this1 = other[0];
		var a = this1;
		var this1 = other[1];
		var b = this1;
		var high = a.high + b.high | 0;
		var low = a.low + b.low | 0;
		if(haxe_Int32.ucompare(low,a.low) < 0) {
			var ret = high++;
			high = high | 0;
		}
		var this1 = new haxe__$Int64__$_$_$Int64(high,low);
		var this2 = this1;
		return tmp == thx_DateTimeUtc.get_second(this2);
	} else {
		return false;
	}
};
thx_DateTime.withYear = function(this1,year) {
	var this2 = this1[0];
	var a = this2;
	var this2 = this1[1];
	var b = this2;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	var this3 = this2;
	var month = thx_DateTimeUtc.getDatePart(this3,thx_DateTimeUtc.DATE_PART_MONTH);
	var this2 = this1[0];
	var a = this2;
	var this2 = this1[1];
	var b = this2;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	var this3 = this2;
	var day = thx_DateTimeUtc.getDatePart(this3,thx_DateTimeUtc.DATE_PART_DAY);
	var this2 = this1[0];
	var a = this2;
	var this2 = this1[1];
	var b = this2;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	var this3 = this2;
	var hour = thx_DateTimeUtc.get_hour(this3);
	var this2 = this1[0];
	var a = this2;
	var this2 = this1[1];
	var b = this2;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	var this3 = this2;
	var minute = thx_DateTimeUtc.get_minute(this3);
	var this2 = this1[0];
	var a = this2;
	var this2 = this1[1];
	var b = this2;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	var this3 = this2;
	var second = thx_DateTimeUtc.get_second(this3);
	var this2 = this1[0];
	var a = this2;
	var this2 = this1[1];
	var b = this2;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	var this3 = this2;
	var millisecond = thx_DateTimeUtc.get_millisecond(this3);
	var this2 = this1[1];
	var offset = this2;
	if(millisecond == null) {
		millisecond = 0;
	}
	if(second == null) {
		second = 0;
	}
	if(minute == null) {
		minute = 0;
	}
	if(hour == null) {
		hour = 0;
	}
	var this_0 = thx_DateTimeUtc.create(year,month,day,hour,minute,second,millisecond);
	var this_1 = offset;
	var this1 = this_0;
	var a = this1;
	var b = offset;
	var high = a.high - b.high | 0;
	var low = a.low - b.low | 0;
	if(haxe_Int32.ucompare(a.low,b.low) < 0) {
		var ret = high--;
		high = high | 0;
	}
	var this1 = new haxe__$Int64__$_$_$Int64(high,low);
	var this2 = this_1;
	var this3 = [thx_DateTimeUtc.fromInt64(this1),this2];
	return this3;
};
thx_DateTime.withMonth = function(this1,month) {
	var this2 = this1[0];
	var a = this2;
	var this2 = this1[1];
	var b = this2;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	var this3 = this2;
	var year = thx_DateTimeUtc.getDatePart(this3,thx_DateTimeUtc.DATE_PART_YEAR);
	var this2 = this1[0];
	var a = this2;
	var this2 = this1[1];
	var b = this2;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	var this3 = this2;
	var day = thx_DateTimeUtc.getDatePart(this3,thx_DateTimeUtc.DATE_PART_DAY);
	var this2 = this1[0];
	var a = this2;
	var this2 = this1[1];
	var b = this2;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	var this3 = this2;
	var hour = thx_DateTimeUtc.get_hour(this3);
	var this2 = this1[0];
	var a = this2;
	var this2 = this1[1];
	var b = this2;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	var this3 = this2;
	var minute = thx_DateTimeUtc.get_minute(this3);
	var this2 = this1[0];
	var a = this2;
	var this2 = this1[1];
	var b = this2;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	var this3 = this2;
	var second = thx_DateTimeUtc.get_second(this3);
	var this2 = this1[0];
	var a = this2;
	var this2 = this1[1];
	var b = this2;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	var this3 = this2;
	var millisecond = thx_DateTimeUtc.get_millisecond(this3);
	var this2 = this1[1];
	var offset = this2;
	if(millisecond == null) {
		millisecond = 0;
	}
	if(second == null) {
		second = 0;
	}
	if(minute == null) {
		minute = 0;
	}
	if(hour == null) {
		hour = 0;
	}
	var this_0 = thx_DateTimeUtc.create(year,month,day,hour,minute,second,millisecond);
	var this_1 = offset;
	var this1 = this_0;
	var a = this1;
	var b = offset;
	var high = a.high - b.high | 0;
	var low = a.low - b.low | 0;
	if(haxe_Int32.ucompare(a.low,b.low) < 0) {
		var ret = high--;
		high = high | 0;
	}
	var this1 = new haxe__$Int64__$_$_$Int64(high,low);
	var this2 = this_1;
	var this3 = [thx_DateTimeUtc.fromInt64(this1),this2];
	return this3;
};
thx_DateTime.withDay = function(this1,day) {
	var this2 = this1[0];
	var a = this2;
	var this2 = this1[1];
	var b = this2;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	var this3 = this2;
	var year = thx_DateTimeUtc.getDatePart(this3,thx_DateTimeUtc.DATE_PART_YEAR);
	var this2 = this1[0];
	var a = this2;
	var this2 = this1[1];
	var b = this2;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	var this3 = this2;
	var month = thx_DateTimeUtc.getDatePart(this3,thx_DateTimeUtc.DATE_PART_MONTH);
	var this2 = this1[0];
	var a = this2;
	var this2 = this1[1];
	var b = this2;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	var this3 = this2;
	var hour = thx_DateTimeUtc.get_hour(this3);
	var this2 = this1[0];
	var a = this2;
	var this2 = this1[1];
	var b = this2;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	var this3 = this2;
	var minute = thx_DateTimeUtc.get_minute(this3);
	var this2 = this1[0];
	var a = this2;
	var this2 = this1[1];
	var b = this2;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	var this3 = this2;
	var second = thx_DateTimeUtc.get_second(this3);
	var this2 = this1[0];
	var a = this2;
	var this2 = this1[1];
	var b = this2;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	var this3 = this2;
	var millisecond = thx_DateTimeUtc.get_millisecond(this3);
	var this2 = this1[1];
	var offset = this2;
	if(millisecond == null) {
		millisecond = 0;
	}
	if(second == null) {
		second = 0;
	}
	if(minute == null) {
		minute = 0;
	}
	if(hour == null) {
		hour = 0;
	}
	var this_0 = thx_DateTimeUtc.create(year,month,day,hour,minute,second,millisecond);
	var this_1 = offset;
	var this1 = this_0;
	var a = this1;
	var b = offset;
	var high = a.high - b.high | 0;
	var low = a.low - b.low | 0;
	if(haxe_Int32.ucompare(a.low,b.low) < 0) {
		var ret = high--;
		high = high | 0;
	}
	var this1 = new haxe__$Int64__$_$_$Int64(high,low);
	var this2 = this_1;
	var this3 = [thx_DateTimeUtc.fromInt64(this1),this2];
	return this3;
};
thx_DateTime.withHour = function(this1,hour) {
	var this2 = this1[0];
	var a = this2;
	var this2 = this1[1];
	var b = this2;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	var this3 = this2;
	var year = thx_DateTimeUtc.getDatePart(this3,thx_DateTimeUtc.DATE_PART_YEAR);
	var this2 = this1[0];
	var a = this2;
	var this2 = this1[1];
	var b = this2;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	var this3 = this2;
	var month = thx_DateTimeUtc.getDatePart(this3,thx_DateTimeUtc.DATE_PART_MONTH);
	var this2 = this1[0];
	var a = this2;
	var this2 = this1[1];
	var b = this2;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	var this3 = this2;
	var day = thx_DateTimeUtc.getDatePart(this3,thx_DateTimeUtc.DATE_PART_DAY);
	var hour1 = hour;
	var this2 = this1[0];
	var a = this2;
	var this2 = this1[1];
	var b = this2;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	var this3 = this2;
	var minute = thx_DateTimeUtc.get_minute(this3);
	var this2 = this1[0];
	var a = this2;
	var this2 = this1[1];
	var b = this2;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	var this3 = this2;
	var second = thx_DateTimeUtc.get_second(this3);
	var this2 = this1[0];
	var a = this2;
	var this2 = this1[1];
	var b = this2;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	var this3 = this2;
	var millisecond = thx_DateTimeUtc.get_millisecond(this3);
	var this2 = this1[1];
	var offset = this2;
	if(millisecond == null) {
		millisecond = 0;
	}
	if(second == null) {
		second = 0;
	}
	if(minute == null) {
		minute = 0;
	}
	if(hour1 == null) {
		hour1 = 0;
	}
	var this_0 = thx_DateTimeUtc.create(year,month,day,hour1,minute,second,millisecond);
	var this_1 = offset;
	var this1 = this_0;
	var a = this1;
	var b = offset;
	var high = a.high - b.high | 0;
	var low = a.low - b.low | 0;
	if(haxe_Int32.ucompare(a.low,b.low) < 0) {
		var ret = high--;
		high = high | 0;
	}
	var this1 = new haxe__$Int64__$_$_$Int64(high,low);
	var this2 = this_1;
	var this3 = [thx_DateTimeUtc.fromInt64(this1),this2];
	return this3;
};
thx_DateTime.withMinute = function(this1,minute) {
	var this2 = this1[0];
	var a = this2;
	var this2 = this1[1];
	var b = this2;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	var this3 = this2;
	var year = thx_DateTimeUtc.getDatePart(this3,thx_DateTimeUtc.DATE_PART_YEAR);
	var this2 = this1[0];
	var a = this2;
	var this2 = this1[1];
	var b = this2;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	var this3 = this2;
	var month = thx_DateTimeUtc.getDatePart(this3,thx_DateTimeUtc.DATE_PART_MONTH);
	var this2 = this1[0];
	var a = this2;
	var this2 = this1[1];
	var b = this2;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	var this3 = this2;
	var day = thx_DateTimeUtc.getDatePart(this3,thx_DateTimeUtc.DATE_PART_DAY);
	var this2 = this1[0];
	var a = this2;
	var this2 = this1[1];
	var b = this2;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	var this3 = this2;
	var hour = thx_DateTimeUtc.get_hour(this3);
	var minute1 = minute;
	var this2 = this1[0];
	var a = this2;
	var this2 = this1[1];
	var b = this2;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	var this3 = this2;
	var second = thx_DateTimeUtc.get_second(this3);
	var this2 = this1[0];
	var a = this2;
	var this2 = this1[1];
	var b = this2;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	var this3 = this2;
	var millisecond = thx_DateTimeUtc.get_millisecond(this3);
	var this2 = this1[1];
	var offset = this2;
	if(millisecond == null) {
		millisecond = 0;
	}
	if(second == null) {
		second = 0;
	}
	if(minute1 == null) {
		minute1 = 0;
	}
	if(hour == null) {
		hour = 0;
	}
	var this_0 = thx_DateTimeUtc.create(year,month,day,hour,minute1,second,millisecond);
	var this_1 = offset;
	var this1 = this_0;
	var a = this1;
	var b = offset;
	var high = a.high - b.high | 0;
	var low = a.low - b.low | 0;
	if(haxe_Int32.ucompare(a.low,b.low) < 0) {
		var ret = high--;
		high = high | 0;
	}
	var this1 = new haxe__$Int64__$_$_$Int64(high,low);
	var this2 = this_1;
	var this3 = [thx_DateTimeUtc.fromInt64(this1),this2];
	return this3;
};
thx_DateTime.withSecond = function(this1,second) {
	var this2 = this1[0];
	var a = this2;
	var this2 = this1[1];
	var b = this2;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	var this3 = this2;
	var year = thx_DateTimeUtc.getDatePart(this3,thx_DateTimeUtc.DATE_PART_YEAR);
	var this2 = this1[0];
	var a = this2;
	var this2 = this1[1];
	var b = this2;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	var this3 = this2;
	var month = thx_DateTimeUtc.getDatePart(this3,thx_DateTimeUtc.DATE_PART_MONTH);
	var this2 = this1[0];
	var a = this2;
	var this2 = this1[1];
	var b = this2;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	var this3 = this2;
	var day = thx_DateTimeUtc.getDatePart(this3,thx_DateTimeUtc.DATE_PART_DAY);
	var this2 = this1[0];
	var a = this2;
	var this2 = this1[1];
	var b = this2;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	var this3 = this2;
	var hour = thx_DateTimeUtc.get_hour(this3);
	var this2 = this1[0];
	var a = this2;
	var this2 = this1[1];
	var b = this2;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	var this3 = this2;
	var minute = thx_DateTimeUtc.get_minute(this3);
	var second1 = second;
	var this2 = this1[0];
	var a = this2;
	var this2 = this1[1];
	var b = this2;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	var this3 = this2;
	var millisecond = thx_DateTimeUtc.get_millisecond(this3);
	var this2 = this1[1];
	var offset = this2;
	if(millisecond == null) {
		millisecond = 0;
	}
	if(second1 == null) {
		second1 = 0;
	}
	if(minute == null) {
		minute = 0;
	}
	if(hour == null) {
		hour = 0;
	}
	var this_0 = thx_DateTimeUtc.create(year,month,day,hour,minute,second1,millisecond);
	var this_1 = offset;
	var this1 = this_0;
	var a = this1;
	var b = offset;
	var high = a.high - b.high | 0;
	var low = a.low - b.low | 0;
	if(haxe_Int32.ucompare(a.low,b.low) < 0) {
		var ret = high--;
		high = high | 0;
	}
	var this1 = new haxe__$Int64__$_$_$Int64(high,low);
	var this2 = this_1;
	var this3 = [thx_DateTimeUtc.fromInt64(this1),this2];
	return this3;
};
thx_DateTime.withMillisecond = function(this1,millisecond) {
	var this2 = this1[0];
	var a = this2;
	var this2 = this1[1];
	var b = this2;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	var this3 = this2;
	var year = thx_DateTimeUtc.getDatePart(this3,thx_DateTimeUtc.DATE_PART_YEAR);
	var this2 = this1[0];
	var a = this2;
	var this2 = this1[1];
	var b = this2;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	var this3 = this2;
	var month = thx_DateTimeUtc.getDatePart(this3,thx_DateTimeUtc.DATE_PART_MONTH);
	var this2 = this1[0];
	var a = this2;
	var this2 = this1[1];
	var b = this2;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	var this3 = this2;
	var day = thx_DateTimeUtc.getDatePart(this3,thx_DateTimeUtc.DATE_PART_DAY);
	var this2 = this1[0];
	var a = this2;
	var this2 = this1[1];
	var b = this2;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	var this3 = this2;
	var hour = thx_DateTimeUtc.get_hour(this3);
	var this2 = this1[0];
	var a = this2;
	var this2 = this1[1];
	var b = this2;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	var this3 = this2;
	var minute = thx_DateTimeUtc.get_minute(this3);
	var this2 = this1[0];
	var a = this2;
	var this2 = this1[1];
	var b = this2;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	var this3 = this2;
	var second = thx_DateTimeUtc.get_second(this3);
	var millisecond1 = millisecond;
	var this2 = this1[1];
	var offset = this2;
	if(millisecond1 == null) {
		millisecond1 = 0;
	}
	if(second == null) {
		second = 0;
	}
	if(minute == null) {
		minute = 0;
	}
	if(hour == null) {
		hour = 0;
	}
	var this_0 = thx_DateTimeUtc.create(year,month,day,hour,minute,second,millisecond1);
	var this_1 = offset;
	var this1 = this_0;
	var a = this1;
	var b = offset;
	var high = a.high - b.high | 0;
	var low = a.low - b.low | 0;
	if(haxe_Int32.ucompare(a.low,b.low) < 0) {
		var ret = high--;
		high = high | 0;
	}
	var this1 = new haxe__$Int64__$_$_$Int64(high,low);
	var this2 = this_1;
	var this3 = [thx_DateTimeUtc.fromInt64(this1),this2];
	return this3;
};
thx_DateTime.withOffset = function(this1,offset) {
	var this2 = this1[0];
	var this1 = [this2,offset];
	return this1;
};
thx_DateTime.add = function(this1,time) {
	var this2 = this1[0];
	var a = this2;
	var b = time;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	var dateTime = thx_DateTimeUtc.fromInt64(this2);
	var this2 = this1[1];
	var this1 = [dateTime,this2];
	return this1;
};
thx_DateTime.addTicks = function(this1,ticks) {
	var this2 = this1[0];
	var a = this2;
	var high = a.high + ticks.high | 0;
	var low = a.low + ticks.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	var dateTime = thx_DateTimeUtc.fromInt64(this2);
	var this2 = this1[1];
	var this1 = [dateTime,this2];
	return this1;
};
thx_DateTime.subtract = function(this1,time) {
	var this2 = this1[0];
	var a = this2;
	var b = time;
	var high = a.high - b.high | 0;
	var low = a.low - b.low | 0;
	if(haxe_Int32.ucompare(a.low,b.low) < 0) {
		var ret = high--;
		high = high | 0;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	var dateTime = thx_DateTimeUtc.fromInt64(this2);
	var this2 = this1[1];
	var this1 = [dateTime,this2];
	return this1;
};
thx_DateTime.subtractDate = function(this1,date) {
	var this2 = this1[0];
	var a = this2;
	var this2 = date[0];
	var b = this2;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	var base = thx_DateTimeUtc.fromInt64(this2);
	var this2 = this1[1];
	var date_0 = base;
	var date_1 = this2;
	var this1 = date_0;
	var this2 = this1;
	return this2;
};
thx_DateTime.addDays = function(this1,days) {
	var this2 = this1[0];
	var dateTime = thx_DateTimeUtc.addScaled(this2,days,thx_DateTimeUtc.millisPerDay);
	var this2 = this1[1];
	var this1 = [dateTime,this2];
	return this1;
};
thx_DateTime.addHours = function(this1,hours) {
	var this2 = this1[0];
	var dateTime = thx_DateTimeUtc.addScaled(this2,hours,thx_DateTimeUtc.millisPerHour);
	var this2 = this1[1];
	var this1 = [dateTime,this2];
	return this1;
};
thx_DateTime.addMilliseconds = function(this1,milliseconds) {
	var this2 = this1[0];
	var dateTime = thx_DateTimeUtc.addScaled(this2,milliseconds,1);
	var this2 = this1[1];
	var this1 = [dateTime,this2];
	return this1;
};
thx_DateTime.addMinutes = function(this1,minutes) {
	var this2 = this1[0];
	var dateTime = thx_DateTimeUtc.addScaled(this2,minutes,thx_DateTimeUtc.millisPerMinute);
	var this2 = this1[1];
	var this1 = [dateTime,this2];
	return this1;
};
thx_DateTime.addMonths = function(this1,months) {
	var this2 = this1[0];
	var dateTime = thx_DateTimeUtc.addMonths(this2,months);
	var this2 = this1[1];
	var this1 = [dateTime,this2];
	return this1;
};
thx_DateTime.addSeconds = function(this1,seconds) {
	var this2 = this1[0];
	var dateTime = thx_DateTimeUtc.addScaled(this2,seconds,thx_DateTimeUtc.millisPerSecond);
	var this2 = this1[1];
	var this1 = [dateTime,this2];
	return this1;
};
thx_DateTime.addYears = function(this1,years) {
	var this2 = this1[0];
	var dateTime = thx_DateTimeUtc.addMonths(this2,years * 12);
	var this2 = this1[1];
	var this1 = [dateTime,this2];
	return this1;
};
thx_DateTime.compareTo = function(this1,other) {
	if(null == other && this1 == null) {
		return 0;
	}
	if(null == this1) {
		return -1;
	} else if(null == other) {
		return 1;
	}
	var this2 = this1[0];
	var this1 = other[0];
	return thx_Int64s.compare(this2,this1);
};
thx_DateTime.equalsTo = function(this1,that) {
	var this2 = this1[0];
	var a = this2;
	var this1 = that[0];
	var b = this1;
	if(a.high == b.high) {
		return a.low == b.low;
	} else {
		return false;
	}
};
thx_DateTime.equals = function(self,that) {
	var this1 = self[0];
	var a = this1;
	var this1 = that[0];
	var b = this1;
	if(a.high == b.high) {
		return a.low == b.low;
	} else {
		return false;
	}
};
thx_DateTime.notEqualsTo = function(this1,that) {
	var this2 = this1[0];
	var a = this2;
	var this1 = that[0];
	var b = this1;
	if(a.high == b.high) {
		return a.low != b.low;
	} else {
		return true;
	}
};
thx_DateTime.notEquals = function(self,that) {
	var this1 = self[0];
	var a = this1;
	var this1 = that[0];
	var b = this1;
	if(a.high == b.high) {
		return a.low != b.low;
	} else {
		return true;
	}
};
thx_DateTime.nearEqualsTo = function(this1,other,span) {
	var this2 = other[0];
	var a = this2;
	var this2 = this1[0];
	var b = this2;
	var high = a.high - b.high | 0;
	var low = a.low - b.low | 0;
	if(haxe_Int32.ucompare(a.low,b.low) < 0) {
		var ret = high--;
		high = high | 0;
	}
	var this1 = new haxe__$Int64__$_$_$Int64(high,low);
	var ticks = thx_Int64s.abs(this1);
	var b = thx_Time.abs(span);
	var v = ticks.high - b.high | 0;
	if(v == 0) {
		v = haxe_Int32.ucompare(ticks.low,b.low);
	}
	return (ticks.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) <= 0;
};
thx_DateTime.greaterThan = function(this1,that) {
	return thx_DateTime.compareTo(this1,that) > 0;
};
thx_DateTime.greater = function(self,that) {
	return thx_DateTime.compareTo(self,that) > 0;
};
thx_DateTime.greaterEqualsTo = function(this1,that) {
	return thx_DateTime.compareTo(this1,that) >= 0;
};
thx_DateTime.greaterEquals = function(self,that) {
	return thx_DateTime.compareTo(self,that) >= 0;
};
thx_DateTime.lessTo = function(this1,that) {
	return thx_DateTime.compareTo(this1,that) < 0;
};
thx_DateTime.less = function(self,that) {
	return thx_DateTime.compareTo(self,that) < 0;
};
thx_DateTime.lessEqualsTo = function(this1,that) {
	return thx_DateTime.compareTo(this1,that) <= 0;
};
thx_DateTime.lessEquals = function(self,that) {
	return thx_DateTime.compareTo(self,that) <= 0;
};
thx_DateTime.changeOffset = function(this1,newoffset) {
	var this2 = this1[0];
	var a = this2;
	var this2 = this1[1];
	var b = this2;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var a_high = high;
	var a_low = low;
	var b = newoffset;
	var high = a_high - b.high | 0;
	var low = a_low - b.low | 0;
	if(haxe_Int32.ucompare(a_low,b.low) < 0) {
		var ret = high--;
		high = high | 0;
	}
	var this1 = new haxe__$Int64__$_$_$Int64(high,low);
	var this2 = this1;
	var this1 = [this2,newoffset];
	return this1;
};
thx_DateTime.toUtc = function(this1) {
	var this2 = this1[0];
	return this2;
};
thx_DateTime.clockDateTime = function(this1) {
	var this2 = this1[0];
	var a = this2;
	var this2 = this1[1];
	var b = this2;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this1 = new haxe__$Int64__$_$_$Int64(high,low);
	var this2 = this1;
	return this2;
};
thx_DateTime.toString = function(this1) {
	if(null == this1) {
		return "";
	}
	var this2 = this1[0];
	var this3 = thx_Int64s.abs(this2);
	var this2 = this1[1];
	var abs_0 = this3;
	var abs_1 = this2;
	var decimals;
	var this2 = abs_0;
	var a = this2;
	var this2 = abs_1;
	var b = this2;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	var this3 = this2;
	if(thx_DateTimeUtc.get_tickInSecond(this3) != 0) {
		var this2 = abs_0;
		var a = this2;
		var this2 = abs_1;
		var b = this2;
		var high = a.high + b.high | 0;
		var low = a.low + b.low | 0;
		if(haxe_Int32.ucompare(low,a.low) < 0) {
			var ret = high++;
			high = high | 0;
		}
		var this2 = new haxe__$Int64__$_$_$Int64(high,low);
		var this3 = this2;
		decimals = "." + thx_Strings.trimCharsRight(thx_Ints.lpad(thx_DateTimeUtc.get_tickInSecond(this3),"0",7),")");
	} else {
		decimals = "";
	}
	var this2 = this1[0];
	var a = this2;
	var b = thx_Int64s.zero;
	var v = a.high - b.high | 0;
	if(v == 0) {
		v = haxe_Int32.ucompare(a.low,b.low);
	}
	var isneg = (a.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) < 0;
	var this2 = abs_0;
	var a = this2;
	var this2 = abs_1;
	var b = this2;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	var this3 = this2;
	var tmp = "" + thx_DateTimeUtc.getDatePart(this3,thx_DateTimeUtc.DATE_PART_YEAR) + "-";
	var this2 = abs_0;
	var a = this2;
	var this2 = abs_1;
	var b = this2;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	var this3 = this2;
	var tmp1 = tmp + thx_Ints.lpad(thx_DateTimeUtc.getDatePart(this3,thx_DateTimeUtc.DATE_PART_MONTH),"0",2) + "-";
	var this2 = abs_0;
	var a = this2;
	var this2 = abs_1;
	var b = this2;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	var this3 = this2;
	var tmp = tmp1 + thx_Ints.lpad(thx_DateTimeUtc.getDatePart(this3,thx_DateTimeUtc.DATE_PART_DAY),"0",2) + "T";
	var this2 = abs_0;
	var a = this2;
	var this2 = abs_1;
	var b = this2;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	var this3 = this2;
	var tmp1 = tmp + thx_Ints.lpad(thx_DateTimeUtc.get_hour(this3),"0",2) + ":";
	var this2 = abs_0;
	var a = this2;
	var this2 = abs_1;
	var b = this2;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	var this3 = this2;
	var tmp = tmp1 + thx_Ints.lpad(thx_DateTimeUtc.get_minute(this3),"0",2) + ":";
	var this2 = abs_0;
	var a = this2;
	var this2 = abs_1;
	var b = this2;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	var this3 = this2;
	var tmp1 = tmp + thx_Ints.lpad(thx_DateTimeUtc.get_second(this3),"0",2) + decimals;
	var this2 = this1[1];
	return (isneg ? "-" : "") + (tmp1 + thx_Time.toGmtString(this2));
};
thx_DateTime.get_utc = function(this1) {
	var this2 = this1[0];
	return this2;
};
thx_DateTime.get_offset = function(this1) {
	var this2 = this1[1];
	return this2;
};
thx_DateTime.get_year = function(this1) {
	var this2 = this1[0];
	var a = this2;
	var this2 = this1[1];
	var b = this2;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this1 = new haxe__$Int64__$_$_$Int64(high,low);
	var this2 = this1;
	return thx_DateTimeUtc.getDatePart(this2,thx_DateTimeUtc.DATE_PART_YEAR);
};
thx_DateTime.get_month = function(this1) {
	var this2 = this1[0];
	var a = this2;
	var this2 = this1[1];
	var b = this2;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this1 = new haxe__$Int64__$_$_$Int64(high,low);
	var this2 = this1;
	return thx_DateTimeUtc.getDatePart(this2,thx_DateTimeUtc.DATE_PART_MONTH);
};
thx_DateTime.get_day = function(this1) {
	var this2 = this1[0];
	var a = this2;
	var this2 = this1[1];
	var b = this2;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this1 = new haxe__$Int64__$_$_$Int64(high,low);
	var this2 = this1;
	return thx_DateTimeUtc.getDatePart(this2,thx_DateTimeUtc.DATE_PART_DAY);
};
thx_DateTime.get_hour = function(this1) {
	var this2 = this1[0];
	var a = this2;
	var this2 = this1[1];
	var b = this2;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this1 = new haxe__$Int64__$_$_$Int64(high,low);
	var this2 = this1;
	return thx_DateTimeUtc.get_hour(this2);
};
thx_DateTime.get_minute = function(this1) {
	var this2 = this1[0];
	var a = this2;
	var this2 = this1[1];
	var b = this2;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this1 = new haxe__$Int64__$_$_$Int64(high,low);
	var this2 = this1;
	return thx_DateTimeUtc.get_minute(this2);
};
thx_DateTime.get_dayOfWeek = function(this1) {
	var this2 = this1[0];
	var a = this2;
	var this2 = this1[1];
	var b = this2;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this1 = new haxe__$Int64__$_$_$Int64(high,low);
	var this2 = this1;
	return thx_DateTimeUtc.get_dayOfWeek(this2);
};
thx_DateTime.get_dayOfYear = function(this1) {
	var this2 = this1[0];
	var a = this2;
	var this2 = this1[1];
	var b = this2;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this1 = new haxe__$Int64__$_$_$Int64(high,low);
	var this2 = this1;
	return thx_DateTimeUtc.getDatePart(this2,thx_DateTimeUtc.DATE_PART_DAY_OF_YEAR);
};
thx_DateTime.get_millisecond = function(this1) {
	var this2 = this1[0];
	var a = this2;
	var this2 = this1[1];
	var b = this2;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this1 = new haxe__$Int64__$_$_$Int64(high,low);
	var this2 = this1;
	return thx_DateTimeUtc.get_millisecond(this2);
};
thx_DateTime.get_microsecond = function(this1) {
	var this2 = this1[0];
	var a = this2;
	var this2 = this1[1];
	var b = this2;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this1 = new haxe__$Int64__$_$_$Int64(high,low);
	var this2 = this1;
	return thx_DateTimeUtc.get_microsecond(this2);
};
thx_DateTime.get_tickInSecond = function(this1) {
	var this2 = this1[0];
	var a = this2;
	var this2 = this1[1];
	var b = this2;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this1 = new haxe__$Int64__$_$_$Int64(high,low);
	var this2 = this1;
	return thx_DateTimeUtc.get_tickInSecond(this2);
};
thx_DateTime.get_second = function(this1) {
	var this2 = this1[0];
	var a = this2;
	var this2 = this1[1];
	var b = this2;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this1 = new haxe__$Int64__$_$_$Int64(high,low);
	var this2 = this1;
	return thx_DateTimeUtc.get_second(this2);
};
thx_DateTime.get_timeOfDay = function(this1) {
	var this2 = this1[0];
	var a = this2;
	var this2 = this1[1];
	var b = this2;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this1 = new haxe__$Int64__$_$_$Int64(high,low);
	var this2 = this1;
	var this1 = haxe_Int64.divMod(this2,thx_DateTimeUtc.ticksPerDayI64).modulus;
	return this1;
};
thx_DateTime.get_isInLeapYear = function(this1) {
	var this2 = this1[0];
	var a = this2;
	var this2 = this1[1];
	var b = this2;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this1 = new haxe__$Int64__$_$_$Int64(high,low);
	var this2 = this1;
	return thx_DateTimeUtc.isLeapYear(thx_DateTimeUtc.getDatePart(this2,thx_DateTimeUtc.DATE_PART_YEAR));
};
thx_DateTime.get_monthDays = function(this1) {
	var this2 = this1[0];
	var a = this2;
	var this2 = this1[1];
	var b = this2;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	var this3 = this2;
	var tmp = thx_DateTimeUtc.getDatePart(this3,thx_DateTimeUtc.DATE_PART_YEAR);
	var this2 = this1[0];
	var a = this2;
	var this2 = this1[1];
	var b = this2;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this1 = new haxe__$Int64__$_$_$Int64(high,low);
	var this2 = this1;
	return thx_DateTimeUtc.daysInMonth(tmp,thx_DateTimeUtc.getDatePart(this2,thx_DateTimeUtc.DATE_PART_MONTH));
};
thx_DateTime.self = function(this1) {
	return this1;
};
var thx_DateTimeUtc = {};
thx_DateTimeUtc.__properties__ = {get_timeOfDay:"get_timeOfDay",get_dayOfYear:"get_dayOfYear",get_dayOfWeek:"get_dayOfWeek",get_monthDays:"get_monthDays",get_isInLeapYear:"get_isInLeapYear",get_tickInSecond:"get_tickInSecond",get_microsecond:"get_microsecond",get_millisecond:"get_millisecond",get_second:"get_second",get_minute:"get_minute",get_hour:"get_hour",get_day:"get_day",get_month:"get_month",get_year:"get_year",get_ticks:"get_ticks"};
thx_DateTimeUtc.now = function() {
	return thx_DateTimeUtc.fromDate(new Date());
};
thx_DateTimeUtc.fromInt64 = function(ticks) {
	var this1 = ticks;
	return this1;
};
thx_DateTimeUtc.fromDate = function(date) {
	return thx_DateTimeUtc.fromTime(date.getTime());
};
thx_DateTimeUtc.fromTime = function(timestamp) {
	var a = thx_Int64s.fromFloat(timestamp);
	var b = thx_DateTimeUtc.ticksPerMillisecondI64;
	var mask = 65535;
	var al = a.low & mask;
	var ah = a.low >>> 16;
	var bl = b.low & mask;
	var bh = b.low >>> 16;
	var p00 = haxe_Int32._mul(al,bl);
	var p10 = haxe_Int32._mul(ah,bl);
	var p01 = haxe_Int32._mul(al,bh);
	var p11 = haxe_Int32._mul(ah,bh);
	var low = p00;
	var high = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
	p01 <<= 16;
	low = low + p01 | 0;
	if(haxe_Int32.ucompare(low,p01) < 0) {
		var ret = high++;
		high = high | 0;
	}
	p10 <<= 16;
	low = low + p10 | 0;
	if(haxe_Int32.ucompare(low,p10) < 0) {
		var ret = high++;
		high = high | 0;
	}
	high = high + (haxe_Int32._mul(a.low,b.high) + haxe_Int32._mul(a.high,b.low) | 0) | 0;
	var a_high = high;
	var a_low = low;
	var b = thx_DateTimeUtc.unixEpochTicks;
	var high = a_high + b.high | 0;
	var low = a_low + b.low | 0;
	if(haxe_Int32.ucompare(low,a_low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this1 = new haxe__$Int64__$_$_$Int64(high,low);
	var this2 = this1;
	return this2;
};
thx_DateTimeUtc.fromString = function(s) {
	var this1 = thx_DateTime.fromString(s)[0];
	return this1;
};
thx_DateTimeUtc.is = function(v) {
	return ((v) instanceof haxe__$Int64__$_$_$Int64);
};
thx_DateTimeUtc.parse = function(s) {
	try {
		return thx_Either.Right(thx_DateTimeUtc.fromString(s));
	} catch( _g ) {
		haxe_NativeStackTrace.lastError = _g;
		var e = haxe_Exception.caught(_g).unwrap();
		return thx_Either.Left(thx_Error.fromDynamic(e,{ fileName : "thx/DateTimeUtc.hx", lineNumber : 106, className : "thx._DateTimeUtc.DateTimeUtc_Impl_", methodName : "parse"}).message);
	}
};
thx_DateTimeUtc.compare = function(a,b) {
	return thx_DateTimeUtc.compareTo(a,b);
};
thx_DateTimeUtc.create = function(year,month,day,hour,minute,second,millisecond) {
	if(millisecond == null) {
		millisecond = 0;
	}
	if(second == null) {
		second = 0;
	}
	if(minute == null) {
		minute = 0;
	}
	if(hour == null) {
		hour = 0;
	}
	second += Math.floor(millisecond / 1000);
	millisecond %= 1000;
	if(millisecond < 0) {
		millisecond += 1000;
	}
	var a = thx_DateTimeUtc.dateToTicks(year,month,day);
	var b = thx_Time.timeToTicks(hour,minute,second);
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var a_high = high;
	var a_low = low;
	var a_high1 = millisecond >> 31;
	var a_low1 = millisecond;
	var b = thx_DateTimeUtc.ticksPerMillisecondI64;
	var mask = 65535;
	var al = a_low1 & mask;
	var ah = a_low1 >>> 16;
	var bl = b.low & mask;
	var bh = b.low >>> 16;
	var p00 = haxe_Int32._mul(al,bl);
	var p10 = haxe_Int32._mul(ah,bl);
	var p01 = haxe_Int32._mul(al,bh);
	var p11 = haxe_Int32._mul(ah,bh);
	var low = p00;
	var high = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
	p01 <<= 16;
	low = low + p01 | 0;
	if(haxe_Int32.ucompare(low,p01) < 0) {
		var ret = high++;
		high = high | 0;
	}
	p10 <<= 16;
	low = low + p10 | 0;
	if(haxe_Int32.ucompare(low,p10) < 0) {
		var ret = high++;
		high = high | 0;
	}
	high = high + (haxe_Int32._mul(a_low1,b.high) + haxe_Int32._mul(a_high1,b.low) | 0) | 0;
	var b_high = high;
	var b_low = low;
	var high = a_high + b_high | 0;
	var low = a_low + b_low | 0;
	if(haxe_Int32.ucompare(low,a_low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this1 = new haxe__$Int64__$_$_$Int64(high,low);
	var ticks = this1;
	var this1 = ticks;
	return this1;
};
thx_DateTimeUtc.isLeapYear = function(year) {
	if(year % 4 == 0) {
		if(year % 100 == 0) {
			return year % 400 == 0;
		} else {
			return true;
		}
	} else {
		return false;
	}
};
thx_DateTimeUtc.dateToTicks = function(year,month,day) {
	var fixMonthYear = function() {
		if(month == 0) {
			year -= 1;
			month = 12;
		} else if(month < 0) {
			month = -month;
			var years = Math.ceil(month / 12);
			year -= years;
			month = years * 12 - month;
		} else if(month > 12) {
			var years = Math.floor(month / 12);
			year += years;
			month -= years * 12;
		}
	};
	while(day < 0) {
		month -= 1;
		fixMonthYear();
		day += thx_DateTimeUtc.daysInMonth(year,month);
	}
	fixMonthYear();
	var days;
	while(true) {
		days = thx_DateTimeUtc.daysInMonth(year,month);
		if(!(day > days)) {
			break;
		}
		month += 1;
		fixMonthYear();
		day -= days;
	}
	if(day == 0) {
		month -= 1;
		fixMonthYear();
		day = thx_DateTimeUtc.daysInMonth(year,month);
	}
	fixMonthYear();
	return thx_DateTimeUtc.rawDateToTicks(year,month,day);
};
thx_DateTimeUtc.rawDateToTicks = function(year,month,day) {
	var days = thx_DateTimeUtc.isLeapYear(year) ? thx_DateTimeUtc.daysToMonth366 : thx_DateTimeUtc.daysToMonth365;
	if(day >= 1 && day <= days[month] - days[month - 1]) {
		var y = year - 1;
		var n = y * 365 + (y / 4 | 0) - (y / 100 | 0) + (y / 400 | 0) + days[month - 1] + day - 1;
		var a_high = n >> 31;
		var a_low = n;
		var b = thx_DateTimeUtc.ticksPerDayI64;
		var mask = 65535;
		var al = a_low & mask;
		var ah = a_low >>> 16;
		var bl = b.low & mask;
		var bh = b.low >>> 16;
		var p00 = haxe_Int32._mul(al,bl);
		var p10 = haxe_Int32._mul(ah,bl);
		var p01 = haxe_Int32._mul(al,bh);
		var p11 = haxe_Int32._mul(ah,bh);
		var low = p00;
		var high = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
		p01 <<= 16;
		low = low + p01 | 0;
		if(haxe_Int32.ucompare(low,p01) < 0) {
			var ret = high++;
			high = high | 0;
		}
		p10 <<= 16;
		low = low + p10 | 0;
		if(haxe_Int32.ucompare(low,p10) < 0) {
			var ret = high++;
			high = high | 0;
		}
		high = high + (haxe_Int32._mul(a_low,b.high) + haxe_Int32._mul(a_high,b.low) | 0) | 0;
		var this1 = new haxe__$Int64__$_$_$Int64(high,low);
		return this1;
	}
	throw new thx_Error("bad year/month/day " + year + "/" + month + "/" + day,null,{ fileName : "thx/DateTimeUtc.hx", lineNumber : 182, className : "thx._DateTimeUtc.DateTimeUtc_Impl_", methodName : "rawDateToTicks"});
};
thx_DateTimeUtc.daysInMonth = function(year,month) {
	var days = thx_DateTimeUtc.isLeapYear(year) ? thx_DateTimeUtc.daysToMonth366 : thx_DateTimeUtc.daysToMonth365;
	return days[month] - days[month - 1];
};
thx_DateTimeUtc.daysRange = function(start,end) {
	var a = end;
	var b = start;
	var v = a.high - b.high | 0;
	if(v == 0) {
		v = haxe_Int32.ucompare(a.low,b.low);
	}
	if((a.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) < 0) {
		return [];
	}
	var days = [];
	while(!thx_DateTimeUtc.sameDay(start,end)) {
		days.push(start);
		start = thx_DateTimeUtc.jump(start,thx_TimePeriod.Day,1);
	}
	days.push(end);
	return days;
};
thx_DateTimeUtc.getDatePart = function(this1,part) {
	var x = haxe_Int64.divMod(this1,thx_DateTimeUtc.ticksPerDayI64).quotient;
	if(x.high != x.low >> 31) {
		throw haxe_Exception.thrown("Overflow");
	}
	var n = x.low;
	var y400 = n / thx_DateTimeUtc.daysPer400Years | 0;
	n -= y400 * thx_DateTimeUtc.daysPer400Years;
	var y100 = n / thx_DateTimeUtc.daysPer100Years | 0;
	if(y100 == 4) {
		y100 = 3;
	}
	n -= y100 * thx_DateTimeUtc.daysPer100Years;
	var y4 = n / thx_DateTimeUtc.daysPer4Years | 0;
	n -= y4 * thx_DateTimeUtc.daysPer4Years;
	var y1 = n / thx_DateTimeUtc.daysPerYear | 0;
	if(y1 == 4) {
		y1 = 3;
	}
	if(part == thx_DateTimeUtc.DATE_PART_YEAR) {
		return y400 * 400 + y100 * 100 + y4 * 4 + y1 + 1;
	}
	n -= y1 * thx_DateTimeUtc.daysPerYear;
	if(part == thx_DateTimeUtc.DATE_PART_DAY_OF_YEAR) {
		return n + 1;
	}
	var leapYear = y1 == 3 && (y4 != 24 || y100 == 3);
	var days = leapYear ? thx_DateTimeUtc.daysToMonth366 : thx_DateTimeUtc.daysToMonth365;
	var m = n >> 6;
	while(n >= days[m]) ++m;
	if(part == thx_DateTimeUtc.DATE_PART_MONTH) {
		return m;
	}
	return n - days[m - 1] + 1;
};
thx_DateTimeUtc._new = function(ticks) {
	var this1 = ticks;
	return this1;
};
thx_DateTimeUtc.min = function(this1,other) {
	if(thx_DateTimeUtc.compareTo(this1,other) <= 0) {
		return this1;
	} else {
		return other;
	}
};
thx_DateTimeUtc.max = function(this1,other) {
	if(thx_DateTimeUtc.compareTo(this1,other) >= 0) {
		return this1;
	} else {
		return other;
	}
};
thx_DateTimeUtc.jump = function(this1,period,amount) {
	var sec = thx_DateTimeUtc.get_second(this1);
	var min = thx_DateTimeUtc.get_minute(this1);
	var hr = thx_DateTimeUtc.get_hour(this1);
	var day = thx_DateTimeUtc.getDatePart(this1,thx_DateTimeUtc.DATE_PART_DAY);
	var mon = thx_DateTimeUtc.getDatePart(this1,thx_DateTimeUtc.DATE_PART_MONTH);
	var yr = thx_DateTimeUtc.getDatePart(this1,thx_DateTimeUtc.DATE_PART_YEAR);
	switch(period._hx_index) {
	case 0:
		sec += amount;
		break;
	case 1:
		min += amount;
		break;
	case 2:
		hr += amount;
		break;
	case 3:
		day += amount;
		break;
	case 4:
		day += amount * 7;
		break;
	case 5:
		mon += amount;
		break;
	case 6:
		yr += amount;
		break;
	}
	return thx_DateTimeUtc.create(yr,mon,day,hr,min,sec,thx_DateTimeUtc.get_millisecond(this1));
};
thx_DateTimeUtc.daysInThisMonth = function(this1) {
	return thx_DateTimeUtc.daysInMonth(thx_DateTimeUtc.getDatePart(this1,thx_DateTimeUtc.DATE_PART_YEAR),thx_DateTimeUtc.getDatePart(this1,thx_DateTimeUtc.DATE_PART_MONTH));
};
thx_DateTimeUtc.prevYear = function(this1) {
	return thx_DateTimeUtc.jump(this1,thx_TimePeriod.Year,-1);
};
thx_DateTimeUtc.nextYear = function(this1) {
	return thx_DateTimeUtc.jump(this1,thx_TimePeriod.Year,1);
};
thx_DateTimeUtc.prevMonth = function(this1) {
	return thx_DateTimeUtc.jump(this1,thx_TimePeriod.Month,-1);
};
thx_DateTimeUtc.nextMonth = function(this1) {
	return thx_DateTimeUtc.jump(this1,thx_TimePeriod.Month,1);
};
thx_DateTimeUtc.prevWeek = function(this1) {
	return thx_DateTimeUtc.jump(this1,thx_TimePeriod.Week,-1);
};
thx_DateTimeUtc.nextWeek = function(this1) {
	return thx_DateTimeUtc.jump(this1,thx_TimePeriod.Week,1);
};
thx_DateTimeUtc.prevDay = function(this1) {
	return thx_DateTimeUtc.jump(this1,thx_TimePeriod.Day,-1);
};
thx_DateTimeUtc.nextDay = function(this1) {
	return thx_DateTimeUtc.jump(this1,thx_TimePeriod.Day,1);
};
thx_DateTimeUtc.prevHour = function(this1) {
	return thx_DateTimeUtc.jump(this1,thx_TimePeriod.Hour,-1);
};
thx_DateTimeUtc.nextHour = function(this1) {
	return thx_DateTimeUtc.jump(this1,thx_TimePeriod.Hour,1);
};
thx_DateTimeUtc.prevMinute = function(this1) {
	return thx_DateTimeUtc.jump(this1,thx_TimePeriod.Minute,-1);
};
thx_DateTimeUtc.nextMinute = function(this1) {
	return thx_DateTimeUtc.jump(this1,thx_TimePeriod.Minute,1);
};
thx_DateTimeUtc.prevSecond = function(this1) {
	return thx_DateTimeUtc.jump(this1,thx_TimePeriod.Second,-1);
};
thx_DateTimeUtc.nextSecond = function(this1) {
	return thx_DateTimeUtc.jump(this1,thx_TimePeriod.Second,1);
};
thx_DateTimeUtc.snapToWeekDay = function(this1,weekday,firstDayOfWk) {
	if(firstDayOfWk == null) {
		firstDayOfWk = 0;
	}
	var d = thx_DateTimeUtc.get_dayOfWeek(this1);
	var s = weekday;
	if(s < firstDayOfWk) {
		s += 7;
	}
	if(d < firstDayOfWk) {
		d += 7;
	}
	return thx_DateTimeUtc.jump(this1,thx_TimePeriod.Day,s - d);
};
thx_DateTimeUtc.snapNextWeekDay = function(this1,weekday) {
	var d = thx_DateTimeUtc.get_dayOfWeek(this1);
	var s = weekday;
	if(s < d) {
		s += 7;
	}
	return thx_DateTimeUtc.jump(this1,thx_TimePeriod.Day,s - d);
};
thx_DateTimeUtc.snapPrevWeekDay = function(this1,weekday) {
	var d = thx_DateTimeUtc.get_dayOfWeek(this1);
	var s = weekday;
	if(s > d) {
		s -= 7;
	}
	return thx_DateTimeUtc.jump(this1,thx_TimePeriod.Day,s - d);
};
thx_DateTimeUtc.snapNext = function(this1,period) {
	switch(period._hx_index) {
	case 0:
		var a = thx_Int64s.divCeil(this1,thx_DateTimeUtc.ticksPerSecondI64);
		var b = thx_DateTimeUtc.ticksPerSecondI64;
		var mask = 65535;
		var al = a.low & mask;
		var ah = a.low >>> 16;
		var bl = b.low & mask;
		var bh = b.low >>> 16;
		var p00 = haxe_Int32._mul(al,bl);
		var p10 = haxe_Int32._mul(ah,bl);
		var p01 = haxe_Int32._mul(al,bh);
		var p11 = haxe_Int32._mul(ah,bh);
		var low = p00;
		var high = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
		p01 <<= 16;
		low = low + p01 | 0;
		if(haxe_Int32.ucompare(low,p01) < 0) {
			var ret = high++;
			high = high | 0;
		}
		p10 <<= 16;
		low = low + p10 | 0;
		if(haxe_Int32.ucompare(low,p10) < 0) {
			var ret = high++;
			high = high | 0;
		}
		high = high + (haxe_Int32._mul(a.low,b.high) + haxe_Int32._mul(a.high,b.low) | 0) | 0;
		var this2 = new haxe__$Int64__$_$_$Int64(high,low);
		var this3 = this2;
		return this3;
	case 1:
		var a = thx_Int64s.divCeil(this1,thx_DateTimeUtc.ticksPerMinuteI64);
		var b = thx_DateTimeUtc.ticksPerMinuteI64;
		var mask = 65535;
		var al = a.low & mask;
		var ah = a.low >>> 16;
		var bl = b.low & mask;
		var bh = b.low >>> 16;
		var p00 = haxe_Int32._mul(al,bl);
		var p10 = haxe_Int32._mul(ah,bl);
		var p01 = haxe_Int32._mul(al,bh);
		var p11 = haxe_Int32._mul(ah,bh);
		var low = p00;
		var high = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
		p01 <<= 16;
		low = low + p01 | 0;
		if(haxe_Int32.ucompare(low,p01) < 0) {
			var ret = high++;
			high = high | 0;
		}
		p10 <<= 16;
		low = low + p10 | 0;
		if(haxe_Int32.ucompare(low,p10) < 0) {
			var ret = high++;
			high = high | 0;
		}
		high = high + (haxe_Int32._mul(a.low,b.high) + haxe_Int32._mul(a.high,b.low) | 0) | 0;
		var this2 = new haxe__$Int64__$_$_$Int64(high,low);
		var this3 = this2;
		return this3;
	case 2:
		var a = thx_Int64s.divCeil(this1,thx_DateTimeUtc.ticksPerHourI64);
		var b = thx_DateTimeUtc.ticksPerHourI64;
		var mask = 65535;
		var al = a.low & mask;
		var ah = a.low >>> 16;
		var bl = b.low & mask;
		var bh = b.low >>> 16;
		var p00 = haxe_Int32._mul(al,bl);
		var p10 = haxe_Int32._mul(ah,bl);
		var p01 = haxe_Int32._mul(al,bh);
		var p11 = haxe_Int32._mul(ah,bh);
		var low = p00;
		var high = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
		p01 <<= 16;
		low = low + p01 | 0;
		if(haxe_Int32.ucompare(low,p01) < 0) {
			var ret = high++;
			high = high | 0;
		}
		p10 <<= 16;
		low = low + p10 | 0;
		if(haxe_Int32.ucompare(low,p10) < 0) {
			var ret = high++;
			high = high | 0;
		}
		high = high + (haxe_Int32._mul(a.low,b.high) + haxe_Int32._mul(a.high,b.low) | 0) | 0;
		var this2 = new haxe__$Int64__$_$_$Int64(high,low);
		var this3 = this2;
		return this3;
	case 3:
		return thx_DateTimeUtc.create(thx_DateTimeUtc.getDatePart(this1,thx_DateTimeUtc.DATE_PART_YEAR),thx_DateTimeUtc.getDatePart(this1,thx_DateTimeUtc.DATE_PART_MONTH),thx_DateTimeUtc.getDatePart(this1,thx_DateTimeUtc.DATE_PART_DAY) + 1,0,0,0);
	case 4:
		var wd = thx_DateTimeUtc.get_dayOfWeek(this1);
		return thx_DateTimeUtc.create(thx_DateTimeUtc.getDatePart(this1,thx_DateTimeUtc.DATE_PART_YEAR),thx_DateTimeUtc.getDatePart(this1,thx_DateTimeUtc.DATE_PART_MONTH),thx_DateTimeUtc.getDatePart(this1,thx_DateTimeUtc.DATE_PART_DAY) + 7 - wd,0,0,0);
	case 5:
		return thx_DateTimeUtc.create(thx_DateTimeUtc.getDatePart(this1,thx_DateTimeUtc.DATE_PART_YEAR),thx_DateTimeUtc.getDatePart(this1,thx_DateTimeUtc.DATE_PART_MONTH) + 1,1,0,0,0);
	case 6:
		return thx_DateTimeUtc.create(thx_DateTimeUtc.getDatePart(this1,thx_DateTimeUtc.DATE_PART_YEAR) + 1,1,1,0,0,0);
	}
};
thx_DateTimeUtc.snapPrev = function(this1,period) {
	switch(period._hx_index) {
	case 0:
		var a = thx_Int64s.divFloor(this1,thx_DateTimeUtc.ticksPerSecondI64);
		var b = thx_DateTimeUtc.ticksPerSecondI64;
		var mask = 65535;
		var al = a.low & mask;
		var ah = a.low >>> 16;
		var bl = b.low & mask;
		var bh = b.low >>> 16;
		var p00 = haxe_Int32._mul(al,bl);
		var p10 = haxe_Int32._mul(ah,bl);
		var p01 = haxe_Int32._mul(al,bh);
		var p11 = haxe_Int32._mul(ah,bh);
		var low = p00;
		var high = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
		p01 <<= 16;
		low = low + p01 | 0;
		if(haxe_Int32.ucompare(low,p01) < 0) {
			var ret = high++;
			high = high | 0;
		}
		p10 <<= 16;
		low = low + p10 | 0;
		if(haxe_Int32.ucompare(low,p10) < 0) {
			var ret = high++;
			high = high | 0;
		}
		high = high + (haxe_Int32._mul(a.low,b.high) + haxe_Int32._mul(a.high,b.low) | 0) | 0;
		var this2 = new haxe__$Int64__$_$_$Int64(high,low);
		var this3 = this2;
		return this3;
	case 1:
		var a = thx_Int64s.divFloor(this1,thx_DateTimeUtc.ticksPerMinuteI64);
		var b = thx_DateTimeUtc.ticksPerMinuteI64;
		var mask = 65535;
		var al = a.low & mask;
		var ah = a.low >>> 16;
		var bl = b.low & mask;
		var bh = b.low >>> 16;
		var p00 = haxe_Int32._mul(al,bl);
		var p10 = haxe_Int32._mul(ah,bl);
		var p01 = haxe_Int32._mul(al,bh);
		var p11 = haxe_Int32._mul(ah,bh);
		var low = p00;
		var high = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
		p01 <<= 16;
		low = low + p01 | 0;
		if(haxe_Int32.ucompare(low,p01) < 0) {
			var ret = high++;
			high = high | 0;
		}
		p10 <<= 16;
		low = low + p10 | 0;
		if(haxe_Int32.ucompare(low,p10) < 0) {
			var ret = high++;
			high = high | 0;
		}
		high = high + (haxe_Int32._mul(a.low,b.high) + haxe_Int32._mul(a.high,b.low) | 0) | 0;
		var this2 = new haxe__$Int64__$_$_$Int64(high,low);
		var this3 = this2;
		return this3;
	case 2:
		var a = thx_Int64s.divFloor(this1,thx_DateTimeUtc.ticksPerHourI64);
		var b = thx_DateTimeUtc.ticksPerHourI64;
		var mask = 65535;
		var al = a.low & mask;
		var ah = a.low >>> 16;
		var bl = b.low & mask;
		var bh = b.low >>> 16;
		var p00 = haxe_Int32._mul(al,bl);
		var p10 = haxe_Int32._mul(ah,bl);
		var p01 = haxe_Int32._mul(al,bh);
		var p11 = haxe_Int32._mul(ah,bh);
		var low = p00;
		var high = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
		p01 <<= 16;
		low = low + p01 | 0;
		if(haxe_Int32.ucompare(low,p01) < 0) {
			var ret = high++;
			high = high | 0;
		}
		p10 <<= 16;
		low = low + p10 | 0;
		if(haxe_Int32.ucompare(low,p10) < 0) {
			var ret = high++;
			high = high | 0;
		}
		high = high + (haxe_Int32._mul(a.low,b.high) + haxe_Int32._mul(a.high,b.low) | 0) | 0;
		var this2 = new haxe__$Int64__$_$_$Int64(high,low);
		var this3 = this2;
		return this3;
	case 3:
		return thx_DateTimeUtc.create(thx_DateTimeUtc.getDatePart(this1,thx_DateTimeUtc.DATE_PART_YEAR),thx_DateTimeUtc.getDatePart(this1,thx_DateTimeUtc.DATE_PART_MONTH),thx_DateTimeUtc.getDatePart(this1,thx_DateTimeUtc.DATE_PART_DAY),0,0,0);
	case 4:
		var wd = thx_DateTimeUtc.get_dayOfWeek(this1);
		return thx_DateTimeUtc.create(thx_DateTimeUtc.getDatePart(this1,thx_DateTimeUtc.DATE_PART_YEAR),thx_DateTimeUtc.getDatePart(this1,thx_DateTimeUtc.DATE_PART_MONTH),thx_DateTimeUtc.getDatePart(this1,thx_DateTimeUtc.DATE_PART_DAY) - wd,0,0,0);
	case 5:
		return thx_DateTimeUtc.create(thx_DateTimeUtc.getDatePart(this1,thx_DateTimeUtc.DATE_PART_YEAR),thx_DateTimeUtc.getDatePart(this1,thx_DateTimeUtc.DATE_PART_MONTH),1,0,0,0);
	case 6:
		return thx_DateTimeUtc.create(thx_DateTimeUtc.getDatePart(this1,thx_DateTimeUtc.DATE_PART_YEAR),1,1,0,0,0);
	}
};
thx_DateTimeUtc.snapTo = function(this1,period) {
	switch(period._hx_index) {
	case 0:
		var a = thx_Int64s.divRound(this1,thx_DateTimeUtc.ticksPerSecondI64);
		var b = thx_DateTimeUtc.ticksPerSecondI64;
		var mask = 65535;
		var al = a.low & mask;
		var ah = a.low >>> 16;
		var bl = b.low & mask;
		var bh = b.low >>> 16;
		var p00 = haxe_Int32._mul(al,bl);
		var p10 = haxe_Int32._mul(ah,bl);
		var p01 = haxe_Int32._mul(al,bh);
		var p11 = haxe_Int32._mul(ah,bh);
		var low = p00;
		var high = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
		p01 <<= 16;
		low = low + p01 | 0;
		if(haxe_Int32.ucompare(low,p01) < 0) {
			var ret = high++;
			high = high | 0;
		}
		p10 <<= 16;
		low = low + p10 | 0;
		if(haxe_Int32.ucompare(low,p10) < 0) {
			var ret = high++;
			high = high | 0;
		}
		high = high + (haxe_Int32._mul(a.low,b.high) + haxe_Int32._mul(a.high,b.low) | 0) | 0;
		var this2 = new haxe__$Int64__$_$_$Int64(high,low);
		var this3 = this2;
		return this3;
	case 1:
		var a = thx_Int64s.divRound(this1,thx_DateTimeUtc.ticksPerMinuteI64);
		var b = thx_DateTimeUtc.ticksPerMinuteI64;
		var mask = 65535;
		var al = a.low & mask;
		var ah = a.low >>> 16;
		var bl = b.low & mask;
		var bh = b.low >>> 16;
		var p00 = haxe_Int32._mul(al,bl);
		var p10 = haxe_Int32._mul(ah,bl);
		var p01 = haxe_Int32._mul(al,bh);
		var p11 = haxe_Int32._mul(ah,bh);
		var low = p00;
		var high = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
		p01 <<= 16;
		low = low + p01 | 0;
		if(haxe_Int32.ucompare(low,p01) < 0) {
			var ret = high++;
			high = high | 0;
		}
		p10 <<= 16;
		low = low + p10 | 0;
		if(haxe_Int32.ucompare(low,p10) < 0) {
			var ret = high++;
			high = high | 0;
		}
		high = high + (haxe_Int32._mul(a.low,b.high) + haxe_Int32._mul(a.high,b.low) | 0) | 0;
		var this2 = new haxe__$Int64__$_$_$Int64(high,low);
		var this3 = this2;
		return this3;
	case 2:
		var a = thx_Int64s.divRound(this1,thx_DateTimeUtc.ticksPerHourI64);
		var b = thx_DateTimeUtc.ticksPerHourI64;
		var mask = 65535;
		var al = a.low & mask;
		var ah = a.low >>> 16;
		var bl = b.low & mask;
		var bh = b.low >>> 16;
		var p00 = haxe_Int32._mul(al,bl);
		var p10 = haxe_Int32._mul(ah,bl);
		var p01 = haxe_Int32._mul(al,bh);
		var p11 = haxe_Int32._mul(ah,bh);
		var low = p00;
		var high = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
		p01 <<= 16;
		low = low + p01 | 0;
		if(haxe_Int32.ucompare(low,p01) < 0) {
			var ret = high++;
			high = high | 0;
		}
		p10 <<= 16;
		low = low + p10 | 0;
		if(haxe_Int32.ucompare(low,p10) < 0) {
			var ret = high++;
			high = high | 0;
		}
		high = high + (haxe_Int32._mul(a.low,b.high) + haxe_Int32._mul(a.high,b.low) | 0) | 0;
		var this2 = new haxe__$Int64__$_$_$Int64(high,low);
		var this3 = this2;
		return this3;
	case 3:
		var mod = thx_DateTimeUtc.get_hour(this1) >= 12 ? 1 : 0;
		return thx_DateTimeUtc.create(thx_DateTimeUtc.getDatePart(this1,thx_DateTimeUtc.DATE_PART_YEAR),thx_DateTimeUtc.getDatePart(this1,thx_DateTimeUtc.DATE_PART_MONTH),thx_DateTimeUtc.getDatePart(this1,thx_DateTimeUtc.DATE_PART_DAY) + mod,0,0,0);
	case 4:
		var wd = thx_DateTimeUtc.get_dayOfWeek(this1);
		var mod = wd < 3 ? -wd : wd > 3 ? 7 - wd : thx_DateTimeUtc.get_hour(this1) < 12 ? -wd : 7 - wd;
		return thx_DateTimeUtc.create(thx_DateTimeUtc.getDatePart(this1,thx_DateTimeUtc.DATE_PART_YEAR),thx_DateTimeUtc.getDatePart(this1,thx_DateTimeUtc.DATE_PART_MONTH),thx_DateTimeUtc.getDatePart(this1,thx_DateTimeUtc.DATE_PART_DAY) + mod,0,0,0);
	case 5:
		var mod = thx_DateTimeUtc.getDatePart(this1,thx_DateTimeUtc.DATE_PART_DAY) > Math.round(thx_DateTimeUtc.daysInMonth(thx_DateTimeUtc.getDatePart(this1,thx_DateTimeUtc.DATE_PART_YEAR),thx_DateTimeUtc.getDatePart(this1,thx_DateTimeUtc.DATE_PART_MONTH)) / 2) ? 1 : 0;
		return thx_DateTimeUtc.create(thx_DateTimeUtc.getDatePart(this1,thx_DateTimeUtc.DATE_PART_YEAR),thx_DateTimeUtc.getDatePart(this1,thx_DateTimeUtc.DATE_PART_MONTH) + mod,1,0,0,0);
	case 6:
		var a = this1;
		var b = thx_DateTimeUtc.create(thx_DateTimeUtc.getDatePart(this1,thx_DateTimeUtc.DATE_PART_YEAR),6,2,0,0,0);
		var v = a.high - b.high | 0;
		if(v == 0) {
			v = haxe_Int32.ucompare(a.low,b.low);
		}
		var mod = (a.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) > 0 ? 1 : 0;
		return thx_DateTimeUtc.create(thx_DateTimeUtc.getDatePart(this1,thx_DateTimeUtc.DATE_PART_YEAR) + mod,1,1,0,0,0);
	}
};
thx_DateTimeUtc.sameYear = function(this1,other) {
	return thx_DateTimeUtc.getDatePart(this1,thx_DateTimeUtc.DATE_PART_YEAR) == thx_DateTimeUtc.getDatePart(other,thx_DateTimeUtc.DATE_PART_YEAR);
};
thx_DateTimeUtc.sameMonth = function(this1,other) {
	if(thx_DateTimeUtc.sameYear(this1,other)) {
		return thx_DateTimeUtc.getDatePart(this1,thx_DateTimeUtc.DATE_PART_MONTH) == thx_DateTimeUtc.getDatePart(other,thx_DateTimeUtc.DATE_PART_MONTH);
	} else {
		return false;
	}
};
thx_DateTimeUtc.sameDay = function(this1,other) {
	if(thx_DateTimeUtc.sameMonth(this1,other)) {
		return thx_DateTimeUtc.getDatePart(this1,thx_DateTimeUtc.DATE_PART_DAY) == thx_DateTimeUtc.getDatePart(other,thx_DateTimeUtc.DATE_PART_DAY);
	} else {
		return false;
	}
};
thx_DateTimeUtc.sameHour = function(this1,other) {
	if(thx_DateTimeUtc.sameDay(this1,other)) {
		return thx_DateTimeUtc.get_hour(this1) == thx_DateTimeUtc.get_hour(other);
	} else {
		return false;
	}
};
thx_DateTimeUtc.sameMinute = function(this1,other) {
	if(thx_DateTimeUtc.sameHour(this1,other)) {
		return thx_DateTimeUtc.get_minute(this1) == thx_DateTimeUtc.get_minute(other);
	} else {
		return false;
	}
};
thx_DateTimeUtc.sameSecond = function(this1,other) {
	if(thx_DateTimeUtc.sameMinute(this1,other)) {
		return thx_DateTimeUtc.get_second(this1) == thx_DateTimeUtc.get_second(other);
	} else {
		return false;
	}
};
thx_DateTimeUtc.withYear = function(this1,year) {
	return thx_DateTimeUtc.create(year,thx_DateTimeUtc.getDatePart(this1,thx_DateTimeUtc.DATE_PART_MONTH),thx_DateTimeUtc.getDatePart(this1,thx_DateTimeUtc.DATE_PART_DAY),thx_DateTimeUtc.get_hour(this1),thx_DateTimeUtc.get_minute(this1),thx_DateTimeUtc.get_second(this1),thx_DateTimeUtc.get_millisecond(this1));
};
thx_DateTimeUtc.withMonth = function(this1,month) {
	return thx_DateTimeUtc.create(thx_DateTimeUtc.getDatePart(this1,thx_DateTimeUtc.DATE_PART_YEAR),month,thx_DateTimeUtc.getDatePart(this1,thx_DateTimeUtc.DATE_PART_DAY),thx_DateTimeUtc.get_hour(this1),thx_DateTimeUtc.get_minute(this1),thx_DateTimeUtc.get_second(this1),thx_DateTimeUtc.get_millisecond(this1));
};
thx_DateTimeUtc.withDay = function(this1,day) {
	return thx_DateTimeUtc.create(thx_DateTimeUtc.getDatePart(this1,thx_DateTimeUtc.DATE_PART_YEAR),thx_DateTimeUtc.getDatePart(this1,thx_DateTimeUtc.DATE_PART_MONTH),day,thx_DateTimeUtc.get_hour(this1),thx_DateTimeUtc.get_minute(this1),thx_DateTimeUtc.get_second(this1),thx_DateTimeUtc.get_millisecond(this1));
};
thx_DateTimeUtc.withHour = function(this1,hour) {
	return thx_DateTimeUtc.create(thx_DateTimeUtc.getDatePart(this1,thx_DateTimeUtc.DATE_PART_YEAR),thx_DateTimeUtc.getDatePart(this1,thx_DateTimeUtc.DATE_PART_MONTH),thx_DateTimeUtc.getDatePart(this1,thx_DateTimeUtc.DATE_PART_DAY),hour,thx_DateTimeUtc.get_minute(this1),thx_DateTimeUtc.get_second(this1),thx_DateTimeUtc.get_millisecond(this1));
};
thx_DateTimeUtc.withMinute = function(this1,minute) {
	return thx_DateTimeUtc.create(thx_DateTimeUtc.getDatePart(this1,thx_DateTimeUtc.DATE_PART_YEAR),thx_DateTimeUtc.getDatePart(this1,thx_DateTimeUtc.DATE_PART_MONTH),thx_DateTimeUtc.getDatePart(this1,thx_DateTimeUtc.DATE_PART_DAY),thx_DateTimeUtc.get_hour(this1),minute,thx_DateTimeUtc.get_second(this1),thx_DateTimeUtc.get_millisecond(this1));
};
thx_DateTimeUtc.withSecond = function(this1,second) {
	return thx_DateTimeUtc.create(thx_DateTimeUtc.getDatePart(this1,thx_DateTimeUtc.DATE_PART_YEAR),thx_DateTimeUtc.getDatePart(this1,thx_DateTimeUtc.DATE_PART_MONTH),thx_DateTimeUtc.getDatePart(this1,thx_DateTimeUtc.DATE_PART_DAY),thx_DateTimeUtc.get_hour(this1),thx_DateTimeUtc.get_minute(this1),second,thx_DateTimeUtc.get_millisecond(this1));
};
thx_DateTimeUtc.withMillisecond = function(this1,millisecond) {
	return thx_DateTimeUtc.create(thx_DateTimeUtc.getDatePart(this1,thx_DateTimeUtc.DATE_PART_YEAR),thx_DateTimeUtc.getDatePart(this1,thx_DateTimeUtc.DATE_PART_MONTH),thx_DateTimeUtc.getDatePart(this1,thx_DateTimeUtc.DATE_PART_DAY),thx_DateTimeUtc.get_hour(this1),thx_DateTimeUtc.get_minute(this1),thx_DateTimeUtc.get_second(this1),millisecond);
};
thx_DateTimeUtc.add = function(this1,time) {
	var a = this1;
	var b = time;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this1 = new haxe__$Int64__$_$_$Int64(high,low);
	var this2 = this1;
	return this2;
};
thx_DateTimeUtc.addTicks = function(this1,tickstoadd) {
	var a = this1;
	var high = a.high + tickstoadd.high | 0;
	var low = a.low + tickstoadd.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this1 = new haxe__$Int64__$_$_$Int64(high,low);
	var this2 = this1;
	return this2;
};
thx_DateTimeUtc.subtract = function(this1,time) {
	var a = this1;
	var b = time;
	var high = a.high - b.high | 0;
	var low = a.low - b.low | 0;
	if(haxe_Int32.ucompare(a.low,b.low) < 0) {
		var ret = high--;
		high = high | 0;
	}
	var this1 = new haxe__$Int64__$_$_$Int64(high,low);
	var this2 = this1;
	return this2;
};
thx_DateTimeUtc.subtractDate = function(this1,date) {
	var a = this1;
	var b = date;
	var high = a.high - b.high | 0;
	var low = a.low - b.low | 0;
	if(haxe_Int32.ucompare(a.low,b.low) < 0) {
		var ret = high--;
		high = high | 0;
	}
	var this1 = new haxe__$Int64__$_$_$Int64(high,low);
	var this2 = this1;
	return this2;
};
thx_DateTimeUtc.addScaled = function(this1,value,scale) {
	var x = value * scale + (value >= 0 ? 0.5 : -0.5) | 0;
	var millis_high = x >> 31;
	var millis_low = x;
	var a = this1;
	var b = thx_DateTimeUtc.ticksPerMillisecondI64;
	var mask = 65535;
	var al = millis_low & mask;
	var ah = millis_low >>> 16;
	var bl = b.low & mask;
	var bh = b.low >>> 16;
	var p00 = haxe_Int32._mul(al,bl);
	var p10 = haxe_Int32._mul(ah,bl);
	var p01 = haxe_Int32._mul(al,bh);
	var p11 = haxe_Int32._mul(ah,bh);
	var low = p00;
	var high = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
	p01 <<= 16;
	low = low + p01 | 0;
	if(haxe_Int32.ucompare(low,p01) < 0) {
		var ret = high++;
		high = high | 0;
	}
	p10 <<= 16;
	low = low + p10 | 0;
	if(haxe_Int32.ucompare(low,p10) < 0) {
		var ret = high++;
		high = high | 0;
	}
	high = high + (haxe_Int32._mul(millis_low,b.high) + haxe_Int32._mul(millis_high,b.low) | 0) | 0;
	var b_high = high;
	var b_low = low;
	var high = a.high + b_high | 0;
	var low = a.low + b_low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this1 = new haxe__$Int64__$_$_$Int64(high,low);
	var this2 = this1;
	return this2;
};
thx_DateTimeUtc.addDays = function(this1,days) {
	return thx_DateTimeUtc.addScaled(this1,days,thx_DateTimeUtc.millisPerDay);
};
thx_DateTimeUtc.addHours = function(this1,hours) {
	return thx_DateTimeUtc.addScaled(this1,hours,thx_DateTimeUtc.millisPerHour);
};
thx_DateTimeUtc.addMilliseconds = function(this1,milliseconds) {
	return thx_DateTimeUtc.addScaled(this1,milliseconds,1);
};
thx_DateTimeUtc.addMinutes = function(this1,minutes) {
	return thx_DateTimeUtc.addScaled(this1,minutes,thx_DateTimeUtc.millisPerMinute);
};
thx_DateTimeUtc.addMonths = function(this1,months) {
	var y = thx_DateTimeUtc.getDatePart(this1,thx_DateTimeUtc.DATE_PART_YEAR);
	var m = thx_DateTimeUtc.getDatePart(this1,thx_DateTimeUtc.DATE_PART_MONTH);
	var d = thx_DateTimeUtc.getDatePart(this1,thx_DateTimeUtc.DATE_PART_DAY);
	var i = m - 1 + months;
	if(i >= 0) {
		m = i % 12 + 1 | 0;
		y = y + i / 12 | 0;
	} else {
		m = 12 + (i + 1) % 12 | 0;
		y = y + (i - 11) / 12 | 0;
	}
	var days = thx_DateTimeUtc.daysInMonth(y,m);
	if(d > days) {
		d = days;
	}
	var a = thx_DateTimeUtc.dateToTicks(y,m,d);
	var b = haxe_Int64.divMod(this1,thx_DateTimeUtc.ticksPerDayI64).modulus;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this1 = new haxe__$Int64__$_$_$Int64(high,low);
	var this2 = this1;
	return this2;
};
thx_DateTimeUtc.addSeconds = function(this1,seconds) {
	return thx_DateTimeUtc.addScaled(this1,seconds,thx_DateTimeUtc.millisPerSecond);
};
thx_DateTimeUtc.addYears = function(this1,years) {
	return thx_DateTimeUtc.addMonths(this1,years * 12);
};
thx_DateTimeUtc.compareTo = function(this1,other) {
	if(null == other && this1 == null) {
		return 0;
	}
	if(null == this1) {
		return -1;
	} else if(null == other) {
		return 1;
	}
	return thx_Int64s.compare(this1,other);
};
thx_DateTimeUtc.equalsTo = function(this1,that) {
	var a = this1;
	var b = that;
	if(a.high == b.high) {
		return a.low == b.low;
	} else {
		return false;
	}
};
thx_DateTimeUtc.equals = function(self,that) {
	var a = self;
	var b = that;
	if(a.high == b.high) {
		return a.low == b.low;
	} else {
		return false;
	}
};
thx_DateTimeUtc.notEqualsTo = function(this1,that) {
	var a = this1;
	var b = that;
	if(a.high == b.high) {
		return a.low != b.low;
	} else {
		return true;
	}
};
thx_DateTimeUtc.notEquals = function(self,that) {
	var a = self;
	var b = that;
	if(a.high == b.high) {
		return a.low != b.low;
	} else {
		return true;
	}
};
thx_DateTimeUtc.nearEqualsTo = function(this1,other,span) {
	var a = other;
	var b = this1;
	var high = a.high - b.high | 0;
	var low = a.low - b.low | 0;
	if(haxe_Int32.ucompare(a.low,b.low) < 0) {
		var ret = high--;
		high = high | 0;
	}
	var this1 = new haxe__$Int64__$_$_$Int64(high,low);
	var ticks = thx_Int64s.abs(this1);
	var b = thx_Time.abs(span);
	var v = ticks.high - b.high | 0;
	if(v == 0) {
		v = haxe_Int32.ucompare(ticks.low,b.low);
	}
	return (ticks.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) <= 0;
};
thx_DateTimeUtc.greaterThan = function(this1,that) {
	var a = this1;
	var b = that;
	var v = a.high - b.high | 0;
	if(v == 0) {
		v = haxe_Int32.ucompare(a.low,b.low);
	}
	return (a.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) > 0;
};
thx_DateTimeUtc.greater = function(self,that) {
	var a = self;
	var b = that;
	var v = a.high - b.high | 0;
	if(v == 0) {
		v = haxe_Int32.ucompare(a.low,b.low);
	}
	return (a.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) > 0;
};
thx_DateTimeUtc.greaterEqualsTo = function(this1,that) {
	var a = this1;
	var b = that;
	var v = a.high - b.high | 0;
	if(v == 0) {
		v = haxe_Int32.ucompare(a.low,b.low);
	}
	return (a.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) >= 0;
};
thx_DateTimeUtc.greaterEquals = function(self,that) {
	var a = self;
	var b = that;
	var v = a.high - b.high | 0;
	if(v == 0) {
		v = haxe_Int32.ucompare(a.low,b.low);
	}
	return (a.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) >= 0;
};
thx_DateTimeUtc.lessThan = function(this1,that) {
	var a = this1;
	var b = that;
	var v = a.high - b.high | 0;
	if(v == 0) {
		v = haxe_Int32.ucompare(a.low,b.low);
	}
	return (a.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) < 0;
};
thx_DateTimeUtc.less = function(self,that) {
	var a = self;
	var b = that;
	var v = a.high - b.high | 0;
	if(v == 0) {
		v = haxe_Int32.ucompare(a.low,b.low);
	}
	return (a.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) < 0;
};
thx_DateTimeUtc.lessEqualsTo = function(this1,that) {
	var a = this1;
	var b = that;
	var v = a.high - b.high | 0;
	if(v == 0) {
		v = haxe_Int32.ucompare(a.low,b.low);
	}
	return (a.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) <= 0;
};
thx_DateTimeUtc.lessEquals = function(self,that) {
	var a = self;
	var b = that;
	var v = a.high - b.high | 0;
	if(v == 0) {
		v = haxe_Int32.ucompare(a.low,b.low);
	}
	return (a.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) <= 0;
};
thx_DateTimeUtc.toTime = function(this1) {
	var a = this1;
	var b = thx_DateTimeUtc.unixEpochTicks;
	var high = a.high - b.high | 0;
	var low = a.low - b.low | 0;
	if(haxe_Int32.ucompare(a.low,b.low) < 0) {
		var ret = high--;
		high = high | 0;
	}
	var this1 = new haxe__$Int64__$_$_$Int64(high,low);
	return thx_Int64s.toFloat(haxe_Int64.divMod(this1,thx_DateTimeUtc.ticksPerMillisecondI64).quotient);
};
thx_DateTimeUtc.toDate = function(this1) {
	var a = this1;
	var b = thx_DateTimeUtc.unixEpochTicks;
	var high = a.high - b.high | 0;
	var low = a.low - b.low | 0;
	if(haxe_Int32.ucompare(a.low,b.low) < 0) {
		var ret = high--;
		high = high | 0;
	}
	var this1 = new haxe__$Int64__$_$_$Int64(high,low);
	return new Date(thx_Int64s.toFloat(haxe_Int64.divMod(this1,thx_DateTimeUtc.ticksPerMillisecondI64).quotient));
};
thx_DateTimeUtc.toDateTime = function(this1,offset) {
	var this2 = [this1,null == offset ? thx_Time.zero : offset];
	return this2;
};
thx_DateTimeUtc.toLocalDateTime = function(this1) {
	var this2 = [this1,thx_DateTime.localOffset()];
	return this2;
};
thx_DateTimeUtc.toString = function(this1) {
	if(null == this1) {
		return "";
	}
	var abs = thx_DateTimeUtc.fromInt64(thx_Int64s.abs(this1));
	var decimals = thx_DateTimeUtc.get_tickInSecond(abs) != 0 ? "." + thx_Strings.trimCharsRight(thx_Ints.lpad(thx_DateTimeUtc.get_tickInSecond(abs),"0",7),")") : "";
	var a = this1;
	var b = thx_Int64s.zero;
	var v = a.high - b.high | 0;
	if(v == 0) {
		v = haxe_Int32.ucompare(a.low,b.low);
	}
	var isneg = (a.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) < 0;
	return (isneg ? "-" : "") + ("" + thx_DateTimeUtc.getDatePart(abs,thx_DateTimeUtc.DATE_PART_YEAR) + "-" + thx_Ints.lpad(thx_DateTimeUtc.getDatePart(abs,thx_DateTimeUtc.DATE_PART_MONTH),"0",2) + "-" + thx_Ints.lpad(thx_DateTimeUtc.getDatePart(abs,thx_DateTimeUtc.DATE_PART_DAY),"0",2) + "T" + thx_Ints.lpad(thx_DateTimeUtc.get_hour(abs),"0",2) + ":" + thx_Ints.lpad(thx_DateTimeUtc.get_minute(abs),"0",2) + ":" + thx_Ints.lpad(thx_DateTimeUtc.get_second(abs),"0",2) + decimals + "Z");
};
thx_DateTimeUtc.get_ticks = function(this1) {
	return this1;
};
thx_DateTimeUtc.get_year = function(this1) {
	return thx_DateTimeUtc.getDatePart(this1,thx_DateTimeUtc.DATE_PART_YEAR);
};
thx_DateTimeUtc.get_month = function(this1) {
	return thx_DateTimeUtc.getDatePart(this1,thx_DateTimeUtc.DATE_PART_MONTH);
};
thx_DateTimeUtc.get_day = function(this1) {
	return thx_DateTimeUtc.getDatePart(this1,thx_DateTimeUtc.DATE_PART_DAY);
};
thx_DateTimeUtc.get_hour = function(this1) {
	var a = haxe_Int64.divMod(this1,thx_DateTimeUtc.ticksPerHourI64).quotient;
	var this1 = new haxe__$Int64__$_$_$Int64(0,24);
	var x = haxe_Int64.divMod(a,this1).modulus;
	if(x.high != x.low >> 31) {
		throw haxe_Exception.thrown("Overflow");
	}
	return x.low;
};
thx_DateTimeUtc.get_minute = function(this1) {
	var a = haxe_Int64.divMod(this1,thx_DateTimeUtc.ticksPerMinuteI64).quotient;
	var this1 = new haxe__$Int64__$_$_$Int64(0,60);
	var x = haxe_Int64.divMod(a,this1).modulus;
	if(x.high != x.low >> 31) {
		throw haxe_Exception.thrown("Overflow");
	}
	return x.low;
};
thx_DateTimeUtc.get_dayOfWeek = function(this1) {
	var a = haxe_Int64.divMod(this1,thx_DateTimeUtc.ticksPerDayI64).quotient;
	var b_high = 0;
	var b_low = 1;
	var high = a.high + b_high | 0;
	var low = a.low + b_low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this1 = new haxe__$Int64__$_$_$Int64(high,low);
	var this2 = new haxe__$Int64__$_$_$Int64(0,7);
	var x = haxe_Int64.divMod(this1,this2).modulus;
	if(x.high != x.low >> 31) {
		throw haxe_Exception.thrown("Overflow");
	}
	return x.low;
};
thx_DateTimeUtc.get_dayOfYear = function(this1) {
	return thx_DateTimeUtc.getDatePart(this1,thx_DateTimeUtc.DATE_PART_DAY_OF_YEAR);
};
thx_DateTimeUtc.get_millisecond = function(this1) {
	var x = haxe_Int64.divMod(haxe_Int64.divMod(this1,thx_DateTimeUtc.ticksPerMillisecondI64).quotient,thx_DateTimeUtc.thousandI64).modulus;
	if(x.high != x.low >> 31) {
		throw haxe_Exception.thrown("Overflow");
	}
	return x.low;
};
thx_DateTimeUtc.get_microsecond = function(this1) {
	var x = haxe_Int64.divMod(haxe_Int64.divMod(this1,thx_DateTimeUtc.ticksPerMicrosecondI64).quotient,thx_DateTimeUtc.millionI64).modulus;
	if(x.high != x.low >> 31) {
		throw haxe_Exception.thrown("Overflow");
	}
	return x.low;
};
thx_DateTimeUtc.get_tickInSecond = function(this1) {
	var this2 = new haxe__$Int64__$_$_$Int64(0,10000000);
	var x = haxe_Int64.divMod(this1,this2).modulus;
	if(x.high != x.low >> 31) {
		throw haxe_Exception.thrown("Overflow");
	}
	return x.low;
};
thx_DateTimeUtc.get_second = function(this1) {
	var a = haxe_Int64.divMod(this1,thx_DateTimeUtc.ticksPerSecondI64).quotient;
	var this1 = new haxe__$Int64__$_$_$Int64(0,60);
	var x = haxe_Int64.divMod(a,this1).modulus;
	if(x.high != x.low >> 31) {
		throw haxe_Exception.thrown("Overflow");
	}
	return x.low;
};
thx_DateTimeUtc.get_timeOfDay = function(this1) {
	var this2 = haxe_Int64.divMod(this1,thx_DateTimeUtc.ticksPerDayI64).modulus;
	return this2;
};
thx_DateTimeUtc.get_isInLeapYear = function(this1) {
	return thx_DateTimeUtc.isLeapYear(thx_DateTimeUtc.getDatePart(this1,thx_DateTimeUtc.DATE_PART_YEAR));
};
thx_DateTimeUtc.get_monthDays = function(this1) {
	return thx_DateTimeUtc.daysInMonth(thx_DateTimeUtc.getDatePart(this1,thx_DateTimeUtc.DATE_PART_YEAR),thx_DateTimeUtc.getDatePart(this1,thx_DateTimeUtc.DATE_PART_MONTH));
};
thx_DateTimeUtc.self = function(this1) {
	return this1;
};
var thx_Ord = {};
thx_Ord.order = function(this1,a0,a1) {
	return this1(a0,a1);
};
thx_Ord.max = function(this1,a0,a1) {
	switch(this1(a0,a1)._hx_index) {
	case 1:
		return a0;
	case 0:case 2:
		return a1;
	}
};
thx_Ord.min = function(this1,a0,a1) {
	switch(this1(a0,a1)._hx_index) {
	case 1:
		return a1;
	case 0:case 2:
		return a0;
	}
};
thx_Ord.equal = function(this1,a0,a1) {
	return this1(a0,a1) == thx_OrderingImpl.EQ;
};
thx_Ord.contramap = function(this1,f) {
	return function(b0,b1) {
		return this1(f(b0),f(b1));
	};
};
thx_Ord.inverse = function(this1) {
	return function(a0,a1) {
		return this1(a1,a0);
	};
};
thx_Ord.intComparison = function(this1,a0,a1) {
	switch(this1(a0,a1)._hx_index) {
	case 0:
		return -1;
	case 1:
		return 1;
	case 2:
		return 0;
	}
};
thx_Ord.fromIntComparison = function(f) {
	return function(a,b) {
		return thx_Ordering.fromInt(f(a,b));
	};
};
thx_Ord.forComparable = function() {
	return function(a,b) {
		return thx_Ordering.fromInt(a.compareTo(b));
	};
};
thx_Ord.forComparableOrd = function() {
	return function(a,b) {
		return a.compareTo(b);
	};
};
var thx_Ordering = {};
thx_Ordering.fromInt = function(value) {
	if(value < 0) {
		return thx_OrderingImpl.LT;
	} else if(value > 0) {
		return thx_OrderingImpl.GT;
	} else {
		return thx_OrderingImpl.EQ;
	}
};
thx_Ordering.fromFloat = function(value) {
	if(value < 0) {
		return thx_OrderingImpl.LT;
	} else if(value > 0) {
		return thx_OrderingImpl.GT;
	} else {
		return thx_OrderingImpl.EQ;
	}
};
thx_Ordering.toInt = function(this1) {
	switch(this1._hx_index) {
	case 0:
		return -1;
	case 1:
		return 1;
	case 2:
		return 0;
	}
};
var thx_OrderingImpl = $hxEnums["thx.OrderingImpl"] = { __ename__:"thx.OrderingImpl",__constructs__:null
	,LT: {_hx_name:"LT",_hx_index:0,__enum__:"thx.OrderingImpl",toString:$estr}
	,GT: {_hx_name:"GT",_hx_index:1,__enum__:"thx.OrderingImpl",toString:$estr}
	,EQ: {_hx_name:"EQ",_hx_index:2,__enum__:"thx.OrderingImpl",toString:$estr}
};
thx_OrderingImpl.__constructs__ = [thx_OrderingImpl.LT,thx_OrderingImpl.GT,thx_OrderingImpl.EQ];
var thx_Dates = function() { };
$hxClasses["thx.Dates"] = thx_Dates;
thx_Dates.__name__ = "thx.Dates";
thx_Dates.compare = function(a,b) {
	var a1 = a.getTime();
	var b1 = b.getTime();
	if(a1 < b1) {
		return -1;
	} else if(a1 > b1) {
		return 1;
	} else {
		return 0;
	}
};
thx_Dates.create = function(year,month,day,hour,minute,second) {
	if(second == null) {
		second = 0;
	}
	if(minute == null) {
		minute = 0;
	}
	if(hour == null) {
		hour = 0;
	}
	if(day == null) {
		day = 1;
	}
	if(month == null) {
		month = 0;
	}
	minute += Math.floor(second / 60);
	second %= 60;
	if(second < 0) {
		second += 60;
	}
	hour += Math.floor(minute / 60);
	minute %= 60;
	if(minute < 0) {
		minute += 60;
	}
	day += Math.floor(hour / 24);
	hour %= 24;
	if(hour < 0) {
		hour += 24;
	}
	if(day == 0) {
		--month;
		if(month < 0) {
			month = 11;
			--year;
		}
		day = thx_Dates.daysInMonth(year,month);
	}
	year += Math.floor(month / 12);
	month %= 12;
	if(month < 0) {
		month += 12;
	}
	var days = thx_Dates.daysInMonth(year,month);
	while(day > days) {
		if(day > days) {
			day -= days;
			++month;
		}
		if(month > 11) {
			month -= 12;
			++year;
		}
		days = thx_Dates.daysInMonth(year,month);
	}
	return new Date(year,month,day,hour,minute,second);
};
thx_Dates.daysRange = function(start,end) {
	if(thx_Dates.compare(end,start) < 0) {
		return [];
	}
	var days = [];
	while(!thx_Dates.sameDay(start,end)) {
		days.push(start);
		start = thx_Dates.jump(start,thx_TimePeriod.Day,1);
	}
	days.push(end);
	return days;
};
thx_Dates.equals = function(self,other) {
	return self.getTime() == other.getTime();
};
thx_Dates.nearEquals = function(self,other,units,period) {
	if(units == null) {
		units = 1;
	}
	if(null == period) {
		period = thx_TimePeriod.Second;
	}
	if(units < 0) {
		units = -units;
	}
	var min = thx_Dates.jump(self,period,-units);
	var max = thx_Dates.jump(self,period,units);
	if(thx_Dates.compare(min,other) <= 0) {
		return thx_Dates.compare(max,other) >= 0;
	} else {
		return false;
	}
};
thx_Dates.greater = function(self,other) {
	return thx_Dates.compare(self,other) > 0;
};
thx_Dates.more = function(self,other) {
	return thx_Dates.compare(self,other) > 0;
};
thx_Dates.less = function(self,other) {
	return thx_Dates.compare(self,other) < 0;
};
thx_Dates.greaterEquals = function(self,other) {
	return thx_Dates.compare(self,other) >= 0;
};
thx_Dates.moreEqual = function(self,other) {
	return thx_Dates.compare(self,other) >= 0;
};
thx_Dates.lessEquals = function(self,other) {
	return thx_Dates.compare(self,other) <= 0;
};
thx_Dates.lessEqual = function(self,other) {
	return thx_Dates.compare(self,other) <= 0;
};
thx_Dates.isLeapYear = function(year) {
	if(year % 4 != 0) {
		return false;
	}
	if(year % 100 == 0) {
		return year % 400 == 0;
	}
	return true;
};
thx_Dates.isInLeapYear = function(d) {
	return thx_Dates.isLeapYear(d.getFullYear());
};
thx_Dates.daysInMonth = function(year,month) {
	switch(month) {
	case 1:
		if(thx_Dates.isLeapYear(year)) {
			return 29;
		} else {
			return 28;
		}
		break;
	case 0:case 2:case 4:case 6:case 7:case 9:case 11:
		return 31;
	case 3:case 5:case 8:case 10:
		return 30;
	default:
		throw haxe_Exception.thrown("Invalid month \"" + month + "\".  Month should be a number, Jan=0, Dec=11");
	}
};
thx_Dates.numDaysInMonth = function(month,year) {
	return thx_Dates.daysInMonth(year,month);
};
thx_Dates.daysInThisMonth = function(d) {
	return thx_Dates.daysInMonth(d.getFullYear(),d.getMonth());
};
thx_Dates.numDaysInThisMonth = function(d) {
	return thx_Dates.daysInThisMonth(d);
};
thx_Dates.sameYear = function(self,other) {
	return self.getFullYear() == other.getFullYear();
};
thx_Dates.sameMonth = function(self,other) {
	if(thx_Dates.sameYear(self,other)) {
		return self.getMonth() == other.getMonth();
	} else {
		return false;
	}
};
thx_Dates.sameDay = function(self,other) {
	if(thx_Dates.sameMonth(self,other)) {
		return self.getDate() == other.getDate();
	} else {
		return false;
	}
};
thx_Dates.sameHour = function(self,other) {
	if(thx_Dates.sameDay(self,other)) {
		return self.getHours() == other.getHours();
	} else {
		return false;
	}
};
thx_Dates.sameMinute = function(self,other) {
	if(thx_Dates.sameHour(self,other)) {
		return self.getMinutes() == other.getMinutes();
	} else {
		return false;
	}
};
thx_Dates.snapNext = function(date,period) {
	return new Date(thx_Timestamp.snapNext(date.getTime(),period));
};
thx_Dates.snapPrev = function(date,period) {
	return new Date(thx_Timestamp.snapPrev(date.getTime(),period));
};
thx_Dates.snapTo = function(date,period) {
	return new Date(thx_Timestamp.snapTo(date.getTime(),period));
};
thx_Dates.jump = function(date,period,amount) {
	var sec = date.getSeconds();
	var min = date.getMinutes();
	var hour = date.getHours();
	var day = date.getDate();
	var month = date.getMonth();
	var year = date.getFullYear();
	switch(period._hx_index) {
	case 0:
		sec += amount;
		break;
	case 1:
		min += amount;
		break;
	case 2:
		hour += amount;
		break;
	case 3:
		day += amount;
		break;
	case 4:
		day += amount * 7;
		break;
	case 5:
		month += amount;
		break;
	case 6:
		year += amount;
		break;
	}
	return thx_Dates.create(year,month,day,hour,min,sec);
};
thx_Dates.max = function(self,other) {
	if(self.getTime() > other.getTime()) {
		return self;
	} else {
		return other;
	}
};
thx_Dates.min = function(self,other) {
	if(self.getTime() < other.getTime()) {
		return self;
	} else {
		return other;
	}
};
thx_Dates.snapToWeekDay = function(date,day,firstDayOfWk) {
	if(firstDayOfWk == null) {
		firstDayOfWk = 0;
	}
	var d = date.getDay();
	var s = day;
	if(s < firstDayOfWk) {
		s += 7;
	}
	if(d < firstDayOfWk) {
		d += 7;
	}
	return thx_Dates.jump(date,thx_TimePeriod.Day,s - d);
};
thx_Dates.snapNextWeekDay = function(date,day) {
	var d = date.getDay();
	var s = day;
	if(s < d) {
		s += 7;
	}
	return thx_Dates.jump(date,thx_TimePeriod.Day,s - d);
};
thx_Dates.snapPrevWeekDay = function(date,day) {
	var d = date.getDay();
	var s = day;
	if(s > d) {
		s -= 7;
	}
	return thx_Dates.jump(date,thx_TimePeriod.Day,s - d);
};
thx_Dates.prevYear = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Year,-1);
};
thx_Dates.nextYear = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Year,1);
};
thx_Dates.prevMonth = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Month,-1);
};
thx_Dates.nextMonth = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Month,1);
};
thx_Dates.prevWeek = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Week,-1);
};
thx_Dates.nextWeek = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Week,1);
};
thx_Dates.prevDay = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Day,-1);
};
thx_Dates.nextDay = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Day,1);
};
thx_Dates.prevHour = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Hour,-1);
};
thx_Dates.nextHour = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Hour,1);
};
thx_Dates.prevMinute = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Minute,-1);
};
thx_Dates.nextMinute = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Minute,1);
};
thx_Dates.prevSecond = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Second,-1);
};
thx_Dates.nextSecond = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Second,1);
};
thx_Dates.withYear = function(date,year) {
	return thx_Dates.create(year,date.getMonth(),date.getDate(),date.getHours(),date.getMinutes(),date.getSeconds());
};
thx_Dates.withMonth = function(date,month) {
	return thx_Dates.create(date.getFullYear(),month,date.getDate(),date.getHours(),date.getMinutes(),date.getSeconds());
};
thx_Dates.withDay = function(date,day) {
	return thx_Dates.create(date.getFullYear(),date.getMonth(),day,date.getHours(),date.getMinutes(),date.getSeconds());
};
thx_Dates.withHour = function(date,hour) {
	return thx_Dates.create(date.getFullYear(),date.getMonth(),date.getDate(),hour,date.getMinutes(),date.getSeconds());
};
thx_Dates.withMinute = function(date,minute) {
	return thx_Dates.create(date.getFullYear(),date.getMonth(),date.getDate(),date.getHours(),minute,date.getSeconds());
};
thx_Dates.withSecond = function(date,second) {
	return thx_Dates.create(date.getFullYear(),date.getMonth(),date.getDate(),date.getHours(),date.getMinutes(),second);
};
thx_Dates.parseDate = function(s) {
	try {
		return thx_Either.Right(HxOverrides.strDate(s));
	} catch( _g ) {
		haxe_NativeStackTrace.lastError = _g;
		return thx_Either.Left("" + s + " could not be parsed to a valid Date value.");
	}
};
var thx_Dynamics = function() { };
$hxClasses["thx.Dynamics"] = thx_Dynamics;
thx_Dynamics.__name__ = "thx.Dynamics";
thx_Dynamics.equals = function(a,b) {
	if(!thx_Types.sameType(a,b)) {
		return false;
	}
	if(a == b) {
		return true;
	}
	var _g = Type.typeof(a);
	switch(_g._hx_index) {
	case 0:case 1:case 2:case 3:
		return false;
	case 4:
		var fa = Reflect.fields(a);
		var fb = Reflect.fields(b);
		var _g1 = 0;
		while(_g1 < fa.length) {
			var field = fa[_g1];
			++_g1;
			HxOverrides.remove(fb,field);
			if(!Object.prototype.hasOwnProperty.call(b,field)) {
				return false;
			}
			var va = Reflect.field(a,field);
			if(Reflect.isFunction(va)) {
				continue;
			}
			var vb = Reflect.field(b,field);
			if(!thx_Dynamics.equals(va,vb)) {
				return false;
			}
		}
		if(fb.length > 0) {
			return false;
		}
		var t = false;
		t = thx_Iterators.isIterator(a);
		if(t || thx_Iterables.isIterable(a)) {
			if(t && !thx_Iterators.isIterator(b)) {
				return false;
			}
			if(!t && !thx_Iterables.isIterable(b)) {
				return false;
			}
			var aa = t ? thx_Iterators.toArray(a) : thx_Iterators.toArray($getIterator(a));
			var ab = t ? thx_Iterators.toArray(b) : thx_Iterators.toArray($getIterator(b));
			if(aa.length != ab.length) {
				return false;
			}
			var _g1 = 0;
			var _g2 = aa.length;
			while(_g1 < _g2) {
				var i = _g1++;
				if(!thx_Dynamics.equals(aa[i],ab[i])) {
					return false;
				}
			}
			return true;
		}
		return true;
	case 5:
		return Reflect.compareMethods(a,b);
	case 6:
		var c = _g.c;
		var ca = c.__name__;
		var c = js_Boot.getClass(b);
		var cb = c.__name__;
		if(ca != cb) {
			return false;
		}
		if(typeof(a) == "string") {
			return false;
		}
		if(((a) instanceof Array)) {
			var aa = a;
			var ab = b;
			if(aa.length != ab.length) {
				return false;
			}
			var _g1 = 0;
			var _g2 = aa.length;
			while(_g1 < _g2) {
				var i = _g1++;
				if(!thx_Dynamics.equals(aa[i],ab[i])) {
					return false;
				}
			}
			return true;
		}
		if(((a) instanceof Date)) {
			return a.getTime() == b.getTime();
		}
		if(js_Boot.__implements(a,haxe_IMap)) {
			var ha = a;
			var hb = b;
			var ka = thx_Iterators.toArray(new haxe_ds__$StringMap_StringMapKeyIterator(ha.h));
			var kb = thx_Iterators.toArray(new haxe_ds__$StringMap_StringMapKeyIterator(hb.h));
			if(ka.length != kb.length) {
				return false;
			}
			var _g1 = 0;
			while(_g1 < ka.length) {
				var key = ka[_g1];
				++_g1;
				if(!Object.prototype.hasOwnProperty.call(hb.h,key) || !thx_Dynamics.equals(ha.h[key],hb.h[key])) {
					return false;
				}
			}
			return true;
		}
		var t = false;
		t = thx_Iterators.isIterator(a);
		if(t || thx_Iterables.isIterable(a)) {
			var va = t ? thx_Iterators.toArray(a) : thx_Iterators.toArray($getIterator(a));
			var vb = t ? thx_Iterators.toArray(b) : thx_Iterators.toArray($getIterator(b));
			if(va.length != vb.length) {
				return false;
			}
			var _g1 = 0;
			var _g2 = va.length;
			while(_g1 < _g2) {
				var i = _g1++;
				if(!thx_Dynamics.equals(va[i],vb[i])) {
					return false;
				}
			}
			return true;
		}
		var f = null;
		var tmp;
		if(Object.prototype.hasOwnProperty.call(a,"equals")) {
			f = Reflect.field(a,"equals");
			tmp = Reflect.isFunction(f);
		} else {
			tmp = false;
		}
		if(tmp) {
			return f.apply(a,[b]);
		}
		var fields = Type.getInstanceFields(js_Boot.getClass(a));
		var _g1 = 0;
		while(_g1 < fields.length) {
			var field = fields[_g1];
			++_g1;
			var va = Reflect.field(a,field);
			if(Reflect.isFunction(va)) {
				continue;
			}
			var vb = Reflect.field(b,field);
			if(!thx_Dynamics.equals(va,vb)) {
				return false;
			}
		}
		return true;
	case 7:
		var e = _g.e;
		var ea = e.__ename__;
		var teb = Type.getEnum(b);
		var eb = teb.__ename__;
		if(ea != eb) {
			return false;
		}
		if(a._hx_index != b._hx_index) {
			return false;
		}
		var pa = Type.enumParameters(a);
		var pb = Type.enumParameters(b);
		var _g = 0;
		var _g1 = pa.length;
		while(_g < _g1) {
			var i = _g++;
			if(!thx_Dynamics.equals(pa[i],pb[i])) {
				return false;
			}
		}
		return true;
	case 8:
		throw haxe_Exception.thrown("Unable to compare two unknown types");
	}
};
thx_Dynamics.clone = function(v,cloneInstances) {
	if(cloneInstances == null) {
		cloneInstances = false;
	}
	var _g = Type.typeof(v);
	switch(_g._hx_index) {
	case 0:
		return null;
	case 1:case 2:case 3:case 5:case 8:
		return v;
	case 4:
		return thx_Objects.copyTo(v,{ });
	case 6:
		var c = _g.c;
		var name = c.__name__;
		switch(name) {
		case "Array":
			var _this = v;
			var result = new Array(_this.length);
			var _g1 = 0;
			var _g2 = _this.length;
			while(_g1 < _g2) {
				var i = _g1++;
				result[i] = thx_Dynamics.clone(_this[i],cloneInstances);
			}
			return result;
		case "Date":case "String":
			return v;
		default:
			if(cloneInstances) {
				var o = Object.create(c.prototype);
				var _g1 = 0;
				var _g2 = Type.getInstanceFields(c);
				while(_g1 < _g2.length) {
					var field = _g2[_g1];
					++_g1;
					o[field] = thx_Dynamics.clone(Reflect.field(v,field),cloneInstances);
				}
				return o;
			} else {
				return v;
			}
		}
		break;
	case 7:
		var _g1 = _g.e;
		return v;
	}
};
thx_Dynamics.compare = function(a,b) {
	if(null == a && null == b) {
		return 0;
	}
	if(null == a) {
		return -1;
	}
	if(null == b) {
		return 1;
	}
	if(!thx_Types.sameType(a,b)) {
		var a1 = thx_Types.toString(Type.typeof(a));
		var b1 = thx_Types.toString(Type.typeof(b));
		if(a1 < b1) {
			return -1;
		} else if(a1 > b1) {
			return 1;
		} else {
			return 0;
		}
	}
	var _g = Type.typeof(a);
	switch(_g._hx_index) {
	case 1:
		return thx_Ints.compare(a,b);
	case 2:
		var a1 = a;
		var b1 = b;
		if(a1 < b1) {
			return -1;
		} else if(a1 > b1) {
			return 1;
		} else {
			return 0;
		}
		break;
	case 3:
		return thx_Bools.compare(a,b);
	case 4:
		return thx_Objects.compare(a,b);
	case 6:
		var c = _g.c;
		var name = c.__name__;
		switch(name) {
		case "Array":
			return thx_Arrays.compare(a,b);
		case "Date":
			return thx_Dates.compare(a,b);
		case "String":
			var a1 = a;
			var b1 = b;
			if(a1 < b1) {
				return -1;
			} else if(a1 > b1) {
				return 1;
			} else {
				return 0;
			}
			break;
		default:
			if(Object.prototype.hasOwnProperty.call(a,"compare")) {
				return Reflect.field(a,"compare").apply(a,[b]);
			} else {
				var a1 = Std.string(a);
				var b1 = Std.string(b);
				if(a1 < b1) {
					return -1;
				} else if(a1 > b1) {
					return 1;
				} else {
					return 0;
				}
			}
		}
		break;
	case 7:
		var e = _g.e;
		return thx_Enums.compare(a,b);
	default:
		return 0;
	}
};
thx_Dynamics.string = function(v) {
	var _g = Type.typeof(v);
	switch(_g._hx_index) {
	case 0:
		return "null";
	case 1:case 2:case 3:
		return "" + Std.string(v);
	case 4:
		return thx_Objects.string(v);
	case 5:
		return "<function>";
	case 6:
		var c = _g.c;
		switch(c.__name__) {
		case "Array":
			return thx_Arrays.string(v);
		case "Date":
			return HxOverrides.dateStr(v);
		case "String":
			return v;
		default:
			if(js_Boot.__implements(v,haxe_IMap)) {
				return thx_Maps.string(v);
			} else {
				return Std.string(v);
			}
		}
		break;
	case 7:
		var e = _g.e;
		return thx_Enums.string(v);
	case 8:
		return "<unknown>";
	}
};
var thx_DynamicsT = function() { };
$hxClasses["thx.DynamicsT"] = thx_DynamicsT;
thx_DynamicsT.__name__ = "thx.DynamicsT";
thx_DynamicsT.isEmpty = function(o) {
	return Reflect.fields(o).length == 0;
};
thx_DynamicsT.exists = function(o,name) {
	return Object.prototype.hasOwnProperty.call(o,name);
};
thx_DynamicsT.fields = function(o) {
	return Reflect.fields(o);
};
thx_DynamicsT.merge = function(to,from,replacef) {
	if(null == replacef) {
		replacef = function(field,oldv,newv) {
			return newv;
		};
	}
	var _g = 0;
	var _g1 = Reflect.fields(from);
	while(_g < _g1.length) {
		var field = _g1[_g];
		++_g;
		var newv = Reflect.field(from,field);
		if(Object.prototype.hasOwnProperty.call(to,field)) {
			to[field] = replacef(field,Reflect.field(to,field),newv);
		} else {
			to[field] = newv;
		}
	}
	return to;
};
thx_DynamicsT.size = function(o) {
	return Reflect.fields(o).length;
};
thx_DynamicsT.values = function(o) {
	var _this = Reflect.fields(o);
	var result = new Array(_this.length);
	var _g = 0;
	var _g1 = _this.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = Reflect.field(o,_this[i]);
	}
	return result;
};
thx_DynamicsT.tuples = function(o) {
	var _this = Reflect.fields(o);
	var result = new Array(_this.length);
	var _g = 0;
	var _g1 = _this.length;
	while(_g < _g1) {
		var i = _g++;
		var key = _this[i];
		var this1 = { _0 : key, _1 : Reflect.field(o,key)};
		result[i] = this1;
	}
	return result;
};
var thx_Either = $hxEnums["thx.Either"] = { __ename__:"thx.Either",__constructs__:null
	,Left: ($_=function(value) { return {_hx_index:0,value:value,__enum__:"thx.Either",toString:$estr}; },$_._hx_name="Left",$_.__params__ = ["value"],$_)
	,Right: ($_=function(value) { return {_hx_index:1,value:value,__enum__:"thx.Either",toString:$estr}; },$_._hx_name="Right",$_.__params__ = ["value"],$_)
};
thx_Either.__constructs__ = [thx_Either.Left,thx_Either.Right];
var thx_Eithers = function() { };
$hxClasses["thx.Eithers"] = thx_Eithers;
thx_Eithers.__name__ = "thx.Eithers";
thx_Eithers.isLeft = function(either) {
	switch(either._hx_index) {
	case 0:
		var _g = either.value;
		return true;
	case 1:
		var _g = either.value;
		return false;
	}
};
thx_Eithers.isRight = function(either) {
	switch(either._hx_index) {
	case 0:
		var _g = either.value;
		return false;
	case 1:
		var _g = either.value;
		return true;
	}
};
thx_Eithers.toLeft = function(either) {
	switch(either._hx_index) {
	case 0:
		var v = either.value;
		return haxe_ds_Option.Some(v);
	case 1:
		var _g = either.value;
		return haxe_ds_Option.None;
	}
};
thx_Eithers.toRight = function(either) {
	switch(either._hx_index) {
	case 0:
		var _g = either.value;
		return haxe_ds_Option.None;
	case 1:
		var v = either.value;
		return haxe_ds_Option.Some(v);
	}
};
thx_Eithers.toLeftUnsafe = function(either) {
	switch(either._hx_index) {
	case 0:
		var v = either.value;
		return v;
	case 1:
		var _g = either.value;
		return null;
	}
};
thx_Eithers.toRightUnsafe = function(either) {
	switch(either._hx_index) {
	case 0:
		var _g = either.value;
		return null;
	case 1:
		var v = either.value;
		return v;
	}
};
thx_Eithers.map = function(either,f) {
	switch(either._hx_index) {
	case 0:
		var v = either.value;
		return thx_Either.Left(v);
	case 1:
		var v = either.value;
		return thx_Either.Right(f(v));
	}
};
thx_Eithers.ap = function(either,fa) {
	switch(either._hx_index) {
	case 0:
		var l = either.value;
		return thx_Either.Left(l);
	case 1:
		var v = either.value;
		return thx_Eithers.map(fa,function(f) {
			return f(v);
		});
	}
};
thx_Eithers.flatMap = function(either,f) {
	switch(either._hx_index) {
	case 0:
		var v = either.value;
		return thx_Either.Left(v);
	case 1:
		var v = either.value;
		return f(v);
	}
};
thx_Eithers.leftMap = function(either,f) {
	switch(either._hx_index) {
	case 0:
		var v = either.value;
		return thx_Either.Left(f(v));
	case 1:
		var v = either.value;
		return thx_Either.Right(v);
	}
};
thx_Eithers.orThrow = function(either,message) {
	switch(either._hx_index) {
	case 0:
		var v = either.value;
		throw new thx_Error("" + message + ": " + Std.string(v),null,{ fileName : "thx/Eithers.hx", lineNumber : 105, className : "thx.Eithers", methodName : "orThrow"});
	case 1:
		var v = either.value;
		return v;
	}
};
thx_Eithers.toValidation = function(either) {
	return either;
};
thx_Eithers.toVNel = function(either) {
	return thx_Eithers.leftMap(either,thx_Nel.pure);
};
thx_Eithers.cata = function(either,l,r) {
	switch(either._hx_index) {
	case 0:
		var l0 = either.value;
		return l(l0);
	case 1:
		var r0 = either.value;
		return r(r0);
	}
};
thx_Eithers.bimap = function(either,l,r) {
	switch(either._hx_index) {
	case 0:
		var l0 = either.value;
		return thx_Either.Left(l(l0));
	case 1:
		var r0 = either.value;
		return thx_Either.Right(r(r0));
	}
};
thx_Eithers.foldLeft = function(either,a,f) {
	switch(either._hx_index) {
	case 0:
		var l0 = either.value;
		return a;
	case 1:
		var r0 = either.value;
		return f(a,r0);
	}
};
thx_Eithers.foldMap = function(either,f,m) {
	var _e = m;
	var tmp = function(a0,a1) {
		return thx_Monoid.append(_e,a0,a1);
	};
	return thx_Eithers.foldLeft(thx_Eithers.map(either,f),thx_Monoid.get_zero(m),tmp);
};
thx_Eithers.getOrElse = function(e0,v) {
	switch(e0._hx_index) {
	case 0:
		var _g = e0.value;
		return v;
	case 1:
		var v = e0.value;
		return v;
	}
};
thx_Eithers.getOrElseF = function(e0,f) {
	switch(e0._hx_index) {
	case 0:
		var _g = e0.value;
		return f();
	case 1:
		var v = e0.value;
		return v;
	}
};
thx_Eithers.orElse = function(e0,e1) {
	if(e0._hx_index == 0) {
		var e = e0.value;
		return e1;
	} else {
		var r = e0;
		return r;
	}
};
thx_Eithers.orElseF = function(e0,f) {
	if(e0._hx_index == 0) {
		var e = e0.value;
		return f();
	} else {
		var r = e0;
		return r;
	}
};
thx_Eithers.each = function(either,f) {
	switch(either._hx_index) {
	case 0:
		var l = either.value;
		break;
	case 1:
		var r = either.value;
		f(r);
		break;
	}
};
thx_Eithers.eachLeft = function(either,f) {
	switch(either._hx_index) {
	case 0:
		var l = either.value;
		f(l);
		break;
	case 1:
		var r = either.value;
		break;
	}
};
thx_Eithers.ensure = function(either,p,error) {
	if(either._hx_index == 1) {
		var a = either.value;
		if(p(a)) {
			return either;
		} else {
			return thx_Either.Left(error);
		}
	} else {
		return either;
	}
};
thx_Eithers.exists = function(either,p) {
	if(either._hx_index == 1) {
		var a = either.value;
		return p(a);
	} else {
		return false;
	}
};
thx_Eithers.forall = function(either,p) {
	if(either._hx_index == 1) {
		var a = either.value;
		return p(a);
	} else {
		return true;
	}
};
var thx_EitherK = {};
thx_EitherK.apply = function(this1,a) {
	return this1(a);
};
thx_EitherK.compose = function(this1,f) {
	return function(a0) {
		return thx_Eithers.flatMap(thx_EitherK.apply(f,a0),this1);
	};
};
thx_EitherK.andThen = function(this1,f) {
	return function(a) {
		var tmp = this1(a);
		var _e = f;
		return thx_Eithers.flatMap(tmp,function(a) {
			return thx_EitherK.apply(_e,a);
		});
	};
};
thx_EitherK.pure = function(r) {
	return function(a) {
		return thx_Either.Right(r);
	};
};
thx_EitherK.map = function(this1,f) {
	var fb = f;
	return thx_EitherK.flatMap(this1,function(v) {
		return thx_EitherK.pure(fb(v));
	});
};
thx_EitherK.ap = function(this1,e) {
	return thx_EitherK.flatMap(this1,function(r) {
		return thx_EitherK.map(e,function(f) {
			return f(r);
		});
	});
};
thx_EitherK.flatMap = function(this1,f) {
	return function(a) {
		return thx_Eithers.flatMap(this1(a),function(r) {
			return thx_EitherK.apply(f(r),a);
		});
	};
};
thx_EitherK.monoid = function() {
	return { zero : function(r) {
		return thx_Either.Right(r);
	}, append : function(f0,f1) {
		return function(r) {
			var tmp = thx_EitherK.apply(f0,r);
			var _e = f1;
			return thx_Eithers.flatMap(tmp,function(a) {
				return thx_EitherK.apply(_e,a);
			});
		};
	}};
};
var thx_Enums = function() { };
$hxClasses["thx.Enums"] = thx_Enums;
thx_Enums.__name__ = "thx.Enums";
thx_Enums.string = function(e) {
	var cons = $hxEnums[e.__enum__].__constructs__[e._hx_index]._hx_name;
	var params = [];
	var _g = 0;
	var _g1 = Type.enumParameters(e);
	while(_g < _g1.length) {
		var param = _g1[_g];
		++_g;
		params.push(thx_Dynamics.string(param));
	}
	return cons + (params.length == 0 ? "" : "(" + params.join(", ") + ")");
};
thx_Enums.compare = function(a,b) {
	var v = thx_Ints.compare(a._hx_index,b._hx_index);
	if(v != 0) {
		return v;
	}
	return thx_Arrays.compare(Type.enumParameters(a),Type.enumParameters(b));
};
thx_Enums.sameConstructor = function(a,b) {
	return a._hx_index == b._hx_index;
};
thx_Enums.min = function(a,b) {
	if(thx_Enums.compare(a,b) < 0) {
		return a;
	} else {
		return b;
	}
};
thx_Enums.max = function(a,b) {
	if(thx_Enums.compare(a,b) > 0) {
		return a;
	} else {
		return b;
	}
};
var thx_Error = function(message,stack,pos) {
	Error.call(this,message);
	this.message = message;
	if(null == stack) {
		try {
			stack = haxe_CallStack.exceptionStack();
		} catch( _g ) {
			haxe_NativeStackTrace.lastError = _g;
			stack = [];
		}
		if(stack.length == 0) {
			try {
				stack = haxe_CallStack.callStack();
			} catch( _g ) {
				haxe_NativeStackTrace.lastError = _g;
				stack = [];
			}
		}
	}
	this.stackItems = stack;
	this.pos = pos;
};
$hxClasses["thx.Error"] = thx_Error;
thx_Error.__name__ = "thx.Error";
thx_Error.fromDynamic = function(err,pos) {
	if(((err) instanceof thx_Error)) {
		return err;
	}
	return new thx_error_ErrorWrapper("" + Std.string(err),err,null,pos);
};
thx_Error.__super__ = Error;
thx_Error.prototype = $extend(Error.prototype,{
	pos: null
	,stackItems: null
	,toString: function() {
		return this.message + "\nfrom: " + this.getPosition() + "\n\n" + this.stackToString();
	}
	,getPosition: function() {
		return this.pos.className + "." + this.pos.methodName + "() at " + this.pos.lineNumber;
	}
	,stackToString: function() {
		return haxe_CallStack.toString(this.stackItems);
	}
	,__class__: thx_Error
});
var thx_Floats = function() { };
$hxClasses["thx.Floats"] = thx_Floats;
thx_Floats.__name__ = "thx.Floats";
thx_Floats.angleDifference = function(a,b,turn) {
	if(turn == null) {
		turn = 360.0;
	}
	var r = (b - a) % turn;
	if(r < 0) {
		r += turn;
	}
	if(r > turn / 2) {
		r -= turn;
	}
	return r;
};
thx_Floats.ceilTo = function(f,decimals) {
	var p = Math.pow(10,decimals);
	return Math.ceil(f * p) / p;
};
thx_Floats.canParse = function(s) {
	if(!(thx_Floats.pattern_parse.match(s) || thx_Floats.pattern_inf.match(s))) {
		return thx_Floats.pattern_neg_inf.match(s);
	} else {
		return true;
	}
};
thx_Floats.clamp = function(v,min,max) {
	if(v < min) {
		return min;
	} else if(v > max) {
		return max;
	} else {
		return v;
	}
};
thx_Floats.clampSym = function(v,max) {
	var min = -max;
	if(v < min) {
		return min;
	} else if(v > max) {
		return max;
	} else {
		return v;
	}
};
thx_Floats.compare = function(a,b) {
	if(a < b) {
		return -1;
	} else if(a > b) {
		return 1;
	} else {
		return 0;
	}
};
thx_Floats.floorTo = function(f,decimals) {
	var p = Math.pow(10,decimals);
	return Math.floor(f * p) / p;
};
thx_Floats.interpolate = function(f,a,b) {
	return (b - a) * f + a;
};
thx_Floats.interpolateAngle = function(f,a,b,turn) {
	if(turn == null) {
		turn = 360;
	}
	return thx_Floats.wrapCircular(thx_Floats.interpolate(f,a,a + thx_Floats.angleDifference(a,b,turn)),turn);
};
thx_Floats.interpolateAngleWidest = function(f,a,b,turn) {
	if(turn == null) {
		turn = 360;
	}
	return thx_Floats.wrapCircular(thx_Floats.interpolateAngle(f,a,b,turn) - turn / 2,turn);
};
thx_Floats.interpolateAngleCW = function(f,a,b,turn) {
	if(turn == null) {
		turn = 360;
	}
	a = thx_Floats.wrapCircular(a,turn);
	b = thx_Floats.wrapCircular(b,turn);
	if(b < a) {
		b += turn;
	}
	return thx_Floats.wrapCircular(thx_Floats.interpolate(f,a,b),turn);
};
thx_Floats.interpolateAngleCCW = function(f,a,b,turn) {
	if(turn == null) {
		turn = 360;
	}
	a = thx_Floats.wrapCircular(a,turn);
	b = thx_Floats.wrapCircular(b,turn);
	if(b > a) {
		b -= turn;
	}
	return thx_Floats.wrapCircular(thx_Floats.interpolate(f,a,b),turn);
};
thx_Floats.max = function(a,b) {
	if(a > b) {
		return a;
	} else {
		return b;
	}
};
thx_Floats.min = function(a,b) {
	if(a < b) {
		return a;
	} else {
		return b;
	}
};
thx_Floats.nearEquals = function(a,b,tollerance) {
	if(tollerance == null) {
		tollerance = 1e-9;
	}
	if(isFinite(a)) {
		return Math.abs(a - b) <= tollerance;
	}
	if(isNaN(a)) {
		return isNaN(b);
	}
	if(isNaN(b)) {
		return false;
	}
	if(!isFinite(b)) {
		return a > 0 == b > 0;
	}
	return false;
};
thx_Floats.nearEqualAngles = function(a,b,turn,tollerance) {
	if(tollerance == null) {
		tollerance = 1e-9;
	}
	if(turn == null) {
		turn = 360.0;
	}
	return Math.abs(thx_Floats.angleDifference(a,b,turn)) <= tollerance;
};
thx_Floats.nearZero = function(n,tollerance) {
	if(tollerance == null) {
		tollerance = 1e-9;
	}
	return Math.abs(n) <= tollerance;
};
thx_Floats.normalize = function(v) {
	if(v < 0) {
		return 0;
	} else if(v > 1) {
		return 1;
	} else {
		return v;
	}
};
thx_Floats.parse = function(s) {
	if(s.substring(0,1) == "+") {
		s = s.substring(1);
	}
	if(thx_Floats.pattern_inf.match(s)) {
		return Infinity;
	} else if(thx_Floats.pattern_neg_inf.match(s)) {
		return -Infinity;
	} else {
		return parseFloat(s);
	}
};
thx_Floats.root = function(base,index) {
	return Math.pow(base,1 / index);
};
thx_Floats.roundTo = function(f,decimals) {
	var p = Math.pow(10,decimals);
	return Math.round(f * p) / p;
};
thx_Floats.sign = function(value) {
	if(value < 0) {
		return -1;
	} else {
		return 1;
	}
};
thx_Floats.toString = function(v) {
	return "" + v;
};
thx_Floats.toFloat = function(s) {
	return thx_Floats.parse(s);
};
thx_Floats.trunc = function(value) {
	if(value < 0.0) {
		return Math.ceil(value);
	} else {
		return Math.floor(value);
	}
};
thx_Floats.ftrunc = function(value) {
	if(value < 0.0) {
		return Math.ceil(value);
	} else {
		return Math.floor(value);
	}
};
thx_Floats.wrap = function(v,min,max) {
	var range = max - min + 1;
	if(v < min) {
		v += range * ((min - v) / range + 1);
	}
	return min + (v - min) % range;
};
thx_Floats.wrapCircular = function(v,max) {
	v %= max;
	if(v < 0) {
		v += max;
	}
	return v;
};
var thx_Functions0 = function() { };
$hxClasses["thx.Functions0"] = thx_Functions0;
thx_Functions0.__name__ = "thx.Functions0";
thx_Functions0.after = function(callback,n) {
	return function() {
		if((n -= 1) == 0) {
			callback();
		}
	};
};
thx_Functions0.join = function(fa,fb) {
	return function() {
		fa();
		fb();
	};
};
thx_Functions0.memoize = function(callback) {
	var result = null;
	return function() {
		if(result == null) {
			result = callback();
		}
		return result;
	};
};
thx_Functions0.once = function(f) {
	return function() {
		var t = f;
		f = thx_Functions.noop;
		t();
	};
};
thx_Functions0.negate = function(callback) {
	return function() {
		return !callback();
	};
};
thx_Functions0.times = function(n,callback) {
	return function() {
		var _this = thx_Ints.range(n);
		var result = new Array(_this.length);
		var _g = 0;
		var _g1 = _this.length;
		while(_g < _g1) {
			var i = _g++;
			result[i] = callback();
		}
		return result;
	};
};
thx_Functions0.timesi = function(n,callback) {
	return function() {
		var _this = thx_Ints.range(n);
		var result = new Array(_this.length);
		var _g = 0;
		var _g1 = _this.length;
		while(_g < _g1) {
			var i = _g++;
			result[i] = callback(_this[i]);
		}
		return result;
	};
};
var thx_Functions1 = function() { };
$hxClasses["thx.Functions1"] = thx_Functions1;
thx_Functions1.__name__ = "thx.Functions1";
thx_Functions1.compose = function(fa,fb) {
	return function(v) {
		return fa(fb(v));
	};
};
thx_Functions1.map = function(fab,fbc) {
	return function(a) {
		return fbc(fab(a));
	};
};
thx_Functions1.contramap = function(fbc,fab) {
	return function(a) {
		return fbc(fab(a));
	};
};
thx_Functions1.join = function(fa,fb) {
	return function(v) {
		fa(v);
		fb(v);
	};
};
thx_Functions1.memoize = function(callback,resolver) {
	if(null == resolver) {
		resolver = function(v) {
			return "" + Std.string(v);
		};
	}
	var map_h = Object.create(null);
	return function(v) {
		var key = resolver(v);
		if(Object.prototype.hasOwnProperty.call(map_h,key)) {
			return map_h[key];
		}
		var result = callback(v);
		map_h[key] = result;
		return result;
	};
};
thx_Functions1.negate = function(callback) {
	return function(v) {
		return !callback(v);
	};
};
thx_Functions1.noop = function(_) {
};
thx_Functions1.times = function(n,callback) {
	return function(value) {
		var _this = thx_Ints.range(n);
		var result = new Array(_this.length);
		var _g = 0;
		var _g1 = _this.length;
		while(_g < _g1) {
			var i = _g++;
			result[i] = callback(value);
		}
		return result;
	};
};
thx_Functions1.timesi = function(n,callback) {
	return function(value) {
		var _this = thx_Ints.range(n);
		var result = new Array(_this.length);
		var _g = 0;
		var _g1 = _this.length;
		while(_g < _g1) {
			var i = _g++;
			result[i] = callback(value,_this[i]);
		}
		return result;
	};
};
thx_Functions1.swapArguments = function(callback) {
	return function(a2,a1) {
		return callback(a1,a2);
	};
};
var thx_Functions2 = function() { };
$hxClasses["thx.Functions2"] = thx_Functions2;
thx_Functions2.__name__ = "thx.Functions2";
thx_Functions2.memoize = function(callback,resolver) {
	if(null == resolver) {
		resolver = function(v1,v2) {
			return "" + Std.string(v1) + ":" + Std.string(v2);
		};
	}
	var map_h = Object.create(null);
	return function(v1,v2) {
		var key = resolver(v1,v2);
		if(Object.prototype.hasOwnProperty.call(map_h,key)) {
			return map_h[key];
		}
		var result = callback(v1,v2);
		map_h[key] = result;
		return result;
	};
};
thx_Functions2.curry = function(f) {
	return function(a) {
		return function(b) {
			return f(a,b);
		};
	};
};
thx_Functions2.join = function(fa,fb) {
	return function(v1,v2) {
		fa(v1,v2);
		fb(v1,v2);
	};
};
thx_Functions2.negate = function(callback) {
	return function(v1,v2) {
		return !callback(v1,v2);
	};
};
var thx_Functions3 = function() { };
$hxClasses["thx.Functions3"] = thx_Functions3;
thx_Functions3.__name__ = "thx.Functions3";
thx_Functions3.memoize = function(callback,resolver) {
	if(null == resolver) {
		resolver = function(v1,v2,v3) {
			return "" + Std.string(v1) + ":" + Std.string(v2) + ":" + Std.string(v3);
		};
	}
	var map_h = Object.create(null);
	return function(v1,v2,v3) {
		var key = resolver(v1,v2,v3);
		if(Object.prototype.hasOwnProperty.call(map_h,key)) {
			return map_h[key];
		}
		var result = callback(v1,v2,v3);
		map_h[key] = result;
		return result;
	};
};
thx_Functions3.negate = function(callback) {
	return function(v1,v2,v3) {
		return !callback(v1,v2,v3);
	};
};
thx_Functions3.curry = function(f) {
	return function(a,b) {
		return function(c) {
			return f(a,b,c);
		};
	};
};
var thx_Functions4 = function() { };
$hxClasses["thx.Functions4"] = thx_Functions4;
thx_Functions4.__name__ = "thx.Functions4";
thx_Functions4.curry = function(f) {
	return function(a,b,c) {
		return function(d) {
			return f(a,b,c,d);
		};
	};
};
var thx_Functions5 = function() { };
$hxClasses["thx.Functions5"] = thx_Functions5;
thx_Functions5.__name__ = "thx.Functions5";
thx_Functions5.curry = function(f) {
	return function(a,b,c,d) {
		return function(e) {
			return f(a,b,c,d,e);
		};
	};
};
var thx_Functions6 = function() { };
$hxClasses["thx.Functions6"] = thx_Functions6;
thx_Functions6.__name__ = "thx.Functions6";
thx_Functions6.curry = function(f) {
	return function(a,b,c,d,e) {
		return function(f0) {
			return f(a,b,c,d,e,f0);
		};
	};
};
var thx_Functions7 = function() { };
$hxClasses["thx.Functions7"] = thx_Functions7;
thx_Functions7.__name__ = "thx.Functions7";
thx_Functions7.curry = function(f) {
	return function(a,b,c,d,e,f0) {
		return function(g) {
			return f(a,b,c,d,e,f0,g);
		};
	};
};
var thx_Functions8 = function() { };
$hxClasses["thx.Functions8"] = thx_Functions8;
thx_Functions8.__name__ = "thx.Functions8";
thx_Functions8.curry = function(f) {
	return function(a,b,c,d,e,f0,g) {
		return function(h) {
			return f(a,b,c,d,e,f0,g,h);
		};
	};
};
var thx_Functions9 = function() { };
$hxClasses["thx.Functions9"] = thx_Functions9;
thx_Functions9.__name__ = "thx.Functions9";
thx_Functions9.curry = function(f) {
	return function(a,b,c,d,e,f0,g,h) {
		return function(i) {
			return f(a,b,c,d,e,f0,g,h,i);
		};
	};
};
var thx_Functions10 = function() { };
$hxClasses["thx.Functions10"] = thx_Functions10;
thx_Functions10.__name__ = "thx.Functions10";
thx_Functions10.curry = function(f) {
	return function(a,b,c,d,e,f0,g,h,i) {
		return function(j) {
			return f(a,b,c,d,e,f0,g,h,i,j);
		};
	};
};
var thx_Functions11 = function() { };
$hxClasses["thx.Functions11"] = thx_Functions11;
thx_Functions11.__name__ = "thx.Functions11";
thx_Functions11.curry = function(f) {
	return function(a,b,c,d,e,f0,g,h,i,j) {
		return function(k) {
			return f(a,b,c,d,e,f0,g,h,i,j,k);
		};
	};
};
var thx_Functions12 = function() { };
$hxClasses["thx.Functions12"] = thx_Functions12;
thx_Functions12.__name__ = "thx.Functions12";
thx_Functions12.curry = function(f) {
	return function(a,b,c,d,e,f0,g,h,i,j,k) {
		return function(l) {
			return f(a,b,c,d,e,f0,g,h,i,j,k,l);
		};
	};
};
var thx_Functions13 = function() { };
$hxClasses["thx.Functions13"] = thx_Functions13;
thx_Functions13.__name__ = "thx.Functions13";
thx_Functions13.curry = function(f) {
	return function(a,b,c,d,e,f0,g,h,i,j,k,l) {
		return function(m) {
			return f(a,b,c,d,e,f0,g,h,i,j,k,l,m);
		};
	};
};
var thx_Functions14 = function() { };
$hxClasses["thx.Functions14"] = thx_Functions14;
thx_Functions14.__name__ = "thx.Functions14";
thx_Functions14.curry = function(f) {
	return function(a,b,c,d,e,f0,g,h,i,j,k,l,m) {
		return function(n) {
			return f(a,b,c,d,e,f0,g,h,i,j,k,l,m,n);
		};
	};
};
var thx_Functions15 = function() { };
$hxClasses["thx.Functions15"] = thx_Functions15;
thx_Functions15.__name__ = "thx.Functions15";
thx_Functions15.curry = function(f) {
	return function(a,b,c,d,e,f0,g,h,i,j,k,l,m,n) {
		return function(o) {
			return f(a,b,c,d,e,f0,g,h,i,j,k,l,m,n,o);
		};
	};
};
var thx_Functions16 = function() { };
$hxClasses["thx.Functions16"] = thx_Functions16;
thx_Functions16.__name__ = "thx.Functions16";
thx_Functions16.curry = function(f) {
	return function(a,b,c,d,e,f0,g,h,i,j,k,l,m,n,o) {
		return function(p) {
			return f(a,b,c,d,e,f0,g,h,i,j,k,l,m,n,o,p);
		};
	};
};
var thx_Functions17 = function() { };
$hxClasses["thx.Functions17"] = thx_Functions17;
thx_Functions17.__name__ = "thx.Functions17";
thx_Functions17.curry = function(f) {
	return function(a,b,c,d,e,f0,g,h,i,j,k,l,m,n,o,p) {
		return function(q) {
			return f(a,b,c,d,e,f0,g,h,i,j,k,l,m,n,o,p,q);
		};
	};
};
var thx_Functions18 = function() { };
$hxClasses["thx.Functions18"] = thx_Functions18;
thx_Functions18.__name__ = "thx.Functions18";
thx_Functions18.curry = function(f) {
	return function(a,b,c,d,e,f0,g,h,i,j,k,l,m,n,o,p,q) {
		return function(r) {
			return f(a,b,c,d,e,f0,g,h,i,j,k,l,m,n,o,p,q,r);
		};
	};
};
var thx_Functions19 = function() { };
$hxClasses["thx.Functions19"] = thx_Functions19;
thx_Functions19.__name__ = "thx.Functions19";
thx_Functions19.curry = function(f) {
	return function(a,b,c,d,e,f0,g,h,i,j,k,l,m,n,o,p,q,r) {
		return function(s) {
			return f(a,b,c,d,e,f0,g,h,i,j,k,l,m,n,o,p,q,r,s);
		};
	};
};
var thx_Functions20 = function() { };
$hxClasses["thx.Functions20"] = thx_Functions20;
thx_Functions20.__name__ = "thx.Functions20";
thx_Functions20.curry = function(f) {
	return function(a,b,c,d,e,f0,g,h,i,j,k,l,m,n,o,p,q,r,s) {
		return function(t) {
			return f(a,b,c,d,e,f0,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
		};
	};
};
var thx_Reader = {};
thx_Reader.flatMap = function(this1,f) {
	return function(a) {
		return (f(this1(a)))(a);
	};
};
var thx_Functions = function() { };
$hxClasses["thx.Functions"] = thx_Functions;
thx_Functions.__name__ = "thx.Functions";
thx_Functions.equality = function(a,b) {
	return a == b;
};
thx_Functions.identity = function(value) {
	return value;
};
thx_Functions.noop = function() {
};
thx_Functions.passTo = function(a,f) {
	return f(a);
};
thx_Functions.applyTo = function(f,a) {
	return f(a);
};
var thx_Int64s = function() { };
$hxClasses["thx.Int64s"] = thx_Int64s;
thx_Int64s.__name__ = "thx.Int64s";
thx_Int64s.abs = function(value) {
	var this1 = new haxe__$Int64__$_$_$Int64(0,0);
	if(thx_Int64s.compare(value,this1) > 0) {
		return value;
	} else {
		var high = ~value.high;
		var low = ~value.low + 1 | 0;
		if(low == 0) {
			var ret = high++;
			high = high | 0;
		}
		var this1 = new haxe__$Int64__$_$_$Int64(high,low);
		return this1;
	}
};
thx_Int64s.compare = function(a,b) {
	var v = a.high - b.high | 0;
	if(v == 0) {
		v = haxe_Int32.ucompare(a.low,b.low);
	}
	if(a.high < 0) {
		if(b.high < 0) {
			return v;
		} else {
			return -1;
		}
	} else if(b.high >= 0) {
		return v;
	} else {
		return 1;
	}
};
thx_Int64s.parse = function(s) {
	var sIsNegative = false;
	var this1 = new haxe__$Int64__$_$_$Int64(0,1);
	var multiplier = this1;
	var this1 = new haxe__$Int64__$_$_$Int64(0,0);
	var current = this1;
	if(s.charAt(0) == "-") {
		sIsNegative = true;
		s = s.substring(1,s.length);
	}
	var len = s.length;
	var _g = 0;
	var _g1 = len;
	while(_g < _g1) {
		var i = _g++;
		var digitInt = HxOverrides.cca(s,len - 1 - i) - 48;
		if(digitInt < 0 || digitInt > 9) {
			throw new thx_Error("String should only contain digits (and an optional - sign)",null,{ fileName : "thx/Int64s.hx", lineNumber : 65, className : "thx.Int64s", methodName : "parse"});
		}
		var digit_high = digitInt >> 31;
		var digit_low = digitInt;
		if(sIsNegative) {
			var mask = 65535;
			var al = multiplier.low & mask;
			var ah = multiplier.low >>> 16;
			var bl = digit_low & mask;
			var bh = digit_low >>> 16;
			var p00 = haxe_Int32._mul(al,bl);
			var p10 = haxe_Int32._mul(ah,bl);
			var p01 = haxe_Int32._mul(al,bh);
			var p11 = haxe_Int32._mul(ah,bh);
			var low = p00;
			var high = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
			p01 <<= 16;
			low = low + p01 | 0;
			if(haxe_Int32.ucompare(low,p01) < 0) {
				var ret = high++;
				high = high | 0;
			}
			p10 <<= 16;
			low = low + p10 | 0;
			if(haxe_Int32.ucompare(low,p10) < 0) {
				var ret1 = high++;
				high = high | 0;
			}
			high = high + (haxe_Int32._mul(multiplier.low,digit_high) + haxe_Int32._mul(multiplier.high,digit_low) | 0) | 0;
			var b_high = high;
			var b_low = low;
			var high1 = current.high - b_high | 0;
			var low1 = current.low - b_low | 0;
			if(haxe_Int32.ucompare(current.low,b_low) < 0) {
				var ret2 = high1--;
				high1 = high1 | 0;
			}
			var this1 = new haxe__$Int64__$_$_$Int64(high1,low1);
			current = this1;
			if(!(current.high < 0)) {
				throw new thx_Error("Int64 parsing error: Underflow",null,{ fileName : "thx/Int64s.hx", lineNumber : 71, className : "thx.Int64s", methodName : "parse"});
			}
		} else {
			var mask1 = 65535;
			var al1 = multiplier.low & mask1;
			var ah1 = multiplier.low >>> 16;
			var bl1 = digit_low & mask1;
			var bh1 = digit_low >>> 16;
			var p001 = haxe_Int32._mul(al1,bl1);
			var p101 = haxe_Int32._mul(ah1,bl1);
			var p011 = haxe_Int32._mul(al1,bh1);
			var p111 = haxe_Int32._mul(ah1,bh1);
			var low2 = p001;
			var high2 = (p111 + (p011 >>> 16) | 0) + (p101 >>> 16) | 0;
			p011 <<= 16;
			low2 = low2 + p011 | 0;
			if(haxe_Int32.ucompare(low2,p011) < 0) {
				var ret3 = high2++;
				high2 = high2 | 0;
			}
			p101 <<= 16;
			low2 = low2 + p101 | 0;
			if(haxe_Int32.ucompare(low2,p101) < 0) {
				var ret4 = high2++;
				high2 = high2 | 0;
			}
			high2 = high2 + (haxe_Int32._mul(multiplier.low,digit_high) + haxe_Int32._mul(multiplier.high,digit_low) | 0) | 0;
			var b_high1 = high2;
			var b_low1 = low2;
			var high3 = current.high + b_high1 | 0;
			var low3 = current.low + b_low1 | 0;
			if(haxe_Int32.ucompare(low3,current.low) < 0) {
				var ret5 = high3++;
				high3 = high3 | 0;
			}
			var this2 = new haxe__$Int64__$_$_$Int64(high3,low3);
			current = this2;
			if(current.high < 0) {
				throw new thx_Error("Int64 parsing error: Overflow",null,{ fileName : "thx/Int64s.hx", lineNumber : 75, className : "thx.Int64s", methodName : "parse"});
			}
		}
		var b = thx_Int64s.ten;
		var mask2 = 65535;
		var al2 = multiplier.low & mask2;
		var ah2 = multiplier.low >>> 16;
		var bl2 = b.low & mask2;
		var bh2 = b.low >>> 16;
		var p002 = haxe_Int32._mul(al2,bl2);
		var p102 = haxe_Int32._mul(ah2,bl2);
		var p012 = haxe_Int32._mul(al2,bh2);
		var p112 = haxe_Int32._mul(ah2,bh2);
		var low4 = p002;
		var high4 = (p112 + (p012 >>> 16) | 0) + (p102 >>> 16) | 0;
		p012 <<= 16;
		low4 = low4 + p012 | 0;
		if(haxe_Int32.ucompare(low4,p012) < 0) {
			var ret6 = high4++;
			high4 = high4 | 0;
		}
		p102 <<= 16;
		low4 = low4 + p102 | 0;
		if(haxe_Int32.ucompare(low4,p102) < 0) {
			var ret7 = high4++;
			high4 = high4 | 0;
		}
		high4 = high4 + (haxe_Int32._mul(multiplier.low,b.high) + haxe_Int32._mul(multiplier.high,b.low) | 0) | 0;
		var this3 = new haxe__$Int64__$_$_$Int64(high4,low4);
		multiplier = this3;
	}
	return current;
};
thx_Int64s.toInt64 = function(s) {
	return thx_Int64s.parse(s);
};
thx_Int64s.divRound = function(num,div) {
	var b_high = 0;
	var b_low = 0;
	if(num.high == b_high && num.low == b_low) {
		return thx_Int64s.zero;
	}
	var b_high = 0;
	var b_low = 0;
	if(div.high == b_high && div.low == b_low) {
		throw new thx_Error("Int64s.divRound division by zero",null,{ fileName : "thx/Int64s.hx", lineNumber : 92, className : "thx.Int64s", methodName : "divRound"});
	}
	if(num.high < 0 == div.high < 0) {
		var b = haxe_Int64.divMod(div,thx_Int64s.two).quotient;
		var high = num.high + b.high | 0;
		var low = num.low + b.low | 0;
		if(haxe_Int32.ucompare(low,num.low) < 0) {
			var ret = high++;
			high = high | 0;
		}
		var this1 = new haxe__$Int64__$_$_$Int64(high,low);
		return haxe_Int64.divMod(this1,div).quotient;
	} else if(div.high < 0) {
		var high = ~num.high;
		var low = ~num.low + 1 | 0;
		if(low == 0) {
			var ret = high++;
			high = high | 0;
		}
		var a_high = high;
		var a_low = low;
		var b = thx_Int64s.one;
		var high = a_high + b.high | 0;
		var low = a_low + b.low | 0;
		if(haxe_Int32.ucompare(low,a_low) < 0) {
			var ret = high++;
			high = high | 0;
		}
		var a_high = high;
		var a_low = low;
		var b = haxe_Int64.divMod(div,thx_Int64s.two).quotient;
		var high = a_high + b.high | 0;
		var low = a_low + b.low | 0;
		if(haxe_Int32.ucompare(low,a_low) < 0) {
			var ret = high++;
			high = high | 0;
		}
		var this1 = new haxe__$Int64__$_$_$Int64(high,low);
		var high = ~div.high;
		var low = ~div.low + 1 | 0;
		if(low == 0) {
			var ret = high++;
			high = high | 0;
		}
		var this2 = new haxe__$Int64__$_$_$Int64(high,low);
		return haxe_Int64.divMod(this1,this2).quotient;
	} else {
		var b = thx_Int64s.one;
		var high = num.high + b.high | 0;
		var low = num.low + b.low | 0;
		if(haxe_Int32.ucompare(low,num.low) < 0) {
			var ret = high++;
			high = high | 0;
		}
		var a_high = high;
		var a_low = low;
		var b = haxe_Int64.divMod(div,thx_Int64s.two).quotient;
		var high = a_high - b.high | 0;
		var low = a_low - b.low | 0;
		if(haxe_Int32.ucompare(a_low,b.low) < 0) {
			var ret = high--;
			high = high | 0;
		}
		var this1 = new haxe__$Int64__$_$_$Int64(high,low);
		return haxe_Int64.divMod(this1,div).quotient;
	}
};
thx_Int64s.divFloor = function(num,div) {
	var b_high = 0;
	var b_low = 0;
	if(num.high == b_high && num.low == b_low) {
		return thx_Int64s.zero;
	}
	var b_high = 0;
	var b_low = 0;
	if(div.high == b_high && div.low == b_low) {
		throw new thx_Error("Int64s.divFloor division by zero",null,{ fileName : "thx/Int64s.hx", lineNumber : 106, className : "thx.Int64s", methodName : "divFloor"});
	}
	var a = haxe_Int64.divMod(num,div).quotient;
	var x = num.high < 0 != div.high < 0 ? 1 : 0;
	var b_high = x >> 31;
	var b_low = x;
	var high = a.high - b_high | 0;
	var low = a.low - b_low | 0;
	if(haxe_Int32.ucompare(a.low,b_low) < 0) {
		var ret = high--;
		high = high | 0;
	}
	var this1 = new haxe__$Int64__$_$_$Int64(high,low);
	return this1;
};
thx_Int64s.divCeil = function(num,div) {
	var b_high = 0;
	var b_low = 0;
	if(num.high == b_high && num.low == b_low) {
		return thx_Int64s.zero;
	}
	var b_high = 0;
	var b_low = 0;
	if(div.high == b_high && div.low == b_low) {
		throw new thx_Error("Int64s.divCeil division by zero",null,{ fileName : "thx/Int64s.hx", lineNumber : 114, className : "thx.Int64s", methodName : "divCeil"});
	}
	var r = haxe_Int64.divMod(num,div);
	var q = r.quotient;
	var m = r.modulus;
	var tmp;
	if(num.high < 0 == div.high < 0) {
		var b_high = 0;
		var b_low = 0;
		tmp = !(m.high == b_high && m.low == b_low);
	} else {
		tmp = false;
	}
	if(tmp) {
		var b = thx_Int64s.one;
		var high = q.high + b.high | 0;
		var low = q.low + b.low | 0;
		if(haxe_Int32.ucompare(low,q.low) < 0) {
			var ret = high++;
			high = high | 0;
		}
		var this1 = new haxe__$Int64__$_$_$Int64(high,low);
		return this1;
	} else {
		return q;
	}
};
thx_Int64s.toFloat = function(i) {
	var isNegative = false;
	var b_high = 0;
	var b_low = 0;
	var v = i.high - b_high | 0;
	if(v == 0) {
		v = haxe_Int32.ucompare(i.low,b_low);
	}
	if((i.high < 0 ? b_high < 0 ? v : -1 : b_high >= 0 ? v : 1) < 0) {
		var b = thx_Int64s.min;
		var v = i.high - b.high | 0;
		if(v == 0) {
			v = haxe_Int32.ucompare(i.low,b.low);
		}
		if((i.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) < 0) {
			return -9223372036854775808.0;
		}
		isNegative = true;
		var high = ~i.high;
		var low = ~i.low + 1 | 0;
		if(low == 0) {
			var ret = high++;
			high = high | 0;
		}
		var this1 = new haxe__$Int64__$_$_$Int64(high,low);
		i = this1;
	}
	var multiplier = 1.0;
	var ret = 0.0;
	var _g = 0;
	while(_g < 64) {
		var _ = _g++;
		var b = thx_Int64s.one;
		var a_high = i.high & b.high;
		var a_low = i.low & b.low;
		var b1 = thx_Int64s.zero;
		if(a_high != b1.high || a_low != b1.low) {
			ret += multiplier;
		}
		multiplier *= 2.0;
		var b2 = 1;
		b2 &= 63;
		if(b2 == 0) {
			var this1 = new haxe__$Int64__$_$_$Int64(i.high,i.low);
			i = this1;
		} else if(b2 < 32) {
			var this2 = new haxe__$Int64__$_$_$Int64(i.high >> b2,i.high << 32 - b2 | i.low >>> b2);
			i = this2;
		} else {
			var this3 = new haxe__$Int64__$_$_$Int64(i.high >> 31,i.high >> b2 - 32);
			i = this3;
		}
	}
	return (isNegative ? -1 : 1) * ret;
};
thx_Int64s.fromFloat = function(f) {
	if(isNaN(f) || !isFinite(f)) {
		throw new thx_Error("Conversion to Int64 failed. Number is NaN or Infinite",null,{ fileName : "thx/Int64s.hx", lineNumber : 153, className : "thx.Int64s", methodName : "fromFloat"});
	}
	var noFractions = f - f % 1;
	if(noFractions > 9007199254740991.0) {
		throw new thx_Error("Conversion to Int64 failed. Conversion overflow",null,{ fileName : "thx/Int64s.hx", lineNumber : 159, className : "thx.Int64s", methodName : "fromFloat"});
	}
	if(noFractions < -9007199254740991.0) {
		throw new thx_Error("Conversion to Int64 failed. Conversion underflow",null,{ fileName : "thx/Int64s.hx", lineNumber : 161, className : "thx.Int64s", methodName : "fromFloat"});
	}
	var result = thx_Int64s.zero;
	var neg = noFractions < 0.0;
	var rest = neg ? -noFractions : noFractions;
	var i = 0;
	var curr;
	while(rest >= 1) {
		curr = rest % 2;
		rest /= 2;
		if(curr >= 1) {
			var a_high = 0;
			var a_low = 1;
			var b = i;
			b &= 63;
			var b1;
			if(b == 0) {
				var this1 = new haxe__$Int64__$_$_$Int64(a_high,a_low);
				b1 = this1;
			} else if(b < 32) {
				var this2 = new haxe__$Int64__$_$_$Int64(a_high << b | a_low >>> 32 - b,a_low << b);
				b1 = this2;
			} else {
				var this3 = new haxe__$Int64__$_$_$Int64(a_low << b - 32,0);
				b1 = this3;
			}
			var high = result.high + b1.high | 0;
			var low = result.low + b1.low | 0;
			if(haxe_Int32.ucompare(low,result.low) < 0) {
				var ret = high++;
				high = high | 0;
			}
			var this4 = new haxe__$Int64__$_$_$Int64(high,low);
			result = this4;
		}
		++i;
	}
	if(neg) {
		var high = ~result.high;
		var low = ~result.low + 1 | 0;
		if(low == 0) {
			var ret = high++;
			high = high | 0;
		}
		var this1 = new haxe__$Int64__$_$_$Int64(high,low);
		return this1;
	} else {
		return result;
	}
};
var thx_Ints = function() { };
$hxClasses["thx.Ints"] = thx_Ints;
thx_Ints.__name__ = "thx.Ints";
thx_Ints.abs = function(v) {
	if(v < 0) {
		return -v;
	} else {
		return v;
	}
};
thx_Ints.canParse = function(s) {
	return thx_Ints.pattern_parse.match(s);
};
thx_Ints.clamp = function(v,min,max) {
	if(v < min) {
		return min;
	} else if(v > max) {
		return max;
	} else {
		return v;
	}
};
thx_Ints.clampSym = function(v,max) {
	var min = -max;
	if(v < min) {
		return min;
	} else if(v > max) {
		return max;
	} else {
		return v;
	}
};
thx_Ints.compare = function(a,b) {
	return a - b;
};
thx_Ints.gcd = function(m,n) {
	if(m < 0) {
		m = -m;
	}
	if(n < 0) {
		n = -n;
	}
	var t;
	while(true) {
		if(n == 0) {
			return m;
		}
		t = m;
		m = n;
		n = t % m;
	}
};
thx_Ints.interpolate = function(f,a,b) {
	return Math.round(a + (b - a) * f);
};
thx_Ints.isEven = function(v) {
	return v % 2 == 0;
};
thx_Ints.isOdd = function(v) {
	return v % 2 != 0;
};
thx_Ints.lpad = function(v,pad,len) {
	if(pad == null) {
		pad = "0";
	}
	var neg = false;
	if(v < 0) {
		neg = true;
		v = -v;
	}
	return (neg ? "-" : "") + StringTools.lpad("" + v,pad,len);
};
thx_Ints.lcm = function(m,n) {
	if(m < 0) {
		m = -m;
	}
	if(n < 0) {
		n = -n;
	}
	if(n == 0) {
		return m;
	}
	return m * (n / thx_Ints.gcd(m,n) | 0);
};
thx_Ints.rpad = function(v,pad,len) {
	if(pad == null) {
		pad = "0";
	}
	return StringTools.rpad("" + v,pad,len);
};
thx_Ints.max = function(a,b) {
	if(a > b) {
		return a;
	} else {
		return b;
	}
};
thx_Ints.min = function(a,b) {
	if(a < b) {
		return a;
	} else {
		return b;
	}
};
thx_Ints.parse = function(s,base) {
	if(null == base) {
		if(s.substring(0,2) == "0x") {
			base = 16;
		} else {
			base = 10;
		}
	}
	var v = parseInt(s,base);
	if(isNaN(v)) {
		return null;
	} else {
		return v;
	}
};
thx_Ints.random = function(min,max) {
	if(min == null) {
		min = 0;
	}
	return Std.random(max - min + 1) + min;
};
thx_Ints.range = function(start,stop,step) {
	if(step == null) {
		step = 1;
	}
	if(null == stop) {
		stop = start;
		start = 0;
	}
	if((stop - start) / step == Infinity) {
		throw haxe_Exception.thrown("infinite range");
	}
	var range = [];
	var i = -1;
	var j;
	if(step < 0) {
		while(true) {
			j = start + step * ++i;
			if(!(j > stop)) {
				break;
			}
			range.push(j);
		}
	} else {
		while(true) {
			j = start + step * ++i;
			if(!(j < stop)) {
				break;
			}
			range.push(j);
		}
	}
	return range;
};
thx_Ints.rangeIter = function(start,stop,step) {
	if(step == null) {
		step = 1;
	}
	return new thx_RangeIterator(start,stop,step);
};
thx_Ints.toString = function(value,base) {
	return value.toString(base);
};
thx_Ints.toBase = function(value,base) {
	return value.toString(base);
};
thx_Ints.toBool = function(v) {
	return v != 0;
};
thx_Ints.toInt = function(s,base) {
	return thx_Ints.parse(s,base);
};
thx_Ints.sign = function(value) {
	if(value < 0) {
		return -1;
	} else {
		return 1;
	}
};
thx_Ints.wrapCircular = function(v,max) {
	v %= max;
	if(v < 0) {
		v += max;
	}
	return v;
};
var thx_RangeIterator = function(start,stop,step) {
	if(step == null) {
		step = 1;
	}
	this.current = start;
	this.stop = stop;
	this.step = step;
};
$hxClasses["thx.RangeIterator"] = thx_RangeIterator;
thx_RangeIterator.__name__ = "thx.RangeIterator";
thx_RangeIterator.prototype = {
	current: null
	,stop: null
	,step: null
	,hasNext: function() {
		if(!(this.stop == null || this.step >= 0 && this.current < this.stop)) {
			if(this.step < 0) {
				return this.current > this.stop;
			} else {
				return false;
			}
		} else {
			return true;
		}
	}
	,next: function() {
		var result = this.current;
		this.current += this.step;
		return result;
	}
	,__class__: thx_RangeIterator
};
var thx_Iterables = function() { };
$hxClasses["thx.Iterables"] = thx_Iterables;
thx_Iterables.__name__ = "thx.Iterables";
thx_Iterables.all = function(it,predicate) {
	return thx_Iterators.all($getIterator(it),predicate);
};
thx_Iterables.any = function(it,predicate) {
	return thx_Iterators.any($getIterator(it),predicate);
};
thx_Iterables.eachPair = function(it,handler) {
	thx_Iterators.eachPair($getIterator(it),handler);
};
thx_Iterables.equals = function(a,b,equality) {
	return thx_Iterators.equals($getIterator(a),$getIterator(b),equality);
};
thx_Iterables.filter = function(it,predicate) {
	return thx_Iterators.filter($getIterator(it),predicate);
};
thx_Iterables.find = function(it,predicate) {
	return thx_Iterators.find($getIterator(it),predicate);
};
thx_Iterables.findOption = function(it,predicate) {
	var value = thx_Iterators.find($getIterator(it),predicate);
	if(null == value) {
		return haxe_ds_Option.None;
	} else {
		return haxe_ds_Option.Some(value);
	}
};
thx_Iterables.first = function(it) {
	return thx_Iterators.first($getIterator(it));
};
thx_Iterables.get = function(it,index) {
	return thx_Iterators.get($getIterator(it),index);
};
thx_Iterables.getOption = function(it,index) {
	var value = thx_Iterators.get($getIterator(it),index);
	if(null == value) {
		return haxe_ds_Option.None;
	} else {
		return haxe_ds_Option.Some(value);
	}
};
thx_Iterables.last = function(it) {
	return thx_Iterators.last($getIterator(it));
};
thx_Iterables.hasElements = function(it) {
	return $getIterator(it).hasNext();
};
thx_Iterables.indexOf = function(it,element) {
	return thx_Iterators.indexOf($getIterator(it),element);
};
thx_Iterables.isEmpty = function(it) {
	return !$getIterator(it).hasNext();
};
thx_Iterables.isIterable = function(v) {
	var fields = Reflect.isObject(v) && null == js_Boot.getClass(v) ? Reflect.fields(v) : Type.getInstanceFields(js_Boot.getClass(v));
	if(!Lambda.has(fields,"iterator")) {
		return false;
	}
	return Reflect.isFunction(Reflect.field(v,"iterator"));
};
thx_Iterables.map = function(it,f) {
	return thx_Iterators.map($getIterator(it),f);
};
thx_Iterables.fmap = function(it,f) {
	return { iterator : function() {
		return thx_Iterators.fmap($getIterator(it),f);
	}};
};
thx_Iterables.mapi = function(it,f) {
	return thx_Iterators.mapi($getIterator(it),f);
};
thx_Iterables.fmapi = function(it,f) {
	return { iterator : function() {
		return thx_Iterators.fmapi($getIterator(it),f);
	}};
};
thx_Iterables.order = function(it,sort) {
	return thx_Iterators.order($getIterator(it),sort);
};
thx_Iterables.reduce = function(it,callback,initial) {
	return thx_Iterators.reduce($getIterator(it),callback,initial);
};
thx_Iterables.reducei = function(it,callback,initial) {
	return thx_Iterators.reducei($getIterator(it),callback,initial);
};
thx_Iterables.toArray = function(it) {
	return thx_Iterators.toArray($getIterator(it));
};
thx_Iterables.minBy = function(it,f,ord) {
	var found = haxe_ds_Option.None;
	var a = $getIterator(it);
	while(a.hasNext()) {
		var a1 = [a.next()];
		if(!thx_Options.any(found,(function(a) {
			return function(a0) {
				return ord(f(a0),f(a[0])) == thx_OrderingImpl.LT;
			};
		})(a1))) {
			found = haxe_ds_Option.Some(a1[0]);
		}
	}
	return found;
};
thx_Iterables.maxBy = function(it,f,ord) {
	return thx_Iterables.minBy(it,f,thx_Ord.inverse(ord));
};
thx_Iterables.min = function(it,ord) {
	return thx_Iterables.minBy(it,thx_Functions.identity,ord);
};
thx_Iterables.max = function(it,ord) {
	return thx_Iterables.minBy(it,thx_Functions.identity,thx_Ord.inverse(ord));
};
thx_Iterables.extremaBy = function(it,f,ord) {
	var found = haxe_ds_Option.None;
	var a = $getIterator(it);
	while(a.hasNext()) {
		var a1 = a.next();
		switch(found._hx_index) {
		case 0:
			var _g = found.v;
			var t = _g;
			if(ord(f(a1),f(t._0)) == thx_OrderingImpl.LT) {
				var this1 = { _0 : a1, _1 : t._1};
				found = haxe_ds_Option.Some(this1);
			} else {
				var t1 = _g;
				if(ord(f(a1),f(t1._1)) == thx_OrderingImpl.GT) {
					var this2 = { _0 : t1._0, _1 : a1};
					found = haxe_ds_Option.Some(this2);
				}
			}
			break;
		case 1:
			var this3 = { _0 : a1, _1 : a1};
			found = haxe_ds_Option.Some(this3);
			break;
		default:
		}
	}
	return found;
};
thx_Iterables.extrema = function(it,ord) {
	return thx_Iterables.extremaBy(it,thx_Functions.identity,ord);
};
thx_Iterables.takeUntil = function(it,fn) {
	return thx_Iterators.takeUntil($getIterator(it),fn);
};
thx_Iterables.dropLeft = function(itr,n) {
	return { iterator : function() {
		var itr1 = $getIterator(itr);
		var count = n;
		while(count > 0) if(itr1.hasNext()) {
			itr1.next();
		}
		return { next : $bind(itr1,itr1.next), hasNext : $bind(itr1,itr1.hasNext)};
	}};
};
thx_Iterables.dropUntil = function(it,fn) {
	return thx_Iterators.dropUntil($getIterator(it),fn);
};
thx_Iterables.unionBy = function(a,b,eq) {
	var res = [];
	var e = $getIterator(a);
	while(e.hasNext()) {
		var e1 = e.next();
		res.push(e1);
	}
	var e = $getIterator(b);
	while(e.hasNext()) {
		var e1 = [e.next()];
		if(!thx_Iterables.any(res,(function(e) {
			return function(x) {
				return eq(x,e[0]);
			};
		})(e1))) {
			res.push(e1[0]);
		}
	}
	return res;
};
thx_Iterables.differenceBy = function(a,b,eq) {
	var res = [];
	var e = $getIterator(a);
	while(e.hasNext()) {
		var e1 = [e.next()];
		if(!thx_Iterables.any(b,(function(e) {
			return function(x) {
				return eq(x,e[0]);
			};
		})(e1))) {
			res.push(e1[0]);
		}
	}
	return res;
};
thx_Iterables.unzip = function(it) {
	return thx_Iterators.unzip($getIterator(it));
};
thx_Iterables.unzip3 = function(it) {
	return thx_Iterators.unzip3($getIterator(it));
};
thx_Iterables.unzip4 = function(it) {
	return thx_Iterators.unzip4($getIterator(it));
};
thx_Iterables.unzip5 = function(it) {
	return thx_Iterators.unzip5($getIterator(it));
};
thx_Iterables.zip = function(it1,it2) {
	return thx_Iterators.zip($getIterator(it1),$getIterator(it2));
};
thx_Iterables.zip3 = function(it1,it2,it3) {
	return thx_Iterators.zip3($getIterator(it1),$getIterator(it2),$getIterator(it3));
};
thx_Iterables.zip4 = function(it1,it2,it3,it4) {
	return thx_Iterators.zip4($getIterator(it1),$getIterator(it2),$getIterator(it3),$getIterator(it4));
};
thx_Iterables.zip5 = function(it1,it2,it3,it4,it5) {
	return thx_Iterators.zip5($getIterator(it1),$getIterator(it2),$getIterator(it3),$getIterator(it4),$getIterator(it5));
};
var thx_Iterators = function() { };
$hxClasses["thx.Iterators"] = thx_Iterators;
thx_Iterators.__name__ = "thx.Iterators";
thx_Iterators.all = function(it,predicate) {
	var element = it;
	while(element.hasNext()) {
		var element1 = element.next();
		if(!predicate(element1)) {
			return false;
		}
	}
	return true;
};
thx_Iterators.any = function(it,predicate) {
	var element = it;
	while(element.hasNext()) {
		var element1 = element.next();
		if(predicate(element1)) {
			return true;
		}
	}
	return false;
};
thx_Iterators.equals = function(a,b,equality) {
	if(null == equality) {
		equality = thx_Functions.equality;
	}
	var ae;
	var be;
	var an;
	var bn;
	while(true) {
		an = a.hasNext();
		bn = b.hasNext();
		if(!an && !bn) {
			return true;
		}
		if(!an || !bn) {
			return false;
		}
		if(!equality(a.next(),b.next())) {
			return false;
		}
	}
};
thx_Iterators.get = function(it,index) {
	var pos = 0;
	var i = it;
	while(i.hasNext()) {
		var i1 = i.next();
		if(pos++ == index) {
			return i1;
		}
	}
	return null;
};
thx_Iterators.getOption = function(it,index) {
	var value = thx_Iterators.get(it,index);
	if(null == value) {
		return haxe_ds_Option.None;
	} else {
		return haxe_ds_Option.Some(value);
	}
};
thx_Iterators.eachPair = function(it,handler) {
	thx_Arrays.eachPair(thx_Iterators.toArray(it),handler);
};
thx_Iterators.filter = function(it,predicate) {
	return thx_Iterators.reduce(it,function(acc,element) {
		if(predicate(element)) {
			acc.push(element);
		}
		return acc;
	},[]);
};
thx_Iterators.find = function(it,f) {
	var element = it;
	while(element.hasNext()) {
		var element1 = element.next();
		if(f(element1)) {
			return element1;
		}
	}
	return null;
};
thx_Iterators.findOption = function(it,f) {
	var value = thx_Iterators.find(it,f);
	if(null == value) {
		return haxe_ds_Option.None;
	} else {
		return haxe_ds_Option.Some(value);
	}
};
thx_Iterators.first = function(it) {
	if(it.hasNext()) {
		return it.next();
	} else {
		return null;
	}
};
thx_Iterators.hasElements = function(it) {
	return it.hasNext();
};
thx_Iterators.indexOf = function(it,element) {
	var pos = 0;
	var v = it;
	while(v.hasNext()) {
		var v1 = v.next();
		if(element == v1) {
			return pos;
		}
		++pos;
	}
	return -1;
};
thx_Iterators.isEmpty = function(it) {
	return !it.hasNext();
};
thx_Iterators.isIterator = function(v) {
	var fields = Reflect.isObject(v) && null == js_Boot.getClass(v) ? Reflect.fields(v) : Type.getInstanceFields(js_Boot.getClass(v));
	if(!Lambda.has(fields,"next") || !Lambda.has(fields,"hasNext")) {
		return false;
	}
	if(Reflect.isFunction(Reflect.field(v,"next"))) {
		return Reflect.isFunction(Reflect.field(v,"hasNext"));
	} else {
		return false;
	}
};
thx_Iterators.last = function(it) {
	var buf = null;
	while(it.hasNext()) buf = it.next();
	return buf;
};
thx_Iterators.forEach = function(it,proc) {
	while(it.hasNext()) proc(it.next());
};
thx_Iterators.map = function(it,f) {
	var acc = [];
	var v = it;
	while(v.hasNext()) {
		var v1 = v.next();
		acc.push(f(v1));
	}
	return acc;
};
thx_Iterators.fmap = function(it,f) {
	return new thx_MapIterator(it,f);
};
thx_Iterators.mapi = function(it,f) {
	var acc = [];
	var i = 0;
	var v = it;
	while(v.hasNext()) {
		var v1 = v.next();
		acc.push(f(v1,i++));
	}
	return acc;
};
thx_Iterators.fmapi = function(it,f) {
	return new thx_MapIIterator(it,f);
};
thx_Iterators.order = function(it,sort) {
	var n = thx_Iterators.toArray(it);
	n.sort(sort);
	return n;
};
thx_Iterators.reduce = function(it,callback,initial) {
	var result = initial;
	while(it.hasNext()) result = callback(result,it.next());
	return result;
};
thx_Iterators.reducei = function(it,callback,initial) {
	thx_Iterators.mapi(it,function(v,i) {
		initial = callback(initial,v,i);
	});
	return initial;
};
thx_Iterators.foldLeft = function(it,zero,f) {
	return thx_Iterators.reduce(it,f,zero);
};
thx_Iterators.foldMap = function(it,f,m) {
	var _e = m;
	var tmp = function(a0,a1) {
		return thx_Monoid.append(_e,a0,a1);
	};
	return thx_Iterators.foldLeft(thx_Iterators.fmap(it,f),thx_Monoid.get_zero(m),tmp);
};
thx_Iterators.takeUntil = function(it,f) {
	var out = [];
	var v = it;
	while(v.hasNext()) {
		var v1 = v.next();
		if(f(v1)) {
			out.push(v1);
		} else {
			break;
		}
	}
	return out;
};
thx_Iterators.dropUntil = function(it,f) {
	var done = false;
	var out = [];
	var v = it;
	while(v.hasNext()) {
		var v1 = v.next();
		if(!done) {
			if(!f(v1)) {
				done = true;
				out.push(v1);
			}
		} else {
			out.push(v1);
		}
	}
	return out;
};
thx_Iterators.toArray = function(it) {
	var elements = [];
	var element = it;
	while(element.hasNext()) {
		var element1 = element.next();
		elements.push(element1);
	}
	return elements;
};
thx_Iterators.unzip = function(it) {
	var a1 = [];
	var a2 = [];
	thx_Iterators.forEach(it,function(t) {
		a1.push(t._0);
		a2.push(t._1);
	});
	var this1 = { _0 : a1, _1 : a2};
	return this1;
};
thx_Iterators.unzip3 = function(it) {
	var a1 = [];
	var a2 = [];
	var a3 = [];
	thx_Iterators.forEach(it,function(t) {
		a1.push(t._0);
		a2.push(t._1);
		a3.push(t._2);
	});
	var this1 = { _0 : a1, _1 : a2, _2 : a3};
	return this1;
};
thx_Iterators.unzip4 = function(it) {
	var a1 = [];
	var a2 = [];
	var a3 = [];
	var a4 = [];
	thx_Iterators.forEach(it,function(t) {
		a1.push(t._0);
		a2.push(t._1);
		a3.push(t._2);
		a4.push(t._3);
	});
	var this1 = { _0 : a1, _1 : a2, _2 : a3, _3 : a4};
	return this1;
};
thx_Iterators.unzip5 = function(it) {
	var a1 = [];
	var a2 = [];
	var a3 = [];
	var a4 = [];
	var a5 = [];
	thx_Iterators.forEach(it,function(t) {
		a1.push(t._0);
		a2.push(t._1);
		a3.push(t._2);
		a4.push(t._3);
		a5.push(t._4);
	});
	var this1 = { _0 : a1, _1 : a2, _2 : a3, _3 : a4, _4 : a5};
	return this1;
};
thx_Iterators.zip = function(it1,it2) {
	var array = [];
	while(it1.hasNext() && it2.hasNext()) {
		var this1 = { _0 : it1.next(), _1 : it2.next()};
		array.push(this1);
	}
	return array;
};
thx_Iterators.zip3 = function(it1,it2,it3) {
	var array = [];
	while(it1.hasNext() && it2.hasNext() && it3.hasNext()) {
		var this1 = { _0 : it1.next(), _1 : it2.next(), _2 : it3.next()};
		array.push(this1);
	}
	return array;
};
thx_Iterators.zip4 = function(it1,it2,it3,it4) {
	var array = [];
	while(it1.hasNext() && it2.hasNext() && it3.hasNext() && it4.hasNext()) {
		var this1 = { _0 : it1.next(), _1 : it2.next(), _2 : it3.next(), _3 : it4.next()};
		array.push(this1);
	}
	return array;
};
thx_Iterators.zip5 = function(it1,it2,it3,it4,it5) {
	var array = [];
	while(it1.hasNext() && it2.hasNext() && it3.hasNext() && it4.hasNext() && it5.hasNext()) {
		var this1 = { _0 : it1.next(), _1 : it2.next(), _2 : it3.next(), _3 : it4.next(), _4 : it5.next()};
		array.push(this1);
	}
	return array;
};
var thx_MapIterator = function(base,f) {
	this.base = base;
	this.f = f;
};
$hxClasses["thx.MapIterator"] = thx_MapIterator;
thx_MapIterator.__name__ = "thx.MapIterator";
thx_MapIterator.prototype = {
	base: null
	,f: null
	,next: function() {
		return this.f(this.base.next());
	}
	,hasNext: function() {
		return this.base.hasNext();
	}
	,__class__: thx_MapIterator
};
var thx_MapIIterator = function(base,f) {
	this.i = 0;
	this.base = base;
	this.f = f;
};
$hxClasses["thx.MapIIterator"] = thx_MapIIterator;
thx_MapIIterator.__name__ = "thx.MapIIterator";
thx_MapIIterator.prototype = {
	base: null
	,f: null
	,i: null
	,next: function() {
		var result = this.f(this.base.next(),this.i);
		this.i++;
		return result;
	}
	,hasNext: function() {
		return this.base.hasNext();
	}
	,__class__: thx_MapIIterator
};
var thx_Maps = function() { };
$hxClasses["thx.Maps"] = thx_Maps;
thx_Maps.__name__ = "thx.Maps";
thx_Maps.copyTo = function(src,dst) {
	var key = src.keys();
	while(key.hasNext()) {
		var key1 = key.next();
		dst.set(key1,src.get(key1));
	}
	return dst;
};
thx_Maps.tuples = function(map) {
	return thx_Iterators.map(map.keys(),function(key) {
		var this1 = { _0 : key, _1 : map.get(key)};
		return this1;
	});
};
thx_Maps.mapValues = function(map,f,acc) {
	return thx_Maps.reduce(map,function(m,t) {
		m.set(t._0,f(t._1));
		return m;
	},acc);
};
thx_Maps.reduce = function(map,f,acc) {
	return thx_Arrays.reduce(thx_Maps.tuples(map),f,acc);
};
thx_Maps.values = function(map) {
	return thx_Iterators.map(map.keys(),function(key) {
		return map.get(key);
	});
};
thx_Maps.fromArray = function(array,toKey,toVal) {
	return thx_Arrays.reduce(array,function(acc,curr) {
		var key = toKey(curr);
		var value = toVal(curr);
		acc.h[key] = value;
		return acc;
	},new haxe_ds_StringMap());
};
thx_Maps.foldLeftWithKeys = function(map,f,acc) {
	return thx_Iterators.reduce(map.keys(),function(acc,k) {
		return f(acc,k,map.get(k));
	},acc);
};
thx_Maps.getOption = function(map,key) {
	var value = map.get(key);
	if(null == value) {
		return haxe_ds_Option.None;
	} else {
		return haxe_ds_Option.Some(value);
	}
};
thx_Maps.toObject = function(map) {
	return thx_Arrays.reduce(thx_Maps.tuples(map),function(o,t) {
		o[t._0] = t._1;
		return o;
	},{ });
};
thx_Maps.getAlt = function(map,key,alt) {
	var v = map.get(key);
	if(null == v) {
		return alt;
	} else {
		return v;
	}
};
thx_Maps.getAltSet = function(map,key,alt) {
	var v = map.get(key);
	if(v != null) {
		return v;
	} else {
		map.set(key,alt);
		return alt;
	}
};
thx_Maps.isEmpty = function(map) {
	return !map.iterator().hasNext();
};
thx_Maps.isMap = function(v) {
	return js_Boot.__implements(v,haxe_IMap);
};
thx_Maps.string = function(m) {
	var _this = thx_Maps.tuples(m);
	var result = new Array(_this.length);
	var _g = 0;
	var _g1 = _this.length;
	while(_g < _g1) {
		var i = _g++;
		var t = _this[i];
		result[i] = thx_Dynamics.string(t._0) + " => " + thx_Dynamics.string(t._1);
	}
	return "[" + result.join(", ") + "]";
};
thx_Maps.merge = function(dest,sources) {
	return thx_Arrays.reduce(sources,function(result,source) {
		return thx_Iterators.reduce(source.keys(),function(result,key) {
			result.set(key,source.get(key));
			return result;
		},result);
	},dest);
};
var thx_Monoid = {};
thx_Monoid.__properties__ = {get_zero:"get_zero",get_semigroup:"get_semigroup"};
thx_Monoid.get_semigroup = function(this1) {
	return this1.append;
};
thx_Monoid.get_zero = function(this1) {
	return this1.zero;
};
thx_Monoid.append = function(this1,a0,a1) {
	return this1.append(a0,a1);
};
var thx_Nel = {};
thx_Nel.nel = function(hd,tl) {
	var _g = thx_Nel.fromArray(tl);
	switch(_g._hx_index) {
	case 0:
		var nel = _g.v;
		return thx_Nel.cons(hd,nel);
	case 1:
		return thx_Nel.pure(hd);
	}
};
thx_Nel.pure = function(a) {
	return thx_NonEmptyList.Single(a);
};
thx_Nel.cons = function(a,nl) {
	return thx_NonEmptyList.ConsNel(a,nl);
};
thx_Nel.fromArray = function(arr) {
	if(arr.length == 0) {
		return haxe_ds_Option.None;
	} else {
		var res = thx_NonEmptyList.Single(arr[arr.length - 1]);
		var i = thx_Ints.rangeIter(arr.length - 2,-1,-1);
		while(i.hasNext()) {
			var i1 = i.next();
			res = thx_NonEmptyList.ConsNel(arr[i1],res);
		}
		return haxe_ds_Option.Some(res);
	}
};
thx_Nel.map = function(this1,f) {
	var fb = f;
	return thx_Nel.flatMap(this1,function(v) {
		return thx_Nel.pure(fb(v));
	});
};
thx_Nel.flatMap = function(this1,f) {
	switch(this1._hx_index) {
	case 0:
		var x = this1.x;
		return f(x);
	case 1:
		var x = this1.x;
		var xs = this1.xs;
		return thx_Nel.append(f(x),thx_Nel.flatMap(xs,f));
	}
};
thx_Nel.fold = function(this1,f) {
	switch(this1._hx_index) {
	case 0:
		var x = this1.x;
		return x;
	case 1:
		var x = this1.x;
		var xs = this1.xs;
		return f(x,thx_Nel.fold(xs,f));
	}
};
thx_Nel.append = function(this1,nel) {
	switch(this1._hx_index) {
	case 0:
		var x = this1.x;
		return thx_NonEmptyList.ConsNel(x,nel);
	case 1:
		var x = this1.x;
		var xs = this1.xs;
		return thx_NonEmptyList.ConsNel(x,thx_Nel.append(xs,nel));
	}
};
thx_Nel.concat = function(this1,xs) {
	var _g = thx_Nel.fromArray(xs);
	switch(_g._hx_index) {
	case 0:
		var other = _g.v;
		return thx_Nel.append(this1,other);
	case 1:
		return this1;
	}
};
thx_Nel.head = function(this1) {
	switch(this1._hx_index) {
	case 0:
		var x = this1.x;
		return x;
	case 1:
		var x = this1.x;
		var xs = this1.xs;
		return x;
	}
};
thx_Nel.tail = function(this1) {
	switch(this1._hx_index) {
	case 0:
		var x = this1.x;
		return [];
	case 1:
		var x = this1.x;
		var xs = this1.xs;
		return thx_Nel.toArray(xs);
	}
};
thx_Nel.init = function(this1) {
	switch(this1._hx_index) {
	case 0:
		var x = this1.x;
		return [];
	case 1:
		var x = this1.x;
		var xs = this1.xs;
		return [x].concat(thx_Nel.init(xs));
	}
};
thx_Nel.last = function(this1) {
	switch(this1._hx_index) {
	case 0:
		var x = this1.x;
		return x;
	case 1:
		var x = this1.x;
		var xs = this1.xs;
		return thx_Nel.last(xs);
	}
};
thx_Nel.push = function(this1,a) {
	return thx_Nel.append(this1,thx_NonEmptyList.Single(a));
};
thx_Nel.pop = function(this1) {
	var this2 = { _0 : thx_Nel.last(this1), _1 : thx_Nel.init(this1)};
	return this2;
};
thx_Nel.unshift = function(this1,a) {
	return thx_NonEmptyList.ConsNel(a,this1);
};
thx_Nel.shift = function(this1) {
	var this2 = { _0 : thx_Nel.head(this1), _1 : thx_Nel.tail(this1)};
	return this2;
};
thx_Nel.toArray = function(this1) {
	var go = null;
	go = function(acc,xs) {
		switch(xs._hx_index) {
		case 0:
			var x = xs.x;
			return thx_Arrays.append(acc,x);
		case 1:
			var x = xs.x;
			var xs1 = xs.xs;
			return go(thx_Arrays.append(acc,x),xs1);
		}
	};
	return go([],this1);
};
thx_Nel.intersperse = function(this1,a) {
	switch(this1._hx_index) {
	case 0:
		var x = this1.x;
		return thx_NonEmptyList.Single(x);
	case 1:
		var x = this1.x;
		var xs = this1.xs;
		return thx_NonEmptyList.ConsNel(x,thx_NonEmptyList.ConsNel(a,thx_Nel.intersperse(xs,a)));
	}
};
thx_Nel.semigroup = function() {
	return function(nl,nr) {
		return thx_Nel.append(nl,nr);
	};
};
var thx_NonEmptyList = $hxEnums["thx.NonEmptyList"] = { __ename__:"thx.NonEmptyList",__constructs__:null
	,Single: ($_=function(x) { return {_hx_index:0,x:x,__enum__:"thx.NonEmptyList",toString:$estr}; },$_._hx_name="Single",$_.__params__ = ["x"],$_)
	,ConsNel: ($_=function(x,xs) { return {_hx_index:1,x:x,xs:xs,__enum__:"thx.NonEmptyList",toString:$estr}; },$_._hx_name="ConsNel",$_.__params__ = ["x","xs"],$_)
};
thx_NonEmptyList.__constructs__ = [thx_NonEmptyList.Single,thx_NonEmptyList.ConsNel];
var thx_Nil = $hxEnums["thx.Nil"] = { __ename__:"thx.Nil",__constructs__:null
	,nil: {_hx_name:"nil",_hx_index:0,__enum__:"thx.Nil",toString:$estr}
};
thx_Nil.__constructs__ = [thx_Nil.nil];
var thx_Objects = function() { };
$hxClasses["thx.Objects"] = thx_Objects;
thx_Objects.__name__ = "thx.Objects";
thx_Objects.compare = function(a,b) {
	var fields = Reflect.fields(a);
	var v = thx_Arrays.compare(fields,Reflect.fields(b));
	if(v != 0) {
		return v;
	}
	var _g = 0;
	while(_g < fields.length) {
		var field = fields[_g];
		++_g;
		v = thx_Dynamics.compare(Reflect.field(a,field),Reflect.field(b,field));
		if(v != 0) {
			return v;
		}
	}
	return 0;
};
thx_Objects.isEmpty = function(o) {
	return Reflect.fields(o).length == 0;
};
thx_Objects.exists = function(o,name) {
	return Object.prototype.hasOwnProperty.call(o,name);
};
thx_Objects.fields = function(o) {
	return Reflect.fields(o);
};
thx_Objects.deflate = function(o,flattenArrays) {
	if(flattenArrays == null) {
		flattenArrays = true;
	}
	var f = null;
	f = function(v) {
		if(((v) instanceof Array)) {
			if(flattenArrays) {
				if(v.length == 0) {
					return thx_Either.Left([]);
				} else {
					var a = v;
					return thx_Either.Right(thx_Arrays.reducei(a,function(map,value,i) {
						var _g = f(value);
						switch(_g._hx_index) {
						case 0:
							var v = _g.value;
							map.h["" + i] = v;
							break;
						case 1:
							var m = _g.value;
							var h = m.h;
							var k_h = h;
							var k_keys = Object.keys(h);
							var k_length = k_keys.length;
							var k_current = 0;
							while(k_current < k_length) {
								var k = k_keys[k_current++];
								map.h["" + i + "." + k] = m.h[k];
							}
							break;
						}
						return map;
					},new haxe_ds_StringMap()));
				}
			} else {
				return thx_Either.Left(v);
			}
		} else if(Reflect.isObject(v) && null == js_Boot.getClass(v)) {
			return thx_Either.Right(thx_Arrays.reduce(Reflect.fields(v),function(map,key) {
				var _g = f(Reflect.field(v,key));
				switch(_g._hx_index) {
				case 0:
					var v1 = _g.value;
					map.h["" + key] = v1;
					break;
				case 1:
					var m = _g.value;
					var h = m.h;
					var inlStringMapValueIterator_h = h;
					var inlStringMapValueIterator_keys = Object.keys(h);
					var inlStringMapValueIterator_length = inlStringMapValueIterator_keys.length;
					var inlStringMapValueIterator_current = 0;
					if(inlStringMapValueIterator_current >= inlStringMapValueIterator_length) {
						map.h["" + key] = { };
					} else {
						var h = m.h;
						var k_h = h;
						var k_keys = Object.keys(h);
						var k_length = k_keys.length;
						var k_current = 0;
						while(k_current < k_length) {
							var k = k_keys[k_current++];
							map.h["" + key + "." + k] = m.h[k];
						}
					}
					break;
				}
				return map;
			},new haxe_ds_StringMap()));
		} else {
			return thx_Either.Left(v);
		}
	};
	var _g = f(o);
	switch(_g._hx_index) {
	case 0:
		var v = _g.value;
		return v;
	case 1:
		var m = _g.value;
		return thx_Maps.toObject(m);
	}
};
thx_Objects.inflate = function(o) {
	return thx_Arrays.reduce(Reflect.fields(o),function(acc,field) {
		return thx_Objects.setPath(acc,field,Reflect.field(o,field));
	},{ });
};
thx_Objects.combine = function(first,second) {
	return thx_Objects.shallowCombine(first,second);
};
thx_Objects.shallowCombine = function(first,second) {
	var to = { };
	var _g = 0;
	var _g1 = Reflect.fields(first);
	while(_g < _g1.length) {
		var field = _g1[_g];
		++_g;
		to[field] = Reflect.field(first,field);
	}
	var _g = 0;
	var _g1 = Reflect.fields(second);
	while(_g < _g1.length) {
		var field = _g1[_g];
		++_g;
		to[field] = Reflect.field(second,field);
	}
	return to;
};
thx_Objects.deepCombine = function(first,second) {
	return thx_Objects.copyTo(second,first,true);
};
thx_Objects.assign = function(to,from,replacef) {
	if(null == replacef) {
		replacef = function(field,oldv,newv) {
			return newv;
		};
	}
	var _g = 0;
	var _g1 = Reflect.fields(from);
	while(_g < _g1.length) {
		var field = _g1[_g];
		++_g;
		var newv = Reflect.field(from,field);
		if(Object.prototype.hasOwnProperty.call(to,field)) {
			to[field] = replacef(field,Reflect.field(to,field),newv);
		} else {
			to[field] = newv;
		}
	}
	return to;
};
thx_Objects.copyTo = function(src,dst,cloneInstances) {
	if(cloneInstances == null) {
		cloneInstances = false;
	}
	var _g = 0;
	var _g1 = Reflect.fields(src);
	while(_g < _g1.length) {
		var field = _g1[_g];
		++_g;
		var sv = thx_Dynamics.clone(Reflect.field(src,field),cloneInstances);
		var dv = Reflect.field(dst,field);
		var tmp;
		var v = sv;
		if(Reflect.isObject(v) && null == js_Boot.getClass(v)) {
			var v1 = dv;
			tmp = Reflect.isObject(v1) && null == js_Boot.getClass(v1);
		} else {
			tmp = false;
		}
		if(tmp) {
			thx_Objects.copyTo(sv,dv);
		} else {
			dst[field] = sv;
		}
	}
	return dst;
};
thx_Objects.clone = function(src,cloneInstances) {
	if(cloneInstances == null) {
		cloneInstances = false;
	}
	return thx_Dynamics.clone(src,cloneInstances);
};
thx_Objects.toMap = function(o) {
	return thx_Arrays.reduce(thx_Objects.tuples(o),function(map,t) {
		map.h[t._0] = t._1;
		return map;
	},new haxe_ds_StringMap());
};
thx_Objects.size = function(o) {
	return Reflect.fields(o).length;
};
thx_Objects.string = function(o) {
	var _this = Reflect.fields(o);
	var result = new Array(_this.length);
	var _g = 0;
	var _g1 = _this.length;
	while(_g < _g1) {
		var i = _g++;
		var key = _this[i];
		var v = Reflect.field(o,key);
		var s = typeof(v) == "string" ? thx_Strings.quote(v) : thx_Dynamics.string(v);
		result[i] = "" + key + " : " + s;
	}
	return "{" + result.join(", ") + "}";
};
thx_Objects.stringImpl = function(o,cache) {
};
thx_Objects.values = function(o) {
	var _this = Reflect.fields(o);
	var result = new Array(_this.length);
	var _g = 0;
	var _g1 = _this.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = Reflect.field(o,_this[i]);
	}
	return result;
};
thx_Objects.tuples = function(o) {
	var _this = Reflect.fields(o);
	var result = new Array(_this.length);
	var _g = 0;
	var _g1 = _this.length;
	while(_g < _g1) {
		var i = _g++;
		var key = _this[i];
		var this1 = { _0 : key, _1 : Reflect.field(o,key)};
		result[i] = this1;
	}
	return result;
};
thx_Objects.hasPath = function(o,path) {
	var _this_r = new RegExp("\\[(\\d+)\\]","g".split("u").join(""));
	path = path.replace(_this_r,".$1");
	var paths = path.split(".");
	var current = o;
	var _g = 0;
	while(_g < paths.length) {
		var currentPath = paths[_g];
		++_g;
		if(thx_Strings.DIGITS.match(currentPath)) {
			var index = Std.parseInt(currentPath);
			var value = current;
			var arr = ((value) instanceof Array) ? value : null;
			if(null == arr || arr.length <= index) {
				return false;
			}
			current = arr[index];
		} else if(Object.prototype.hasOwnProperty.call(current,currentPath)) {
			current = Reflect.field(current,currentPath);
		} else {
			return false;
		}
	}
	return true;
};
thx_Objects.hasPathValue = function(o,path) {
	return thx_Objects.getPath(o,path) != null;
};
thx_Objects.getPath = function(o,path) {
	var _this_r = new RegExp("\\[(\\d+)\\]","g".split("u").join(""));
	path = path.replace(_this_r,".$1");
	var paths = path.split(".");
	var current = o;
	var _g = 0;
	while(_g < paths.length) {
		var currentPath = paths[_g];
		++_g;
		if(current == null) {
			return null;
		} else if(thx_Strings.DIGITS.match(currentPath)) {
			var index = Std.parseInt(currentPath);
			var value = current;
			var arr = ((value) instanceof Array) ? value : null;
			if(null == arr) {
				return null;
			}
			current = arr[index];
		} else if(Object.prototype.hasOwnProperty.call(current,currentPath)) {
			current = Reflect.field(current,currentPath);
		} else {
			return null;
		}
	}
	return current;
};
thx_Objects.getPathOption = function(o,path) {
	var value = thx_Objects.getPath(o,path);
	if(null == value) {
		return haxe_ds_Option.None;
	} else {
		return haxe_ds_Option.Some(value);
	}
};
thx_Objects.parsePath = function(o,path,parse) {
	var this1 = thx_Options.toSuccessNel(thx_Objects.getPathOption(o,path),"Object does not contain path " + path);
	switch(this1._hx_index) {
	case 0:
		var a = this1.value;
		return thx_Either.Left(a);
	case 1:
		var b = this1.value;
		return parse(b);
	}
};
thx_Objects.getPathOr = function(o,path,alt) {
	return thx_Options.getOrElse(thx_Objects.getPathOption(o,path),alt);
};
thx_Objects.setPath = function(o,path,val) {
	var _this_r = new RegExp("\\[(\\d+)\\]","g".split("u").join(""));
	path = path.replace(_this_r,".$1");
	var paths = path.split(".");
	var current = o;
	var _g = 0;
	var _g1 = paths.length - 1;
	while(_g < _g1) {
		var i = _g++;
		var currentPath = paths[i];
		var nextPath = paths[i + 1];
		if(thx_Strings.DIGITS.match(currentPath) || currentPath == "*") {
			var index = currentPath == "*" ? current.length : Std.parseInt(currentPath);
			if(current[index] == null) {
				if(thx_Strings.DIGITS.match(nextPath) || nextPath == "*") {
					current[index] = [];
				} else {
					current[index] = { };
				}
			}
			current = current[index];
		} else {
			if(!Object.prototype.hasOwnProperty.call(current,currentPath)) {
				if(thx_Strings.DIGITS.match(nextPath) || nextPath == "*") {
					current[currentPath] = [];
				} else {
					current[currentPath] = { };
				}
			}
			current = Reflect.field(current,currentPath);
		}
	}
	var p = paths[paths.length - 1];
	if(thx_Strings.DIGITS.match(p)) {
		var index = Std.parseInt(p);
		current[index] = val;
	} else if(p == "*") {
		current.push(val);
	} else {
		current[p] = val;
	}
	return o;
};
thx_Objects.removePath = function(o,path) {
	var _this_r = new RegExp("\\[(\\d+)\\]","g".split("u").join(""));
	path = path.replace(_this_r,".$1");
	var paths = path.split(".");
	var target = paths.pop();
	try {
		var sub = thx_Arrays.reduce(paths,function(existing,nextPath) {
			if(nextPath == "*") {
				return existing.pop();
			} else if(thx_Strings.DIGITS.match(nextPath)) {
				var current = existing;
				var index = Std.parseInt(nextPath);
				return current[index];
			} else {
				return Reflect.field(existing,nextPath);
			}
		},o);
		if(null != sub) {
			Reflect.deleteField(sub,target);
		}
	} catch( _g ) {
		haxe_NativeStackTrace.lastError = _g;
	}
	return o;
};
thx_Objects.normalizePath = function(path) {
	var _this_r = new RegExp("\\[(\\d+)\\]","g".split("u").join(""));
	return path.replace(_this_r,".$1");
};
var thx_Options = function() { };
$hxClasses["thx.Options"] = thx_Options;
thx_Options.__name__ = "thx.Options";
thx_Options.ofValue = function(value) {
	if(null == value) {
		return haxe_ds_Option.None;
	} else {
		return haxe_ds_Option.Some(value);
	}
};
thx_Options.maybe = function(value) {
	if(null == value) {
		return haxe_ds_Option.None;
	} else {
		return haxe_ds_Option.Some(value);
	}
};
thx_Options.equals = function(a,b,eq) {
	switch(a._hx_index) {
	case 0:
		if(b._hx_index == 0) {
			var b1 = b.v;
			var a1 = a.v;
			if(null == eq) {
				eq = function(a,b) {
					return a == b;
				};
			}
			return eq(a1,b1);
		} else {
			return false;
		}
		break;
	case 1:
		if(b._hx_index == 1) {
			return true;
		} else {
			return false;
		}
		break;
	}
};
thx_Options.equalsValue = function(a,b,eq) {
	return thx_Options.equals(a,null == b ? haxe_ds_Option.None : haxe_ds_Option.Some(b),eq);
};
thx_Options.map = function(option,callback) {
	switch(option._hx_index) {
	case 0:
		var v = option.v;
		return haxe_ds_Option.Some(callback(v));
	case 1:
		return haxe_ds_Option.None;
	}
};
thx_Options.ap = function(option,fopt) {
	switch(option._hx_index) {
	case 0:
		var v = option.v;
		return thx_Options.map(fopt,function(f) {
			return f(v);
		});
	case 1:
		return haxe_ds_Option.None;
	}
};
thx_Options.flatMap = function(option,callback) {
	switch(option._hx_index) {
	case 0:
		var v = option.v;
		return callback(v);
	case 1:
		return haxe_ds_Option.None;
	}
};
thx_Options.join = function(option) {
	switch(option._hx_index) {
	case 0:
		var v = option.v;
		return v;
	case 1:
		return haxe_ds_Option.None;
	}
};
thx_Options.cata = function(option,ifNone,f) {
	switch(option._hx_index) {
	case 0:
		var v = option.v;
		return f(v);
	case 1:
		return ifNone;
	}
};
thx_Options.cataf = function(option,ifNone,f) {
	switch(option._hx_index) {
	case 0:
		var v = option.v;
		return f(v);
	case 1:
		return ifNone();
	}
};
thx_Options.foldLeft = function(option,b,f) {
	switch(option._hx_index) {
	case 0:
		var v = option.v;
		return f(b,v);
	case 1:
		return b;
	}
};
thx_Options.foldLeftf = function(option,b,f) {
	switch(option._hx_index) {
	case 0:
		var v = option.v;
		return f(b(),v);
	case 1:
		return b();
	}
};
thx_Options.foldMap = function(option,f,m) {
	var _e = m;
	var tmp = function(a0,a1) {
		return thx_Monoid.append(_e,a0,a1);
	};
	return thx_Options.foldLeft(thx_Options.map(option,f),thx_Monoid.get_zero(m),tmp);
};
thx_Options.filter = function(option,f) {
	if(option._hx_index == 0) {
		var v = option.v;
		if(f(v)) {
			return option;
		} else {
			return haxe_ds_Option.None;
		}
	} else {
		return haxe_ds_Option.None;
	}
};
thx_Options.toArray = function(option) {
	switch(option._hx_index) {
	case 0:
		var v = option.v;
		return [v];
	case 1:
		return [];
	}
};
thx_Options.toBool = function(option) {
	switch(option._hx_index) {
	case 0:
		var _g = option.v;
		return true;
	case 1:
		return false;
	}
};
thx_Options.isNone = function(option) {
	return !thx_Options.toBool(option);
};
thx_Options.toOption = function(value) {
	if(null == value) {
		return haxe_ds_Option.None;
	} else {
		return haxe_ds_Option.Some(value);
	}
};
thx_Options.get = function(option) {
	switch(option._hx_index) {
	case 0:
		var v = option.v;
		return v;
	case 1:
		return null;
	}
};
thx_Options.getOrElse = function(option,alt) {
	switch(option._hx_index) {
	case 0:
		var v = option.v;
		return v;
	case 1:
		return alt;
	}
};
thx_Options.getOrElseF = function(option,alt) {
	switch(option._hx_index) {
	case 0:
		var v = option.v;
		return v;
	case 1:
		return alt();
	}
};
thx_Options.getOrThrow = function(option,err,posInfo) {
	if(null == err) {
		err = new thx_Error("Could not extract value from option",null,posInfo);
	}
	switch(option._hx_index) {
	case 0:
		var v = option.v;
		return v;
	case 1:
		throw err;
	}
};
thx_Options.getOrFail = function(option,msg,posInfo) {
	return thx_Options.getOrThrow(option,new thx_Error(msg,null,posInfo),{ fileName : "thx/Options.hx", lineNumber : 212, className : "thx.Options", methodName : "getOrFail"});
};
thx_Options.orElse = function(option,alt) {
	switch(option._hx_index) {
	case 0:
		var _g = option.v;
		return option;
	case 1:
		return alt;
	}
};
thx_Options.orElseF = function(option,alt) {
	switch(option._hx_index) {
	case 0:
		var _g = option.v;
		return option;
	case 1:
		return alt();
	}
};
thx_Options.all = function(option,f) {
	switch(option._hx_index) {
	case 0:
		var v = option.v;
		return f(v);
	case 1:
		return true;
	}
};
thx_Options.any = function(option,f) {
	switch(option._hx_index) {
	case 0:
		var v = option.v;
		return f(v);
	case 1:
		return false;
	}
};
thx_Options.traverseValidation = function(option,f) {
	switch(option._hx_index) {
	case 0:
		var v = option.v;
		return thx_Validation.map(f(v),function(v) {
			return haxe_ds_Option.Some(v);
		});
	case 1:
		return thx_Either.Right(haxe_ds_Option.None);
	}
};
thx_Options.toSuccess = function(option,error) {
	switch(option._hx_index) {
	case 0:
		var v = option.v;
		return thx_Either.Right(v);
	case 1:
		return thx_Either.Left(error);
	}
};
thx_Options.toLazySuccess = function(option,error) {
	switch(option._hx_index) {
	case 0:
		var v = option.v;
		return thx_Either.Right(v);
	case 1:
		return thx_Either.Left(error());
	}
};
thx_Options.toSuccessNel = function(option,error) {
	switch(option._hx_index) {
	case 0:
		var v = option.v;
		return thx_Either.Right(v);
	case 1:
		return thx_Either.Left(thx_Nel.pure(error));
	}
};
thx_Options.toLazySuccessNel = function(option,error) {
	switch(option._hx_index) {
	case 0:
		var v = option.v;
		return thx_Either.Right(v);
	case 1:
		return thx_Either.Left(thx_Nel.pure(error()));
	}
};
thx_Options.toFailure = function(error,value) {
	switch(error._hx_index) {
	case 0:
		var e = error.v;
		return thx_Either.Left(e);
	case 1:
		return thx_Either.Right(value);
	}
};
thx_Options.toFailureNel = function(error,value) {
	switch(error._hx_index) {
	case 0:
		var e = error.v;
		return thx_Either.Left(thx_Nel.pure(e));
	case 1:
		return thx_Either.Right(value);
	}
};
thx_Options.toRight = function(opt,left) {
	switch(opt._hx_index) {
	case 0:
		var r = opt.v;
		return thx_Either.Right(r);
	case 1:
		return thx_Either.Left(left);
	}
};
thx_Options.toLazyRight = function(opt,left) {
	switch(opt._hx_index) {
	case 0:
		var r = opt.v;
		return thx_Either.Right(r);
	case 1:
		return thx_Either.Left(left());
	}
};
thx_Options.toLeft = function(opt,right) {
	switch(opt._hx_index) {
	case 0:
		var l = opt.v;
		return thx_Either.Left(l);
	case 1:
		return thx_Either.Right(right);
	}
};
thx_Options.each = function(o,f) {
	switch(o._hx_index) {
	case 0:
		var v = o.v;
		f(v);
		return o;
	case 1:
		return o;
	}
};
thx_Options.alt2 = function(a,b) {
	if(a._hx_index == 1) {
		var r = b;
		return r;
	} else {
		var l = a;
		return l;
	}
};
thx_Options.alt3 = function(a,b,c) {
	var a1;
	if(a._hx_index == 1) {
		var r = b;
		a1 = r;
	} else {
		var l = a;
		a1 = l;
	}
	if(a1._hx_index == 1) {
		var r = c;
		return r;
	} else {
		var l = a1;
		return l;
	}
};
thx_Options.alt4 = function(a,b,c,d) {
	var a1;
	if(a._hx_index == 1) {
		var r = b;
		a1 = r;
	} else {
		var l = a;
		a1 = l;
	}
	var a;
	if(a1._hx_index == 1) {
		var r = c;
		a = r;
	} else {
		var l = a1;
		a = l;
	}
	if(a._hx_index == 1) {
		var r = d;
		return r;
	} else {
		var l = a;
		return l;
	}
};
thx_Options.alts = function(as) {
	return thx_Arrays.reduce(as,thx_Options.alt2,haxe_ds_Option.None);
};
thx_Options.altsF = function(fs) {
	return thx_Arrays.reduce(fs,thx_Options.orElseF,haxe_ds_Option.None);
};
thx_Options.ap2 = function(f,v1,v2) {
	return thx_Options.ap(v2,thx_Options.map(v1,thx_Functions2.curry(f)));
};
thx_Options.ap3 = function(f,v1,v2,v3) {
	var f1 = f;
	return thx_Options.ap(v3,thx_Options.ap(v2,thx_Options.map(v1,thx_Functions2.curry(function(a,b) {
		return function(c) {
			return f1(a,b,c);
		};
	}))));
};
thx_Options.ap4 = function(f,v1,v2,v3,v4) {
	var f1 = f;
	var f = function(a,b,c) {
		return function(d) {
			return f1(a,b,c,d);
		};
	};
	return thx_Options.ap(v4,thx_Options.ap(v3,thx_Options.ap(v2,thx_Options.map(v1,thx_Functions2.curry(function(a,b) {
		return function(c) {
			return f(a,b,c);
		};
	})))));
};
thx_Options.ap5 = function(f,v1,v2,v3,v4,v5) {
	var f1 = f;
	var f = function(a,b,c,d) {
		return function(e) {
			return f1(a,b,c,d,e);
		};
	};
	var f2 = function(a,b,c) {
		return function(d) {
			return f(a,b,c,d);
		};
	};
	return thx_Options.ap(v5,thx_Options.ap(v4,thx_Options.ap(v3,thx_Options.ap(v2,thx_Options.map(v1,thx_Functions2.curry(function(a,b) {
		return function(c) {
			return f2(a,b,c);
		};
	}))))));
};
thx_Options.ap6 = function(f,v1,v2,v3,v4,v5,v6) {
	var f1 = f;
	var f = function(a,b,c,d,e) {
		return function(f0) {
			return f1(a,b,c,d,e,f0);
		};
	};
	var f2 = function(a,b,c,d) {
		return function(e) {
			return f(a,b,c,d,e);
		};
	};
	var f3 = function(a,b,c) {
		return function(d) {
			return f2(a,b,c,d);
		};
	};
	return thx_Options.ap(v6,thx_Options.ap(v5,thx_Options.ap(v4,thx_Options.ap(v3,thx_Options.ap(v2,thx_Options.map(v1,thx_Functions2.curry(function(a,b) {
		return function(c) {
			return f3(a,b,c);
		};
	})))))));
};
thx_Options.ap7 = function(f,v1,v2,v3,v4,v5,v6,v7) {
	var f1 = f;
	var f = function(a,b,c,d,e,f0) {
		return function(g) {
			return f1(a,b,c,d,e,f0,g);
		};
	};
	var f2 = function(a,b,c,d,e) {
		return function(f0) {
			return f(a,b,c,d,e,f0);
		};
	};
	var f3 = function(a,b,c,d) {
		return function(e) {
			return f2(a,b,c,d,e);
		};
	};
	var f4 = function(a,b,c) {
		return function(d) {
			return f3(a,b,c,d);
		};
	};
	return thx_Options.ap(v7,thx_Options.ap(v6,thx_Options.ap(v5,thx_Options.ap(v4,thx_Options.ap(v3,thx_Options.ap(v2,thx_Options.map(v1,thx_Functions2.curry(function(a,b) {
		return function(c) {
			return f4(a,b,c);
		};
	}))))))));
};
thx_Options.ap8 = function(f,v1,v2,v3,v4,v5,v6,v7,v8) {
	var f1 = f;
	var f = function(a,b,c,d,e,f0,g) {
		return function(h) {
			return f1(a,b,c,d,e,f0,g,h);
		};
	};
	var f2 = function(a,b,c,d,e,f0) {
		return function(g) {
			return f(a,b,c,d,e,f0,g);
		};
	};
	var f3 = function(a,b,c,d,e) {
		return function(f0) {
			return f2(a,b,c,d,e,f0);
		};
	};
	var f4 = function(a,b,c,d) {
		return function(e) {
			return f3(a,b,c,d,e);
		};
	};
	var f5 = function(a,b,c) {
		return function(d) {
			return f4(a,b,c,d);
		};
	};
	return thx_Options.ap(v8,thx_Options.ap(v7,thx_Options.ap(v6,thx_Options.ap(v5,thx_Options.ap(v4,thx_Options.ap(v3,thx_Options.ap(v2,thx_Options.map(v1,thx_Functions2.curry(function(a,b) {
		return function(c) {
			return f5(a,b,c);
		};
	})))))))));
};
thx_Options.combine = function(a,b) {
	return thx_Options.ap(b,thx_Options.map(a,thx_Functions2.curry(thx_Tuple2.of)));
};
thx_Options.combine2 = function(a,b) {
	return thx_Options.ap(b,thx_Options.map(a,thx_Functions2.curry(thx_Tuple2.of)));
};
thx_Options.combine3 = function(a,b,c) {
	var f = thx_Tuple3.of;
	return thx_Options.ap(c,thx_Options.ap(b,thx_Options.map(a,thx_Functions2.curry(function(a,b) {
		return function(c) {
			return f(a,b,c);
		};
	}))));
};
thx_Options.combine4 = function(a,b,c,d) {
	var f = thx_Tuple4.of;
	var f1 = function(a,b,c) {
		return function(d) {
			return f(a,b,c,d);
		};
	};
	return thx_Options.ap(d,thx_Options.ap(c,thx_Options.ap(b,thx_Options.map(a,thx_Functions2.curry(function(a,b) {
		return function(c) {
			return f1(a,b,c);
		};
	})))));
};
thx_Options.combine5 = function(a,b,c,d,e) {
	var f = thx_Tuple5.of;
	var f1 = function(a,b,c,d) {
		return function(e) {
			return f(a,b,c,d,e);
		};
	};
	var f2 = function(a,b,c) {
		return function(d) {
			return f1(a,b,c,d);
		};
	};
	return thx_Options.ap(e,thx_Options.ap(d,thx_Options.ap(c,thx_Options.ap(b,thx_Options.map(a,thx_Functions2.curry(function(a,b) {
		return function(c) {
			return f2(a,b,c);
		};
	}))))));
};
thx_Options.combine6 = function(a,b,c,d,e,f) {
	var f1 = thx_Tuple6.of;
	var f2 = function(a,b,c,d,e) {
		return function(f0) {
			return f1(a,b,c,d,e,f0);
		};
	};
	var f3 = function(a,b,c,d) {
		return function(e) {
			return f2(a,b,c,d,e);
		};
	};
	var f4 = function(a,b,c) {
		return function(d) {
			return f3(a,b,c,d);
		};
	};
	return thx_Options.ap(f,thx_Options.ap(e,thx_Options.ap(d,thx_Options.ap(c,thx_Options.ap(b,thx_Options.map(a,thx_Functions2.curry(function(a,b) {
		return function(c) {
			return f4(a,b,c);
		};
	})))))));
};
thx_Options.spread2 = function(v,f) {
	return thx_Options.map(v,function(t) {
		return f(t._0,t._1);
	});
};
thx_Options.spread = function(v,f) {
	var f1 = f;
	return thx_Options.map(v,function(t) {
		return f1(t._0,t._1);
	});
};
thx_Options.spread3 = function(v,f) {
	return thx_Options.map(v,function(t) {
		return f(t._0,t._1,t._2);
	});
};
thx_Options.spread4 = function(v,f) {
	return thx_Options.map(v,function(t) {
		return f(t._0,t._1,t._2,t._3);
	});
};
thx_Options.spread5 = function(v,f) {
	return thx_Options.map(v,function(t) {
		return f(t._0,t._1,t._2,t._3,t._4);
	});
};
thx_Options.spread6 = function(v,f) {
	return thx_Options.map(v,function(t) {
		return f(t._0,t._1,t._2,t._3,t._4,t._5);
	});
};
var thx_Orderings = function() { };
$hxClasses["thx.Orderings"] = thx_Orderings;
thx_Orderings.__name__ = "thx.Orderings";
thx_Orderings.negate = function(o) {
	switch(o._hx_index) {
	case 0:
		return thx_OrderingImpl.GT;
	case 1:
		return thx_OrderingImpl.LT;
	case 2:
		return thx_OrderingImpl.EQ;
	}
};
var thx_ReadonlyArray = {};
thx_ReadonlyArray.__properties__ = {get_length:"get_length"};
thx_ReadonlyArray.empty = function() {
	return [];
};
thx_ReadonlyArray.flatten = function(array) {
	return Array.prototype.concat.apply([],array);
};
thx_ReadonlyArray.indexOf = function(this1,el,eq) {
	if(null == eq) {
		eq = thx_Functions.equality;
	}
	var _g = 0;
	var _g1 = this1.length;
	while(_g < _g1) {
		var i = _g++;
		if(eq(el,this1[i])) {
			return i;
		}
	}
	return -1;
};
thx_ReadonlyArray.lastIndexOf = function(this1,el,eq) {
	if(null == eq) {
		eq = thx_Functions.equality;
	}
	var len = this1.length;
	var _g = 0;
	var _g1 = len;
	while(_g < _g1) {
		var i = _g++;
		if(eq(el,this1[len - i - 1])) {
			return i;
		}
	}
	return -1;
};
thx_ReadonlyArray.get_length = function(this1) {
	return this1.length;
};
thx_ReadonlyArray.get = function(this1,i) {
	return this1[i];
};
thx_ReadonlyArray.head = function(this1) {
	return this1[0];
};
thx_ReadonlyArray.tail = function(this1) {
	return this1.slice(1);
};
thx_ReadonlyArray.reduce = function(this1,f,initial) {
	var _g = 0;
	while(_g < this1.length) {
		var v = this1[_g];
		++_g;
		initial = f(initial,v);
	}
	return initial;
};
thx_ReadonlyArray.reducei = function(this1,f,initial) {
	var _g = 0;
	var _g1 = this1.length;
	while(_g < _g1) {
		var i = _g++;
		initial = f(initial,this1[i],i);
	}
	return initial;
};
thx_ReadonlyArray.reverse = function(this1) {
	var arr = this1.slice();
	arr.reverse();
	return arr;
};
thx_ReadonlyArray.toArray = function(this1) {
	return this1.slice();
};
thx_ReadonlyArray.unsafe = function(this1) {
	return this1;
};
thx_ReadonlyArray.concat = function(this1,that) {
	return this1.concat(that);
};
thx_ReadonlyArray.insertAt = function(this1,pos,el) {
	return this1.slice(0,pos).concat([el]).concat(this1.slice(pos));
};
thx_ReadonlyArray.insertAfter = function(this1,ref,el,eq) {
	var pos = thx_ReadonlyArray.indexOf(this1,ref,eq);
	if(pos < 0) {
		pos = this1.length - 1;
	}
	var pos1 = pos + 1;
	return this1.slice(0,pos1).concat([el]).concat(this1.slice(pos1));
};
thx_ReadonlyArray.insertBefore = function(this1,ref,el,eq) {
	var pos = thx_ReadonlyArray.indexOf(this1,ref,eq);
	return this1.slice(0,pos).concat([el]).concat(this1.slice(pos));
};
thx_ReadonlyArray.replace = function(this1,ref,el,eq) {
	var pos = thx_ReadonlyArray.indexOf(this1,ref,eq);
	if(pos < 0) {
		throw new thx_Error("unable to find reference element",null,{ fileName : "thx/ReadonlyArray.hx", lineNumber : 97, className : "thx._ReadonlyArray.ReadonlyArray_Impl_", methodName : "replace"});
	}
	return this1.slice(0,pos).concat([el]).concat(this1.slice(pos + 1));
};
thx_ReadonlyArray.replaceAt = function(this1,pos,el) {
	return this1.slice(0,pos).concat([el]).concat(this1.slice(pos + 1));
};
thx_ReadonlyArray.remove = function(this1,el,eq) {
	var pos = thx_ReadonlyArray.indexOf(this1,el,eq);
	return this1.slice(0,pos).concat(this1.slice(pos + 1));
};
thx_ReadonlyArray.removeAt = function(this1,pos) {
	return this1.slice(0,pos).concat(this1.slice(pos + 1));
};
thx_ReadonlyArray.prepend = function(this1,el) {
	return [el].concat(this1);
};
thx_ReadonlyArray.append = function(this1,el) {
	return this1.concat([el]);
};
thx_ReadonlyArray.unshift = function(this1,el) {
	return [el].concat(this1);
};
thx_ReadonlyArray.shift = function(this1) {
	if(this1.length == 0) {
		var this2 = { _0 : null, _1 : this1};
		return this2;
	}
	var value = this1[0];
	var array = this1.slice(0,0).concat(this1.slice(1));
	var this1 = { _0 : value, _1 : array};
	return this1;
};
thx_ReadonlyArray.push = function(this1,el) {
	return this1.concat([el]);
};
thx_ReadonlyArray.pop = function(this1) {
	if(this1.length == 0) {
		var this2 = { _0 : null, _1 : this1};
		return this2;
	}
	var value = this1[this1.length - 1];
	var pos = this1.length - 1;
	var array = this1.slice(0,pos).concat(this1.slice(pos + 1));
	var this1 = { _0 : value, _1 : array};
	return this1;
};
thx_ReadonlyArray.iterator = function(this1) {
	return new haxe_iterators_ArrayIterator(this1);
};
var thx_Semigroup = {};
thx_Semigroup.__properties__ = {get_append:"get_append"};
thx_Semigroup.get_append = function(this1) {
	return this1;
};
var thx_Set = {};
thx_Set.__properties__ = {get_length:"get_length"};
thx_Set.createString = function(it) {
	var map = new haxe_ds_StringMap();
	var this1 = map;
	var set = this1;
	if(null != it) {
		thx_Set.pushMany(set,it);
	}
	return set;
};
thx_Set.createInt = function(it) {
	var map = new haxe_ds_IntMap();
	var this1 = map;
	var set = this1;
	if(null != it) {
		thx_Set.pushMany(set,it);
	}
	return set;
};
thx_Set.createObject = function(it) {
	var map = new haxe_ds_ObjectMap();
	var this1 = map;
	var set = this1;
	if(null != it) {
		thx_Set.pushMany(set,it);
	}
	return set;
};
thx_Set.createEnum = function(arr) {
	var map = new haxe_ds_EnumValueMap();
	var this1 = map;
	var set = this1;
	if(null != arr) {
		thx_Set.pushMany(set,arr);
	}
	return set;
};
thx_Set._new = function(map) {
	var this1 = map;
	return this1;
};
thx_Set.add = function(this1,v) {
	if(this1.exists(v)) {
		return false;
	} else {
		this1.set(v,true);
		return true;
	}
};
thx_Set.copy = function(this1) {
	var inst = thx_Set.empty(this1);
	var k = this1.keys();
	while(k.hasNext()) {
		var k1 = k.next();
		inst.set(k1,true);
	}
	return inst;
};
thx_Set.empty = function(this1) {
	var inst = Type.createInstance(js_Boot.getClass(this1),[]);
	var this1 = inst;
	return this1;
};
thx_Set.difference = function(this1,set) {
	var result = thx_Set.copy(this1);
	var item = $iterator(thx_Set)(set);
	while(item.hasNext()) {
		var item1 = item.next();
		result.remove(item1);
	}
	return result;
};
thx_Set.filter = function(this1,predicate) {
	return thx_Set.reduce(this1,function(acc,v) {
		if(predicate(v)) {
			thx_Set.add(acc,v);
		}
		return acc;
	},thx_Set.empty(this1));
};
thx_Set.map = function(this1,f) {
	return thx_Set.reduce(this1,function(acc,v) {
		acc.push(f(v));
		return acc;
	},[]);
};
thx_Set.exists = function(this1,v) {
	return this1.exists(v);
};
thx_Set.remove = function(this1,v) {
	return this1.remove(v);
};
thx_Set.intersection = function(this1,set) {
	var result = thx_Set.empty(this1);
	var item = $iterator(thx_Set)(this1);
	while(item.hasNext()) {
		var item1 = item.next();
		if(set.exists(item1)) {
			result.set(item1,true);
		}
	}
	return result;
};
thx_Set.push = function(this1,v) {
	this1.set(v,true);
};
thx_Set.pushMany = function(this1,values) {
	var value = $getIterator(values);
	while(value.hasNext()) {
		var value1 = value.next();
		this1.set(value1,true);
	}
};
thx_Set.reduce = function(this1,handler,acc) {
	var v = $iterator(thx_Set)(this1);
	while(v.hasNext()) {
		var v1 = v.next();
		acc = handler(acc,v1);
	}
	return acc;
};
thx_Set.iterator = function(this1) {
	return this1.keys();
};
thx_Set.union = function(this1,set) {
	var newset = thx_Set.copy(this1);
	thx_Set.pushMany(newset,thx_Set.toArray(set));
	return newset;
};
thx_Set.toArray = function(this1) {
	var arr = [];
	var k = this1.keys();
	while(k.hasNext()) {
		var k1 = k.next();
		arr.push(k1);
	}
	return arr;
};
thx_Set.toString = function(this1) {
	return "{" + thx_Set.toArray(this1).join(", ") + "}";
};
thx_Set.get_length = function(this1) {
	var l = 0;
	var i = this1.iterator();
	while(i.hasNext()) {
		var i1 = i.next();
		++l;
	}
	return l;
};
var thx_Strings = function() { };
$hxClasses["thx.Strings"] = thx_Strings;
thx_Strings.__name__ = "thx.Strings";
thx_Strings.after = function(value,searchFor) {
	var pos = value.indexOf(searchFor);
	if(pos < 0) {
		return "";
	} else {
		return value.substring(pos + searchFor.length);
	}
};
thx_Strings.afterLast = function(value,searchFor) {
	var pos = value.lastIndexOf(searchFor);
	if(pos < 0) {
		return "";
	} else {
		return value.substring(pos + searchFor.length);
	}
};
thx_Strings.before = function(value,searchFor) {
	var pos = value.indexOf(searchFor);
	if(pos < 0) {
		return "";
	} else {
		return value.substring(0,pos);
	}
};
thx_Strings.beforeLast = function(value,searchFor) {
	var pos = value.lastIndexOf(searchFor);
	if(pos < 0) {
		return "";
	} else {
		return value.substring(0,pos);
	}
};
thx_Strings.capitalize = function(s) {
	return HxOverrides.substr(s,0,1).toUpperCase() + HxOverrides.substr(s,1,null);
};
thx_Strings.capitalizeWords = function(value,whiteSpaceOnly) {
	if(whiteSpaceOnly == null) {
		whiteSpaceOnly = false;
	}
	if(whiteSpaceOnly) {
		return thx_Strings.UCWORDSWS.map(HxOverrides.substr(value,0,1).toUpperCase() + HxOverrides.substr(value,1,null),thx_Strings.upperMatch);
	} else {
		return thx_Strings.UCWORDS.map(HxOverrides.substr(value,0,1).toUpperCase() + HxOverrides.substr(value,1,null),thx_Strings.upperMatch);
	}
};
thx_Strings.canonicalizeNewlines = function(value) {
	return value.replace(thx_Strings.CANONICALIZE_LINES.r,"\n");
};
thx_Strings.caseInsensitiveCompare = function(a,b) {
	if(null == a && null == b) {
		return 0;
	}
	if(null == a) {
		return -1;
	} else if(null == b) {
		return 1;
	}
	var a1 = a.toLowerCase();
	var b1 = b.toLowerCase();
	if(a1 < b1) {
		return -1;
	} else if(a1 > b1) {
		return 1;
	} else {
		return 0;
	}
};
thx_Strings.caseInsensitiveEndsWith = function(s,end) {
	return StringTools.endsWith(s.toLowerCase(),end.toLowerCase());
};
thx_Strings.caseInsensitiveEndsWithAny = function(s,values) {
	var tmp = s.toLowerCase();
	var result = new Array(values.length);
	var _g = 0;
	var _g1 = values.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = values[i].toLowerCase();
	}
	return thx_Strings.endsWithAny(tmp,result);
};
thx_Strings.caseInsensitiveStartsWith = function(s,start) {
	return StringTools.startsWith(s.toLowerCase(),start.toLowerCase());
};
thx_Strings.caseInsensitiveStartsWithAny = function(s,values) {
	var tmp = s.toLowerCase();
	var result = new Array(values.length);
	var _g = 0;
	var _g1 = values.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = values[i].toLowerCase();
	}
	return thx_Strings.startsWithAny(tmp,result);
};
thx_Strings.collapse = function(value) {
	var _this = thx_Strings.WSG;
	return StringTools.trim(value).replace(_this.r," ");
};
thx_Strings.compare = function(a,b) {
	if(a < b) {
		return -1;
	} else if(a > b) {
		return 1;
	} else {
		return 0;
	}
};
thx_Strings.caseInsensitiveContains = function(s,test) {
	return s.toLowerCase().indexOf(test.toLowerCase()) >= 0;
};
thx_Strings.contains = function(s,test) {
	return s.indexOf(test) >= 0;
};
thx_Strings.count = function(s,test) {
	return s.split(test).length - 1;
};
thx_Strings.caseInsensitiveContainsAny = function(s,tests) {
	var s1 = s;
	return thx_Arrays.any(tests,function(test) {
		return s1.toLowerCase().indexOf(test.toLowerCase()) >= 0;
	});
};
thx_Strings.containsAny = function(s,tests) {
	var s1 = s;
	return thx_Arrays.any(tests,function(test) {
		return s1.indexOf(test) >= 0;
	});
};
thx_Strings.caseInsensitiveContainsAll = function(s,tests) {
	var s1 = s;
	return thx_Arrays.all(tests,function(test) {
		return s1.toLowerCase().indexOf(test.toLowerCase()) >= 0;
	});
};
thx_Strings.containsAll = function(s,tests) {
	var s1 = s;
	return thx_Arrays.all(tests,function(test) {
		return s1.indexOf(test) >= 0;
	});
};
thx_Strings.dasherize = function(s) {
	return StringTools.replace(s,"_","-");
};
thx_Strings.diffAt = function(a,b) {
	var a1 = a.length;
	var b1 = b.length;
	var min = a1 < b1 ? a1 : b1;
	var _g = 0;
	var _g1 = min;
	while(_g < _g1) {
		var i = _g++;
		if(a.substring(i,i + 1) != b.substring(i,i + 1)) {
			return i;
		}
	}
	return min;
};
thx_Strings.ellipsis = function(s,maxlen,symbol) {
	if(symbol == null) {
		symbol = "…";
	}
	if(maxlen == null) {
		maxlen = 20;
	}
	var sl = s.length;
	var symboll = symbol.length;
	if(sl > maxlen) {
		if(maxlen < symboll) {
			return HxOverrides.substr(symbol,symboll - maxlen,maxlen);
		} else {
			return HxOverrides.substr(s,0,maxlen - symboll) + symbol;
		}
	} else {
		return s;
	}
};
thx_Strings.ellipsisMiddle = function(s,maxlen,symbol) {
	if(symbol == null) {
		symbol = "…";
	}
	if(maxlen == null) {
		maxlen = 20;
	}
	var sl = s.length;
	var symboll = symbol.length;
	if(sl > maxlen) {
		if(maxlen <= symboll) {
			return thx_Strings.ellipsis(s,maxlen,symbol);
		}
		var hll = Math.ceil((maxlen - symboll) / 2);
		var hlr = Math.floor((maxlen - symboll) / 2);
		return HxOverrides.substr(s,0,hll) + symbol + HxOverrides.substr(s,sl - hlr,hlr);
	} else {
		return s;
	}
};
thx_Strings.endsWithAny = function(s,values) {
	return thx_Iterables.any(values,function(end) {
		return StringTools.endsWith(s,end);
	});
};
thx_Strings.filter = function(s,predicate) {
	var _g = [];
	var _g1 = 0;
	var _g2 = s.split("");
	while(_g1 < _g2.length) {
		var v = _g2[_g1];
		++_g1;
		if(predicate(v)) {
			_g.push(v);
		}
	}
	return _g.join("");
};
thx_Strings.filterCharcode = function(s,predicate) {
	var _g = [];
	var _g1 = 0;
	var _g2 = thx_Strings.map(s,function(s) {
		return HxOverrides.cca(s,0);
	});
	while(_g1 < _g2.length) {
		var v = _g2[_g1];
		++_g1;
		if(predicate(v)) {
			_g.push(v);
		}
	}
	var codes = _g;
	var result = new Array(codes.length);
	var _g = 0;
	var _g1 = codes.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = String.fromCodePoint(codes[i]);
	}
	return result.join("");
};
thx_Strings.from = function(value,searchFor) {
	var pos = value.indexOf(searchFor);
	if(pos < 0) {
		return "";
	} else {
		return value.substring(pos);
	}
};
thx_Strings.hashCode = function(value) {
	var code = 0;
	var _g = 0;
	var _g1 = value.length;
	while(_g < _g1) {
		var i = _g++;
		var c = HxOverrides.cca(value,i);
		code = (haxe_Int32._mul(thx_Strings.HASCODE_MUL,code) + c | 0) % thx_Strings.HASCODE_MAX;
	}
	return code;
};
thx_Strings.hasContent = function(value) {
	if(value != null) {
		return value.length > 0;
	} else {
		return false;
	}
};
thx_Strings.humanize = function(s) {
	return StringTools.replace(thx_Strings.underscore(s),"_"," ");
};
thx_Strings.isAlpha = function(s) {
	if(s.length > 0) {
		return !thx_Strings.IS_ALPHA.match(s);
	} else {
		return false;
	}
};
thx_Strings.isAlphaNum = function(value) {
	return thx_Strings.ALPHANUM.match(value);
};
thx_Strings.isBreakingWhitespace = function(value) {
	return !thx_Strings.IS_BREAKINGWHITESPACE.match(value);
};
thx_Strings.isLowerCase = function(value) {
	return value.toLowerCase() == value;
};
thx_Strings.isUpperCase = function(value) {
	return value.toUpperCase() == value;
};
thx_Strings.ifEmpty = function(value,alt) {
	if(null != value && "" != value) {
		return value;
	} else {
		return alt;
	}
};
thx_Strings.isDigitsOnly = function(value) {
	return thx_Strings.DIGITS.match(value);
};
thx_Strings.isEmpty = function(value) {
	if(value != null) {
		return value == "";
	} else {
		return true;
	}
};
thx_Strings.lowerCaseFirst = function(value) {
	return value.substring(0,1).toLowerCase() + value.substring(1);
};
thx_Strings.random = function(value,length) {
	if(length == null) {
		length = 1;
	}
	return HxOverrides.substr(value,Math.floor((value.length - length + 1) * Math.random()),length);
};
thx_Strings.randomSequence = function(seed,length) {
	var _this = thx_Ints.range(0,length);
	var result = new Array(_this.length);
	var _g = 0;
	var _g1 = _this.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = thx_Strings.random(seed);
	}
	return result.join("");
};
thx_Strings.randomSequence64 = function(length) {
	return thx_Strings.randomSequence(haxe_crypto_Base64.CHARS,length);
};
thx_Strings.iterator = function(s) {
	return new haxe_iterators_ArrayIterator(s.split(""));
};
thx_Strings.map = function(value,callback) {
	var _this = value.split("");
	var result = new Array(_this.length);
	var _g = 0;
	var _g1 = _this.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = callback(_this[i]);
	}
	return result;
};
thx_Strings.remove = function(value,toremove) {
	return StringTools.replace(value,toremove,"");
};
thx_Strings.removeAfter = function(value,toremove) {
	if(StringTools.endsWith(value,toremove)) {
		return value.substring(0,value.length - toremove.length);
	} else {
		return value;
	}
};
thx_Strings.removeAt = function(value,index,length) {
	return value.substring(0,index) + value.substring(index + length);
};
thx_Strings.removeBefore = function(value,toremove) {
	if(StringTools.startsWith(value,toremove)) {
		return value.substring(toremove.length);
	} else {
		return value;
	}
};
thx_Strings.removeOne = function(value,toremove) {
	var pos = value.indexOf(toremove);
	if(pos < 0) {
		return value;
	}
	return value.substring(0,pos) + value.substring(pos + toremove.length);
};
thx_Strings.repeat = function(s,times) {
	var _g = [];
	var _g1 = 0;
	var _g2 = times;
	while(_g1 < _g2) {
		var i = _g1++;
		_g.push(s);
	}
	return _g.join("");
};
thx_Strings.reverse = function(s) {
	var arr = s.split("");
	arr.reverse();
	return arr.join("");
};
thx_Strings.quote = function(s) {
	if(s.indexOf("\"") < 0) {
		return "\"" + s + "\"";
	} else if(s.indexOf("'") < 0) {
		return "'" + s + "'";
	} else {
		return "\"" + StringTools.replace(s,"\"","\\\"") + "\"";
	}
};
thx_Strings.splitOnce = function(s,separator) {
	var pos = s.indexOf(separator);
	if(pos < 0) {
		return [s];
	}
	return [s.substring(0,pos),s.substring(pos + separator.length)];
};
thx_Strings.startsWithAny = function(s,values) {
	return thx_Iterables.any(values,function(start) {
		return StringTools.startsWith(s,start);
	});
};
thx_Strings.stripTags = function(s) {
	return s.replace(thx_Strings.STRIPTAGS.r,"");
};
thx_Strings.surround = function(s,left,right) {
	return "" + left + s + (null == right ? left : right);
};
thx_Strings.toArray = function(s) {
	return s.split("");
};
thx_Strings.toCharcodes = function(s) {
	return thx_Strings.map(s,function(s) {
		return HxOverrides.cca(s,0);
	});
};
thx_Strings.toChunks = function(s,len) {
	var chunks = [];
	while(s.length > 0) {
		chunks.push(HxOverrides.substr(s,0,len));
		s = HxOverrides.substr(s,len,s.length - len);
	}
	return chunks;
};
thx_Strings.toLines = function(s) {
	return thx_Strings.SPLIT_LINES.split(s);
};
thx_Strings.trimChars = function(value,charlist) {
	return thx_Strings.trimCharsRight(thx_Strings.trimCharsLeft(value,charlist),charlist);
};
thx_Strings.trimCharsLeft = function(value,charlist) {
	var pos = 0;
	var _g = 0;
	var _g1 = value.length;
	while(_g < _g1) {
		var i = _g++;
		if(charlist.indexOf(value.charAt(i)) >= 0) {
			++pos;
		} else {
			break;
		}
	}
	return value.substring(pos);
};
thx_Strings.trimCharsRight = function(value,charlist) {
	var len = value.length;
	var pos = len;
	var i;
	var _g = 0;
	var _g1 = len;
	while(_g < _g1) {
		var j = _g++;
		i = len - j - 1;
		if(charlist.indexOf(value.charAt(i)) >= 0) {
			pos = i;
		} else {
			break;
		}
	}
	return value.substring(0,pos);
};
thx_Strings.underscore = function(s) {
	var _this_r = new RegExp("::","g".split("u").join(""));
	s = s.replace(_this_r,"/");
	var _this_r = new RegExp("([A-Z]+)([A-Z][a-z])","g".split("u").join(""));
	s = s.replace(_this_r,"$1_$2");
	var _this_r = new RegExp("([a-z\\d])([A-Z])","g".split("u").join(""));
	s = s.replace(_this_r,"$1_$2");
	var _this_r = new RegExp("-","g".split("u").join(""));
	s = s.replace(_this_r,"_");
	return s.toLowerCase();
};
thx_Strings.upperCaseFirst = function(value) {
	return value.substring(0,1).toUpperCase() + value.substring(1);
};
thx_Strings.upTo = function(value,searchFor) {
	var pos = value.indexOf(searchFor);
	if(pos < 0) {
		return value;
	} else {
		return value.substring(0,pos);
	}
};
thx_Strings.wrapColumns = function(s,columns,indent,newline) {
	if(newline == null) {
		newline = "\n";
	}
	if(indent == null) {
		indent = "";
	}
	if(columns == null) {
		columns = 78;
	}
	var _this = thx_Strings.SPLIT_LINES.split(s);
	var result = new Array(_this.length);
	var _g = 0;
	var _g1 = _this.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = thx_Strings.wrapLine(StringTools.trim(_this[i].replace(thx_Strings.WSG.r," ")),columns,indent,newline);
	}
	return result.join(newline);
};
thx_Strings.upperMatch = function(re) {
	return re.matched(0).toUpperCase();
};
thx_Strings.wrapLine = function(s,columns,indent,newline) {
	var parts = [];
	var pos = 0;
	var len = s.length;
	var ilen = indent.length;
	columns -= ilen;
	while(true) {
		if(pos + columns >= len - ilen) {
			parts.push(s.substring(pos));
			break;
		}
		var i = 0;
		while(!StringTools.isSpace(s,pos + columns - i) && i < columns) ++i;
		if(i == columns) {
			i = 0;
			while(!StringTools.isSpace(s,pos + columns + i) && pos + columns + i < len) ++i;
			parts.push(s.substring(pos,pos + columns + i));
			pos += columns + i + 1;
		} else {
			parts.push(s.substring(pos,pos + columns - i));
			pos += columns - i + 1;
		}
	}
	return indent + parts.join(newline + indent);
};
thx_Strings.lpad = function(s,char,length) {
	var diff = length - s.length;
	if(diff > 0) {
		return thx_Strings.repeat(char,diff) + s;
	} else {
		return s;
	}
};
thx_Strings.rpad = function(s,char,length) {
	var diff = length - s.length;
	if(diff > 0) {
		return s + thx_Strings.repeat(char,diff);
	} else {
		return s;
	}
};
var thx_Time = {};
thx_Time.__properties__ = {get_isNegative:"get_isNegative",get_totalMicroseconds:"get_totalMicroseconds",get_totalMilliseconds:"get_totalMilliseconds",get_totalSeconds:"get_totalSeconds",get_totalMinutes:"get_totalMinutes",get_totalHours:"get_totalHours",get_totalDays:"get_totalDays",get_ticksInSecond:"get_ticksInSecond",get_microseconds:"get_microseconds",get_milliseconds:"get_milliseconds",get_seconds:"get_seconds",get_minutes:"get_minutes",get_hours:"get_hours",get_days:"get_days",get_ticks:"get_ticks"};
thx_Time.fromDays = function(days) {
	return thx_Time.create(24 * days,0,0,0);
};
thx_Time.fromHours = function(hours) {
	return thx_Time.create(hours,0,0,0);
};
thx_Time.fromMinutes = function(minutes) {
	return thx_Time.create(0,minutes,0,0);
};
thx_Time.fromSeconds = function(seconds) {
	return thx_Time.create(0,0,seconds,0);
};
thx_Time.fromMilliseconds = function(milliseconds) {
	return thx_Time.create(0,0,0,milliseconds);
};
thx_Time.timeToTicks = function(hours,minutes,seconds) {
	var x = hours * 3600;
	var a_high = x >> 31;
	var a_low = x;
	var x = minutes * 60;
	var b_high = x >> 31;
	var b_low = x;
	var high = a_high + b_high | 0;
	var low = a_low + b_low | 0;
	if(haxe_Int32.ucompare(low,a_low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var a_high = high;
	var a_low = low;
	var b_high = seconds >> 31;
	var b_low = seconds;
	var high = a_high + b_high | 0;
	var low = a_low + b_low | 0;
	if(haxe_Int32.ucompare(low,a_low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var totalSeconds_high = high;
	var totalSeconds_low = low;
	var b = thx_DateTimeUtc.ticksPerSecondI64;
	var mask = 65535;
	var al = totalSeconds_low & mask;
	var ah = totalSeconds_low >>> 16;
	var bl = b.low & mask;
	var bh = b.low >>> 16;
	var p00 = haxe_Int32._mul(al,bl);
	var p10 = haxe_Int32._mul(ah,bl);
	var p01 = haxe_Int32._mul(al,bh);
	var p11 = haxe_Int32._mul(ah,bh);
	var low = p00;
	var high = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
	p01 <<= 16;
	low = low + p01 | 0;
	if(haxe_Int32.ucompare(low,p01) < 0) {
		var ret = high++;
		high = high | 0;
	}
	p10 <<= 16;
	low = low + p10 | 0;
	if(haxe_Int32.ucompare(low,p10) < 0) {
		var ret = high++;
		high = high | 0;
	}
	high = high + (haxe_Int32._mul(totalSeconds_low,b.high) + haxe_Int32._mul(totalSeconds_high,b.low) | 0) | 0;
	var this1 = new haxe__$Int64__$_$_$Int64(high,low);
	return this1;
};
thx_Time.is = function(v) {
	return ((v) instanceof haxe__$Int64__$_$_$Int64);
};
thx_Time.fromString = function(s) {
	var pattern = new EReg("^([-+])?(?:(\\d+)[.](\\d{1,2})|(\\d+))[:](\\d{2})(?:[:](\\d{2})(?:\\.(\\d+))?)?$","");
	if(!pattern.match(s)) {
		throw new thx_Error("unable to parse Time string: \"" + s + "\"",null,{ fileName : "thx/Time.hx", lineNumber : 45, className : "thx._Time.Time_Impl_", methodName : "fromString"});
	}
	var smticks = pattern.matched(7);
	var mticks = 0;
	if(null != smticks) {
		smticks = "1" + thx_Strings.rpad(smticks,"0",7).substring(0,7);
		mticks = Std.parseInt(smticks) - 10000000;
	}
	var days = 0;
	var hours = 0;
	var minutes = Std.parseInt(pattern.matched(5));
	var seconds = Std.parseInt(pattern.matched(6));
	if(null != pattern.matched(2)) {
		days = Std.parseInt(pattern.matched(2));
		hours = Std.parseInt(pattern.matched(3));
	} else {
		hours = Std.parseInt(pattern.matched(4));
	}
	var that_high = mticks >> 31;
	var that_low = mticks;
	var a = thx_Time.create(days * 24 + hours,minutes,seconds);
	var high = a.high + that_high | 0;
	var low = a.low + that_low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this1 = new haxe__$Int64__$_$_$Int64(high,low);
	var this2 = this1;
	var time = this2;
	if(pattern.matched(1) == "-") {
		var x = time;
		var high = ~x.high;
		var low = ~x.low + 1 | 0;
		if(low == 0) {
			var ret = high++;
			high = high | 0;
		}
		var this1 = new haxe__$Int64__$_$_$Int64(high,low);
		var this2 = this1;
		return this2;
	} else {
		return time;
	}
};
thx_Time.compare = function(a,b) {
	return thx_Int64s.compare(a,b);
};
thx_Time.create = function(hours,minutes,seconds,milliseconds) {
	if(milliseconds == null) {
		milliseconds = 0;
	}
	if(seconds == null) {
		seconds = 0;
	}
	if(minutes == null) {
		minutes = 0;
	}
	var a = thx_Time.timeToTicks(hours,minutes,seconds);
	var a_high = milliseconds >> 31;
	var a_low = milliseconds;
	var b = thx_DateTimeUtc.ticksPerMillisecondI64;
	var mask = 65535;
	var al = a_low & mask;
	var ah = a_low >>> 16;
	var bl = b.low & mask;
	var bh = b.low >>> 16;
	var p00 = haxe_Int32._mul(al,bl);
	var p10 = haxe_Int32._mul(ah,bl);
	var p01 = haxe_Int32._mul(al,bh);
	var p11 = haxe_Int32._mul(ah,bh);
	var low = p00;
	var high = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
	p01 <<= 16;
	low = low + p01 | 0;
	if(haxe_Int32.ucompare(low,p01) < 0) {
		var ret = high++;
		high = high | 0;
	}
	p10 <<= 16;
	low = low + p10 | 0;
	if(haxe_Int32.ucompare(low,p10) < 0) {
		var ret = high++;
		high = high | 0;
	}
	high = high + (haxe_Int32._mul(a_low,b.high) + haxe_Int32._mul(a_high,b.low) | 0) | 0;
	var b_high = high;
	var b_low = low;
	var high = a.high + b_high | 0;
	var low = a.low + b_low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this1 = new haxe__$Int64__$_$_$Int64(high,low);
	var this2 = this1;
	return this2;
};
thx_Time.createDays = function(days,hours,minutes,seconds,milliseconds) {
	if(milliseconds == null) {
		milliseconds = 0;
	}
	if(seconds == null) {
		seconds = 0;
	}
	if(minutes == null) {
		minutes = 0;
	}
	if(hours == null) {
		hours = 0;
	}
	return thx_Time.create(days * 24 + hours,minutes,seconds,milliseconds);
};
thx_Time._new = function(ticks) {
	var this1 = ticks;
	return this1;
};
thx_Time.abs = function(this1) {
	var a = this1;
	var b_high = 0;
	var b_low = 0;
	var v = a.high - b_high | 0;
	if(v == 0) {
		v = haxe_Int32.ucompare(a.low,b_low);
	}
	if((a.high < 0 ? b_high < 0 ? v : -1 : b_high >= 0 ? v : 1) < 0) {
		var x = this1;
		var high = ~x.high;
		var low = ~x.low + 1 | 0;
		if(low == 0) {
			var ret = high++;
			high = high | 0;
		}
		var this2 = new haxe__$Int64__$_$_$Int64(high,low);
		var this3 = this2;
		return this3;
	} else {
		var this2 = this1;
		return this2;
	}
};
thx_Time.withHours = function(this1,hours) {
	var a = haxe_Int64.divMod(this1,thx_DateTimeUtc.ticksPerMinuteI64).quotient;
	var this2 = new haxe__$Int64__$_$_$Int64(0,60);
	var x = haxe_Int64.divMod(a,this2).modulus;
	if(x.high != x.low >> 31) {
		throw haxe_Exception.thrown("Overflow");
	}
	var tmp = x.low;
	var a = haxe_Int64.divMod(this1,thx_DateTimeUtc.ticksPerSecondI64).quotient;
	var this2 = new haxe__$Int64__$_$_$Int64(0,60);
	var x = haxe_Int64.divMod(a,this2).modulus;
	if(x.high != x.low >> 31) {
		throw haxe_Exception.thrown("Overflow");
	}
	var tmp1 = x.low;
	var x = haxe_Int64.divMod(haxe_Int64.divMod(this1,thx_DateTimeUtc.ticksPerMillisecondI64).quotient,thx_DateTimeUtc.thousandI64).modulus;
	if(x.high != x.low >> 31) {
		throw haxe_Exception.thrown("Overflow");
	}
	return thx_Time.create(hours,tmp,tmp1,x.low);
};
thx_Time.withMinutes = function(this1,minutes) {
	var a = haxe_Int64.divMod(this1,thx_DateTimeUtc.ticksPerHourI64).quotient;
	var this2 = new haxe__$Int64__$_$_$Int64(0,24);
	var x = haxe_Int64.divMod(a,this2).modulus;
	if(x.high != x.low >> 31) {
		throw haxe_Exception.thrown("Overflow");
	}
	var tmp = x.low;
	var a = haxe_Int64.divMod(this1,thx_DateTimeUtc.ticksPerSecondI64).quotient;
	var this2 = new haxe__$Int64__$_$_$Int64(0,60);
	var x = haxe_Int64.divMod(a,this2).modulus;
	if(x.high != x.low >> 31) {
		throw haxe_Exception.thrown("Overflow");
	}
	var tmp1 = x.low;
	var x = haxe_Int64.divMod(haxe_Int64.divMod(this1,thx_DateTimeUtc.ticksPerMillisecondI64).quotient,thx_DateTimeUtc.thousandI64).modulus;
	if(x.high != x.low >> 31) {
		throw haxe_Exception.thrown("Overflow");
	}
	return thx_Time.create(tmp,minutes,tmp1,x.low);
};
thx_Time.withSeconds = function(this1,seconds) {
	var a = haxe_Int64.divMod(this1,thx_DateTimeUtc.ticksPerHourI64).quotient;
	var this2 = new haxe__$Int64__$_$_$Int64(0,24);
	var x = haxe_Int64.divMod(a,this2).modulus;
	if(x.high != x.low >> 31) {
		throw haxe_Exception.thrown("Overflow");
	}
	var tmp = x.low;
	var a = haxe_Int64.divMod(this1,thx_DateTimeUtc.ticksPerMinuteI64).quotient;
	var this2 = new haxe__$Int64__$_$_$Int64(0,60);
	var x = haxe_Int64.divMod(a,this2).modulus;
	if(x.high != x.low >> 31) {
		throw haxe_Exception.thrown("Overflow");
	}
	var tmp1 = x.low;
	var x = haxe_Int64.divMod(haxe_Int64.divMod(this1,thx_DateTimeUtc.ticksPerMillisecondI64).quotient,thx_DateTimeUtc.thousandI64).modulus;
	if(x.high != x.low >> 31) {
		throw haxe_Exception.thrown("Overflow");
	}
	return thx_Time.create(tmp,tmp1,seconds,x.low);
};
thx_Time.withMilliseconds = function(this1,milliseconds) {
	var a = haxe_Int64.divMod(this1,thx_DateTimeUtc.ticksPerHourI64).quotient;
	var this2 = new haxe__$Int64__$_$_$Int64(0,24);
	var x = haxe_Int64.divMod(a,this2).modulus;
	if(x.high != x.low >> 31) {
		throw haxe_Exception.thrown("Overflow");
	}
	var tmp = x.low;
	var a = haxe_Int64.divMod(this1,thx_DateTimeUtc.ticksPerMinuteI64).quotient;
	var this2 = new haxe__$Int64__$_$_$Int64(0,60);
	var x = haxe_Int64.divMod(a,this2).modulus;
	if(x.high != x.low >> 31) {
		throw haxe_Exception.thrown("Overflow");
	}
	var tmp1 = x.low;
	var a = haxe_Int64.divMod(this1,thx_DateTimeUtc.ticksPerSecondI64).quotient;
	var this1 = new haxe__$Int64__$_$_$Int64(0,60);
	var x = haxe_Int64.divMod(a,this1).modulus;
	if(x.high != x.low >> 31) {
		throw haxe_Exception.thrown("Overflow");
	}
	return thx_Time.create(tmp,tmp1,x.low,milliseconds);
};
thx_Time.negate = function(this1) {
	var x = this1;
	var high = ~x.high;
	var low = ~x.low + 1 | 0;
	if(low == 0) {
		var ret = high++;
		high = high | 0;
	}
	var this1 = new haxe__$Int64__$_$_$Int64(high,low);
	var this2 = this1;
	return this2;
};
thx_Time.add = function(this1,that) {
	var a = this1;
	var b = that;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this1 = new haxe__$Int64__$_$_$Int64(high,low);
	var this2 = this1;
	return this2;
};
thx_Time.addTicks = function(this1,that) {
	var a = this1;
	var high = a.high + that.high | 0;
	var low = a.low + that.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this1 = new haxe__$Int64__$_$_$Int64(high,low);
	var this2 = this1;
	return this2;
};
thx_Time.subtract = function(this1,that) {
	var a = this1;
	var b = that;
	var high = a.high - b.high | 0;
	var low = a.low - b.low | 0;
	if(haxe_Int32.ucompare(a.low,b.low) < 0) {
		var ret = high--;
		high = high | 0;
	}
	var this1 = new haxe__$Int64__$_$_$Int64(high,low);
	var this2 = this1;
	return this2;
};
thx_Time.compareTo = function(this1,that) {
	return thx_Int64s.compare(this1,that);
};
thx_Time.equalsTo = function(this1,that) {
	var a = this1;
	var b = that;
	if(a.high == b.high) {
		return a.low == b.low;
	} else {
		return false;
	}
};
thx_Time.equals = function(self,that) {
	var a = self;
	var b = that;
	if(a.high == b.high) {
		return a.low == b.low;
	} else {
		return false;
	}
};
thx_Time.notEqualsTo = function(self,that) {
	var a = self;
	var b = that;
	if(a.high == b.high) {
		return a.low != b.low;
	} else {
		return true;
	}
};
thx_Time.notEquals = function(this1,that) {
	var a = this1;
	var b = that;
	if(a.high == b.high) {
		return a.low != b.low;
	} else {
		return true;
	}
};
thx_Time.greaterThan = function(self,that) {
	var a = self;
	var b = that;
	var v = a.high - b.high | 0;
	if(v == 0) {
		v = haxe_Int32.ucompare(a.low,b.low);
	}
	return (a.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) > 0;
};
thx_Time.greater = function(this1,that) {
	return thx_Int64s.compare(this1,that) > 0;
};
thx_Time.greaterEqualsTo = function(self,that) {
	var a = self;
	var b = that;
	var v = a.high - b.high | 0;
	if(v == 0) {
		v = haxe_Int32.ucompare(a.low,b.low);
	}
	return (a.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) >= 0;
};
thx_Time.greaterEquals = function(this1,that) {
	return thx_Int64s.compare(this1,that) >= 0;
};
thx_Time.lessThan = function(self,that) {
	var a = self;
	var b = that;
	var v = a.high - b.high | 0;
	if(v == 0) {
		v = haxe_Int32.ucompare(a.low,b.low);
	}
	return (a.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) < 0;
};
thx_Time.less = function(this1,that) {
	return thx_Int64s.compare(this1,that) < 0;
};
thx_Time.lessEqualsTo = function(self,that) {
	var a = self;
	var b = that;
	var v = a.high - b.high | 0;
	if(v == 0) {
		v = haxe_Int32.ucompare(a.low,b.low);
	}
	return (a.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) <= 0;
};
thx_Time.lessEquals = function(this1,that) {
	return thx_Int64s.compare(this1,that) <= 0;
};
thx_Time.toDateTimeUtc = function(this1) {
	var this2 = this1;
	return this2;
};
thx_Time.toString = function(this1) {
	var timeAbs = thx_Time.abs(this1);
	var x = haxe_Int64.divMod(timeAbs,thx_DateTimeUtc.ticksPerSecondI64).modulus;
	if(x.high != x.low >> 31) {
		throw haxe_Exception.thrown("Overflow");
	}
	var ticksInSecondAbs = x.low;
	var decimals = ticksInSecondAbs != 0 ? "." + thx_Strings.trimCharsRight(thx_Ints.lpad(ticksInSecondAbs,"0",7),"0") : "";
	var a = this1;
	var b_high = 0;
	var b_low = 0;
	var v = a.high - b_high | 0;
	if(v == 0) {
		v = haxe_Int32.ucompare(a.low,b_low);
	}
	var tmp = a.high < 0 ? b_high < 0 ? v : -1 : b_high >= 0 ? v : 1;
	var tmp1 = haxe_Int64.divMod(timeAbs,thx_DateTimeUtc.ticksPerHourI64).quotient;
	var tmp2 = tmp1 == null ? "null" : haxe_Int64.toString(tmp1);
	var a = haxe_Int64.divMod(timeAbs,thx_DateTimeUtc.ticksPerMinuteI64).quotient;
	var this1 = new haxe__$Int64__$_$_$Int64(0,60);
	var x = haxe_Int64.divMod(a,this1).modulus;
	if(x.high != x.low >> 31) {
		throw haxe_Exception.thrown("Overflow");
	}
	var tmp1 = "" + tmp2 + ":" + thx_Ints.lpad(x.low,"0",2) + ":";
	var a = haxe_Int64.divMod(timeAbs,thx_DateTimeUtc.ticksPerSecondI64).quotient;
	var this1 = new haxe__$Int64__$_$_$Int64(0,60);
	var x = haxe_Int64.divMod(a,this1).modulus;
	if(x.high != x.low >> 31) {
		throw haxe_Exception.thrown("Overflow");
	}
	return (tmp < 0 ? "-" : "") + (tmp1 + thx_Ints.lpad(x.low,"0",2)) + decimals;
};
thx_Time.toGmtString = function(this1) {
	var x = haxe_Int64.divMod(this1,thx_DateTimeUtc.ticksPerHourI64).quotient;
	if(x.high != x.low >> 31) {
		throw haxe_Exception.thrown("Overflow");
	}
	var h = thx_Ints.lpad(x.low,"0",2);
	var a = this1;
	var b_high = 0;
	var b_low = 0;
	var v = a.high - b_high | 0;
	if(v == 0) {
		v = haxe_Int32.ucompare(a.low,b_low);
	}
	if((a.high < 0 ? b_high < 0 ? v : -1 : b_high >= 0 ? v : 1) >= 0) {
		h = "+" + h;
	}
	var a = haxe_Int64.divMod(this1,thx_DateTimeUtc.ticksPerMinuteI64).quotient;
	var this1 = new haxe__$Int64__$_$_$Int64(0,60);
	var x = haxe_Int64.divMod(a,this1).modulus;
	if(x.high != x.low >> 31) {
		throw haxe_Exception.thrown("Overflow");
	}
	return "" + h + ":" + thx_Ints.lpad(x.low,"0",2);
};
thx_Time.get_ticks = function(this1) {
	return this1;
};
thx_Time.get_days = function(this1) {
	var x = haxe_Int64.divMod(this1,thx_DateTimeUtc.ticksPerDayI64).quotient;
	if(x.high != x.low >> 31) {
		throw haxe_Exception.thrown("Overflow");
	}
	return x.low;
};
thx_Time.get_hours = function(this1) {
	var a = haxe_Int64.divMod(this1,thx_DateTimeUtc.ticksPerHourI64).quotient;
	var this1 = new haxe__$Int64__$_$_$Int64(0,24);
	var x = haxe_Int64.divMod(a,this1).modulus;
	if(x.high != x.low >> 31) {
		throw haxe_Exception.thrown("Overflow");
	}
	return x.low;
};
thx_Time.get_minutes = function(this1) {
	var a = haxe_Int64.divMod(this1,thx_DateTimeUtc.ticksPerMinuteI64).quotient;
	var this1 = new haxe__$Int64__$_$_$Int64(0,60);
	var x = haxe_Int64.divMod(a,this1).modulus;
	if(x.high != x.low >> 31) {
		throw haxe_Exception.thrown("Overflow");
	}
	return x.low;
};
thx_Time.get_seconds = function(this1) {
	var a = haxe_Int64.divMod(this1,thx_DateTimeUtc.ticksPerSecondI64).quotient;
	var this1 = new haxe__$Int64__$_$_$Int64(0,60);
	var x = haxe_Int64.divMod(a,this1).modulus;
	if(x.high != x.low >> 31) {
		throw haxe_Exception.thrown("Overflow");
	}
	return x.low;
};
thx_Time.get_milliseconds = function(this1) {
	var x = haxe_Int64.divMod(haxe_Int64.divMod(this1,thx_DateTimeUtc.ticksPerMillisecondI64).quotient,thx_DateTimeUtc.thousandI64).modulus;
	if(x.high != x.low >> 31) {
		throw haxe_Exception.thrown("Overflow");
	}
	return x.low;
};
thx_Time.get_microseconds = function(this1) {
	var x = haxe_Int64.divMod(haxe_Int64.divMod(this1,thx_DateTimeUtc.ticksPerMicrosecondI64).quotient,thx_DateTimeUtc.tenThousandI64).modulus;
	if(x.high != x.low >> 31) {
		throw haxe_Exception.thrown("Overflow");
	}
	return x.low;
};
thx_Time.get_ticksInSecond = function(this1) {
	var x = haxe_Int64.divMod(this1,thx_DateTimeUtc.ticksPerSecondI64).modulus;
	if(x.high != x.low >> 31) {
		throw haxe_Exception.thrown("Overflow");
	}
	return x.low;
};
thx_Time.get_totalDays = function(this1) {
	return haxe_Int64.divMod(this1,thx_DateTimeUtc.ticksPerDayI64).quotient;
};
thx_Time.get_totalHours = function(this1) {
	return haxe_Int64.divMod(this1,thx_DateTimeUtc.ticksPerHourI64).quotient;
};
thx_Time.get_totalMinutes = function(this1) {
	return haxe_Int64.divMod(this1,thx_DateTimeUtc.ticksPerMinuteI64).quotient;
};
thx_Time.get_totalSeconds = function(this1) {
	return haxe_Int64.divMod(this1,thx_DateTimeUtc.ticksPerSecondI64).quotient;
};
thx_Time.get_totalMilliseconds = function(this1) {
	return haxe_Int64.divMod(this1,thx_DateTimeUtc.ticksPerMillisecondI64).quotient;
};
thx_Time.get_totalMicroseconds = function(this1) {
	return haxe_Int64.divMod(this1,thx_DateTimeUtc.ticksPerMicrosecondI64).quotient;
};
thx_Time.get_isNegative = function(this1) {
	var a = this1;
	var b_high = 0;
	var b_low = 0;
	var v = a.high - b_high | 0;
	if(v == 0) {
		v = haxe_Int32.ucompare(a.low,b_low);
	}
	return (a.high < 0 ? b_high < 0 ? v : -1 : b_high >= 0 ? v : 1) < 0;
};
var thx_TimePeriod = $hxEnums["thx.TimePeriod"] = { __ename__:"thx.TimePeriod",__constructs__:null
	,Second: {_hx_name:"Second",_hx_index:0,__enum__:"thx.TimePeriod",toString:$estr}
	,Minute: {_hx_name:"Minute",_hx_index:1,__enum__:"thx.TimePeriod",toString:$estr}
	,Hour: {_hx_name:"Hour",_hx_index:2,__enum__:"thx.TimePeriod",toString:$estr}
	,Day: {_hx_name:"Day",_hx_index:3,__enum__:"thx.TimePeriod",toString:$estr}
	,Week: {_hx_name:"Week",_hx_index:4,__enum__:"thx.TimePeriod",toString:$estr}
	,Month: {_hx_name:"Month",_hx_index:5,__enum__:"thx.TimePeriod",toString:$estr}
	,Year: {_hx_name:"Year",_hx_index:6,__enum__:"thx.TimePeriod",toString:$estr}
};
thx_TimePeriod.__constructs__ = [thx_TimePeriod.Second,thx_TimePeriod.Minute,thx_TimePeriod.Hour,thx_TimePeriod.Day,thx_TimePeriod.Week,thx_TimePeriod.Month,thx_TimePeriod.Year];
var thx_Timestamp = {};
thx_Timestamp.create = function(year,month,day,hour,minute,second) {
	return thx_Dates.create(year,month,day,hour,minute,second).getTime();
};
thx_Timestamp.now = function() {
	return new Date().getTime();
};
thx_Timestamp.fromDate = function(d) {
	return d.getTime();
};
thx_Timestamp.fromString = function(s) {
	return HxOverrides.strDate(s).getTime();
};
thx_Timestamp.toDate = function(this1) {
	return new Date(this1);
};
thx_Timestamp.toString = function(this1) {
	return HxOverrides.dateStr(new Date(this1));
};
thx_Timestamp.snapNext = function(this1,period) {
	switch(period._hx_index) {
	case 0:
		return Math.ceil(this1 / 1000.0) * 1000.0;
	case 1:
		return Math.ceil(this1 / 60000.0) * 60000.0;
	case 2:
		return Math.ceil(this1 / 3600000.0) * 3600000.0;
	case 3:
		var d = new Date(this1);
		return thx_Dates.create(d.getFullYear(),d.getMonth(),d.getDate() + 1,0,0,0).getTime();
	case 4:
		var d = new Date(this1);
		var wd = d.getDay();
		return thx_Dates.create(d.getFullYear(),d.getMonth(),d.getDate() + 7 - wd,0,0,0).getTime();
	case 5:
		var d = new Date(this1);
		return thx_Dates.create(d.getFullYear(),d.getMonth() + 1,1,0,0,0).getTime();
	case 6:
		var d = new Date(this1);
		return thx_Dates.create(d.getFullYear() + 1,0,1,0,0,0).getTime();
	}
};
thx_Timestamp.snapPrev = function(this1,period) {
	switch(period._hx_index) {
	case 0:
		return Math.floor(this1 / 1000.0) * 1000.0;
	case 1:
		return Math.floor(this1 / 60000.0) * 60000.0;
	case 2:
		return Math.floor(this1 / 3600000.0) * 3600000.0;
	case 3:
		var d = new Date(this1);
		return thx_Dates.create(d.getFullYear(),d.getMonth(),d.getDate(),0,0,0).getTime();
	case 4:
		var d = new Date(this1);
		var wd = d.getDay();
		return thx_Dates.create(d.getFullYear(),d.getMonth(),d.getDate() - wd,0,0,0).getTime();
	case 5:
		var d = new Date(this1);
		return thx_Dates.create(d.getFullYear(),d.getMonth(),1,0,0,0).getTime();
	case 6:
		var d = new Date(this1);
		return thx_Dates.create(d.getFullYear(),0,1,0,0,0).getTime();
	}
};
thx_Timestamp.snapTo = function(this1,period) {
	switch(period._hx_index) {
	case 0:
		return Math.round(this1 / 1000.0) * 1000.0;
	case 1:
		return Math.round(this1 / 60000.0) * 60000.0;
	case 2:
		return Math.round(this1 / 3600000.0) * 3600000.0;
	case 3:
		var d = new Date(this1);
		var mod = d.getHours() >= 12 ? 1 : 0;
		return thx_Dates.create(d.getFullYear(),d.getMonth(),d.getDate() + mod,0,0,0).getTime();
	case 4:
		var d = new Date(this1);
		var wd = d.getDay();
		var mod = wd < 3 ? -wd : wd > 3 ? 7 - wd : d.getHours() < 12 ? -wd : 7 - wd;
		return thx_Dates.create(d.getFullYear(),d.getMonth(),d.getDate() + mod,0,0,0).getTime();
	case 5:
		var d = new Date(this1);
		var mod = d.getDate() > Math.round(DateTools.getMonthDays(d) / 2) ? 1 : 0;
		return thx_Dates.create(d.getFullYear(),d.getMonth() + mod,1,0,0,0).getTime();
	case 6:
		var d = new Date(this1);
		var mod = this1 > new Date(d.getFullYear(),6,2,0,0,0).getTime() ? 1 : 0;
		return thx_Dates.create(d.getFullYear() + mod,0,1,0,0,0).getTime();
	}
};
thx_Timestamp.r = function(t,v) {
	return Math.round(t / v) * v;
};
thx_Timestamp.f = function(t,v) {
	return Math.floor(t / v) * v;
};
thx_Timestamp.c = function(t,v) {
	return Math.ceil(t / v) * v;
};
var thx_Tuple0 = {};
thx_Tuple0._new = function() {
	var this1 = thx_Nil.nil;
	return this1;
};
thx_Tuple0.with = function(this1,v) {
	var this1 = v;
	return this1;
};
thx_Tuple0.toString = function(this1) {
	return "Tuple0()";
};
thx_Tuple0.toNil = function(this1) {
	return this1;
};
thx_Tuple0.nilToTuple = function(v) {
	var this1 = thx_Nil.nil;
	return this1;
};
var thx_Tuple1 = {};
thx_Tuple1.__properties__ = {get__0:"get__0"};
thx_Tuple1._new = function(_0) {
	var this1 = _0;
	return this1;
};
thx_Tuple1.get__0 = function(this1) {
	return this1;
};
thx_Tuple1.with = function(this1,v) {
	var this2 = { _0 : this1, _1 : v};
	return this2;
};
thx_Tuple1.toString = function(this1) {
	return "Tuple1(" + Std.string(this1) + ")";
};
thx_Tuple1.arrayToTuple = function(v) {
	var this1 = v[0];
	return this1;
};
var thx_Tuple2 = {};
thx_Tuple2.__properties__ = {get_right:"get_right",get_left:"get_left"};
thx_Tuple2.of = function(_0,_1) {
	var this1 = { _0 : _0, _1 : _1};
	return this1;
};
thx_Tuple2._new = function(_0,_1) {
	var this1 = { _0 : _0, _1 : _1};
	return this1;
};
thx_Tuple2.get_left = function(this1) {
	return this1._0;
};
thx_Tuple2.get_right = function(this1) {
	return this1._1;
};
thx_Tuple2.flip = function(this1) {
	return { _0 : this1._1, _1 : this1._0};
};
thx_Tuple2.dropLeft = function(this1) {
	var this2 = this1._1;
	return this2;
};
thx_Tuple2.dropRight = function(this1) {
	var this2 = this1._0;
	return this2;
};
thx_Tuple2.with = function(this1,v) {
	var this2 = { _0 : this1._0, _1 : this1._1, _2 : v};
	return this2;
};
thx_Tuple2.toString = function(this1) {
	return "Tuple2(" + Std.string(this1._0) + "," + Std.string(this1._1) + ")";
};
thx_Tuple2.map = function(this1,f) {
	var this2 = { _0 : this1._0, _1 : f(this1._1)};
	return this2;
};
thx_Tuple2.squeeze = function(f) {
	return function(tp) {
		return f(tp._0,tp._1);
	};
};
thx_Tuple2.arrayToTuple2 = function(v) {
	var this1 = { _0 : v[0], _1 : v[1]};
	return this1;
};
var thx_Tuple3 = {};
thx_Tuple3.of = function(_0,_1,_2) {
	var this1 = { _0 : _0, _1 : _1, _2 : _2};
	return this1;
};
thx_Tuple3._new = function(_0,_1,_2) {
	var this1 = { _0 : _0, _1 : _1, _2 : _2};
	return this1;
};
thx_Tuple3.flip = function(this1) {
	return { _0 : this1._2, _1 : this1._1, _2 : this1._0};
};
thx_Tuple3.dropLeft = function(this1) {
	var this2 = { _0 : this1._1, _1 : this1._2};
	return this2;
};
thx_Tuple3.dropRight = function(this1) {
	var this2 = { _0 : this1._0, _1 : this1._1};
	return this2;
};
thx_Tuple3.with = function(this1,v) {
	var this2 = { _0 : this1._0, _1 : this1._1, _2 : this1._2, _3 : v};
	return this2;
};
thx_Tuple3.toString = function(this1) {
	return "Tuple3(" + Std.string(this1._0) + "," + Std.string(this1._1) + "," + Std.string(this1._2) + ")";
};
thx_Tuple3.arrayToTuple3 = function(v) {
	var this1 = { _0 : v[0], _1 : v[1], _2 : v[2]};
	return this1;
};
thx_Tuple3.map = function(this1,f) {
	var this2 = { _0 : this1._0, _1 : this1._1, _2 : f(this1._2)};
	return this2;
};
var thx_Tuple4 = {};
thx_Tuple4.of = function(_0,_1,_2,_3) {
	var this1 = { _0 : _0, _1 : _1, _2 : _2, _3 : _3};
	return this1;
};
thx_Tuple4._new = function(_0,_1,_2,_3) {
	var this1 = { _0 : _0, _1 : _1, _2 : _2, _3 : _3};
	return this1;
};
thx_Tuple4.flip = function(this1) {
	return { _0 : this1._3, _1 : this1._2, _2 : this1._1, _3 : this1._0};
};
thx_Tuple4.dropLeft = function(this1) {
	var this2 = { _0 : this1._1, _1 : this1._2, _2 : this1._3};
	return this2;
};
thx_Tuple4.dropRight = function(this1) {
	var this2 = { _0 : this1._0, _1 : this1._1, _2 : this1._2};
	return this2;
};
thx_Tuple4.with = function(this1,v) {
	var this2 = { _0 : this1._0, _1 : this1._1, _2 : this1._2, _3 : this1._3, _4 : v};
	return this2;
};
thx_Tuple4.toString = function(this1) {
	return "Tuple4(" + Std.string(this1._0) + "," + Std.string(this1._1) + "," + Std.string(this1._2) + "," + Std.string(this1._3) + ")";
};
thx_Tuple4.arrayToTuple4 = function(v) {
	var this1 = { _0 : v[0], _1 : v[1], _2 : v[2], _3 : v[3]};
	return this1;
};
var thx_Tuple5 = {};
thx_Tuple5.of = function(_0,_1,_2,_3,_4) {
	var this1 = { _0 : _0, _1 : _1, _2 : _2, _3 : _3, _4 : _4};
	return this1;
};
thx_Tuple5._new = function(_0,_1,_2,_3,_4) {
	var this1 = { _0 : _0, _1 : _1, _2 : _2, _3 : _3, _4 : _4};
	return this1;
};
thx_Tuple5.flip = function(this1) {
	return { _0 : this1._4, _1 : this1._3, _2 : this1._2, _3 : this1._1, _4 : this1._0};
};
thx_Tuple5.dropLeft = function(this1) {
	var this2 = { _0 : this1._1, _1 : this1._2, _2 : this1._3, _3 : this1._4};
	return this2;
};
thx_Tuple5.dropRight = function(this1) {
	var this2 = { _0 : this1._0, _1 : this1._1, _2 : this1._2, _3 : this1._3};
	return this2;
};
thx_Tuple5.with = function(this1,v) {
	var this2 = { _0 : this1._0, _1 : this1._1, _2 : this1._2, _3 : this1._3, _4 : this1._4, _5 : v};
	return this2;
};
thx_Tuple5.toString = function(this1) {
	return "Tuple5(" + Std.string(this1._0) + "," + Std.string(this1._1) + "," + Std.string(this1._2) + "," + Std.string(this1._3) + "," + Std.string(this1._4) + ")";
};
thx_Tuple5.arrayToTuple5 = function(v) {
	var this1 = { _0 : v[0], _1 : v[1], _2 : v[2], _3 : v[3], _4 : v[4]};
	return this1;
};
var thx_Tuple6 = {};
thx_Tuple6.of = function(_0,_1,_2,_3,_4,_5) {
	var this1 = { _0 : _0, _1 : _1, _2 : _2, _3 : _3, _4 : _4, _5 : _5};
	return this1;
};
thx_Tuple6._new = function(_0,_1,_2,_3,_4,_5) {
	var this1 = { _0 : _0, _1 : _1, _2 : _2, _3 : _3, _4 : _4, _5 : _5};
	return this1;
};
thx_Tuple6.flip = function(this1) {
	return { _0 : this1._5, _1 : this1._4, _2 : this1._3, _3 : this1._2, _4 : this1._1, _5 : this1._0};
};
thx_Tuple6.dropLeft = function(this1) {
	var this2 = { _0 : this1._1, _1 : this1._2, _2 : this1._3, _3 : this1._4, _4 : this1._5};
	return this2;
};
thx_Tuple6.dropRight = function(this1) {
	var this2 = { _0 : this1._0, _1 : this1._1, _2 : this1._2, _3 : this1._3, _4 : this1._4};
	return this2;
};
thx_Tuple6.toString = function(this1) {
	return "Tuple6(" + Std.string(this1._0) + "," + Std.string(this1._1) + "," + Std.string(this1._2) + "," + Std.string(this1._3) + "," + Std.string(this1._4) + "," + Std.string(this1._5) + ")";
};
thx_Tuple6.arrayToTuple6 = function(v) {
	var this1 = { _0 : v[0], _1 : v[1], _2 : v[2], _3 : v[3], _4 : v[4], _5 : v[5]};
	return this1;
};
var thx_Types = function() { };
$hxClasses["thx.Types"] = thx_Types;
thx_Types.__name__ = "thx.Types";
thx_Types.isAnonymousObject = function(v) {
	if(Reflect.isObject(v)) {
		return null == js_Boot.getClass(v);
	} else {
		return false;
	}
};
thx_Types.isObject = function(v) {
	if(Reflect.isObject(v)) {
		return !thx_Types.isPrimitive(v);
	} else {
		return false;
	}
};
thx_Types.isPrimitive = function(v) {
	var _g = Type.typeof(v);
	switch(_g._hx_index) {
	case 1:case 2:case 3:
		return true;
	case 0:case 4:case 5:case 8:
		return false;
	case 6:
		var _g1 = _g.c;
		var c = _g1;
		if(c.__name__ == "String") {
			return true;
		} else {
			var c = _g1;
			if(c.__name__ == "Date") {
				return true;
			} else {
				return false;
			}
		}
		break;
	case 7:
		var _g1 = _g.e;
		return false;
	}
};
thx_Types.isEnumValue = function(v) {
	var _g = Type.typeof(v);
	if(_g._hx_index == 7) {
		var _g1 = _g.e;
		return true;
	} else {
		return false;
	}
};
thx_Types.hasSuperClass = function(cls,sup) {
	while(null != cls) {
		if(cls == sup) {
			return true;
		}
		cls = cls.__super__;
	}
	return false;
};
thx_Types.sameType = function(a,b) {
	return thx_Types.toString(Type.typeof(a)) == thx_Types.toString(Type.typeof(b));
};
thx_Types.typeInheritance = function(type) {
	switch(type._hx_index) {
	case 1:
		return ["Int"];
	case 2:
		return ["Float"];
	case 3:
		return ["Bool"];
	case 4:
		return ["{}"];
	case 5:
		return ["Function"];
	case 6:
		var c = type.c;
		var classes = [];
		while(null != c) {
			classes.push(c);
			c = c.__super__;
		}
		var f = Type.getClassName;
		var result = new Array(classes.length);
		var _g = 0;
		var _g1 = classes.length;
		while(_g < _g1) {
			var i = _g++;
			result[i] = f(classes[i]);
		}
		return result;
	case 7:
		var e = type.e;
		return [e.__ename__];
	default:
		throw haxe_Exception.thrown("invalid type " + Std.string(type));
	}
};
thx_Types.toString = function(type) {
	switch(type._hx_index) {
	case 0:
		return "Null";
	case 1:
		return "Int";
	case 2:
		return "Float";
	case 3:
		return "Bool";
	case 4:
		return "{}";
	case 5:
		return "Function";
	case 6:
		var c = type.c;
		return c.__name__;
	case 7:
		var e = type.e;
		return e.__ename__;
	default:
		throw haxe_Exception.thrown("invalid type " + Std.string(type));
	}
};
thx_Types.valueTypeInheritance = function(value) {
	return thx_Types.typeInheritance(Type.typeof(value));
};
thx_Types.valueTypeToString = function(value) {
	return thx_Types.toString(Type.typeof(value));
};
thx_Types.anyValueToString = function(value) {
	if(js_Boot.__instanceof(value,ValueType)) {
		return thx_Types.toString(value);
	}
	if(js_Boot.__instanceof(value,Class)) {
		return value.__name__;
	}
	if(js_Boot.__instanceof(value,Enum)) {
		return value.__ename__;
	}
	return thx_Types.toString(Type.typeof(value));
};
var thx_Validation = {};
thx_Validation.__properties__ = {get_either:"get_either"};
thx_Validation.get_either = function(this1) {
	return this1;
};
thx_Validation.pure = function(a) {
	return thx_Either.Right(a);
};
thx_Validation.success = function(a) {
	return thx_Either.Right(a);
};
thx_Validation.failure = function(e) {
	return thx_Either.Left(e);
};
thx_Validation.successNel = function(a) {
	return thx_Either.Right(a);
};
thx_Validation.failureNel = function(e) {
	return thx_Either.Left(thx_Nel.pure(e));
};
thx_Validation.nn = function(a,e) {
	if(a == null) {
		return thx_Either.Left(e);
	} else {
		return thx_Either.Right(a);
	}
};
thx_Validation.nnNel = function(a,e) {
	if(a == null) {
		return thx_Either.Left(thx_Nel.pure(e));
	} else {
		return thx_Either.Right(a);
	}
};
thx_Validation.map = function(this1,f) {
	return thx_Eithers.map(this1,f);
};
thx_Validation.ap = function(this1,v,s) {
	switch(this1._hx_index) {
	case 0:
		var e0 = this1.value;
		var _g = v;
		switch(_g._hx_index) {
		case 0:
			var e1 = _g.value;
			return thx_Either.Left((thx_Semigroup.get_append(s))(e0,e1));
		case 1:
			var b = _g.value;
			return thx_Either.Left(e0);
		}
		break;
	case 1:
		var a = this1.value;
		var _g = v;
		switch(_g._hx_index) {
		case 0:
			var e = _g.value;
			return thx_Either.Left(e);
		case 1:
			var f = _g.value;
			return thx_Either.Right(f(a));
		}
		break;
	}
};
thx_Validation.flatMapV = function(this1,f) {
	switch(this1._hx_index) {
	case 0:
		var a = this1.value;
		return thx_Either.Left(a);
	case 1:
		var b = this1.value;
		return f(b);
	}
};
thx_Validation.orElseV = function(this1,other,s) {
	var _g = other;
	switch(this1._hx_index) {
	case 0:
		var _g1 = this1.value;
		switch(_g._hx_index) {
		case 0:
			var e2 = _g.value;
			var e1 = _g1;
			return thx_Either.Left((thx_Semigroup.get_append(s))(e1,e2));
		case 1:
			var _g1 = _g.value;
			return other;
		}
		break;
	case 1:
		var _g = this1.value;
		return this1;
	}
};
thx_Validation.foldLeft = function(this1,b,f) {
	return thx_Eithers.foldLeft(this1,b,f);
};
thx_Validation.foldMap = function(this1,f,m) {
	return thx_Eithers.foldMap(this1,f,m);
};
thx_Validation.leftMap = function(this1,f) {
	return thx_Eithers.leftMap(this1,f);
};
thx_Validation.wrapNel = function(this1) {
	return thx_Eithers.leftMap(this1,thx_Nel.pure);
};
thx_Validation.ensure = function(this1,p,error) {
	return thx_Eithers.ensure(this1,p,error);
};
thx_Validation.vnel = function(e) {
	return e;
};
thx_Validation.val1 = function(f,v1) {
	return thx_Validation.map(v1,f);
};
thx_Validation.val2 = function(f,v1,v2,s) {
	return thx_Validation.ap(v2,thx_Validation.map(v1,thx_Functions2.curry(f)),s);
};
thx_Validation.val3 = function(f,v1,v2,v3,s) {
	var f1 = f;
	return thx_Validation.ap(v3,thx_Validation.ap(v2,thx_Validation.map(v1,thx_Functions2.curry(function(a,b) {
		return function(c) {
			return f1(a,b,c);
		};
	})),s),s);
};
thx_Validation.val4 = function(f,v1,v2,v3,v4,s) {
	var f1 = f;
	var f = function(a,b,c) {
		return function(d) {
			return f1(a,b,c,d);
		};
	};
	return thx_Validation.ap(v4,thx_Validation.ap(v3,thx_Validation.ap(v2,thx_Validation.map(v1,thx_Functions2.curry(function(a,b) {
		return function(c) {
			return f(a,b,c);
		};
	})),s),s),s);
};
thx_Validation.val5 = function(f,v1,v2,v3,v4,v5,s) {
	var f1 = f;
	var f = function(a,b,c,d) {
		return function(e) {
			return f1(a,b,c,d,e);
		};
	};
	var f2 = function(a,b,c) {
		return function(d) {
			return f(a,b,c,d);
		};
	};
	return thx_Validation.ap(v5,thx_Validation.ap(v4,thx_Validation.ap(v3,thx_Validation.ap(v2,thx_Validation.map(v1,thx_Functions2.curry(function(a,b) {
		return function(c) {
			return f2(a,b,c);
		};
	})),s),s),s),s);
};
thx_Validation.val6 = function(f,v1,v2,v3,v4,v5,v6,s) {
	var f1 = f;
	var f = function(a,b,c,d,e) {
		return function(f0) {
			return f1(a,b,c,d,e,f0);
		};
	};
	var f2 = function(a,b,c,d) {
		return function(e) {
			return f(a,b,c,d,e);
		};
	};
	var f3 = function(a,b,c) {
		return function(d) {
			return f2(a,b,c,d);
		};
	};
	return thx_Validation.ap(v6,thx_Validation.ap(v5,thx_Validation.ap(v4,thx_Validation.ap(v3,thx_Validation.ap(v2,thx_Validation.map(v1,thx_Functions2.curry(function(a,b) {
		return function(c) {
			return f3(a,b,c);
		};
	})),s),s),s),s),s);
};
thx_Validation.val7 = function(f,v1,v2,v3,v4,v5,v6,v7,s) {
	var f1 = f;
	var f = function(a,b,c,d,e,f0) {
		return function(g) {
			return f1(a,b,c,d,e,f0,g);
		};
	};
	var f2 = function(a,b,c,d,e) {
		return function(f0) {
			return f(a,b,c,d,e,f0);
		};
	};
	var f3 = function(a,b,c,d) {
		return function(e) {
			return f2(a,b,c,d,e);
		};
	};
	var f4 = function(a,b,c) {
		return function(d) {
			return f3(a,b,c,d);
		};
	};
	return thx_Validation.ap(v7,thx_Validation.ap(v6,thx_Validation.ap(v5,thx_Validation.ap(v4,thx_Validation.ap(v3,thx_Validation.ap(v2,thx_Validation.map(v1,thx_Functions2.curry(function(a,b) {
		return function(c) {
			return f4(a,b,c);
		};
	})),s),s),s),s),s),s);
};
thx_Validation.val8 = function(f,v1,v2,v3,v4,v5,v6,v7,v8,s) {
	var f1 = f;
	var f = function(a,b,c,d,e,f0,g) {
		return function(h) {
			return f1(a,b,c,d,e,f0,g,h);
		};
	};
	var f2 = function(a,b,c,d,e,f0) {
		return function(g) {
			return f(a,b,c,d,e,f0,g);
		};
	};
	var f3 = function(a,b,c,d,e) {
		return function(f0) {
			return f2(a,b,c,d,e,f0);
		};
	};
	var f4 = function(a,b,c,d) {
		return function(e) {
			return f3(a,b,c,d,e);
		};
	};
	var f5 = function(a,b,c) {
		return function(d) {
			return f4(a,b,c,d);
		};
	};
	return thx_Validation.ap(v8,thx_Validation.ap(v7,thx_Validation.ap(v6,thx_Validation.ap(v5,thx_Validation.ap(v4,thx_Validation.ap(v3,thx_Validation.ap(v2,thx_Validation.map(v1,thx_Functions2.curry(function(a,b) {
		return function(c) {
			return f5(a,b,c);
		};
	})),s),s),s),s),s),s),s);
};
thx_Validation.val9 = function(f,v1,v2,v3,v4,v5,v6,v7,v8,v9,s) {
	var f1 = f;
	var f = function(a,b,c,d,e,f0,g,h) {
		return function(i) {
			return f1(a,b,c,d,e,f0,g,h,i);
		};
	};
	var f2 = function(a,b,c,d,e,f0,g) {
		return function(h) {
			return f(a,b,c,d,e,f0,g,h);
		};
	};
	var f3 = function(a,b,c,d,e,f0) {
		return function(g) {
			return f2(a,b,c,d,e,f0,g);
		};
	};
	var f4 = function(a,b,c,d,e) {
		return function(f0) {
			return f3(a,b,c,d,e,f0);
		};
	};
	var f5 = function(a,b,c,d) {
		return function(e) {
			return f4(a,b,c,d,e);
		};
	};
	var f6 = function(a,b,c) {
		return function(d) {
			return f5(a,b,c,d);
		};
	};
	return thx_Validation.ap(v9,thx_Validation.ap(v8,thx_Validation.ap(v7,thx_Validation.ap(v6,thx_Validation.ap(v5,thx_Validation.ap(v4,thx_Validation.ap(v3,thx_Validation.ap(v2,thx_Validation.map(v1,thx_Functions2.curry(function(a,b) {
		return function(c) {
			return f6(a,b,c);
		};
	})),s),s),s),s),s),s),s),s);
};
thx_Validation.val10 = function(f,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,s) {
	var f1 = f;
	var f = function(a,b,c,d,e,f0,g,h,i) {
		return function(j) {
			return f1(a,b,c,d,e,f0,g,h,i,j);
		};
	};
	var f2 = function(a,b,c,d,e,f0,g,h) {
		return function(i) {
			return f(a,b,c,d,e,f0,g,h,i);
		};
	};
	var f3 = function(a,b,c,d,e,f0,g) {
		return function(h) {
			return f2(a,b,c,d,e,f0,g,h);
		};
	};
	var f4 = function(a,b,c,d,e,f0) {
		return function(g) {
			return f3(a,b,c,d,e,f0,g);
		};
	};
	var f5 = function(a,b,c,d,e) {
		return function(f0) {
			return f4(a,b,c,d,e,f0);
		};
	};
	var f6 = function(a,b,c,d) {
		return function(e) {
			return f5(a,b,c,d,e);
		};
	};
	var f7 = function(a,b,c) {
		return function(d) {
			return f6(a,b,c,d);
		};
	};
	return thx_Validation.ap(v10,thx_Validation.ap(v9,thx_Validation.ap(v8,thx_Validation.ap(v7,thx_Validation.ap(v6,thx_Validation.ap(v5,thx_Validation.ap(v4,thx_Validation.ap(v3,thx_Validation.ap(v2,thx_Validation.map(v1,thx_Functions2.curry(function(a,b) {
		return function(c) {
			return f7(a,b,c);
		};
	})),s),s),s),s),s),s),s),s),s);
};
thx_Validation.val11 = function(f,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,s) {
	var f1 = f;
	var f = function(a,b,c,d,e,f0,g,h,i,j) {
		return function(k) {
			return f1(a,b,c,d,e,f0,g,h,i,j,k);
		};
	};
	var f2 = function(a,b,c,d,e,f0,g,h,i) {
		return function(j) {
			return f(a,b,c,d,e,f0,g,h,i,j);
		};
	};
	var f3 = function(a,b,c,d,e,f0,g,h) {
		return function(i) {
			return f2(a,b,c,d,e,f0,g,h,i);
		};
	};
	var f4 = function(a,b,c,d,e,f0,g) {
		return function(h) {
			return f3(a,b,c,d,e,f0,g,h);
		};
	};
	var f5 = function(a,b,c,d,e,f0) {
		return function(g) {
			return f4(a,b,c,d,e,f0,g);
		};
	};
	var f6 = function(a,b,c,d,e) {
		return function(f0) {
			return f5(a,b,c,d,e,f0);
		};
	};
	var f7 = function(a,b,c,d) {
		return function(e) {
			return f6(a,b,c,d,e);
		};
	};
	var f8 = function(a,b,c) {
		return function(d) {
			return f7(a,b,c,d);
		};
	};
	return thx_Validation.ap(v11,thx_Validation.ap(v10,thx_Validation.ap(v9,thx_Validation.ap(v8,thx_Validation.ap(v7,thx_Validation.ap(v6,thx_Validation.ap(v5,thx_Validation.ap(v4,thx_Validation.ap(v3,thx_Validation.ap(v2,thx_Validation.map(v1,thx_Functions2.curry(function(a,b) {
		return function(c) {
			return f8(a,b,c);
		};
	})),s),s),s),s),s),s),s),s),s),s);
};
thx_Validation.val12 = function(f,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,s) {
	var f1 = f;
	var f = function(a,b,c,d,e,f0,g,h,i,j,k) {
		return function(l) {
			return f1(a,b,c,d,e,f0,g,h,i,j,k,l);
		};
	};
	var f2 = function(a,b,c,d,e,f0,g,h,i,j) {
		return function(k) {
			return f(a,b,c,d,e,f0,g,h,i,j,k);
		};
	};
	var f3 = function(a,b,c,d,e,f0,g,h,i) {
		return function(j) {
			return f2(a,b,c,d,e,f0,g,h,i,j);
		};
	};
	var f4 = function(a,b,c,d,e,f0,g,h) {
		return function(i) {
			return f3(a,b,c,d,e,f0,g,h,i);
		};
	};
	var f5 = function(a,b,c,d,e,f0,g) {
		return function(h) {
			return f4(a,b,c,d,e,f0,g,h);
		};
	};
	var f6 = function(a,b,c,d,e,f0) {
		return function(g) {
			return f5(a,b,c,d,e,f0,g);
		};
	};
	var f7 = function(a,b,c,d,e) {
		return function(f0) {
			return f6(a,b,c,d,e,f0);
		};
	};
	var f8 = function(a,b,c,d) {
		return function(e) {
			return f7(a,b,c,d,e);
		};
	};
	var f9 = function(a,b,c) {
		return function(d) {
			return f8(a,b,c,d);
		};
	};
	return thx_Validation.ap(v12,thx_Validation.ap(v11,thx_Validation.ap(v10,thx_Validation.ap(v9,thx_Validation.ap(v8,thx_Validation.ap(v7,thx_Validation.ap(v6,thx_Validation.ap(v5,thx_Validation.ap(v4,thx_Validation.ap(v3,thx_Validation.ap(v2,thx_Validation.map(v1,thx_Functions2.curry(function(a,b) {
		return function(c) {
			return f9(a,b,c);
		};
	})),s),s),s),s),s),s),s),s),s),s),s);
};
thx_Validation.val13 = function(f,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,s) {
	var f1 = f;
	var f = function(a,b,c,d,e,f0,g,h,i,j,k,l) {
		return function(m) {
			return f1(a,b,c,d,e,f0,g,h,i,j,k,l,m);
		};
	};
	var f2 = function(a,b,c,d,e,f0,g,h,i,j,k) {
		return function(l) {
			return f(a,b,c,d,e,f0,g,h,i,j,k,l);
		};
	};
	var f3 = function(a,b,c,d,e,f0,g,h,i,j) {
		return function(k) {
			return f2(a,b,c,d,e,f0,g,h,i,j,k);
		};
	};
	var f4 = function(a,b,c,d,e,f0,g,h,i) {
		return function(j) {
			return f3(a,b,c,d,e,f0,g,h,i,j);
		};
	};
	var f5 = function(a,b,c,d,e,f0,g,h) {
		return function(i) {
			return f4(a,b,c,d,e,f0,g,h,i);
		};
	};
	var f6 = function(a,b,c,d,e,f0,g) {
		return function(h) {
			return f5(a,b,c,d,e,f0,g,h);
		};
	};
	var f7 = function(a,b,c,d,e,f0) {
		return function(g) {
			return f6(a,b,c,d,e,f0,g);
		};
	};
	var f8 = function(a,b,c,d,e) {
		return function(f0) {
			return f7(a,b,c,d,e,f0);
		};
	};
	var f9 = function(a,b,c,d) {
		return function(e) {
			return f8(a,b,c,d,e);
		};
	};
	var f10 = function(a,b,c) {
		return function(d) {
			return f9(a,b,c,d);
		};
	};
	return thx_Validation.ap(v13,thx_Validation.ap(v12,thx_Validation.ap(v11,thx_Validation.ap(v10,thx_Validation.ap(v9,thx_Validation.ap(v8,thx_Validation.ap(v7,thx_Validation.ap(v6,thx_Validation.ap(v5,thx_Validation.ap(v4,thx_Validation.ap(v3,thx_Validation.ap(v2,thx_Validation.map(v1,thx_Functions2.curry(function(a,b) {
		return function(c) {
			return f10(a,b,c);
		};
	})),s),s),s),s),s),s),s),s),s),s),s),s);
};
thx_Validation.val14 = function(f,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,s) {
	var f1 = f;
	var f = function(a,b,c,d,e,f0,g,h,i,j,k,l,m) {
		return function(n) {
			return f1(a,b,c,d,e,f0,g,h,i,j,k,l,m,n);
		};
	};
	var f2 = function(a,b,c,d,e,f0,g,h,i,j,k,l) {
		return function(m) {
			return f(a,b,c,d,e,f0,g,h,i,j,k,l,m);
		};
	};
	var f3 = function(a,b,c,d,e,f0,g,h,i,j,k) {
		return function(l) {
			return f2(a,b,c,d,e,f0,g,h,i,j,k,l);
		};
	};
	var f4 = function(a,b,c,d,e,f0,g,h,i,j) {
		return function(k) {
			return f3(a,b,c,d,e,f0,g,h,i,j,k);
		};
	};
	var f5 = function(a,b,c,d,e,f0,g,h,i) {
		return function(j) {
			return f4(a,b,c,d,e,f0,g,h,i,j);
		};
	};
	var f6 = function(a,b,c,d,e,f0,g,h) {
		return function(i) {
			return f5(a,b,c,d,e,f0,g,h,i);
		};
	};
	var f7 = function(a,b,c,d,e,f0,g) {
		return function(h) {
			return f6(a,b,c,d,e,f0,g,h);
		};
	};
	var f8 = function(a,b,c,d,e,f0) {
		return function(g) {
			return f7(a,b,c,d,e,f0,g);
		};
	};
	var f9 = function(a,b,c,d,e) {
		return function(f0) {
			return f8(a,b,c,d,e,f0);
		};
	};
	var f10 = function(a,b,c,d) {
		return function(e) {
			return f9(a,b,c,d,e);
		};
	};
	var f11 = function(a,b,c) {
		return function(d) {
			return f10(a,b,c,d);
		};
	};
	return thx_Validation.ap(v14,thx_Validation.ap(v13,thx_Validation.ap(v12,thx_Validation.ap(v11,thx_Validation.ap(v10,thx_Validation.ap(v9,thx_Validation.ap(v8,thx_Validation.ap(v7,thx_Validation.ap(v6,thx_Validation.ap(v5,thx_Validation.ap(v4,thx_Validation.ap(v3,thx_Validation.ap(v2,thx_Validation.map(v1,thx_Functions2.curry(function(a,b) {
		return function(c) {
			return f11(a,b,c);
		};
	})),s),s),s),s),s),s),s),s),s),s),s),s),s);
};
thx_Validation.val15 = function(f,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,s) {
	var f1 = f;
	var f = function(a,b,c,d,e,f0,g,h,i,j,k,l,m,n) {
		return function(o) {
			return f1(a,b,c,d,e,f0,g,h,i,j,k,l,m,n,o);
		};
	};
	var f2 = function(a,b,c,d,e,f0,g,h,i,j,k,l,m) {
		return function(n) {
			return f(a,b,c,d,e,f0,g,h,i,j,k,l,m,n);
		};
	};
	var f3 = function(a,b,c,d,e,f0,g,h,i,j,k,l) {
		return function(m) {
			return f2(a,b,c,d,e,f0,g,h,i,j,k,l,m);
		};
	};
	var f4 = function(a,b,c,d,e,f0,g,h,i,j,k) {
		return function(l) {
			return f3(a,b,c,d,e,f0,g,h,i,j,k,l);
		};
	};
	var f5 = function(a,b,c,d,e,f0,g,h,i,j) {
		return function(k) {
			return f4(a,b,c,d,e,f0,g,h,i,j,k);
		};
	};
	var f6 = function(a,b,c,d,e,f0,g,h,i) {
		return function(j) {
			return f5(a,b,c,d,e,f0,g,h,i,j);
		};
	};
	var f7 = function(a,b,c,d,e,f0,g,h) {
		return function(i) {
			return f6(a,b,c,d,e,f0,g,h,i);
		};
	};
	var f8 = function(a,b,c,d,e,f0,g) {
		return function(h) {
			return f7(a,b,c,d,e,f0,g,h);
		};
	};
	var f9 = function(a,b,c,d,e,f0) {
		return function(g) {
			return f8(a,b,c,d,e,f0,g);
		};
	};
	var f10 = function(a,b,c,d,e) {
		return function(f0) {
			return f9(a,b,c,d,e,f0);
		};
	};
	var f11 = function(a,b,c,d) {
		return function(e) {
			return f10(a,b,c,d,e);
		};
	};
	var f12 = function(a,b,c) {
		return function(d) {
			return f11(a,b,c,d);
		};
	};
	return thx_Validation.ap(v15,thx_Validation.ap(v14,thx_Validation.ap(v13,thx_Validation.ap(v12,thx_Validation.ap(v11,thx_Validation.ap(v10,thx_Validation.ap(v9,thx_Validation.ap(v8,thx_Validation.ap(v7,thx_Validation.ap(v6,thx_Validation.ap(v5,thx_Validation.ap(v4,thx_Validation.ap(v3,thx_Validation.ap(v2,thx_Validation.map(v1,thx_Functions2.curry(function(a,b) {
		return function(c) {
			return f12(a,b,c);
		};
	})),s),s),s),s),s),s),s),s),s),s),s),s),s),s);
};
thx_Validation.val16 = function(f,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,s) {
	var f1 = f;
	var f = function(a,b,c,d,e,f0,g,h,i,j,k,l,m,n,o) {
		return function(p) {
			return f1(a,b,c,d,e,f0,g,h,i,j,k,l,m,n,o,p);
		};
	};
	var f2 = function(a,b,c,d,e,f0,g,h,i,j,k,l,m,n) {
		return function(o) {
			return f(a,b,c,d,e,f0,g,h,i,j,k,l,m,n,o);
		};
	};
	var f3 = function(a,b,c,d,e,f0,g,h,i,j,k,l,m) {
		return function(n) {
			return f2(a,b,c,d,e,f0,g,h,i,j,k,l,m,n);
		};
	};
	var f4 = function(a,b,c,d,e,f0,g,h,i,j,k,l) {
		return function(m) {
			return f3(a,b,c,d,e,f0,g,h,i,j,k,l,m);
		};
	};
	var f5 = function(a,b,c,d,e,f0,g,h,i,j,k) {
		return function(l) {
			return f4(a,b,c,d,e,f0,g,h,i,j,k,l);
		};
	};
	var f6 = function(a,b,c,d,e,f0,g,h,i,j) {
		return function(k) {
			return f5(a,b,c,d,e,f0,g,h,i,j,k);
		};
	};
	var f7 = function(a,b,c,d,e,f0,g,h,i) {
		return function(j) {
			return f6(a,b,c,d,e,f0,g,h,i,j);
		};
	};
	var f8 = function(a,b,c,d,e,f0,g,h) {
		return function(i) {
			return f7(a,b,c,d,e,f0,g,h,i);
		};
	};
	var f9 = function(a,b,c,d,e,f0,g) {
		return function(h) {
			return f8(a,b,c,d,e,f0,g,h);
		};
	};
	var f10 = function(a,b,c,d,e,f0) {
		return function(g) {
			return f9(a,b,c,d,e,f0,g);
		};
	};
	var f11 = function(a,b,c,d,e) {
		return function(f0) {
			return f10(a,b,c,d,e,f0);
		};
	};
	var f12 = function(a,b,c,d) {
		return function(e) {
			return f11(a,b,c,d,e);
		};
	};
	var f13 = function(a,b,c) {
		return function(d) {
			return f12(a,b,c,d);
		};
	};
	return thx_Validation.ap(v16,thx_Validation.ap(v15,thx_Validation.ap(v14,thx_Validation.ap(v13,thx_Validation.ap(v12,thx_Validation.ap(v11,thx_Validation.ap(v10,thx_Validation.ap(v9,thx_Validation.ap(v8,thx_Validation.ap(v7,thx_Validation.ap(v6,thx_Validation.ap(v5,thx_Validation.ap(v4,thx_Validation.ap(v3,thx_Validation.ap(v2,thx_Validation.map(v1,thx_Functions2.curry(function(a,b) {
		return function(c) {
			return f13(a,b,c);
		};
	})),s),s),s),s),s),s),s),s),s),s),s),s),s),s),s);
};
thx_Validation.val17 = function(f,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,s) {
	var f1 = f;
	var f = function(a,b,c,d,e,f0,g,h,i,j,k,l,m,n,o,p) {
		return function(q) {
			return f1(a,b,c,d,e,f0,g,h,i,j,k,l,m,n,o,p,q);
		};
	};
	var f2 = function(a,b,c,d,e,f0,g,h,i,j,k,l,m,n,o) {
		return function(p) {
			return f(a,b,c,d,e,f0,g,h,i,j,k,l,m,n,o,p);
		};
	};
	var f3 = function(a,b,c,d,e,f0,g,h,i,j,k,l,m,n) {
		return function(o) {
			return f2(a,b,c,d,e,f0,g,h,i,j,k,l,m,n,o);
		};
	};
	var f4 = function(a,b,c,d,e,f0,g,h,i,j,k,l,m) {
		return function(n) {
			return f3(a,b,c,d,e,f0,g,h,i,j,k,l,m,n);
		};
	};
	var f5 = function(a,b,c,d,e,f0,g,h,i,j,k,l) {
		return function(m) {
			return f4(a,b,c,d,e,f0,g,h,i,j,k,l,m);
		};
	};
	var f6 = function(a,b,c,d,e,f0,g,h,i,j,k) {
		return function(l) {
			return f5(a,b,c,d,e,f0,g,h,i,j,k,l);
		};
	};
	var f7 = function(a,b,c,d,e,f0,g,h,i,j) {
		return function(k) {
			return f6(a,b,c,d,e,f0,g,h,i,j,k);
		};
	};
	var f8 = function(a,b,c,d,e,f0,g,h,i) {
		return function(j) {
			return f7(a,b,c,d,e,f0,g,h,i,j);
		};
	};
	var f9 = function(a,b,c,d,e,f0,g,h) {
		return function(i) {
			return f8(a,b,c,d,e,f0,g,h,i);
		};
	};
	var f10 = function(a,b,c,d,e,f0,g) {
		return function(h) {
			return f9(a,b,c,d,e,f0,g,h);
		};
	};
	var f11 = function(a,b,c,d,e,f0) {
		return function(g) {
			return f10(a,b,c,d,e,f0,g);
		};
	};
	var f12 = function(a,b,c,d,e) {
		return function(f0) {
			return f11(a,b,c,d,e,f0);
		};
	};
	var f13 = function(a,b,c,d) {
		return function(e) {
			return f12(a,b,c,d,e);
		};
	};
	var f14 = function(a,b,c) {
		return function(d) {
			return f13(a,b,c,d);
		};
	};
	return thx_Validation.ap(v17,thx_Validation.ap(v16,thx_Validation.ap(v15,thx_Validation.ap(v14,thx_Validation.ap(v13,thx_Validation.ap(v12,thx_Validation.ap(v11,thx_Validation.ap(v10,thx_Validation.ap(v9,thx_Validation.ap(v8,thx_Validation.ap(v7,thx_Validation.ap(v6,thx_Validation.ap(v5,thx_Validation.ap(v4,thx_Validation.ap(v3,thx_Validation.ap(v2,thx_Validation.map(v1,thx_Functions2.curry(function(a,b) {
		return function(c) {
			return f14(a,b,c);
		};
	})),s),s),s),s),s),s),s),s),s),s),s),s),s),s),s),s);
};
thx_Validation.val18 = function(f,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,s) {
	var f1 = f;
	var f = function(a,b,c,d,e,f0,g,h,i,j,k,l,m,n,o,p,q) {
		return function(r) {
			return f1(a,b,c,d,e,f0,g,h,i,j,k,l,m,n,o,p,q,r);
		};
	};
	var f2 = function(a,b,c,d,e,f0,g,h,i,j,k,l,m,n,o,p) {
		return function(q) {
			return f(a,b,c,d,e,f0,g,h,i,j,k,l,m,n,o,p,q);
		};
	};
	var f3 = function(a,b,c,d,e,f0,g,h,i,j,k,l,m,n,o) {
		return function(p) {
			return f2(a,b,c,d,e,f0,g,h,i,j,k,l,m,n,o,p);
		};
	};
	var f4 = function(a,b,c,d,e,f0,g,h,i,j,k,l,m,n) {
		return function(o) {
			return f3(a,b,c,d,e,f0,g,h,i,j,k,l,m,n,o);
		};
	};
	var f5 = function(a,b,c,d,e,f0,g,h,i,j,k,l,m) {
		return function(n) {
			return f4(a,b,c,d,e,f0,g,h,i,j,k,l,m,n);
		};
	};
	var f6 = function(a,b,c,d,e,f0,g,h,i,j,k,l) {
		return function(m) {
			return f5(a,b,c,d,e,f0,g,h,i,j,k,l,m);
		};
	};
	var f7 = function(a,b,c,d,e,f0,g,h,i,j,k) {
		return function(l) {
			return f6(a,b,c,d,e,f0,g,h,i,j,k,l);
		};
	};
	var f8 = function(a,b,c,d,e,f0,g,h,i,j) {
		return function(k) {
			return f7(a,b,c,d,e,f0,g,h,i,j,k);
		};
	};
	var f9 = function(a,b,c,d,e,f0,g,h,i) {
		return function(j) {
			return f8(a,b,c,d,e,f0,g,h,i,j);
		};
	};
	var f10 = function(a,b,c,d,e,f0,g,h) {
		return function(i) {
			return f9(a,b,c,d,e,f0,g,h,i);
		};
	};
	var f11 = function(a,b,c,d,e,f0,g) {
		return function(h) {
			return f10(a,b,c,d,e,f0,g,h);
		};
	};
	var f12 = function(a,b,c,d,e,f0) {
		return function(g) {
			return f11(a,b,c,d,e,f0,g);
		};
	};
	var f13 = function(a,b,c,d,e) {
		return function(f0) {
			return f12(a,b,c,d,e,f0);
		};
	};
	var f14 = function(a,b,c,d) {
		return function(e) {
			return f13(a,b,c,d,e);
		};
	};
	var f15 = function(a,b,c) {
		return function(d) {
			return f14(a,b,c,d);
		};
	};
	return thx_Validation.ap(v18,thx_Validation.ap(v17,thx_Validation.ap(v16,thx_Validation.ap(v15,thx_Validation.ap(v14,thx_Validation.ap(v13,thx_Validation.ap(v12,thx_Validation.ap(v11,thx_Validation.ap(v10,thx_Validation.ap(v9,thx_Validation.ap(v8,thx_Validation.ap(v7,thx_Validation.ap(v6,thx_Validation.ap(v5,thx_Validation.ap(v4,thx_Validation.ap(v3,thx_Validation.ap(v2,thx_Validation.map(v1,thx_Functions2.curry(function(a,b) {
		return function(c) {
			return f15(a,b,c);
		};
	})),s),s),s),s),s),s),s),s),s),s),s),s),s),s),s),s),s);
};
thx_Validation.val19 = function(f,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,s) {
	var f1 = f;
	var f = function(a,b,c,d,e,f0,g,h,i,j,k,l,m,n,o,p,q,r) {
		return function(s) {
			return f1(a,b,c,d,e,f0,g,h,i,j,k,l,m,n,o,p,q,r,s);
		};
	};
	var f2 = function(a,b,c,d,e,f0,g,h,i,j,k,l,m,n,o,p,q) {
		return function(r) {
			return f(a,b,c,d,e,f0,g,h,i,j,k,l,m,n,o,p,q,r);
		};
	};
	var f3 = function(a,b,c,d,e,f0,g,h,i,j,k,l,m,n,o,p) {
		return function(q) {
			return f2(a,b,c,d,e,f0,g,h,i,j,k,l,m,n,o,p,q);
		};
	};
	var f4 = function(a,b,c,d,e,f0,g,h,i,j,k,l,m,n,o) {
		return function(p) {
			return f3(a,b,c,d,e,f0,g,h,i,j,k,l,m,n,o,p);
		};
	};
	var f5 = function(a,b,c,d,e,f0,g,h,i,j,k,l,m,n) {
		return function(o) {
			return f4(a,b,c,d,e,f0,g,h,i,j,k,l,m,n,o);
		};
	};
	var f6 = function(a,b,c,d,e,f0,g,h,i,j,k,l,m) {
		return function(n) {
			return f5(a,b,c,d,e,f0,g,h,i,j,k,l,m,n);
		};
	};
	var f7 = function(a,b,c,d,e,f0,g,h,i,j,k,l) {
		return function(m) {
			return f6(a,b,c,d,e,f0,g,h,i,j,k,l,m);
		};
	};
	var f8 = function(a,b,c,d,e,f0,g,h,i,j,k) {
		return function(l) {
			return f7(a,b,c,d,e,f0,g,h,i,j,k,l);
		};
	};
	var f9 = function(a,b,c,d,e,f0,g,h,i,j) {
		return function(k) {
			return f8(a,b,c,d,e,f0,g,h,i,j,k);
		};
	};
	var f10 = function(a,b,c,d,e,f0,g,h,i) {
		return function(j) {
			return f9(a,b,c,d,e,f0,g,h,i,j);
		};
	};
	var f11 = function(a,b,c,d,e,f0,g,h) {
		return function(i) {
			return f10(a,b,c,d,e,f0,g,h,i);
		};
	};
	var f12 = function(a,b,c,d,e,f0,g) {
		return function(h) {
			return f11(a,b,c,d,e,f0,g,h);
		};
	};
	var f13 = function(a,b,c,d,e,f0) {
		return function(g) {
			return f12(a,b,c,d,e,f0,g);
		};
	};
	var f14 = function(a,b,c,d,e) {
		return function(f0) {
			return f13(a,b,c,d,e,f0);
		};
	};
	var f15 = function(a,b,c,d) {
		return function(e) {
			return f14(a,b,c,d,e);
		};
	};
	var f16 = function(a,b,c) {
		return function(d) {
			return f15(a,b,c,d);
		};
	};
	return thx_Validation.ap(v19,thx_Validation.ap(v18,thx_Validation.ap(v17,thx_Validation.ap(v16,thx_Validation.ap(v15,thx_Validation.ap(v14,thx_Validation.ap(v13,thx_Validation.ap(v12,thx_Validation.ap(v11,thx_Validation.ap(v10,thx_Validation.ap(v9,thx_Validation.ap(v8,thx_Validation.ap(v7,thx_Validation.ap(v6,thx_Validation.ap(v5,thx_Validation.ap(v4,thx_Validation.ap(v3,thx_Validation.ap(v2,thx_Validation.map(v1,thx_Functions2.curry(function(a,b) {
		return function(c) {
			return f16(a,b,c);
		};
	})),s),s),s),s),s),s),s),s),s),s),s),s),s),s),s),s),s),s);
};
thx_Validation.val20 = function(f,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,s) {
	var f1 = f;
	var f = function(a,b,c,d,e,f0,g,h,i,j,k,l,m,n,o,p,q,r,s) {
		return function(t) {
			return f1(a,b,c,d,e,f0,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
		};
	};
	var f2 = function(a,b,c,d,e,f0,g,h,i,j,k,l,m,n,o,p,q,r) {
		return function(s) {
			return f(a,b,c,d,e,f0,g,h,i,j,k,l,m,n,o,p,q,r,s);
		};
	};
	var f3 = function(a,b,c,d,e,f0,g,h,i,j,k,l,m,n,o,p,q) {
		return function(r) {
			return f2(a,b,c,d,e,f0,g,h,i,j,k,l,m,n,o,p,q,r);
		};
	};
	var f4 = function(a,b,c,d,e,f0,g,h,i,j,k,l,m,n,o,p) {
		return function(q) {
			return f3(a,b,c,d,e,f0,g,h,i,j,k,l,m,n,o,p,q);
		};
	};
	var f5 = function(a,b,c,d,e,f0,g,h,i,j,k,l,m,n,o) {
		return function(p) {
			return f4(a,b,c,d,e,f0,g,h,i,j,k,l,m,n,o,p);
		};
	};
	var f6 = function(a,b,c,d,e,f0,g,h,i,j,k,l,m,n) {
		return function(o) {
			return f5(a,b,c,d,e,f0,g,h,i,j,k,l,m,n,o);
		};
	};
	var f7 = function(a,b,c,d,e,f0,g,h,i,j,k,l,m) {
		return function(n) {
			return f6(a,b,c,d,e,f0,g,h,i,j,k,l,m,n);
		};
	};
	var f8 = function(a,b,c,d,e,f0,g,h,i,j,k,l) {
		return function(m) {
			return f7(a,b,c,d,e,f0,g,h,i,j,k,l,m);
		};
	};
	var f9 = function(a,b,c,d,e,f0,g,h,i,j,k) {
		return function(l) {
			return f8(a,b,c,d,e,f0,g,h,i,j,k,l);
		};
	};
	var f10 = function(a,b,c,d,e,f0,g,h,i,j) {
		return function(k) {
			return f9(a,b,c,d,e,f0,g,h,i,j,k);
		};
	};
	var f11 = function(a,b,c,d,e,f0,g,h,i) {
		return function(j) {
			return f10(a,b,c,d,e,f0,g,h,i,j);
		};
	};
	var f12 = function(a,b,c,d,e,f0,g,h) {
		return function(i) {
			return f11(a,b,c,d,e,f0,g,h,i);
		};
	};
	var f13 = function(a,b,c,d,e,f0,g) {
		return function(h) {
			return f12(a,b,c,d,e,f0,g,h);
		};
	};
	var f14 = function(a,b,c,d,e,f0) {
		return function(g) {
			return f13(a,b,c,d,e,f0,g);
		};
	};
	var f15 = function(a,b,c,d,e) {
		return function(f0) {
			return f14(a,b,c,d,e,f0);
		};
	};
	var f16 = function(a,b,c,d) {
		return function(e) {
			return f15(a,b,c,d,e);
		};
	};
	var f17 = function(a,b,c) {
		return function(d) {
			return f16(a,b,c,d);
		};
	};
	return thx_Validation.ap(v20,thx_Validation.ap(v19,thx_Validation.ap(v18,thx_Validation.ap(v17,thx_Validation.ap(v16,thx_Validation.ap(v15,thx_Validation.ap(v14,thx_Validation.ap(v13,thx_Validation.ap(v12,thx_Validation.ap(v11,thx_Validation.ap(v10,thx_Validation.ap(v9,thx_Validation.ap(v8,thx_Validation.ap(v7,thx_Validation.ap(v6,thx_Validation.ap(v5,thx_Validation.ap(v4,thx_Validation.ap(v3,thx_Validation.ap(v2,thx_Validation.map(v1,thx_Functions2.curry(function(a,b) {
		return function(c) {
			return f17(a,b,c);
		};
	})),s),s),s),s),s),s),s),s),s),s),s),s),s),s),s),s),s),s),s);
};
var thx_ValidationExtensions = function() { };
$hxClasses["thx.ValidationExtensions"] = thx_ValidationExtensions;
thx_ValidationExtensions.__name__ = "thx.ValidationExtensions";
thx_ValidationExtensions.leftMapNel = function(n,f) {
	return thx_Eithers.leftMap(n,function(n) {
		return thx_Nel.map(n,f);
	});
};
thx_ValidationExtensions.ensureNel = function(v,p,error) {
	if(v._hx_index == 1) {
		var a = v.value;
		if(p(a)) {
			return v;
		} else {
			return thx_Either.Left(thx_Nel.pure(error));
		}
	} else {
		var left = v;
		return left;
	}
};
thx_ValidationExtensions.appendVNel = function(target,item) {
	switch(target._hx_index) {
	case 0:
		var _g = target.value;
		switch(item._hx_index) {
		case 0:
			var errors2 = item.value;
			var errors1 = _g;
			return thx_Either.Left(thx_Nel.append(errors1,errors2));
		case 1:
			var value = item.value;
			var errors = _g;
			return thx_Either.Left(errors);
		}
		break;
	case 1:
		var _g = target.value;
		switch(item._hx_index) {
		case 0:
			var errors = item.value;
			var values = _g;
			return thx_Either.Left(errors);
		case 1:
			var value = item.value;
			var values = _g;
			return thx_Either.Right(thx_Arrays.append(values,value));
		}
		break;
	}
};
thx_ValidationExtensions.appendValidation = function(target,item) {
	return thx_ValidationExtensions.appendVNel(target,thx_Eithers.toVNel(item));
};
thx_ValidationExtensions.appendVNels = function(target,items) {
	return thx_Arrays.reduce(items,thx_ValidationExtensions.appendVNel,target);
};
thx_ValidationExtensions.appendValidations = function(target,items) {
	return thx_Arrays.reduce(items,thx_ValidationExtensions.appendValidation,target);
};
var thx_error_ErrorWrapper = function(message,innerError,stack,pos) {
	thx_Error.call(this,message,stack,pos);
	this.innerError = innerError;
};
$hxClasses["thx.error.ErrorWrapper"] = thx_error_ErrorWrapper;
thx_error_ErrorWrapper.__name__ = "thx.error.ErrorWrapper";
thx_error_ErrorWrapper.__super__ = thx_Error;
thx_error_ErrorWrapper.prototype = $extend(thx_Error.prototype,{
	innerError: null
	,__class__: thx_error_ErrorWrapper
});
var thx_fp_Map = {};
thx_fp_Map.empty = function() {
	return thx_fp_MapImpl.Tip;
};
thx_fp_Map.singleton = function(k,v) {
	return thx_fp_MapImpl.Bin(1,k,v,thx_fp_MapImpl.Tip,thx_fp_MapImpl.Tip);
};
thx_fp_Map.bin = function(k,v,lhs,rhs) {
	return thx_fp_MapImpl.Bin(thx_fp_Map.size(lhs) + thx_fp_Map.size(rhs) + 1,k,v,lhs,rhs);
};
thx_fp_Map.fromNative = function(map,comparator) {
	var r = thx_fp_MapImpl.Tip;
	var key = map.keys();
	while(key.hasNext()) {
		var key1 = key.next();
		r = thx_fp_Map.insert(r,key1,map.get(key1),comparator);
	}
	return r;
};
thx_fp_Map.lookup = function(this1,key,comparator) {
	switch(this1._hx_index) {
	case 0:
		return haxe_ds_Option.None;
	case 1:
		var size = this1.size;
		var xkey = this1.key;
		var xvalue = this1.value;
		var lhs = this1.lhs;
		var rhs = this1.rhs;
		var c = comparator(key,xkey);
		switch(c._hx_index) {
		case 0:
			return thx_fp_Map.lookup(lhs,key,comparator);
		case 1:
			return thx_fp_Map.lookup(rhs,key,comparator);
		case 2:
			return haxe_ds_Option.Some(xvalue);
		}
		break;
	}
};
thx_fp_Map.lookupTuple = function(this1,key,comparator) {
	switch(this1._hx_index) {
	case 0:
		return haxe_ds_Option.None;
	case 1:
		var size = this1.size;
		var xkey = this1.key;
		var xvalue = this1.value;
		var lhs = this1.lhs;
		var rhs = this1.rhs;
		var c = comparator(key,xkey);
		switch(c._hx_index) {
		case 0:
			return thx_fp_Map.lookupTuple(lhs,key,comparator);
		case 1:
			return thx_fp_Map.lookupTuple(rhs,key,comparator);
		case 2:
			var this1 = { _0 : xkey, _1 : xvalue};
			return haxe_ds_Option.Some(this1);
		}
		break;
	}
};
thx_fp_Map.delete = function(this1,key,comparator) {
	switch(this1._hx_index) {
	case 0:
		return thx_fp_MapImpl.Tip;
	case 1:
		var size = this1.size;
		var kx = this1.key;
		var x = this1.value;
		var lhs = this1.lhs;
		var rhs = this1.rhs;
		switch(comparator(key,kx)._hx_index) {
		case 0:
			return thx_fp_Map.balance(kx,x,thx_fp_Map.delete(lhs,key,comparator),rhs);
		case 1:
			return thx_fp_Map.balance(kx,x,lhs,thx_fp_Map.delete(rhs,key,comparator));
		case 2:
			return thx_fp_Map.glue(lhs,rhs);
		}
		break;
	}
};
thx_fp_Map.insert = function(this1,kx,x,comparator) {
	switch(this1._hx_index) {
	case 0:
		return thx_fp_MapImpl.Bin(1,kx,x,thx_fp_MapImpl.Tip,thx_fp_MapImpl.Tip);
	case 1:
		var sz = this1.size;
		var ky = this1.key;
		var y = this1.value;
		var lhs = this1.lhs;
		var rhs = this1.rhs;
		switch(comparator(kx,ky)._hx_index) {
		case 0:
			return thx_fp_Map.balance(ky,y,thx_fp_Map.insert(lhs,kx,x,comparator),rhs);
		case 1:
			return thx_fp_Map.balance(ky,y,lhs,thx_fp_Map.insert(rhs,kx,x,comparator));
		case 2:
			return thx_fp_MapImpl.Bin(sz,kx,x,lhs,rhs);
		}
		break;
	}
};
thx_fp_Map.foldLeft = function(this1,b,f) {
	switch(this1._hx_index) {
	case 0:
		return b;
	case 1:
		var _g = this1.size;
		var _g = this1.key;
		var x = this1.value;
		var l = this1.lhs;
		var r = this1.rhs;
		return thx_fp_Map.foldLeft(r,thx_fp_Map.foldLeft(l,f(b,x),f),f);
	}
};
thx_fp_Map.map = function(this1,f) {
	switch(this1._hx_index) {
	case 0:
		return thx_fp_MapImpl.Tip;
	case 1:
		var sz = this1.size;
		var ky = this1.key;
		var y = this1.value;
		var lhs = this1.lhs;
		var rhs = this1.rhs;
		return thx_fp_MapImpl.Bin(sz,ky,f(y),thx_fp_Map.map(lhs,f),thx_fp_Map.map(rhs,f));
	}
};
thx_fp_Map.values = function(this1) {
	return thx_fp_Map.foldLeft(this1,[],function(acc,v) {
		acc.push(v);
		return acc;
	});
};
thx_fp_Map.foldLeftKeys = function(this1,b,f) {
	switch(this1._hx_index) {
	case 0:
		return b;
	case 1:
		var _g = this1.size;
		var _g = this1.value;
		var kx = this1.key;
		var l = this1.lhs;
		var r = this1.rhs;
		return thx_fp_Map.foldLeftKeys(r,thx_fp_Map.foldLeftKeys(l,f(b,kx),f),f);
	}
};
thx_fp_Map.foldLeftAll = function(this1,b,f) {
	switch(this1._hx_index) {
	case 0:
		return b;
	case 1:
		var _g = this1.size;
		var kx = this1.key;
		var x = this1.value;
		var l = this1.lhs;
		var r = this1.rhs;
		return thx_fp_Map.foldLeftAll(r,thx_fp_Map.foldLeftAll(l,f(b,kx,x),f),f);
	}
};
thx_fp_Map.foldLeftTuples = function(this1,b,f) {
	switch(this1._hx_index) {
	case 0:
		return b;
	case 1:
		var _g = this1.size;
		var kx = this1.key;
		var x = this1.value;
		var l = this1.lhs;
		var r = this1.rhs;
		var this1 = { _0 : kx, _1 : x};
		return thx_fp_Map.foldLeftTuples(r,thx_fp_Map.foldLeftTuples(l,f(b,this1),f),f);
	}
};
thx_fp_Map.size = function(this1) {
	switch(this1._hx_index) {
	case 0:
		return 0;
	case 1:
		var _g = this1.key;
		var _g = this1.value;
		var _g = this1.lhs;
		var _g = this1.rhs;
		var size = this1.size;
		return size;
	}
};
thx_fp_Map.balance = function(k,x,lhs,rhs) {
	var ls = thx_fp_Map.size(lhs);
	var rs = thx_fp_Map.size(rhs);
	var xs = ls + rs + 1;
	if(ls + rs <= 1) {
		return thx_fp_MapImpl.Bin(xs,k,x,lhs,rhs);
	} else if(rs >= 5 * ls) {
		return thx_fp_Map.rotateLeft(k,x,lhs,rhs);
	} else if(ls >= 5 * rs) {
		return thx_fp_Map.rotateRight(k,x,lhs,rhs);
	} else {
		return thx_fp_MapImpl.Bin(xs,k,x,lhs,rhs);
	}
};
thx_fp_Map.glue = function(this1,that) {
	if(this1._hx_index == 0) {
		return that;
	} else if(that._hx_index == 0) {
		return this1;
	} else {
		var l = this1;
		var r = that;
		if(thx_fp_Map.size(l) > thx_fp_Map.size(r)) {
			var t = thx_fp_Map.deleteFindMax(l);
			return thx_fp_Map.balance(t.k,t.x,t.t,r);
		} else {
			var l = this1;
			var r = that;
			var t = thx_fp_Map.deleteFindMin(r);
			return thx_fp_Map.balance(t.k,t.x,l,t.t);
		}
	}
};
thx_fp_Map.deleteFindMin = function(map) {
	switch(map._hx_index) {
	case 0:
		throw new thx_Error("can not return the minimal element of an empty map",null,{ fileName : "thx/fp/Map.hx", lineNumber : 171, className : "thx.fp._Map.Map_Impl_", methodName : "deleteFindMin"});
	case 1:
		var _g = map.size;
		var _g = map.key;
		var _g1 = map.value;
		var _g2 = map.lhs;
		var _g3 = map.rhs;
		if(_g2._hx_index == 0) {
			var x = _g1;
			var k = _g;
			var r = _g3;
			return { k : k, x : x, t : r};
		} else {
			var l = _g2;
			var x = _g1;
			var k = _g;
			var r = _g3;
			var t = thx_fp_Map.deleteFindMin(l);
			return { k : t.k, x : t.x, t : thx_fp_Map.balance(k,x,t.t,r)};
		}
		break;
	}
};
thx_fp_Map.deleteFindMax = function(map) {
	switch(map._hx_index) {
	case 0:
		throw new thx_Error("can not return the maximal element of an empty map",null,{ fileName : "thx/fp/Map.hx", lineNumber : 182, className : "thx.fp._Map.Map_Impl_", methodName : "deleteFindMax"});
	case 1:
		var _g = map.size;
		var _g = map.key;
		var _g1 = map.value;
		var _g2 = map.lhs;
		var _g3 = map.rhs;
		if(_g3._hx_index == 0) {
			var l = _g2;
			var x = _g1;
			var k = _g;
			return { k : k, x : x, t : l};
		} else {
			var r = _g3;
			var l = _g2;
			var x = _g1;
			var k = _g;
			var t = thx_fp_Map.deleteFindMax(r);
			return { k : t.k, x : t.x, t : thx_fp_Map.balance(k,x,l,t.t)};
		}
		break;
	}
};
thx_fp_Map.rotateLeft = function(k,x,lhs,rhs) {
	if(rhs._hx_index == 1) {
		var _g = rhs.size;
		var _g = rhs.key;
		var _g = rhs.value;
		var ly = rhs.lhs;
		var ry = rhs.rhs;
		if(thx_fp_Map.size(ly) < 2 * thx_fp_Map.size(ry)) {
			return thx_fp_Map.singleLeft(k,x,lhs,rhs);
		} else {
			return thx_fp_Map.doubleLeft(k,x,lhs,rhs);
		}
	} else {
		return thx_fp_Map.doubleLeft(k,x,lhs,rhs);
	}
};
thx_fp_Map.rotateRight = function(k,x,lhs,rhs) {
	if(lhs._hx_index == 1) {
		var _g = lhs.size;
		var _g = lhs.key;
		var _g = lhs.value;
		var ly = lhs.lhs;
		var ry = lhs.rhs;
		if(thx_fp_Map.size(ry) < 2 * thx_fp_Map.size(ly)) {
			return thx_fp_Map.singleRight(k,x,lhs,rhs);
		} else {
			return thx_fp_Map.doubleRight(k,x,lhs,rhs);
		}
	} else {
		return thx_fp_Map.doubleRight(k,x,lhs,rhs);
	}
};
thx_fp_Map.singleLeft = function(k1,x1,t1,rhs) {
	if(rhs._hx_index == 1) {
		var _g = rhs.size;
		var k2 = rhs.key;
		var x2 = rhs.value;
		var t2 = rhs.lhs;
		var t3 = rhs.rhs;
		var lhs = thx_fp_MapImpl.Bin(thx_fp_Map.size(t1) + thx_fp_Map.size(t2) + 1,k1,x1,t1,t2);
		return thx_fp_MapImpl.Bin(thx_fp_Map.size(lhs) + thx_fp_Map.size(t3) + 1,k2,x2,lhs,t3);
	} else {
		throw new thx_Error("damn it, this should never happen",null,{ fileName : "thx/fp/Map.hx", lineNumber : 204, className : "thx.fp._Map.Map_Impl_", methodName : "singleLeft"});
	}
};
thx_fp_Map.singleRight = function(k1,x1,lhs,t3) {
	if(lhs._hx_index == 1) {
		var _g = lhs.size;
		var k2 = lhs.key;
		var x2 = lhs.value;
		var t1 = lhs.lhs;
		var t2 = lhs.rhs;
		var rhs = thx_fp_MapImpl.Bin(thx_fp_Map.size(t2) + thx_fp_Map.size(t3) + 1,k1,x1,t2,t3);
		return thx_fp_MapImpl.Bin(thx_fp_Map.size(t1) + thx_fp_Map.size(rhs) + 1,k2,x2,t1,rhs);
	} else {
		throw new thx_Error("damn it, this should never happen",null,{ fileName : "thx/fp/Map.hx", lineNumber : 210, className : "thx.fp._Map.Map_Impl_", methodName : "singleRight"});
	}
};
thx_fp_Map.doubleLeft = function(k1,x1,t1,rhs) {
	if(rhs._hx_index == 1) {
		var _g = rhs.size;
		var _g = rhs.lhs;
		if(_g._hx_index == 1) {
			var _g1 = _g.size;
			var k3 = _g.key;
			var x3 = _g.value;
			var t2 = _g.lhs;
			var t3 = _g.rhs;
			var x2 = rhs.value;
			var k2 = rhs.key;
			var t4 = rhs.rhs;
			var lhs = thx_fp_MapImpl.Bin(thx_fp_Map.size(t1) + thx_fp_Map.size(t2) + 1,k1,x1,t1,t2);
			var rhs = thx_fp_MapImpl.Bin(thx_fp_Map.size(t3) + thx_fp_Map.size(t4) + 1,k2,x2,t3,t4);
			return thx_fp_MapImpl.Bin(thx_fp_Map.size(lhs) + thx_fp_Map.size(rhs) + 1,k3,x3,lhs,rhs);
		} else {
			throw new thx_Error("damn it, this should never happen",null,{ fileName : "thx/fp/Map.hx", lineNumber : 217, className : "thx.fp._Map.Map_Impl_", methodName : "doubleLeft"});
		}
	} else {
		throw new thx_Error("damn it, this should never happen",null,{ fileName : "thx/fp/Map.hx", lineNumber : 217, className : "thx.fp._Map.Map_Impl_", methodName : "doubleLeft"});
	}
};
thx_fp_Map.doubleRight = function(k1,x1,lhs,t4) {
	if(lhs._hx_index == 1) {
		var _g = lhs.size;
		var _g = lhs.rhs;
		if(_g._hx_index == 1) {
			var _g1 = _g.size;
			var k3 = _g.key;
			var x3 = _g.value;
			var t2 = _g.lhs;
			var t3 = _g.rhs;
			var t1 = lhs.lhs;
			var x2 = lhs.value;
			var k2 = lhs.key;
			var lhs = thx_fp_MapImpl.Bin(thx_fp_Map.size(t1) + thx_fp_Map.size(t2) + 1,k2,x2,t1,t2);
			var rhs = thx_fp_MapImpl.Bin(thx_fp_Map.size(t3) + thx_fp_Map.size(t4) + 1,k1,x1,t3,t4);
			return thx_fp_MapImpl.Bin(thx_fp_Map.size(lhs) + thx_fp_Map.size(rhs) + 1,k3,x3,lhs,rhs);
		} else {
			throw new thx_Error("damn it, this should never happen",null,{ fileName : "thx/fp/Map.hx", lineNumber : 224, className : "thx.fp._Map.Map_Impl_", methodName : "doubleRight"});
		}
	} else {
		throw new thx_Error("damn it, this should never happen",null,{ fileName : "thx/fp/Map.hx", lineNumber : 224, className : "thx.fp._Map.Map_Impl_", methodName : "doubleRight"});
	}
};
var thx_fp_MapImpl = $hxEnums["thx.fp.MapImpl"] = { __ename__:"thx.fp.MapImpl",__constructs__:null
	,Tip: {_hx_name:"Tip",_hx_index:0,__enum__:"thx.fp.MapImpl",toString:$estr}
	,Bin: ($_=function(size,key,value,lhs,rhs) { return {_hx_index:1,size:size,key:key,value:value,lhs:lhs,rhs:rhs,__enum__:"thx.fp.MapImpl",toString:$estr}; },$_._hx_name="Bin",$_.__params__ = ["size","key","value","lhs","rhs"],$_)
};
thx_fp_MapImpl.__constructs__ = [thx_fp_MapImpl.Tip,thx_fp_MapImpl.Bin];
var tstool_utils_CookieBB = function() { };
$hxClasses["tstool.utils.CookieBB"] = tstool_utils_CookieBB;
tstool_utils_CookieBB.__name__ = "tstool.utils.CookieBB";
tstool_utils_CookieBB.set = function(name,value,expireDelay,path,domain,SameSite) {
	if(SameSite == null) {
		SameSite = "Strict";
	}
	var s = name + "=" + encodeURIComponent(value);
	if(expireDelay != null) {
		var d = new Date(new Date().getTime() + expireDelay * 1000);
		s += ";expires=" + d.toGMTString();
	}
	if(path != null) {
		s += ";path=" + path;
	}
	if(domain != null) {
		s += ";domain=" + domain;
	}
	s += ";SameSite=" + SameSite;
	window.document.cookie = s;
};
tstool_utils_CookieBB.all = function() {
	var h = new haxe_ds_StringMap();
	var a = window.document.cookie.split(";");
	var _g = 0;
	while(_g < a.length) {
		var e = a[_g];
		++_g;
		e = StringTools.ltrim(e);
		var t = e.split("=");
		if(t.length < 2) {
			continue;
		}
		var value = decodeURIComponent(t[1].split("+").join(" "));
		h.h[t[0]] = value;
	}
	return h;
};
tstool_utils_CookieBB.get = function(name) {
	return tstool_utils_CookieBB.all().h[name];
};
tstool_utils_CookieBB.exists = function(name) {
	var _this = tstool_utils_CookieBB.all();
	return Object.prototype.hasOwnProperty.call(_this.h,name);
};
tstool_utils_CookieBB.remove = function(name,path,domain) {
	tstool_utils_CookieBB.set(name,"",-10,path,domain);
};
var ui_Login = function(logger) {
	haxe_ui_containers_VBox.call(this);
	haxe_ui_Toolkit.styleSheet.parse("\nbody{\r\n\tbackground-color:#000;\r\n}\r\n#main, #logger {\r\n\tbackground-color:#000;\r\n    /*border: 1px solid #CCCCCC;*/\r\n    padding: 10px;\r\n}\r\n#logger{\r\n\tpadding:2rem;\r\n}\r\n\r\n#feedback, em{\r\n\tcolor:#f00;\r\n}\r\n#count{\r\n\tfont-size:1.2rem;\r\n}","user");
	var c0 = new haxe_ui_containers_Grid();
	c0.set_id("credentials");
	c0.set_left(45.);
	c0.set_top(45.);
	c0.set_percentWidth(100.);
	c0.set_percentHeight(12.);
	c0.set_columns(3);
	var c1 = new haxe_ui_components_Label();
	c1.set_text("{{LOGIN_USERNAME}}");
	c1.set_styleNames("h2meta");
	c1.set_tooltip("Use your NT credentials\\n Expl: gclooney\\nWh@tEls3");
	c0.addComponent(c1);
	var c2 = new haxe_ui_components_TextField();
	c2.set_id("username");
	c2.set_allowFocus(true);
	c0.addComponent(c2);
	var c3 = new haxe_ui_containers_Box();
	c0.addComponent(c3);
	var c4 = new haxe_ui_components_Label();
	c4.set_text("{{LOGIN_PASSWORD}}");
	c4.set_styleNames("h2meta");
	c4.set_tooltip("Use your NT credentials\\n Expl: gclooney\\nWh@tEls3");
	c0.addComponent(c4);
	var c5 = new haxe_ui_components_TextField();
	c5.set_id("pwd");
	c5.set_text("");
	c5.set_allowFocus(true);
	c0.addComponent(c5);
	var c6 = new haxe_ui_components_Image();
	c6.set_id("showPwd");
	c6.set_width(40.);
	c6.set_text("show");
	c6.set_tooltip("{{SHOW_PWD}}");
	c6.set_resource(haxe_ui_util_Variant.fromString("images/eye.png"));
	c6.set_horizontalAlign("left");
	c0.addComponent(c6);
	var c7 = new haxe_ui_containers_Box();
	c0.addComponent(c7);
	this.addComponent(c0);
	var c8 = new haxe_ui_components_Button();
	c8.set_id("login");
	c8.set_width(240.);
	c8.set_height(60.);
	c8.set_text("{{LOGIN_BTN}}");
	c8.set_icon(haxe_ui_util_Variant.fromString("images/bt_btn.png"));
	this.addComponent(c8);
	var c9 = new haxe_ui_components_Label();
	c9.set_id("feedback");
	this.addComponent(c9);
	this.set_id("logger");
	this.set_percentWidth(100.);
	this.set_percentHeight(100.);
	this.set_verticalAlign("center");
	this.set_horizontalAlign("center");
	this.bindingRoot = true;
	this.username = c2;
	this.showPwd = c6;
	this.pwd = c5;
	this.login = c8;
	this.feedback = c9;
	this.credentials = c0;
	c1.set_text(haxe_ui_locale_LocaleManager.get_instance().lookupString("LOGIN_USERNAME"));
	haxe_ui_locale_LocaleManager.get_instance().registerComponent(c1,"text",function() {
		return haxe_ui_locale_LocaleManager.get_instance().lookupString("LOGIN_USERNAME");
	});
	c4.set_text(haxe_ui_locale_LocaleManager.get_instance().lookupString("LOGIN_PASSWORD"));
	haxe_ui_locale_LocaleManager.get_instance().registerComponent(c4,"text",function() {
		return haxe_ui_locale_LocaleManager.get_instance().lookupString("LOGIN_PASSWORD");
	});
	c8.set_text(haxe_ui_locale_LocaleManager.get_instance().lookupString("LOGIN_BTN"));
	haxe_ui_locale_LocaleManager.get_instance().registerComponent(c8,"text",function() {
		return haxe_ui_locale_LocaleManager.get_instance().lookupString("LOGIN_BTN");
	});
	this.set_needsDirectReports(false);
	this.pwd.set_password(true);
	this._logger = logger;
	this.login.set_onClick($bind(this,this.onLoginClicked));
	this.showPwd.set_onClick($bind(this,this.onShowChange));
};
$hxClasses["ui.Login"] = ui_Login;
ui_Login.__name__ = "ui.Login";
ui_Login.__super__ = haxe_ui_containers_VBox;
ui_Login.prototype = $extend(haxe_ui_containers_VBox.prototype,{
	_logger: null
	,attributes: null
	,needsDirectReports: null
	,feedErrorBack: function(txt) {
		this.feedback.addClass("error");
		this.feedback.set_text(txt);
	}
	,onLoginClicked: function(e) {
		haxe_Log.trace("ui.Login::onLoginClicked AppBase._mainDebug",{ fileName : "ui/Login.hx", lineNumber : 37, className : "ui.Login", methodName : "onLoginClicked", customParams : [Main._mainDebug]});
		this.feedback.removeClass("error");
		try {
			if(Main._mainDebug) {
				this._logger.prepareCredentials(this.username.get_text(),this.pwd.get_text(),this.get_needsDirectReports(),this.get_attributes());
			}
			this._logger.send();
		} catch( _g ) {
			var e = haxe_Exception.caught(_g);
			haxe_Log.trace(e,{ fileName : "ui/Login.hx", lineNumber : 54, className : "ui.Login", methodName : "onLoginClicked"});
			this.feedback.addClass("error");
			this.feedback.set_text(e.get_message());
		}
	}
	,onShowChange: function(e) {
		this.pwd.set_password(!this.pwd.get_password());
	}
	,get_attributes: function() {
		return this.attributes;
	}
	,set_attributes: function(value) {
		return this.attributes = value;
	}
	,get_needsDirectReports: function() {
		return this.needsDirectReports;
	}
	,set_needsDirectReports: function(value) {
		return this.needsDirectReports = value;
	}
	,registerBehaviours: function() {
		haxe_ui_containers_VBox.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_VBox.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,_constructorParam_logger: null
	,self: function() {
		return new ui_Login(this._constructorParam_logger);
	}
	,username: null
	,showPwd: null
	,pwd: null
	,login: null
	,feedback: null
	,credentials: null
	,__class__: ui_Login
	,__properties__: $extend(haxe_ui_containers_VBox.prototype.__properties__,{set_needsDirectReports:"set_needsDirectReports",get_needsDirectReports:"get_needsDirectReports",set_attributes:"set_attributes",get_attributes:"get_attributes"})
});
var ui_dialogs_MarkdownHelp = function() {
	haxe_ui_containers_dialogs_MessageBox.call(this);
	this.set_title("INFO !! Markdown syntax");
	this.set_type("info");
	this.messageLabel.set_htmlText("Use this following simple markdown syntax.<br>It will be formated in the e-mail report");
	var fh = this.messageLabel;
	fh.set_htmlText(fh.get_htmlText() + "<br><br><table>");
	var fh = this.messageLabel;
	fh.set_htmlText(fh.get_htmlText() + "<tr><td>Markdown</td><td>&rarr;</td><td> Formated</td></tr>");
	var fh = this.messageLabel;
	fh.set_htmlText(fh.get_htmlText() + "<tr><td></td><td></td><td></td></tr>");
	var fh = this.messageLabel;
	fh.set_htmlText(fh.get_htmlText() + "<tr><td>**Bold**</td><td>&rarr;</td><td> <strong>Bold</strong></td></tr>");
	var fh = this.messageLabel;
	fh.set_htmlText(fh.get_htmlText() + "<tr><td>_italic_</td><td>&rarr;</td><td> <em>italic</em ></td></tr>");
	var fh = this.messageLabel;
	fh.set_htmlText(fh.get_htmlText() + "<tr><td> </td><td> </td><td> <td> </td></tr>");
	var fh = this.messageLabel;
	fh.set_htmlText(fh.get_htmlText() + "<tr><td></td><td>Unordered list</td><td> </td></tr>");
	var fh = this.messageLabel;
	fh.set_htmlText(fh.get_htmlText() + "<tr><td>- item1<br>- item2</td><td>&rarr;</td><td> <ul><li>item1</li><li>item2</li></ul></td></tr>");
	var fh = this.messageLabel;
	fh.set_htmlText(fh.get_htmlText() + "<tr><td></td><td>Oredered list</td><td></td></tr>");
	var fh = this.messageLabel;
	fh.set_htmlText(fh.get_htmlText() + "<tr><td>1. item1<br>1. item2</td><td>&rarr;</td><td> <ol><li>item1</li><li>item2</li></ol></td></tr></table>");
	var fh = this.messageLabel;
	fh.set_htmlText(fh.get_htmlText() + "(The space after '-' or '1.' is needed and you must do a line break after each list item)");
	this.set_width(700);
};
$hxClasses["ui.dialogs.MarkdownHelp"] = ui_dialogs_MarkdownHelp;
ui_dialogs_MarkdownHelp.__name__ = "ui.dialogs.MarkdownHelp";
ui_dialogs_MarkdownHelp.__super__ = haxe_ui_containers_dialogs_MessageBox;
ui_dialogs_MarkdownHelp.prototype = $extend(haxe_ui_containers_dialogs_MessageBox.prototype,{
	registerBehaviours: function() {
		haxe_ui_containers_dialogs_MessageBox.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_dialogs_MessageBox.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new ui_dialogs_MarkdownHelp();
	}
	,__class__: ui_dialogs_MarkdownHelp
});
var ui_dialogs_MarkdownViewer = function() {
	haxe_ui_containers_dialogs_Dialog.call(this);
	var v = new haxe_ui_containers_VBox();
	v.set_id("MDViewrMainGrid");
	v.addComponent(this.dialogTitle);
	v.addComponent(this.dialogTitleLabel);
};
$hxClasses["ui.dialogs.MarkdownViewer"] = ui_dialogs_MarkdownViewer;
ui_dialogs_MarkdownViewer.__name__ = "ui.dialogs.MarkdownViewer";
ui_dialogs_MarkdownViewer.__super__ = haxe_ui_containers_dialogs_Dialog;
ui_dialogs_MarkdownViewer.prototype = $extend(haxe_ui_containers_dialogs_Dialog.prototype,{
	registerBehaviours: function() {
		haxe_ui_containers_dialogs_Dialog.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_dialogs_Dialog.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new ui_dialogs_MarkdownViewer();
	}
	,__class__: ui_dialogs_MarkdownViewer
});
var xapi_types_IUnique = function() { };
$hxClasses["xapi.types.IUnique"] = xapi_types_IUnique;
xapi_types_IUnique.__name__ = "xapi.types.IUnique";
xapi_types_IUnique.__isInterface__ = true;
xapi_types_IUnique.prototype = {
	get_id: null
	,id: null
	,__class__: xapi_types_IUnique
	,__properties__: {get_id:"get_id"}
};
var xapi_Activity = function(uri,definition) {
	this.objectType = "Activity";
	this.id = uri;
	this.set_definition(definition);
};
$hxClasses["xapi.Activity"] = xapi_Activity;
xapi_Activity.__name__ = "xapi.Activity";
xapi_Activity.__interfaces__ = [xapi_types_IUnique,xapi_types_IObject];
xapi_Activity.prototype = {
	definition: null
	,id: null
	,objectType: null
	,get_id: function() {
		return this.id;
	}
	,get_objectType: function() {
		return this.objectType;
	}
	,makeBasicDefinintion: function(urlLevels) {
		if(urlLevels == null) {
			urlLevels = 1;
		}
		var index = 0;
		if(this.get_definition() == null) {
			this.set_definition(new xapi_activities_Definition());
			var split = this.get_id().split("/");
			if(split[split.length - 1] == "") {
				split.splice(split.length - 1,1);
			}
			index = split.length - urlLevels;
			split.splice(0,index);
			var a = split.join("/");
			this.get_definition().get_name().h["en"] = a;
			this.get_definition().get_name().h["fr"] = a;
			this.get_definition().get_name().h["de"] = a;
			this.get_definition().get_name().h["it"] = a;
		}
	}
	,get_definition: function() {
		return this.definition;
	}
	,set_definition: function(value) {
		return this.definition = value;
	}
	,__class__: xapi_Activity
	,__properties__: {get_objectType:"get_objectType",get_id:"get_id",set_definition:"set_definition",get_definition:"get_definition"}
};
var xapi_MissingActorIri = function(agent) {
	this.agent = agent;
	this.msg = "Agent IRI is empty";
};
$hxClasses["xapi.MissingActorIri"] = xapi_MissingActorIri;
xapi_MissingActorIri.__name__ = "xapi.MissingActorIri";
xapi_MissingActorIri.prototype = {
	msg: null
	,agent: null
	,__class__: xapi_MissingActorIri
};
var xapi_BadEmailFormat = function(mail) {
	this.email = mail;
};
$hxClasses["xapi.BadEmailFormat"] = xapi_BadEmailFormat;
xapi_BadEmailFormat.__name__ = "xapi.BadEmailFormat";
xapi_BadEmailFormat.prototype = {
	email: null
	,get_email: function() {
		return this.email;
	}
	,__class__: xapi_BadEmailFormat
	,__properties__: {get_email:"get_email"}
};
var xapi_ContextActivity = $hxEnums["xapi.ContextActivity"] = { __ename__:"xapi.ContextActivity",__constructs__:null
	,parent: {_hx_name:"parent",_hx_index:0,__enum__:"xapi.ContextActivity",toString:$estr}
	,grouping: {_hx_name:"grouping",_hx_index:1,__enum__:"xapi.ContextActivity",toString:$estr}
	,category: {_hx_name:"category",_hx_index:2,__enum__:"xapi.ContextActivity",toString:$estr}
	,other: {_hx_name:"other",_hx_index:3,__enum__:"xapi.ContextActivity",toString:$estr}
};
xapi_ContextActivity.__constructs__ = [xapi_ContextActivity.parent,xapi_ContextActivity.grouping,xapi_ContextActivity.category,xapi_ContextActivity.other];
var xapi_Context = function(uuid,instructor,team,context_activities,revision,platform,language,statement,extensions) {
	this.set_language(language);
	this.extensions = extensions;
	this.set_statement(statement);
	this.set_platform(platform);
	this.revision = revision;
	this.team = team;
	this.initContextActivities();
	this.set_instructor(instructor);
	var tmp;
	if(xapi_types_Standards.UUID.match(uuid) || uuid == null) {
		tmp = uuid;
	} else {
		throw haxe_Exception.thrown("Context.new :: uuid \"" + uuid + "\" is not valid UUID");
	}
	this.registration = tmp;
};
$hxClasses["xapi.Context"] = xapi_Context;
xapi_Context.__name__ = "xapi.Context";
xapi_Context.prototype = {
	language: null
	,extensions: null
	,statement: null
	,platform: null
	,revision: null
	,team: null
	,contextActivities: null
	,instructor: null
	,registration: null
	,clone: function() {
		var instruc = this.get_instructor().get_objectType() == "Agent" ? new xapi_Agent((js_Boot.__cast(this.get_instructor() , xapi_Agent)).get_mbox(),(js_Boot.__cast(this.get_instructor() , xapi_Agent)).get_name()) : new xapi_Group((js_Boot.__cast(this.get_instructor() , xapi_Group)).get_id(),(js_Boot.__cast(this.get_instructor() , xapi_Group)).get_uri(),(js_Boot.__cast(this.get_instructor() , xapi_Group)).get_member());
		return new xapi_Context(this.get_registration(),instruc,this.get_team() == null ? null : new xapi_Group(this.get_team().get_id(),this.get_team().get_uri(),this.get_team().get_member()),haxe_ds_StringMap.createCopy(this.get_contextActivities().h),this.revision,this.get_platform(),this.get_language(),this.get_statement() == null ? null : new xapi_types_StatementRef(this.get_statement().get_id()),haxe_ds_StringMap.createCopy(this.extensions.h));
	}
	,reset: function() {
		this.set_language(null);
		this.extensions = null;
		this.set_statement(null);
		this.set_platform(null);
		this.revision = null;
		this.contextActivities = new haxe_ds_StringMap();
	}
	,initContextActivities: function() {
		if(this.get_contextActivities() == null) {
			this.contextActivities = new haxe_ds_StringMap();
		}
		var this1 = this.get_contextActivities();
		if(!Object.prototype.hasOwnProperty.call(this1.h,"parent")) {
			this.get_contextActivities().h["parent"] = [];
		}
		var this1 = this.get_contextActivities();
		if(!Object.prototype.hasOwnProperty.call(this1.h,"grouping")) {
			this.get_contextActivities().h["grouping"] = [];
		}
		var this1 = this.get_contextActivities();
		if(!Object.prototype.hasOwnProperty.call(this1.h,"other")) {
			this.get_contextActivities().h["other"] = [];
		}
		var this1 = this.get_contextActivities();
		if(!Object.prototype.hasOwnProperty.call(this1.h,"category")) {
			this.get_contextActivities().h["category"] = [];
		}
		return this.get_contextActivities();
	}
	,addContextActivity: function(type,activity) {
		var tmp = this.get_contextActivities().h[Std.string(type)];
		var _g = new haxe_ds_StringMap();
		var value = activity.get_id();
		_g.h["id"] = value;
		tmp.push(_g);
		return this.get_contextActivities();
	}
	,get_registration: function() {
		return this.registration;
	}
	,get_contextActivities: function() {
		return this.contextActivities;
	}
	,get_platform: function() {
		return this.platform;
	}
	,set_platform: function(value) {
		return this.platform = value;
	}
	,get_language: function() {
		return this.language;
	}
	,set_language: function(value) {
		return this.language = value;
	}
	,get_instructor: function() {
		return this.instructor;
	}
	,get_team: function() {
		return this.team;
	}
	,set_instructor: function(value) {
		return this.instructor = value;
	}
	,get_statement: function() {
		return this.statement;
	}
	,set_statement: function(value) {
		return this.statement = value;
	}
	,__class__: xapi_Context
	,__properties__: {get_registration:"get_registration",set_instructor:"set_instructor",get_instructor:"get_instructor",get_contextActivities:"get_contextActivities",get_team:"get_team",set_platform:"set_platform",get_platform:"get_platform",set_statement:"set_statement",get_statement:"get_statement",set_language:"set_language",get_language:"get_language"}
};
var xapi_Group = function(id,uri,members) {
	this.id = id;
	this.uri = uri;
	this.objectType = "Group";
	this.member = members;
};
$hxClasses["xapi.Group"] = xapi_Group;
xapi_Group.__name__ = "xapi.Group";
xapi_Group.__interfaces__ = [xapi_types_IActor,xapi_types_IUnique];
xapi_Group.prototype = {
	member: null
	,id: null
	,uri: null
	,objectType: null
	,get_uri: function() {
		return this.uri;
	}
	,get_objectType: function() {
		return this.objectType;
	}
	,get_member: function() {
		return this.member;
	}
	,get_id: function() {
		return this.id;
	}
	,__class__: xapi_Group
	,__properties__: {get_objectType:"get_objectType",get_uri:"get_uri",get_id:"get_id",get_member:"get_member"}
};
var xapi_Params = function() { };
$hxClasses["xapi.Params"] = xapi_Params;
xapi_Params.__name__ = "xapi.Params";
var xapi_Result = function(score,success,completion,response,duration,extensions) {
	if(duration != null) {
		this.toISO8601Duration(duration);
	}
	this.response = response;
	this.completion = completion;
	this.success = success;
	this.score = score;
	this.extensions = extensions;
};
$hxClasses["xapi.Result"] = xapi_Result;
xapi_Result.__name__ = "xapi.Result";
xapi_Result.prototype = {
	extensions: null
	,completion: null
	,duration: null
	,response: null
	,success: null
	,score: null
	,toISO8601Duration: function(timestamp) {
		var s = 1000;
		var m = 60 * s;
		var h = 60 * m;
		var d = 24 * h;
		var temp = timestamp;
		var modulo = temp % d;
		var t = [];
		t.push((temp - modulo) / d);
		temp = modulo;
		modulo = temp % h;
		t.push((temp - modulo) / h);
		temp = modulo;
		modulo = temp % m;
		t.push((temp - modulo) / m);
		temp = modulo;
		modulo = temp % s;
		t.push((temp - modulo) / s);
		temp = modulo;
		this.duration = Std.string("P" + t[0] + "DT" + t[1] + "H" + t[2] + "M" + t[3] + "S");
	}
	,get_score: function() {
		return this.score;
	}
	,set_score: function(value) {
		return this.score = value;
	}
	,get_success: function() {
		return this.success;
	}
	,get_response: function() {
		return this.response;
	}
	,get_duration: function() {
		return this.duration;
	}
	,set_duration: function(value) {
		return this.duration = value;
	}
	,get_completion: function() {
		return this.completion;
	}
	,get_extensions: function() {
		return this.extensions;
	}
	,__class__: xapi_Result
	,__properties__: {get_score:"get_score",get_success:"get_success",get_response:"get_response",get_duration:"get_duration",get_completion:"get_completion",get_extensions:"get_extensions"}
};
var xapi_Results = function() { };
$hxClasses["xapi.Results"] = xapi_Results;
xapi_Results.__name__ = "xapi.Results";
var xapi_Statement = function(actor,verb,object,result,context) {
	this.set_attachments(null);
	var this1 = [thx_DateTimeUtc.now(),thx_DateTime.localOffset()];
	this.timestamp = thx_DateTime.toString(this1);
	this.set_context(context);
	this.result = result;
	this.object = object;
	this.verb = verb;
	this.actor = actor;
	if(object.get_objectType() == "Agent" && context.get_platform() != null) {
		throw haxe_Exception.thrown("The context's \"platform\" property MUST only be used if the Statement's Object is an Activity objectType=" + object.get_objectType() + " context.platform = " + context.get_platform());
	}
};
$hxClasses["xapi.Statement"] = xapi_Statement;
xapi_Statement.__name__ = "xapi.Statement";
xapi_Statement.__interfaces__ = [xapi_types_IUnique];
xapi_Statement.prototype = {
	attachments: null
	,timestamp: null
	,context: null
	,result: null
	,object: null
	,verb: null
	,actor: null
	,id: null
	,reset: function() {
		this.set_attachments(null);
		var this1 = [thx_DateTimeUtc.now(),thx_DateTime.localOffset()];
		this.timestamp = thx_DateTime.toString(this1);
		this.set_context(null);
		this.result = null;
		this.object = null;
		this.verb = null;
		this.actor = null;
	}
	,get_id: function() {
		return this.id;
	}
	,get_context: function() {
		return this.context;
	}
	,set_context: function(ctx) {
		return this.context = ctx;
	}
	,get_result: function() {
		return this.result;
	}
	,get_object: function() {
		return this.object;
	}
	,get_verb: function() {
		return this.verb;
	}
	,get_actor: function() {
		return this.actor;
	}
	,get_timestamp: function() {
		return this.timestamp;
	}
	,get_attachments: function() {
		return this.attachments;
	}
	,set_attachments: function(value) {
		if(this.get_attachments() == null) {
			this.attachments = [];
		}
		return this.attachments = value;
	}
	,initAttachement: function() {
	}
	,__class__: xapi_Statement
	,__properties__: {get_id:"get_id",get_actor:"get_actor",get_verb:"get_verb",get_object:"get_object",get_result:"get_result",set_context:"set_context",get_context:"get_context",get_timestamp:"get_timestamp",set_attachments:"set_attachments",get_attachments:"get_attachments"}
};
var xapi_Verb = function(uri,display) {
	this.id = uri;
	if(display == null || !Object.prototype.hasOwnProperty.call(display.h,"en") || display.h["en"] == "") {
		this.initDefault(this.get_id());
	} else {
		this.set_display(display);
	}
};
$hxClasses["xapi.Verb"] = xapi_Verb;
xapi_Verb.__name__ = "xapi.Verb";
xapi_Verb.__interfaces__ = [xapi_types_IUnique];
xapi_Verb.prototype = {
	id: null
	,display: null
	,initDefault: function(s) {
		var temp = s.split("/");
		var d = temp[temp.length - 1] == "" ? temp[temp.length - 2] : temp[temp.length - 1];
		this.set_display(new haxe_ds_StringMap());
		this.get_display().h["en"] = d;
	}
	,get_id: function() {
		return this.id;
	}
	,get_display: function() {
		return this.display;
	}
	,set_display: function(value) {
		return this.display = value;
	}
	,toString: function() {
		return "xapi.Verb : {id:" + this.get_id() + ", display: " + Std.string(this.get_display()) + "}";
	}
	,__class__: xapi_Verb
	,__properties__: {set_display:"set_display",get_display:"get_display",get_id:"get_id"}
};
var xapi_activities_Definition = function() {
	this.set_name(new haxe_ds_StringMap());
	this.set_description(new haxe_ds_StringMap());
	this.set_extensions(new haxe_ds_StringMap());
	this.set_type(null);
	this.set_moreInfo(null);
};
$hxClasses["xapi.activities.Definition"] = xapi_activities_Definition;
xapi_activities_Definition.__name__ = "xapi.activities.Definition";
xapi_activities_Definition.prototype = {
	name: null
	,description: null
	,type: null
	,moreInfo: null
	,extensions: null
	,get_name: function() {
		return this.name;
	}
	,set_name: function(value) {
		return this.name = value;
	}
	,get_description: function() {
		return this.description;
	}
	,set_description: function(value) {
		return this.description = value;
	}
	,get_type: function() {
		return this.type;
	}
	,set_type: function(value) {
		return this.type = value;
	}
	,get_moreInfo: function() {
		return this.moreInfo;
	}
	,set_moreInfo: function(value) {
		return this.moreInfo = value;
	}
	,get_extensions: function() {
		return this.extensions;
	}
	,set_extensions: function(value) {
		return this.extensions = value;
	}
	,__class__: xapi_activities_Definition
	,__properties__: {set_extensions:"set_extensions",get_extensions:"get_extensions",set_moreInfo:"set_moreInfo",get_moreInfo:"get_moreInfo",set_type:"set_type",get_type:"get_type",set_description:"set_description",get_description:"get_description",set_name:"set_name",get_name:"get_name"}
};
var xapi_types_ObjectTypes = $hxEnums["xapi.types.ObjectTypes"] = { __ename__:"xapi.types.ObjectTypes",__constructs__:null
	,Activity: {_hx_name:"Activity",_hx_index:0,__enum__:"xapi.types.ObjectTypes",toString:$estr}
	,Agent: {_hx_name:"Agent",_hx_index:1,__enum__:"xapi.types.ObjectTypes",toString:$estr}
	,Group: {_hx_name:"Group",_hx_index:2,__enum__:"xapi.types.ObjectTypes",toString:$estr}
	,SubStatement: {_hx_name:"SubStatement",_hx_index:3,__enum__:"xapi.types.ObjectTypes",toString:$estr}
	,StatementRef: {_hx_name:"StatementRef",_hx_index:4,__enum__:"xapi.types.ObjectTypes",toString:$estr}
};
xapi_types_ObjectTypes.__constructs__ = [xapi_types_ObjectTypes.Activity,xapi_types_ObjectTypes.Agent,xapi_types_ObjectTypes.Group,xapi_types_ObjectTypes.SubStatement,xapi_types_ObjectTypes.StatementRef];
var xapi_types_Score = function(raw,max,min) {
	if(min == null) {
		min = 0;
	}
	if(max == null) {
		max = 100;
	}
	if(raw == null) {
		raw = 0;
	}
	this.set_max(max);
	this.set_min(min);
	this.set_raw(raw);
	this.scaled = max == 0 ? 0 : raw / max;
};
$hxClasses["xapi.types.Score"] = xapi_types_Score;
xapi_types_Score.__name__ = "xapi.types.Score";
xapi_types_Score.prototype = {
	scaled: null
	,raw: null
	,min: null
	,max: null
	,reset: function() {
		this.set_raw(0);
		this.set_max(100);
		this.set_min(0);
		this.scaled = 0.0;
	}
	,get_scaled: function() {
		return this.scaled = this.get_max() == 0 ? 0 : this.get_raw() / this.get_max();
	}
	,get_raw: function() {
		return this.raw;
	}
	,set_raw: function(value) {
		this.raw = value;
		this.get_scaled();
		return this.raw = value;
	}
	,get_min: function() {
		return this.min;
	}
	,set_min: function(value) {
		return this.min = value;
	}
	,get_max: function() {
		return this.max;
	}
	,set_max: function(value) {
		this.max = value;
		this.get_scaled();
		return this.get_max();
	}
	,__class__: xapi_types_Score
	,__properties__: {set_max:"set_max",get_max:"get_max",set_min:"set_min",get_min:"get_min",set_raw:"set_raw",get_raw:"get_raw",get_scaled:"get_scaled"}
};
var xapi_types_Standards = function() { };
$hxClasses["xapi.types.Standards"] = xapi_types_Standards;
xapi_types_Standards.__name__ = "xapi.types.Standards";
var xapi_types_StatementRef = function(statementId) {
	var tmp;
	if(xapi_types_Standards.UUID.match(statementId)) {
		tmp = statementId;
	} else {
		throw haxe_Exception.thrown("EXCEPTION xapi.types.StatementRef :: invalid statementId : " + statementId);
	}
	this.id = tmp;
	this.objectType = "StatementRef";
};
$hxClasses["xapi.types.StatementRef"] = xapi_types_StatementRef;
xapi_types_StatementRef.__name__ = "xapi.types.StatementRef";
xapi_types_StatementRef.__interfaces__ = [xapi_types_IObject,xapi_types_IUnique];
xapi_types_StatementRef.prototype = {
	id: null
	,objectType: null
	,get_objectType: function() {
		return this.objectType;
	}
	,get_id: function() {
		return this.id;
	}
	,__class__: xapi_types_StatementRef
	,__properties__: {get_objectType:"get_objectType",get_id:"get_id"}
};
function $iterator(o) { if( o instanceof Array ) return function() { return new haxe_iterators_ArrayIterator(o); }; return typeof(o.iterator) == 'function' ? $bind(o,o.iterator) : o.iterator; }
function $getIterator(o) { if( o instanceof Array ) return new haxe_iterators_ArrayIterator(o); else return o.iterator(); }
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $global.$haxeUID++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = m.bind(o); o.hx__closures__[m.__id__] = f; } return f; }
$global.$haxeUID |= 0;
if(typeof(performance) != "undefined" ? typeof(performance.now) == "function" : false) {
	HxOverrides.now = performance.now.bind(performance);
}
$hxClasses["Math"] = Math;
if( String.fromCodePoint == null ) String.fromCodePoint = function(c) { return c < 0x10000 ? String.fromCharCode(c) : String.fromCharCode((c>>10)+0xD7C0)+String.fromCharCode((c&0x3FF)+0xDC00); }
String.prototype.__class__ = $hxClasses["String"] = String;
String.__name__ = "String";
$hxClasses["Array"] = Array;
Array.__name__ = "Array";
Date.prototype.__class__ = $hxClasses["Date"] = Date;
Date.__name__ = "Date";
var Int = { };
var Dynamic = { };
var Float = Number;
var Bool = Boolean;
var Class = { };
var Enum = { };
haxe_Resource.content = [{ name : "haxeui-core/styles/shared/down-arrow-blue.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAECAYAAABCxiV9AAAEHnpUWHRSYXcgcHJvZmlsZSB0eXBlIGV4aWYAAHja1VZbkuw2CP3XKrIEAUJIy9GzKjvI8nMk2337WTM3mXzEahs1RoA4gOzGX39O9wcuMmIX1FLMMXpcIYfMBZPkj6vsJ/mwn8dlJ6VHvtt/1sVgCagcf1M85S8+3RQcpGCmd4pSO1/Uxxf5NMDpSdFpSJZHjEk/FeVTkfDxgk4F5diWjznZ/RbqOOi5/ghDWlvDo15cPYWf/gdD9LrCjjAPIfF4soTDAVk3Oyl7UvCaliBokSCCpwqfniAg7+Lk77xyL6hcsydUMr8HReIh4cB4DGa80bd80vfBdzvEd5alnTN+5Md+RewxyOuesyc35zh2V0JESOO5qWuLewbBipDLXhYxDLdibntkjOSQvQ2Qd998xWiUiQHLpECdCk0amzZqcDHwYANlbkBl8ZIYZ27iHVAKa9BkkyxdEpBrgFfA5ZsvtO3mba5RguFOkGSCMjrg558ZHxXNuVKeaAUz844V/OKVBHBjIbeekAIgNK880h3gazxfC1cBgrrDnLDB4uuhoiqdubXySDbQAkEFPWqNrJ8KECLYVjiD3A/kI4lSJG/MRoQ4JuBToCihaLgCAlLlDi8ZBRIBTuJlG2uMtiwrH2z0LAChEsUATZYCrAIaG/LHQkIOFRUNqhrVNGnWEiWGqDFGi6v5FRMLphbNLFm2kiSFpCkmS8mlnErmLGiOmmO2nHLOpcBogeaC1QUCpVSuUkPVGqvVVHMtDenTQtMWm7XkWm6lc5eOPtFjt5567mXQQCqNMHTEYSONPMpEqk2ZYeqM02aaeZYbauQOWF/G91GjCzXeSC1Bu6GGpWaXClrtRBdmQIwDAXFbCCCheWHmE4XAbkG3MEPWoSqU4aUucDotxIBgGMQ66YbdL+QecHMh/Cvc+ELOLeh+Ajm3oPuA3Ctub1Dr67RpXtxGaJXhCqoXlJ8WToXrSGn6tqaprOPtC+q+K/i/URTHmLGImavIhsWxeHJuDCTIhmxaMV1nueL3kbqvBN7QpBWfBPgo6D3iE8OWcXK19pLrkpC6Ob8Yx1K0tg0jlrTaR145MmYYJTzYcL/nzCeKhBw1TFSCKcIStumcvG4R/0LH4UsayOGp8AllpcGyjOpQZ7N0f8dS9gM1dNvR96jbk0wV9SpsK3ocVpVtk7842+ewmbe1D66793u40ZCkeOyl4ARHU/rslvvwgqiO0YXz6NNizjfl7UNuum8k8eENWtbwDUcbPkKgsHcU9Lo9deSIOfNFva3vwfoKLhM+czrHsSFDVGpNyLSEt1yt9xJVUsXXSQZqX/n8TeruGVkNDU657ByR8VygYn2snhln7UiXB9PuZ5rIi6J/7tN/19i2TwswHMRPMApyayo/toSLuq8qSSZOiozM/RuoEB6Ee3ucrwAAAYNpQ0NQSUNDIHByb2ZpbGUAAHicfZE9SMNAHMVfU6WiFQcziDhkqE4tiIo4ShWLYKG0FVp1MLn0C5oYkhQXR8G14ODHYtXBxVlXB1dBEPwAcXRyUnSREv+XFFrEeHDcj3f3HnfvAKFRZZrVNQ5oum2mE3Epl1+RQq8Q0IcwRERlZhnJzEIWvuPrHgG+3sV4lv+5P0e/WrAYEJCIZ5lh2sTrxNObtsF5n1hkZVklPieOmnRB4keuKx6/cS65LPBM0cym54hFYqnUwUoHs7KpEU8RR1RNp3wh57HKeYuzVq2x1j35C8MFfTnDdZojSGARSaQgQUENFVRhI0arToqFNO3HffzDrj9FLoVcFTByzGMDGmTXD/4Hv7u1ipMTXlI4DnS/OM7HKBDaBZp1x/k+dpzmCRB8Bq70tn+jAcx8kl5va5EjYGAbuLhua8oecLkDDD0Zsim7UpCmUCwC72f0TXlg8BboXfV6a+3j9AHIUldLN8DBITBWouw1n3f3dPb275lWfz9tXXKl4mmg1AAADRhpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+Cjx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IlhNUCBDb3JlIDQuNC4wLUV4aXYyIj4KIDxyZGY6UkRGIHhtbG5zOnJkZj0iaHR0cDovL3d3dy53My5vcmcvMTk5OS8wMi8yMi1yZGYtc3ludGF4LW5zIyI+CiAgPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIKICAgIHhtbG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvbW0vIgogICAgeG1sbnM6c3RFdnQ9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZUV2ZW50IyIKICAgIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIKICAgIHhtbG5zOkdJTVA9Imh0dHA6Ly93d3cuZ2ltcC5vcmcveG1wLyIKICAgIHhtbG5zOnRpZmY9Imh0dHA6Ly9ucy5hZG9iZS5jb20vdGlmZi8xLjAvIgogICAgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIgogICB4bXBNTTpEb2N1bWVudElEPSJnaW1wOmRvY2lkOmdpbXA6Yjk3ZjI0MDgtNjFiYi00MDJkLWEyYzctM2M2NjAzOTJlZWZlIgogICB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOjQ1OTBhZjNmLWY0N2EtNDY2NC04MjM1LWJmYjJiNTI3OWUwYSIKICAgeG1wTU06T3JpZ2luYWxEb2N1bWVudElEPSJ4bXAuZGlkOjUwOWE1NTk1LTIyNDItNDg3NS1hN2Y1LWE0MmZjMTVhOWUwNSIKICAgZGM6Rm9ybWF0PSJpbWFnZS9wbmciCiAgIEdJTVA6QVBJPSIyLjAiCiAgIEdJTVA6UGxhdGZvcm09IldpbmRvd3MiCiAgIEdJTVA6VGltZVN0YW1wPSIxNjQ0NjEyMjM0MTE1MDA0IgogICBHSU1QOlZlcnNpb249IjIuMTAuMjQiCiAgIHRpZmY6T3JpZW50YXRpb249IjEiCiAgIHhtcDpDcmVhdG9yVG9vbD0iR0lNUCAyLjEwIj4KICAgPHhtcE1NOkhpc3Rvcnk+CiAgICA8cmRmOlNlcT4KICAgICA8cmRmOmxpCiAgICAgIHN0RXZ0OmFjdGlvbj0ic2F2ZWQiCiAgICAgIHN0RXZ0OmNoYW5nZWQ9Ii8iCiAgICAgIHN0RXZ0Omluc3RhbmNlSUQ9InhtcC5paWQ6YWRlZmY5MDctMjQ2NC00YTg2LTljMTMtMTliMTg2NzZkZWY4IgogICAgICBzdEV2dDpzb2Z0d2FyZUFnZW50PSJHaW1wIDIuMTAgKFdpbmRvd3MpIgogICAgICBzdEV2dDp3aGVuPSIyMDIyLTAyLTExVDIxOjQzOjU0Ii8+CiAgICA8L3JkZjpTZXE+CiAgIDwveG1wTU06SGlzdG9yeT4KICA8L3JkZjpEZXNjcmlwdGlvbj4KIDwvcmRmOlJERj4KPC94OnhtcG1ldGE+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAKPD94cGFja2V0IGVuZD0idyI/Ps+fDsgAAAAGYktHRAD/AP8A/6C9p5MAAAAJcEhZcwAADsQAAA7EAZUrDhsAAAAHdElNRQfmAgsUKzYD7eUCAAAAKUlEQVQI12MM7TrynwEHYGRgYGDApmB1mQ0jI4yDrGB1mQ0jhjHoJgAAJK4NSNCarJ8AAAAASUVORK5CYII"},{ name : "haxeui-core/styles/shared/left-arrow-light.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAQAAAAHCAIAAACgB3uHAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAANklEQVQImWN8K6PCwMDAwMBwfMYEJjiLgYGBCc5iYGBg3LJlCwMMMFlmFCA4DAwMcD7UAAgfAK7lDFY1UPqoAAAAAElFTkSuQmCC"},{ name : "styles/default/main.css", data : "LmJ1dHRvbiwgLmxhYmVsLCAudGV4dGFyZWEsIC50ZXh0ZmllbGQgew0KICAgIGZvbnQtbmFtZTogIkFyaWFsIjsNCiAgICBfX2ZvbnQtc2l6ZTogMTNweDsNCn0NCg0KLmNvbXBvbmVudDpkaXNhYmxlZCB7DQogICAgY3Vyc29yOiBub3QtYWxsb3dlZDsNCn0"},{ name : "haxeui-core/styles/global.css", data : ""},{ name : "haxeui-core/styles/shared/maximize-button-dark.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAwAAAAMCAYAAABWdVznAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsEAAA7BAbiRa+0AAABLSURBVChTY/z//z8DKYBxwqINLz+8fSEG5eMFAsISr5iIVQwCYLUN/TOIdhNILROUTTQYkRoY+xeuf/bx3UtJKB8vAEUciUmDgQEAx9IepVPk2PsAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/shared/sortable-arrows-dark.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAJCAIAAABxOqH0AAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAA0UlEQVQIHQHGADn/Ae0cJAAAAAAAAIdYUHmosAAAAAAAAAIAAAAAAACHWFAAAACJWlIAAAAAAAACAAAAh1hQAgICAgICAAAAjV5WAAAAAe0cJAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAI1eVgAAAAAAAAAAAAMDA3CfpwIAAABzoqoAAAADAwMDAwNwn6cAAAACAAAAAAAAc6KqAAAAcJ+nAAAAAAAA2WwUSXgyq8MAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/default/buttons.css", data : ""},{ name : "haxeui-core/styles/default/tabs.css", data : ""},{ name : "images/eye.png", data : "iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAACXBIWXMAAA7EAAAOxAGVKw4bAAAHSElEQVRYhe3YfWwT5x0H8O/55eJzjPPil7Njx3FCQig0KRkRCev6tjTAtg6trdAYBEYZjQpd125d23RCHdroALVbW7Wd1KpDayelm6aVTjQUumQK69YtjJVSbUOlEBjQJLwm8Qt2LvZ994cPk4vt4DV/rH/kJz2ybN89z8e/u+f3PGeBJD7LYfh/A64VM8DpxgxwujEDnHZMow5Kt7V+ic6yICHaCLNEGMVUM0uEWaJRKmJlbR2/0baWAKRPM4hAEoIg5I1ae9+my11/6MFIOIxkTIHFZkWZR4ZXliG7nDAXiAiHwzh3/gLODAzi3PkLUMcTECULZgcrcKTvL1YAsbyFeWZQeujRDtorqmlweIgSFxtbWvnkM8/ywPuHODIaoaqq+pYkBwaH+Na+d7jxu4/QP/8GorCUouxnbdPn889oHkCp7sZbaPEGiMJSLl76Zb7xVhcVRUljmFSY5PtM8E0m2MkEe0j1tA48MDjErU//jJ7a6wm7k4WBKq5av+Ha0GsApaKqOTQ4PLSXV/Gp51/UwVQOc4zbGOVCRuhkmDZGaGWEdkZYwThXMMEeHbT/xEmuWPctwu6kxRvggptvmxqZAyht2b6DtvIqwu7knIXNfK/vgG6gBA8wykaGaGGYxYzQzTA96XYFHGYx4+wgOa47/+kXXqQo+yjKfgbqG3IjswB1uMYvtvLUmTOTcAcZYYUG8DBKD8fo4ThljlOmQg9jaaibYYqMc2PGffqbXW/S6glQlH30zbshKzLbLPbbyqtORyJhfK6uDl2/fR2yy3X1BCGEGFqRxBEANpgACFDRu5/o7TVgdFTAdfOI5Xeo8HqMULTvVYQg4TkYea8OsGt3F1a3bwQMBnhkN05+cFA/yydlULJXVNPk8jIwfwGP95/I+NUKf8owC9KZuxh18evrZIqOCgr2ShqKgsSsIB1BF3+9y80xLZNRljDKWqo8n9Hny798jbA7afUF2XT7Un0mJwCl2QsX0eINUJT97O7dn9ERGWeUzQyzmGF6GKebbffKRHElrb6grhW4Kmn1BPju311pZIgWKnw1sySpKu9/tIMoLKWtvIobHvjOVaQGlO5euTp13xWW8omfbM/aSZL/ZIRuRpjKzLsH3bS4ArSWBTOAVl+QhqIgl6/0UqGs3Y9Wxtmete9INMKGW1pocMgsDFQRgB+4uhY7frdnH+KxGJoXL8Lj33so+4TCWQBxEAYIAPr+BiiKAcixEImSgIOHVAyHVW0gE1ScynqsVbLiuW1bIRVYkBxPIFDfcBqAdAUoAYCqqigpKUaBKOYA6md8IpEdlg4BSCRVqOrED5M5D3c7U0slAFwaHgUAR3o309RQD4sk4e3uHuzsfD3HeMUARAhQQQB1dYDJlLvQJxXguhozSopSKSZUCPDmPP7hJ36IkZERGM0mRE73rwGuXuJY3/4/rrFKFoiiiI4tP8bRY8czOjCgFgLKIGAcCQA33wQ0Nyq4HMocTFUFqAkV3940DgEGqACIBIxozIp75qWX0bV7L6zWQtzYuBAAjgG4mJ4kAOoBtNvKq4gSFxe1LOFoKJRxM4/xMW31SBXjo6ecrF/sJWYFaXZUUnSlSo3FFeCW7fKECeJkmH6q7M/os3v/n2jxBmjxBhhc0EgAbdAmia7MAGh+8LGO9Gy+a806/dqrqkzyP4yyilGWpJFnQy4+9byby+708gutZbxnk4c9f3ZRocxoevkTGefmDNyhwx/SWzOPJpeXxZU1BNCuJUuaDISmblu1oT2NXLm+nfGxMV2n43yDEdrTyCg9VLS6GKebCuV07btS/y5zGanqt2X/+OAwA/MX0OCQU+NNxmUBpi/1qg3tqXpUWMold63gwODQJGQno9rgEzcK0QmwMIsZooUxfo0qz+nO3/NON70181I7pYrq7LgsQB3y/ocf0e1o9nTrt04qDzPG1YxqRThES7qlMtxAhS/odjKxeIxbtu+gKPtpcnkpz70+Ny4HcCKyDUCHs3ouje4ymlxern/gQf77o48mQY9S4asc4484xg4qfFbbtOov6e/f3sum1mXErNRecFHLkqlxUwCvIP0AmgG0t955N62+IGF3sriyhmvv28Tde/fxwsVLTCaTaq529Phx/vwXO3nTV5bT4PCkL+n3f7D52jjk99AkAajROvI33b502+F/HUE8epkGs0n1eeXknNmz1Qqfjx6PGwUFFoyGQxgaPItjJ04IH/efNAxfGjYazCaDzWYT7mi5FZ07X3kcwBkAHwL4GFM8ROX7VCcBcGgZrQbgX9n2za297/XFhz4ZGEVyLIbUGkZQW9cEgwDBaDSKBVLt3Nqiry5psezY9uRmDXZMe704Fe5/AU6G+gBUAZgFIA4gufae9c1xZUygSphNJrXzV6/9FQABiAAsAMIA+gF8kg/s0wInQku1wZMAjAAKAZi178cBRLRXo9YUAJfyhU0XODmMGtaovU9qoNxblzxDmPkLeJoxA5xufOaB/wU40PoglY9C+gAAAABJRU5ErkJggqAvXLLk5QjsTOT12t1w/wvwdmgLoB3QCPAB5sTc8dl+n18RsdDi4qzVaz/aCwhgB3SgCjgHXKoP7H6Bt0KTI4ubgA1IIHwJg3AH9ERebZERAMrqC2so8PawRbC2yLMZAZkNTaw8+BdwA+MBsKHxjQf+F5CSAZYmccNhAAAAAElFTkSuQmCCjm31/GltDXt2f4TiTKFs0kR2fNJowlmt149xSAQDzgzzhwSrxmc34Jo/e866vY278Af8ZGZkMXveXG5aMJ+pM6eTnpk54vV79HC78MG7DdRtfIVPGncB4Ha7WbRiGY8+vm6JxWp96AGrGf6HgZixvQcTJReW4MEiZlDrvG76FTUHWvYRCAY0SZTUvFGjokUTirVRYy7ScvLycTocePu8dHWe5kjbYY62tYm9PT2SJEqi2+0Wrpp7A3+vfbHagPFarDYsmkaP5IYk54nZnNsCaEI6APsdixat2/3+vwIdnac8YRjQjKzTcGqakYnZnJLkmlBanvGjuXNSHqupucfYW/0WQNNqg8uKJWmy1ldMv2zNh02LmmLmxw7iPlwEhNsXL6kIh8OapmpIkk2r3fRqE0MrC2HDOibg18notMS6itWaZgpqJuzWBN7cFiageQNoCWLm81HiHitIPB8+Z05sQpktWRJv3Z+DFQXje8kyzvqiiXUZ03ObpY6QRc5ZVUgEtH5OTOjNEHXQJRKvyyRWuKwWNCe1FpCsNRmr1ZLWDs9XfhNJXn6zJfyWqGckSKsk1guTXlXnq7AmWtR6oKzfmWMSq6rJQK11wxHBvi5gsnGJB2skHSYYSfrzgn1TwG/79//z/zj+C070+ZOjDW3rAAAAAElFTkSuQmCC"},{ name : "images/close.png", data : "iVBORw0KGgoAAAANSUhEUgAAABQAAAAUCAYAAACNiR0NAAABe0lEQVQ4jc2UPUhCURiGn2ti5hIJ1Y1+pogg6GeIIKJFaGxwy6YC1wgKUmoMHIKiVqeWiy0RNPWzNATR1NQULg0RoSgRYhrG4Xj0Xq+31KVeOJx7vnPOc7/v/biXfy9NJVgKRbuAbWAScDeQeB64Bg40I1ZUQfPFM2C+SQcWAB3YUAFXOTu9BZjSknnhKs9eyxFNg2AA/J3Wq8ODMDtRC/SZF3avBGxlEQIzMDcFu3FIZyUssgpejzxz+1A3XZct4m6Dvm753OuHnTBMj0lYR7uEDfQ41m8HFoqwdwyPySp0fVnChM5v4OSyCaDQZ0FCn56t8as7SFw4wpyBQkM69NeUNj5ib1RDQNUAVWYqK2fl6Q/Q+k1ZC1k929y3ehoONgEsfsGRAbm8hAnPlKcC+pqG+KkjsP43K5qxdQipTDWmoD4vZN5/Bb6JK4CnsmOGmaFiWJW0lawZsQ8g4vhaZ+WAqHm38vsSKoWio4AYjagE3GtG7KWFRP5KwDck616d9arLjAAAAABJRU5ErkJggg"},{ name : "haxeui_classmap", data : "YnkxNDp2ZXJ0aWNhbHNjcm9sbHkzMzpoYXhlLnVpLmNvbXBvbmVudHMuVmVydGljYWxTY3JvbGx5NDp2Ym94eTIzOmhheGUudWkuY29udGFpbmVycy5WQm94eTMxOnVybiUzQSUzQWhheGV1aSUzQSUzQW9yZyUyRnZib3hSM3kzNjp1cm4lM0ElM0FoYXhldWklM0ElM0FvcmclMkZ0ZXh0ZmllbGR5Mjg6aGF4ZS51aS5jb21wb25lbnRzLlRleHRGaWVsZHkzNjp1cm4lM0ElM0FoYXhldWklM0ElM0FvcmclMkZ0YWJsZXZpZXd5Mjg6aGF4ZS51aS5jb250YWluZXJzLlRhYmxlVmlld3kzMjp1cm4lM0ElM0FoYXhldWklM0ElM0FvcmclMkZsYWJlbHkyNDpoYXhlLnVpLmNvbXBvbmVudHMuTGFiZWx5Mzk6dXJuJTNBJTNBaGF4ZXVpJTNBJTNBb3JnJTJGaXRlbXJlbmRlcmVyeTI1OmhheGUudWkuY29yZS5JdGVtUmVuZGVyZXJ5MzI6dXJuJTNBJTNBaGF4ZXVpJTNBJTNBb3JnJTJGaW1hZ2V5MjQ6aGF4ZS51aS5jb21wb25lbnRzLkltYWdleTMzOnVybiUzQSUzQWhheGV1aSUzQSUzQW9yZyUyRmhlYWRlcnkyNTpoYXhlLnVpLmNvbnRhaW5lcnMuSGVhZGVyeTMxOnVybiUzQSUzQWhheGV1aSUzQSUzQW9yZyUyRmhib3h5MjM6aGF4ZS51aS5jb250YWluZXJzLkhCb3h5MzE6dXJuJTNBJTNBaGF4ZXVpJTNBJTNBb3JnJTJGZ3JpZHkyMzpoYXhlLnVpLmNvbnRhaW5lcnMuR3JpZHkzMzp1cm4lM0ElM0FoYXhldWklM0ElM0FvcmclMkZjb2x1bW55MjU6aGF4ZS51aS5jb21wb25lbnRzLkNvbHVtbnkzNTp1cm4lM0ElM0FoYXhldWklM0ElM0FvcmclMkZjaGVja2JveHkyNzpoYXhlLnVpLmNvbXBvbmVudHMuQ2hlY2tCb3h5MzM6dXJuJTNBJTNBaGF4ZXVpJTNBJTNBb3JnJTJGYnV0dG9ueTI1OmhheGUudWkuY29tcG9uZW50cy5CdXR0b255MzA6dXJuJTNBJTNBaGF4ZXVpJTNBJTNBb3JnJTJGYm94eTIyOmhheGUudWkuY29udGFpbmVycy5Cb3h5Nzp0b29sdGlweTI0OmhheGUudWkudG9vbHRpcHMuVG9vbFRpcHk5OnRleHRmaWVsZFI2eTg6dGV4dGFyZWF5Mjc6aGF4ZS51aS5jb21wb25lbnRzLlRleHRBcmVheTk6dGFibGV2aWV3Ujh5MTA6c2Nyb2xsdmlld3kyOTpoYXhlLnVpLmNvbnRhaW5lcnMuU2Nyb2xsVmlld3k2OnNjcm9sbHkyNTpoYXhlLnVpLmNvbXBvbmVudHMuU2Nyb2xseTk6cHJlbG9hZGVyeTE3OmhheGUudWkuUHJlbG9hZGVyeTk6b3B0aW9uYm94eTI4OmhheGUudWkuY29tcG9uZW50cy5PcHRpb25Cb3h5MTQ6bWVzc2FnZWJveGJhc2V5MzA6aGF4ZS51aS5iYWNrZW5kLk1lc3NhZ2VCb3hCYXNleTEwOm1lc3NhZ2Vib3h5Mzc6aGF4ZS51aS5jb250YWluZXJzLmRpYWxvZ3MuTWVzc2FnZUJveHkxNDptYXJrZG93bnZpZXdlcnkyNTp1aS5kaWFsb2dzLk1hcmtkb3duVmlld2VyeTEyOm1hcmtkb3duaGVscHkyMzp1aS5kaWFsb2dzLk1hcmtkb3duSGVscHk1OmxvZ2lueTg6dWkuTG9naW55NTpsYWJlbFIxMHkxMjppdGVtcmVuZGVyZXJSMTJ5MjA6aW50ZXJhY3RpdmVjb21wb25lbnR5MzM6aGF4ZS51aS5jb3JlLkludGVyYWN0aXZlQ29tcG9uZW50eTU6aW1hZ2VSMTR5MTY6aG9yaXpvbnRhbHNjcm9sbHkzNTpoYXhlLnVpLmNvbXBvbmVudHMuSG9yaXpvbnRhbFNjcm9sbHk2OmhlYWRlclIxNnk0Omhib3hSMTh5NTpncm91cHkyNDpoYXhlLnVpLmNvbnRhaW5lcnMuR3JvdXB5NDpncmlkUjIweTEwOmRpYWxvZ2Jhc2V5MjY6aGF4ZS51aS5iYWNrZW5kLkRpYWxvZ0Jhc2V5NjpkaWFsb2d5MzM6aGF4ZS51aS5jb250YWluZXJzLmRpYWxvZ3MuRGlhbG9neTk6ZGVjb3JhdG9yeTI4OmhheGUudWkuY29tcG9uZW50cy5EZWNvcmF0b3J5MjA6Y29tcG91bmRpdGVtcmVuZGVyZXJ5NTA6aGF4ZS51aS5jb250YWluZXJzLl9UYWJsZVZpZXcuQ29tcG91bmRJdGVtUmVuZGVyZXJ5OTpjb21wb25lbnR5MjI6aGF4ZS51aS5jb3JlLkNvbXBvbmVudHk2OmNvbHVtblIyMnkxMzpjaGVja2JveHZhbHVleTMyOmhheGUudWkuY29tcG9uZW50cy5DaGVja0JveFZhbHVleTg6Y2hlY2tib3hSMjR5NjpjYW52YXN5MjU6aGF4ZS51aS5jb21wb25lbnRzLkNhbnZhc3k2OmJ1dHRvblIyNnkzOmJveFIyOHkxNzpiYXNpY2l0ZW1yZW5kZXJlcnkzMDpoYXhlLnVpLmNvcmUuQmFzaWNJdGVtUmVuZGVyZXJo"},{ name : "haxeui-core/styles/shared/down-arrow-square-light.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAHCAIAAABLMMCEAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAMUlEQVQImWN8K6PCgAGYMIUYGBgYt2zZgkWtZUYBmpBlRgEThEIWQpgL4cClGbG6AQAStwro4kB3hAAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/shared/maximize-button-white.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAwAAAAMCAYAAABWdVznAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsEAAA7BAbiRa+0AAAA+SURBVChTY/z//z8DKYAJiPuBGKSLGNwPsgHEIB6QogGkFmYDI0SIIPgP8gNJYLhoaABiWMQQwhNITBoMDAC+tC0XTMGbOQAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/default/notifications.css", data : "Lm5vdGlmaWNhdGlvbiB7DQogICAgd2lkdGg6IDMwMHB4Ow0KICAgIGhlaWdodDogYXV0bzsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2Vjb25kYXJ5LWJhY2tncm91bmQtY29sb3I7DQogICAgYm9yZGVyLXJhZGl1czogNHB4Ow0KICAgIGJvcmRlcjogMXB4IHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOw0KICAgIHBhZGRpbmc6IDEwcHg7DQogICAgZmlsdGVyOiAkZGlhbG9nLXNoYWRvdzsNCn0NCg0KLm5vdGlmaWNhdGlvbi5ibHVlLW5vdGlmaWNhdGlvbiB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJGFjY2VudC1jb2xvci1saWdodGVyOw0KICAgIGJvcmRlci1jb2xvcjogJHNlbGVjdGlvbi1iYWNrZ3JvdW5kLWNvbG9yOw0KfQ0KDQoubm90aWZpY2F0aW9uLnllbGxvdy1ub3RpZmljYXRpb24gew0KICAgIGJhY2tncm91bmQtY29sb3I6ICR3YXJuaW5nLWJhY2tncm91bmQtY29sb3Itc3RhcnQ7DQogICAgYm9yZGVyLWNvbG9yOiAkd2FybmluZy1ib3JkZXItY29sb3I7DQp9DQoNCi5ub3RpZmljYXRpb24ucmVkLW5vdGlmaWNhdGlvbiB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJGVycm9yLWJhY2tncm91bmQtY29sb3Itc3RhcnQ7DQogICAgYm9yZGVyLWNvbG9yOiAkZXJyb3ItYm9yZGVyLWNvbG9yOw0KfQ0KDQoubm90aWZpY2F0aW9uLmdyZWVuLW5vdGlmaWNhdGlvbiB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJHN1Y2Nlc3MtYmFja2dyb3VuZC1jb2xvci1zdGFydDsNCiAgICBib3JkZXItY29sb3I6ICRzdWNjZXNzLWJvcmRlci1jb2xvcjsNCn0NCg0KLm5vdGlmaWNhdGlvbiAjdGl0bGUgew0KICAgIGZvbnQtd2VpZ2h0OiBib2xkOw0KfQ0KDQoubm90aWZpY2F0aW9uLWNsb3NlLWJ1dHRvbiB7DQogICAgcmVzb3VyY2U6ICRjbG9zZTsNCiAgICB2ZXJ0aWNhbC1hbGlnbjogImNlbnRlciI7DQogICAgY3Vyc29yOiAicG9pbnRlciI7DQogICAgcG9pbnRlci1ldmVudHM6IHRydWU7DQogICAgcGFkZGluZzogM3B4Ow0KICAgIGJvcmRlci1yYWRpdXM6IDJweDsNCn0NCg0KLm5vdGlmaWNhdGlvbi1jbG9zZS1idXR0b246aG92ZXIgew0KICAgIHJlc291cmNlOiAkY2xvc2UtaG92ZXI7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJHNlbGVjdGlvbi1iYWNrZ3JvdW5kLWNvbG9yOw0KfQ0KDQoubm90aWZpY2F0aW9uIC5zY3JvbGx2aWV3IHsNCiAgICBib3JkZXI6IG5vbmU7DQogICAgYmFja2dyb3VuZC1jb2xvcjogbm9uZTsNCn0NCg0KLm5vdGlmaWNhdGlvbiAuc2Nyb2xsdmlldy1jb250ZW50cyB7DQogICAgcGFkZGluZy10b3A6IDA7DQogICAgcGFkZGluZy1ib3R0b206IDA7DQogICAgcGFkZGluZy1sZWZ0OiAwOw0KfQ0KDQoubm90aWZpY2F0aW9uIC52ZXJ0aWNhbC1zY3JvbGwgew0KICAgIGJvcmRlcjogbm9uZTsNCn0NCg0KLm5vdGlmaWNhdGlvbi5pbmZvICNub3RpZmljYXRpb25JY29uIHsNCiAgICByZXNvdXJjZTogaGF4ZXVpLWNvcmUvc3R5bGVzL3NoYXJlZC9pbmZvLWxhcmdlLnBuZzsNCn0NCg0KLm5vdGlmaWNhdGlvbi5lcnJvciAjbm90aWZpY2F0aW9uSWNvbiB7DQogICAgcmVzb3VyY2U6IGhheGV1aS1jb3JlL3N0eWxlcy9zaGFyZWQvZXJyb3ItbGFyZ2UucG5nOw0KfQ0KDQoubm90aWZpY2F0aW9uLndhcm5pbmcgI25vdGlmaWNhdGlvbkljb24gew0KICAgIHJlc291cmNlOiBoYXhldWktY29yZS9zdHlsZXMvc2hhcmVkL3dhcm5pbmctbGFyZ2UucG5nOw0KfQ0KDQoubm90aWZpY2F0aW9uLnN1Y2Nlc3MgI25vdGlmaWNhdGlvbkljb24gew0KICAgIHJlc291cmNlOiBoYXhldWktY29yZS9zdHlsZXMvc2hhcmVkL3RpY2stbGFyZ2UucG5nOw0KfQ0K"},{ name : "haxeui-core/styles/shared/minimize-button-blue.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAwAAAAMCAYAAABWdVznAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsIAAA7CARUoSoAAAAAtSURBVChTY/z//z8DKYAJShMNRjUQA2ivAR7TM3bcxhvlGR6qjCCaxKTBwAAA44UNDW2qEosAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/shared/check-bright.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAwAAAAMCAYAAABWdVznAAAC7npUWHRSYXcgcHJvZmlsZSB0eXBlIGV4aWYAAHja7ZZRktsgDIbfOUWPYEkIieNgMDO9QY/fH7DdTXZ3Zjvdl87EJEAU+AX6BEk4fv3s4QceyhZDVPOUU9rwxBwzF3R8W0+ZNW1x1uupZ0uP9nB/wTAJWlkfPZ3jLzvdAqsp6OkbIT+FaH/8IsdT35+ETkcyVsTotFMon0LC6ws6Bcra1pay29st7Mdqz/krDD62hqpfMbHVPH+Ohug1hR9hPoRkQ80S1wJkvDlIQSfOmnmaZt9Qk9C5EgTkozhtb1YV3lG5evSJ/QmKpGUPMDwGM93th3bSj4MfZojfeJZ6e36wm9wuHoI8Y9ybh96PtbsSE0Kazk1dW5k9DNwRcpnTEorhrejbLBnFA7K3AnlDYu4olTIxsHSK1KhQp2O2lSqWGPlgQ8tcWabNxThzlS2ATRyFOptkaeLgVoFXYOV7LTT95umuksNxI4xkghgt/Pw95VOh3kfKE21+xwrr4nEosIxBbtQYBSDUrzzSGeCrPD+Dq4CgzjA7Nli2fUnsSmdujTySCVowUNGus0bWTgGECL4Vi0GmR9oSiVKizZiNCHF08CkQchwa3oGAVLlhlRxFEuA4D9+YYzTHsvIy484CCJWEg+QAVMBqXGzIH4uOHCoqGlU1qalr1pIkxaQpJUvj8ismFk0tmZlbtuLi0dWTm3vw7CVzFlyOmlO27DnnUuC0QLlgdsGAUnbeZY+77mm33fe8l4r0qbFqTdWqh5pradyk4Z5oqVnzlls56EAqHfHQIx12+JGP0pFqXXrs2lO37j33clOjsLC+K1+nRhc1nqTGQLupYarZJUHjOtHBDMQ4EojbIICE5sFsc4qRw0A3mG2ZcSqUsUodcBoNYiAYD2LtdLP7Q+6BW4jxn7jxRS4MdN9BLgx0n5B7z+0Daq3MH00Jk9A4hiOom+D4YVBhxwu/SV9vw99OeAm9hF5CL6GX0EvoJfTfCEnHn4eMP+m/Abqro1P5gvhwAAABg2lDQ1BJQ0MgcHJvZmlsZQAAeJx9kT1Iw0AcxV/TlopUHMwg4pChOlkQFXGUKhbBQmkrtOpgcukXNDEkKS6OgmvBwY/FqoOLs64OroIg+AHi6OSk6CIl/i8ptIjx4Lgf7+497t4BQrPGNCs0Dmi6bWaSCSlfWJEirwhBgIgwYjKzjFR2IQff8XWPAF/v4jzL/9yfo08tWgwISMSzzDBt4nXi6U3b4LxPLLKKrBKfE4+ZdEHiR64rHr9xLrss8EzRzGXmiEViqdzFSheziqkRTxHHVE2nfCHvscp5i7NWq7P2PfkLo0V9Oct1msNIYhEppCFBQR1V1GAjTqtOioUM7Sd8/EOuP00uhVxVMHLMYwMaZNcP/ge/u7VKkxNeUjQBhF8c52MEiOwCrYbjfB87TusECD4DV3rHv9EEZj5Jb3S02BHQvw1cXHc0ZQ+43AEGnwzZlF0pSFMolYD3M/qmAjBwC/Suer2193H6AOSoq6Ub4OAQGC1T9prPu3u6e/v3TLu/HzZ7co91pPc1AAANGGlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4KPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iWE1QIENvcmUgNC40LjAtRXhpdjIiPgogPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4KICA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIgogICAgeG1sbnM6eG1wTU09Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9tbS8iCiAgICB4bWxuczpzdEV2dD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlRXZlbnQjIgogICAgeG1sbnM6ZGM9Imh0dHA6Ly9wdXJsLm9yZy9kYy9lbGVtZW50cy8xLjEvIgogICAgeG1sbnM6R0lNUD0iaHR0cDovL3d3dy5naW1wLm9yZy94bXAvIgogICAgeG1sbnM6dGlmZj0iaHR0cDovL25zLmFkb2JlLmNvbS90aWZmLzEuMC8iCiAgICB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iCiAgIHhtcE1NOkRvY3VtZW50SUQ9ImdpbXA6ZG9jaWQ6Z2ltcDplNzljMjQ3Zi00OWY1LTRhZDktODI0ZS02ODI5NDY4ZWVmMDYiCiAgIHhtcE1NOkluc3RhbmNlSUQ9InhtcC5paWQ6MDIyZmM3MTctMWE3Yi00YWYyLWI0ZDMtZDUwMDRjZjU0YmU5IgogICB4bXBNTTpPcmlnaW5hbERvY3VtZW50SUQ9InhtcC5kaWQ6ZjVlZTBmMGQtODAxZC00NTVmLWI2ZTYtNzllMTZiZGJhZTBmIgogICBkYzpGb3JtYXQ9ImltYWdlL3BuZyIKICAgR0lNUDpBUEk9IjIuMCIKICAgR0lNUDpQbGF0Zm9ybT0iV2luZG93cyIKICAgR0lNUDpUaW1lU3RhbXA9IjE2NDg5MzAwMzIyNzQxNDkiCiAgIEdJTVA6VmVyc2lvbj0iMi4xMC4yNCIKICAgdGlmZjpPcmllbnRhdGlvbj0iMSIKICAgeG1wOkNyZWF0b3JUb29sPSJHSU1QIDIuMTAiPgogICA8eG1wTU06SGlzdG9yeT4KICAgIDxyZGY6U2VxPgogICAgIDxyZGY6bGkKICAgICAgc3RFdnQ6YWN0aW9uPSJzYXZlZCIKICAgICAgc3RFdnQ6Y2hhbmdlZD0iLyIKICAgICAgc3RFdnQ6aW5zdGFuY2VJRD0ieG1wLmlpZDpjN2RiNzZkOS1mNDJiLTQ3MmItYWI1YS0xOTVjZGU2MTk1MzUiCiAgICAgIHN0RXZ0OnNvZnR3YXJlQWdlbnQ9IkdpbXAgMi4xMCAoV2luZG93cykiCiAgICAgIHN0RXZ0OndoZW49IjIwMjItMDQtMDJUMjI6MDc6MTIiLz4KICAgIDwvcmRmOlNlcT4KICAgPC94bXBNTTpIaXN0b3J5PgogIDwvcmRmOkRlc2NyaXB0aW9uPgogPC9yZGY6UkRGPgo8L3g6eG1wbWV0YT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgIAo8P3hwYWNrZXQgZW5kPSJ3Ij8+zJcIJwAAAAZiS0dEAP8A/wD/oL2nkwAAAAlwSFlzAAAN1wAADdcBQiibeAAAAAd0SU1FB+YEAhQHDA6Y7TQAAAClSURBVCjPjdExToJBEIbhIQj5o4lHoKCgsJZCK09BbbgHtS0lgYLSA1hyCgq10Ct4AELgoWASkITsfs1mZ993MpONqAgGeEX3pgK+j4hVRPSisvvMMRs8lOAX7FOYlOBb/CS8RrckTBPe4vH8YYg/LNHO2hN2Kbxddho5ZYEGX3n/RnMptDA/kz7z3OH52rxtvPufaWnJDj4S/sVdzSc1GKN/jTkAigfW4fXHmp4AAAAASUVORK5CYII"},{ name : "haxeui-core/locale/de/std-strings.properties", data : "c2F2ZT1TcGVpY2hlcm4NCnllcz1KYQ0Kbm89TmVpbg0KY2xvc2U9U2NobGllc3Nlbg0Kb2s9T0sNCmNhbmNlbD1BYmJyZWNoZW4NCmFwcGx5PUFud2VuZGVuDQpzZWFyY2g9U3VjaGUNCg0KcmVkPVJvdA0KZ3JlZW49R3LDvG4NCmJsdWU9QmxhdQ0KaHVlPUZhcmJ0b24NCnNhdHVyYXRpb249U8OkdHRpZ3VuZw0KYnJpZ2h0bmVzcz1IZWxsaWdrZWl0DQo"},{ name : "haxeui-core/styles/default/main.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogR0VORVJBTA0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi5jb21wb25lbnQgew0KfQ0KDQouYWJzb2x1dGUgew0KICAgIGNsaXA6IHRydWU7DQp9DQoNCi5jdXN0b20tY29tcG9uZW50LCAuYW5pbWF0aW9uIHsNCiAgICB3aWR0aDogYXV0bzsNCiAgICBoZWlnaHQ6IGF1dG87DQp9DQoNCi5tb2RhbC1iYWNrZ3JvdW5kIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkbW9kYWwtYmFja2dyb3VuZC1jb2xvcjsNCiAgICBvcGFjaXR5OiAwLjc1Ow0KfQ0KDQoubW9kYWwtY29tcG9uZW50IHsNCiAgICBmaWx0ZXI6IGJsdXIoMSk7DQp9DQoNCi5wb3B1cCB7DQogICAgZmlsdGVyOiBkcm9wLXNoYWRvdygyLCA0NSwgIzAwMDAwMCwgMC4xNSwgNiwgMSwgMzAsIDM1LCBmYWxzZSk7DQp9DQoNCkBrZXlmcmFtZXMgYW5pbWF0aW9uRmFkZUluIHsNCiAgICAwJSB7DQogICAgICAgIG9wYWNpdHk6IDA7DQogICAgfQ0KICAgIDEwMCUgew0KICAgICAgICBvcGFjaXR5OiAxOw0KICAgIH0NCn0NCg0KLmZhZGUtaW4gew0KICAgIGFuaW1hdGlvbjogYW5pbWF0aW9uRmFkZUluIDAuMXMgbGluZWFyIDBzIDE7DQp9DQoNCi5mYWRlLW91dCB7DQogICAgYW5pbWF0aW9uOiBhbmltYXRpb25GYWRlSW4gMC4xcyBsaW5lYXIgMHMgMSByZXZlcnNlOw0KfQ0KDQouZGVmYXVsdC1iYWNrZ3JvdW5kIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZGVmYXVsdC1iYWNrZ3JvdW5kLWNvbG9yOw0KfQ0KDQouZGVmYXVsdC1iYWNrZ3JvdW5kLXNvbGlkIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc29saWQtYmFja2dyb3VuZC1jb2xvcjsNCn0NCg0KLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogR0VORVJBTA0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi50ZXh0LXRpbnkgew0KICAgIGZvbnQtc2l6ZTogMTBweDsNCn0NCg0KLnRleHQtc21hbGwgew0KICAgIGZvbnQtc2l6ZTogMTFweDsNCn0NCg0KLnRleHQtbm9ybWFsIHsNCiAgICBmb250LXNpemU6IDEzcHg7DQp9DQoNCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCioqIENPTlRBSU5FUlMNCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQouYm94LCAudmJveCwgLmhib3gsIC5hYnNvbHV0ZSwgLmNvbnRpbnVvdXNoYm94LCAuaGdyaWQsIC52Z3JpZCwgLmdyaWQgew0KICAgIHNwYWNpbmc6IDVweCA1cHg7DQp9DQoNCi5ib3gsIC52Ym94LCAuaGJveCwgLmNvbnRpbnVvdXNoYm94LCAuaGdyaWQsIC52Z3JpZCwgLmdyaWQgew0KICAgIHdpZHRoOiBhdXRvOw0KICAgIGhlaWdodDogYXV0bzsNCn0NCg0KLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogTEFCRUwNCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQoubGFiZWwgew0KICAgIHdpZHRoOiBhdXRvOw0KICAgIGhlaWdodDogYXV0bzsNCiAgICBjb250ZW50LXR5cGU6IGF1dG87DQogICAgY29sb3I6ICRub3JtYWwtdGV4dC1jb2xvcjsNCn0NCiAgICANCi5sYWJlbDpkaXNhYmxlZCB7DQogICAgY29sb3I6ICRkaXNhYmxlZC10ZXh0LWNvbG9yOw0KfQ0KDQovKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoqKiBMSU5LDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLw0KLmxpbmsgew0KICAgIGNvbG9yOiAkYWNjZW50LWNvbG9yLWRhcmtlcjsNCiAgICBmb250LXVuZGVybGluZTogdHJ1ZTsNCiAgICBjdXJzb3I6IHBvaW50ZXI7DQogICAgcG9pbnRlci1ldmVudHM6IHRydWU7DQp9DQoNCi5saW5rOmhvdmVyIHsNCiAgICBjb2xvcjogJGFjY2VudC1jb2xvcjsNCn0NCg0KLmxpbms6ZG93biB7DQogICAgY29sb3I6ICRhY2NlbnQtY29sb3ItZGFya2VyOw0KfQ0KICAgIA0KLmxpbms6ZGlzYWJsZWQgew0KICAgIGNvbG9yOiAkZGlzYWJsZWQtdGV4dC1jb2xvcjsNCn0NCg0KLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogSU1BR0UNCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQouaW1hZ2Ugew0KICAgIHdpZHRoOiBhdXRvOw0KICAgIGhlaWdodDogYXV0bzsNCiAgICBvcGFjaXR5OiAxOw0KfQ0KDQouaW1hZ2U6ZGlzYWJsZWQgew0KICAgIGZpbHRlcjogZ3JheXNjYWxlOw0KICAgIG9wYWNpdHk6IC4zOw0KfQ0KDQovKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoqKiBEUkFHICYgRFJPUA0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi5kcmFnZ2FibGUgew0KICAgIGN1cnNvcjogbW92ZTsNCn0NCg0KLmRyYWdnaW5nIHsNCn0NCg0KLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogSVRFTSBSRU5ERVJFUlMNCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQouYmFzaWNpdGVtcmVuZGVyZXIgew0KICAgIHdpZHRoOiAxMDAlOw0KfQ0KDQouYmFzaWMtcmVuZGVyZXItY29udGFpbmVyIHsNCiAgICB3aWR0aDogMTAwJTsNCn0NCg0KLmJhc2ljLXJlbmRlcmVyLWxhYmVsIHsNCiAgICB3aWR0aDogMTAwJTsNCn0NCg0KLmJhc2ljaXRlbXJlbmRlcmVyLmF1dG8tc2l6ZSB7DQogICAgd2lkdGg6IGF1dG87DQp9DQoNCi5iYXNpY2l0ZW1yZW5kZXJlci5hdXRvLXNpemUgLmJhc2ljLXJlbmRlcmVyLWNvbnRhaW5lciB7DQogICAgd2lkdGg6IGF1dG87DQp9DQoNCi5iYXNpY2l0ZW1yZW5kZXJlci5hdXRvLXNpemUgLmJhc2ljLXJlbmRlcmVyLWxhYmVsIHsNCiAgICB3aWR0aDogYXV0bzsNCn0NCg0KLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogU0VDVElPTiBIRUFERVJTDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLw0KLnNlY3Rpb24taGVhZGVyIHsNCiAgICB3aWR0aDogMTAwJTsNCiAgICBwYWRkaW5nLWJvdHRvbTogNXB4Ow0KICAgIHBhZGRpbmctdG9wOiAxNXB4Ow0KfQ0KDQouc2VjdGlvbi1oZWFkZXIgLmxhYmVsIHsNCiAgICBmb250LXdlaWdodDogYm9sZDsNCiAgICBjb2xvcjogJG5vcm1hbC10ZXh0LWNvbG9yOw0KfQ0KDQouc2VjdGlvbi1oZWFkZXIgLmxpbmUgew0KICAgIGhlaWdodDogMXB4Ow0KICAgIHdpZHRoOiAxMDAlOw0KICAgIGJhY2tncm91bmQtY29sb3I6ICRub3JtYWwtYm9yZGVyLWNvbG9yOw0KfQ0KDQouc2VjdGlvbi1oZWFkZXIuZmlyc3Qgew0KICAgIHBhZGRpbmctdG9wOiAwcHg7DQogICANCn0"},{ name : "haxeui-core/styles/shared/close-button-white.png", data : ""},{ name : "haxeui-core/styles/shared/search.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAABhWlDQ1BJQ0MgcHJvZmlsZQAAKJF9kTtIw1AUhv+mig8qDnYoIpKhOlkoKuIoVSyChdJWaNXB5KYvaNKQpLg4Cq4FBx+LVQcXZ10dXAVB8AHi6OSk6CIlnpsUWsR44HI//nv+n3vPBYRGhalmVxRQNctIxWNiNrcq9rzChxD6MIqoxEw9kV7MwLO+7qmb6i7Cs7z7/qwBJW8ywCcSzzHdsIg3iGc2LZ3zPnGQlSSF+Jx4wqALEj9yXXb5jXPRYYFnBo1Map44SCwWO1juYFYyVOJp4rCiapQvZF1WOG9xVis11ronf2Egr62kuU5rBHEsIYEkRMiooYwKLERo10gxkaLzmId/2PEnySWTqwxGjgVUoUJy/OB/8Hu2ZmFq0k0KxIDuF9v+GAN6doFm3ba/j227eQL4n4Erre2vNoDZT9LrbS18BAxuAxfXbU3eAy53gNCTLhmSI/lpCYUC8H5G35QDhm6B/jV3bq1znD4AGZrV8g1wcAiMFyl73ePdvZ1z+7enNb8fpuZyvNk619AAAAAGYktHRAD/AP8A/6C9p5MAAAAJcEhZcwAADdcAAA3XAUIom3gAAAAHdElNRQfmARgJIBu0NNI+AAABNElEQVQ4y82SzUpCURSFv31uFDqRhr1E9QASBYXjoGewgZIJWsYlrxrSrRwkRuWoXqJRBPYG/cx6ihqUCnZ2ExG7eQ1HtUaHfc75WKy94K8lwUGx1kiIalLRhf7oAXGalVz69ldA8aTuAusgnnl37gGI9uIquFa5OdjJ+KGAYq2RQG3VTNnVUjb7OvzI95uxD6dzh9W9yu72NydmQFJNgnjBzwCFwuYbSFmMSQbvzNB5fmB7hDq23RrKZSRgrKLtiAh0QwGKPhLtxcMAvYhdVpXncAfiNFVwfb8Z+5HB4fmsEeMZYy/HrnH/uF4QYQOk3LHtFsA0MytGjIfonMFcl/JpF0TDi3R0utZPe1GVLvCkcCGiS0AqCJFJatsvWkpErsq5LXeiLQBU8pmqqp7pp77wb/QFm09xUl2IdBcAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/shared/sortable-asc-dark.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAJCAIAAABxOqH0AAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAA0UlEQVQIHQHGADn/Ae0cJAAAAAAAANannypZYQAAAAAAAAIAAAAAAADWp58AAADWp58AAAAAAAACAAAA1qefAAAAAAAAAAAA1qefAAAAAe0cJAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAI1eVgAAAAAAAAAAAAMDA3CfpwIAAABzoqoAAAADAwMDAwNwn6cAAAACAAAAAAAAc6KqAAAAcJ+nAAAAAAAAAnQX2cErsvcAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/shared/right-square-arrow-blue.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAADq3pUWHRSYXcgcHJvZmlsZSB0eXBlIGV4aWYAAHja7VZbcuwoDP1nFbMES0JILAfzqJodzPLngN1OutOZSm567tc1ZSQDlsQ54hH6P3+P8Bce3nQLUc1TTmnDE3PMXKD4djxl1bTFVZ8f2025aw9XB6NJIOX49HSOv7XTdmeJCjR9Z8jr2bHfd+R42vcHQ6cjmRExlHYayqch4aODTgPlmNaWstv7Kez9kO02Ez/eMKtxw8QO8fgdDeg1hR9h7kKyoWaJRwAyXw5SllLQDThQC3QWXbWdkQCQZzht76IKj6xcGn3S/kCKpKM9oOEezHTJp+2kz8EPC+J3nqVenu/a65uLO5AXxqN5GKMfsysxAdJ0Tuo2laVh4A7IZf2WUAyvQrdVMooHZG8F5Q0ud5RKmRi0DIrUqNCgvmSlihAjdzZI5sqy2lyMM1fZAniKs9BgkyxNHGxV0Cto5SsWWn7zclfJ4bgRRjLBGB3082vKp4bGmClPtPmFFeLiuSgQxmRu1hgFQmjc8kgXwLfy+ExeBQzqgtkxwbLth4ld6cytmUeyiBYMVMhjrZG10wAggm9FMMj9SFsiUUq0GbMRAUcHPwWGHIuGd1BAqtwQJUeRBHKcp2/8Y7TGsvLRjD0LRKgkMVCTpYCriI0N+WPRkUNFRaOqJjV1zVqSpJg0pWRpbn7FxKKpJTNzy1ZcPLp6cnMPnr1kzoLNUXPKlj3nXAqcFlgu+LtgQCk777LHXfe02+573ktF+tRYtaZq1UPNtTRu0rBPtNSsecutdOpIpR679tSte8+9DKTakBGHjjRs+MijXKxROGj9UL7OGt1Y48XUHGgXa/jV7GaC5naikzMwxpHAuE0GkNA8OducYuQwqZucbZmxKpQRpU5yGk3GwGDsxDro4u6NuTveQow/4o1vzIVJ3SuYC5O6T5j7yNsT1lpZu56ExdBchhPUTbD8MKB7YS/zUPuyDN/94Y+hVxsaSOqlQpEq0q3ML967+bCn9sKLAnpuCHGUMyCcvJGO9sT/FdlvjWhbUeCMXzI7DamNopJCsT1NNQadlzQoP5XPDOEkakudR1LH3Xd1bJfMqxPH2HvIwkj1FRB5+C5Eb/JMtbld9Glo/pCH4NbxyQ9fk+Fjh3RP59Qd96RPZ6TXeDvon1jVH0MVvg3RLc83eNeD3Ip7XWj+yO6vyfChgwZuGkfe4sx0v8+ylT35bcFdiISXLLSnhn5l6f/vEX13d5wyvCigP4Z+hyFcbHL4F54nyj1078dQAAABg2lDQ1BJQ0MgcHJvZmlsZQAAeJx9kT1Iw0AcxV9TpaIVBzOIOGSoTi2IijhKFYtgobQVWnUwufQLmhiSFBdHwbXg4Mdi1cHFWVcHV0EQ/ABxdHJSdJES/5cUWsR4cNyPd/ced+8AoVFlmtU1Dmi6baYTcSmXX5FCrxDQhzBERGVmGcnMQha+4+seAb7exXiW/7k/R79asBgQkIhnmWHaxOvE05u2wXmfWGRlWSU+J46adEHiR64rHr9xLrks8EzRzKbniEViqdTBSgezsqkRTxFHVE2nfCHnscp5i7NWrbHWPfkLwwV9OcN1miNIYBFJpCBBQQ0VVGEjRqtOioU07cd9/MOuP0UuhVwVMHLMYwMaZNcP/ge/u7WKkxNeUjgOdL84zscoENoFmnXH+T52nOYJEHwGrvS2f6MBzHySXm9rkSNgYBu4uG5ryh5wuQMMPRmyKbtSkKZQLALvZ/RNeWDwFuhd9Xpr7eP0AchSV0s3wMEhMFai7DWfd/d09vbvmVZ/P21dcqXiaaDUAAANGGlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4KPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iWE1QIENvcmUgNC40LjAtRXhpdjIiPgogPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4KICA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIgogICAgeG1sbnM6eG1wTU09Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9tbS8iCiAgICB4bWxuczpzdEV2dD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlRXZlbnQjIgogICAgeG1sbnM6ZGM9Imh0dHA6Ly9wdXJsLm9yZy9kYy9lbGVtZW50cy8xLjEvIgogICAgeG1sbnM6R0lNUD0iaHR0cDovL3d3dy5naW1wLm9yZy94bXAvIgogICAgeG1sbnM6dGlmZj0iaHR0cDovL25zLmFkb2JlLmNvbS90aWZmLzEuMC8iCiAgICB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iCiAgIHhtcE1NOkRvY3VtZW50SUQ9ImdpbXA6ZG9jaWQ6Z2ltcDoxMGUxMWRlMi0wNTI1LTQwM2ItOTZhYi1jODYxZDZmMTlhMGEiCiAgIHhtcE1NOkluc3RhbmNlSUQ9InhtcC5paWQ6NjIzZTNmZWMtYzg5Yi00MGVhLTljNjktMzFjYTgwODgwMGMyIgogICB4bXBNTTpPcmlnaW5hbERvY3VtZW50SUQ9InhtcC5kaWQ6MmM0NTNkMzQtNmI5Mi00NDJjLTlhY2ItMTgyNWYyNzQ0NjFhIgogICBkYzpGb3JtYXQ9ImltYWdlL3BuZyIKICAgR0lNUDpBUEk9IjIuMCIKICAgR0lNUDpQbGF0Zm9ybT0iV2luZG93cyIKICAgR0lNUDpUaW1lU3RhbXA9IjE2NDQ1ODIzMjkxMjA3NDQiCiAgIEdJTVA6VmVyc2lvbj0iMi4xMC4yNCIKICAgdGlmZjpPcmllbnRhdGlvbj0iMSIKICAgeG1wOkNyZWF0b3JUb29sPSJHSU1QIDIuMTAiPgogICA8eG1wTU06SGlzdG9yeT4KICAgIDxyZGY6U2VxPgogICAgIDxyZGY6bGkKICAgICAgc3RFdnQ6YWN0aW9uPSJzYXZlZCIKICAgICAgc3RFdnQ6Y2hhbmdlZD0iLyIKICAgICAgc3RFdnQ6aW5zdGFuY2VJRD0ieG1wLmlpZDpiM2YwMzU2NS0xNWQzLTQ4MGEtOGUxYi1kMmZlZTM3NDZmMmMiCiAgICAgIHN0RXZ0OnNvZnR3YXJlQWdlbnQ9IkdpbXAgMi4xMCAoV2luZG93cykiCiAgICAgIHN0RXZ0OndoZW49IjIwMjItMDItMTFUMTM6MjU6MjkiLz4KICAgIDwvcmRmOlNlcT4KICAgPC94bXBNTTpIaXN0b3J5PgogIDwvcmRmOkRlc2NyaXB0aW9uPgogPC9yZGY6UkRGPgo8L3g6eG1wbWV0YT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgIAo8P3hwYWNrZXQgZW5kPSJ3Ij8+OWQ6JAAAAAZiS0dEAP8A/wD/oL2nkwAAAAlwSFlzAAAN1wAADdcBQiibeAAAAAd0SU1FB+YCCwwZHVAUuvsAAAB7SURBVDjLY2AYviCq75gyMeqYcEkwMjIcjeo7Zky2AQwMDOKMjAwHY/qPe5JrAAMDAwP3f4b/G6L7jkWRawADAwMDGwMjw5LYCcfLyTUAL2AhQs0vhv8MiYsLLZeRY8BXRgbG0CVFltvJccHL//8ZvJcWWZ6laUIaBgAAEBYdvIFAlrEAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/shared/tick-large.png", data : "iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAACXBIWXMAAAsTAAALEwEAmpwYAAAC60lEQVR4nO2Zz2tTQRDHH/46ePTHyR//hFjsKTcp7MrOOzyUelHRnqUQLb3k1noQW6glLf4HKW8GUvWi4NGW9qIogje1J/vj3Aj1yWxfAw0vyW7evk2EDAykDcn7fGd3ZmcnQTC0oQ0tt0W16KREGBWkpiWpWCB8lQh7ktQf7Qh7AuGLfo/U9K04vFGpVE4E/TZF6opEeCYRtiRBYufqlyA1OxaHl72Dj9Wii5JgWZBq2IMfd0GqIUhVZV1e8AIvSY1LUrt5wTOE7Ig4vFMY+LXlidMC4ZVrcNkqBGGJn+UUXtblWUHqbdHw8sgR3vAz3UXeJzw1RbyLatGZ3AJ8bBvZPi+q+eDj8G6/4GXT1e2e4AHhvEDYHgABuz2VWK7zPkHvvR9vv5UQFq3g+XR0cUiZ+uTHB8nawYtk/vtku1xoyLq8ah59bg88w28m89o7iJg1gucmi/sUH/DltUfJ+sFcE56d/76ftZ0QtrhpNIn+aD8iv5nCs6gOuTDSVcBhS1ws/JP1h5mRL3eAT1dhymQFcCDhSQtY6b4C+uIxgPCkBXzuvgIWrXKn2m2asGVT+MMc2DbJAaP6//zbY2OA3JGn5grsOxHA8KYgzuDJUEC3LcQ12hTIKTyZbiGDJM6q4Rt/55KpjYnC4KVxEhuW0U4iCoEn0zJqcZC1qyxZ/2NRueBJ90NPuwrgoZPNl2athPPIU+pxeN2omRMIP12IcAkvEH4YT/O4dbV9QKsIp5EndjUTFH2hORLhHB5hX6yKS8YC0lWo9vIwTlYXCSuPR38hsLWbtejcIFzqBamdnuemPKvsuwAMo57gmyIQlvoY/ZdBXuN7qEAg/wLU69KH0qnAhfGgVQ9c/UV+1dlwt2XIW/WxbUquIp9lPKsspjqp37kT1nJuusgHTG5w5O9QC1y2A9/GpyO3Hba9k94q+jNqxvqELcLSBnCE5zbcs/PFg2926Q94Df0a4RO/xy0xd5UD8TPr0IYW/P/2D5+LFXPdole1AAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/shared/close-button-blue.png", data : ""},{ name : "haxeui-core/styles/shared/right-arrow-bright.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAQAAAAHCAIAAACgB3uHAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAM0lEQVQImWP8////O1lVBgYGBgYGJgYGBqHHtxEcOJ/x////DDDABGe9k1VlgrOgMnDTADWiDmfiE8U7AAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/shared/restore-button-white.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAwAAAAMCAYAAABWdVznAAAEaXpUWHRSYXcgcHJvZmlsZSB0eXBlIGV4aWYAAHja7VhtcispDPzPKfYII4EQHIcvVe0N9vjbYiZ+juO8ivP+7FZliAEzmqZRCw1OWP/8beEvXCy1hCRacs35wJVqqtzQKcd5tV3TkXZ9XuNq6f14uN1gDEW08fxa8mX/Nk43gLNp6MkdULmAqL+/UdOFXx6AromiM2J05gVUL6DI5w26ANq5rCPXovdL6Otsr+dPNxRfGqrVL7Pr7uP3pPDeFMwTmVekeKCOkU8C0T8cYsMNQs1RYQgj9GOsqFPUiwkc8sxPt6uCkTnV9NTovVpvPXo+Hh7VSnyZxAcn51v7dDyQPFdlu/5u5lSuHr8fn3pGXTgevO8fs1lsrxmraCnD1fla1NtSdg92HVP41CWAWj4UHwGE7lJRCqJ6IBQmArajDKrEUMIo0aRGRmu3gwYoJl6BoRUzD457sEC7yiO6fskLGSs0nLFA17FlT5FvXGhPW48R9mwFM0+CKRPAyOPi1RJefcDMtwLRUW6+Ai9mdzZouHJewwyKkF1Ole3gt/J4ua4RCop72bdIhWP7CdGFfmWCuIWOMBS05x4knRcAXISpBWSwMxJBNYpCmQ5lViI4skCgBuocE3coQCI8QZJTjBnaFPap8YjSNmVhDAeMI5lBCYk5KrTBLoNYKQniR1NBDDWJkkQki0qRKi3HnLLknDV7UmwaNQUVzapatGorsaQiJRctpdTSKteIpCk1V62l1toa5mxAbni6waC1zj321CX03LWXXnsbCJ+Rhow8dJRRR5s840T+mHnqLLPOtmghlFZasvLSVVZdzRBqFoMlE8umVqxau6l2yfqhvKAaXarxVsoN9aYaRlXfIMjTibhmEIxDIiiuLgECml2zo1BK7Mq5Zkdl7AphkBTXbJIrBgXTIhajN+0Cn4q6cn+kW9D0Tjf+rnLBpXtRuY+6PVNttv02jVsh34Xu1CNi98GmccEf3lUf2/DZjVfbH6D/C1AcapbLMvNjDWtt6t1ZJEcEEiEh6hgkCDFbk6YZJ4vJbawfbWxrxLc0q2XjWtPgg1mR9TdiUXO8/RAQSW6IOOyMFb11VDm856jVEKYoeItYvlFd33dT+NTAzgV/lW34Hd17tjfWJVrp4N5m6kPrIuky2ULqdU2murjjTsm5N814ATUinFhibshuS4Zmg29pmBXnSE7vSD1tGkivyEdm1HwdqziDigkXVSSRjCUl4rl5QuEB9QZwceJZFLVw32nTsNqFXBSmsPaECKiYc4FoQ+6pFbkWKXLQHA3pr6Y4++Tex7tVrnzcGIZHiifDe1r+bt7EduA5MdSgtqrdwYXnK34dLtzT+xO4YB9W+z248HG134MLnznvVbjwey2+Dhe+Iu1X4MLXI+X3cOHVwPsMLnwvjj/ChV/0DIm2pHkliEM9QeDVb5I8P+S6pE8cESR3nDqyHA1nKfziUG4V+SEg5Vhqy9g3/96M32vDnwL8AP0A/QD9AP03gQyHWf/31r+LdBObE5asEgAAAYVpQ0NQSUNDIHByb2ZpbGUAAHicfZE9SMNAHMVfU6VaKw528GvIUJ0siIo4ShWLYKG0FVp1MLn0C5o0JCkujoJrwcGPxaqDi7OuDq6CIPgB4ujkpOgiJf4vLbSI8eC4H+/uPe7eAUKtxFSzYwJQNctIRCNiOrMq+l7Rg2F0w49BiZl6LLmYguv4uoeHr3dhnuV+7s/Rq2RNBnhE4jmmGxbxBvHMpqVz3icOsoKkEJ8Tjxt0QeJHrssNfuOcd1jgmUEjlZgnDhKL+TaW25gVDJV4mjikqBrlC+kGK5y3OKulCmvek78wkNVWklynOYIolhBDHCJkVFBECRbCtGqkmEjQfsTFP+T44+SSyVUEI8cCylAhOX7wP/jdrZmbmmwkBSJA54ttf4wCvl2gXrXt72Pbrp8A3mfgSmv5yzVg9pP0aksLHQF928DFdUuT94DLHWDgSZcMyZG8NIVcDng/o2/KAP23gH+t0VtzH6cPQIq6Wr4BDg6BsTxlr7u8u6u9t3/PNPv7AVx6cp6IJdMnAAANdmlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4KPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iWE1QIENvcmUgNC40LjAtRXhpdjIiPgogPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4KICA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIgogICAgeG1sbnM6eG1wTU09Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9tbS8iCiAgICB4bWxuczpzdEV2dD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlRXZlbnQjIgogICAgeG1sbnM6ZGM9Imh0dHA6Ly9wdXJsLm9yZy9kYy9lbGVtZW50cy8xLjEvIgogICAgeG1sbnM6R0lNUD0iaHR0cDovL3d3dy5naW1wLm9yZy94bXAvIgogICAgeG1sbnM6dGlmZj0iaHR0cDovL25zLmFkb2JlLmNvbS90aWZmLzEuMC8iCiAgICB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iCiAgIHhtcE1NOkRvY3VtZW50SUQ9ImdpbXA6ZG9jaWQ6Z2ltcDo0NjIyMTgzNS0wMDgzLTQ2ZDEtYTBmMy0yOTExNzNkNjZlZTkiCiAgIHhtcE1NOkluc3RhbmNlSUQ9InhtcC5paWQ6YTJkOTdhM2ItNmYzNS00ZjQ0LTllNzgtYjcwM2UwYmNjNDJiIgogICB4bXBNTTpPcmlnaW5hbERvY3VtZW50SUQ9InhtcC5kaWQ6MDExNGJhMjEtODdkNi00MTc5LTk5NGQtMzBmMWYxYWM2MGM1IgogICBkYzpGb3JtYXQ9ImltYWdlL3BuZyIKICAgR0lNUDpBUEk9IjIuMCIKICAgR0lNUDpQbGF0Zm9ybT0iV2luZG93cyIKICAgR0lNUDpUaW1lU3RhbXA9IjE2Njk1NDE5ODg1MjQ0ODUiCiAgIEdJTVA6VmVyc2lvbj0iMi4xMC4zMiIKICAgdGlmZjpPcmllbnRhdGlvbj0iMSIKICAgeG1wOkNyZWF0b3JUb29sPSJHSU1QIDIuMTAiCiAgIHhtcDpNZXRhZGF0YURhdGU9IjIwMjI6MTE6MjdUMTA6Mzk6NDcrMDE6MDAiCiAgIHhtcDpNb2RpZnlEYXRlPSIyMDIyOjExOjI3VDEwOjM5OjQ3KzAxOjAwIj4KICAgPHhtcE1NOkhpc3Rvcnk+CiAgICA8cmRmOlNlcT4KICAgICA8cmRmOmxpCiAgICAgIHN0RXZ0OmFjdGlvbj0ic2F2ZWQiCiAgICAgIHN0RXZ0OmNoYW5nZWQ9Ii8iCiAgICAgIHN0RXZ0Omluc3RhbmNlSUQ9InhtcC5paWQ6ODZjZDAzOTMtYjE2Ny00YTJjLTgwYzQtZmNlYjUxOWQyNjc4IgogICAgICBzdEV2dDpzb2Z0d2FyZUFnZW50PSJHaW1wIDIuMTAgKFdpbmRvd3MpIgogICAgICBzdEV2dDp3aGVuPSIyMDIyLTExLTI3VDEwOjM5OjQ4Ii8+CiAgICA8L3JkZjpTZXE+CiAgIDwveG1wTU06SGlzdG9yeT4KICA8L3JkZjpEZXNjcmlwdGlvbj4KIDwvcmRmOlJERj4KPC94OnhtcG1ldGE+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAKPD94cGFja2V0IGVuZD0idyI/PuV9NlcAAAAGYktHRAD/AP8A/6C9p5MAAAAJcEhZcwAADsEAAA7BAbiRa+0AAAAHdElNRQfmCxsJJzAPzAr2AAAAPklEQVQoz2NgIBf8//+//z9h0M+IpOE/qTb8J0YNE6lOZyLVKaTbQHMNLEjsBiL8M4Hk8GchxmRGRkZ4BAMAMd5EhARLMlcAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/shared/info-small.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QA/wD/AP+gvaeTAAABUElEQVQ4jaWSu05CQRRF15m5FBZgYWHjKyQan4U91laKpbGgNT7iB/gfvloJsZToD1j4BWqCMSTKD1BAYbwXzrG4YhQuinF3M5m9Zs0D/hlJmpw4bc4HannEzQBg+tQ2Kdf20pUfAdmz+rBq6kSMzQS4GVwErXCnejDS6AFkz+rD1k7dAou/ON/7KMx1IK4zr5o66S6PZxxjafcdYCy1g9TRN4OJ0+a8Vx66tc/XhgAoXL92e5gaC7W9dCUA8GobID0Xenjz1vcg3lkeqDgAETedtGo161nN+kSCatwJANSwpPdcHu2Uo14FweDjEgWt9nPtF5G442IDuYSYOGBUHeV4849MHTdLAluD9a34vJspfBoABK1wB+F+gPadb0X7ncEnoHow0vBRmMMokXwcBSv6VriS+JW/ZvKoOSdi607cLICqVgi4etnOPA5g+Le8A2uUcuHpLgzCAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/shared/minimize-button-light.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAwAAAAMCAYAAABWdVznAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsIAAA7CARUoSoAAAAAuSURBVChTY/z//z8DKYAJShMNRjUQA2ivAR7T9V0TGsAMHKCxrAAsT2LSYGAAAMFlDQ2rsh18AAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/default/haxeui_tiny.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAMAAAAoLQ9TAAAAwFBMVEUAAAA+drJml8uevd7K2+1Ee7c1aaBcjsWfv99RhsA7cKqfvt/J2e01aaHJ3Ow1Z56kweGsxuM5cKxzoM9PhMCnxOJBd7SBqdSTtNp6otG90ui2zeetx+RFerM1a6Rllsiow+JDe7qhvt9jlsqfvt9dj8SzzOaoxeJCd7A5bqhVicKAqdOev95ik8SsyOOivuCmw99ThcJ4pNCnv99kl8tomc1+p9RRiMSUtts8drV0oNFdkcibu96IrtdOhL9Cerg7AHaNAAAANXRSTlMASfTz8fHx5uTh4d/T00RE9PLy8fHw5+bl4uHh4eHh39bW0NC/v7m5ubm4tVROSkpIR0ZAQIt9oOEAAACUSURBVBjTRc1FEsMwEETRjpkdZmZmS5FD979VRjVVce/e3zS8MGyMz6DdpuV2x0X/QTPn++uu9pRSDtAl0wRJL4DFzjIuDqIXm8snRlJhc7FTYMnmsgZwZHMpUTjlRZA6rET+t9oAiSl0YatqiugtqLBpMSyyLmzloCe4sNUQnpaxOFy29S+FAK2Rb0/0G+4zw/WbP+FUKshItzNPAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/shared/transparent_px.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAIAAACQd1PeAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAADElEQVQImWN4K6MCAAMnAS7qrFRjAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/shared/sortable-arrows-blue.png", data : ""},{ name : "images/download_csv.png", data : "iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAA4RpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+IDx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IkFkb2JlIFhNUCBDb3JlIDcuMS1jMDAwIDc5LmVkYTJiM2ZhYywgMjAyMS8xMS8xNy0xNzoyMzoxOSAgICAgICAgIj4gPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4gPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1wTU09Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9tbS8iIHhtbG5zOnN0UmVmPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvc1R5cGUvUmVzb3VyY2VSZWYjIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iIHhtcE1NOk9yaWdpbmFsRG9jdW1lbnRJRD0ieG1wLmRpZDphZTZkOTU3ZS1lNzc4LTk0NDQtYTczZS01ZTAyZmFjNzE1ZmYiIHhtcE1NOkRvY3VtZW50SUQ9InhtcC5kaWQ6M0JGRjgxMEY5OEEzMTFFQ0E2RDZCMTYyOTRBMDQ0NzYiIHhtcE1NOkluc3RhbmNlSUQ9InhtcC5paWQ6M0JGRjgxMEU5OEEzMTFFQ0E2RDZCMTYyOTRBMDQ0NzYiIHhtcDpDcmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9wIDIzLjEgKFdpbmRvd3MpIj4gPHhtcE1NOkRlcml2ZWRGcm9tIHN0UmVmOmluc3RhbmNlSUQ9InhtcC5paWQ6ZWJkNWFmOTItZTZhOS05NjRkLWJhYjItZDVkZTRkYWY1ZTk0IiBzdFJlZjpkb2N1bWVudElEPSJhZG9iZTpkb2NpZDpwaG90b3Nob3A6YTY2YThiNWEtNjE1ZS02YjRlLTlkZGItN2MwODA5NzA5YmMyIi8+IDwvcmRmOkRlc2NyaXB0aW9uPiA8L3JkZjpSREY+IDwveDp4bXBtZXRhPiA8P3hwYWNrZXQgZW5kPSJyIj8+87gQYgAACmtJREFUeNrUWglQFFca/l/3TPfc3B5A1BLFAo1HPIiCGo94rq7HGrdqPZNdNbquu9E1G1FrSySgxGx5JJgyHmVWV91lXcWr0Ch4JggKgsWhiHiA4sk1V/f02/ceDnIMCjim9K/qYuZ/3dP/1+//v/9o0Ol73vA2Cwdvubz1AFTODxgDiFoEgujiLLJmrsLgkAGp1eAj6lAg0epaelMEoEgSlNrMUMKpZYtdqmzm9SrgkYEZVgNAo0OQnGiHtNNSA+NlGWDyJyKEvKfqeLdQmX88wfqhooCmpQDow+oQzF+JGA1RRVlBmRG95gLim369xZEPxeYtBIgAQIOYHhlWH5g617VNk3+vgZ+eeLcl533VK1xtq4b1asfgsUL5Jatm0g+HfwXYjgmoph9l9vOQXCIyu+u4kKBBDYwfOFqAL9brvbACs1d9UvGHy+ckgernzp0L/fv3B4fD0fSA4zi4ceMGREVFUVd1YIwETuUAGdfy5SaIA1dVOyK85LqwoWqI2WnQC2r4KPazqoUn/ms3OdfGjBkD48ePb7b75ObmMgCYPTK2G6+HhQI78rDiW4Pg7cuN3b7O8tfdm6xtaq+bzeYW3bCysvI10ugzD2rlz8H6BCMf1IUf/L+d1s/XLzcHvRV5QCYERGgSlm8yoG49VX3OJtm/WL2g6j3F8ebmAa52ECPikn+J1aMRE4WQrMvyksiPK4eYKzG8yVIDgHJ9qwAOBo0RPItuOGYvm1k5ofSu8vaVEio1tD6XJA3Oz5JfyFAyRfwmlRK1XEkkB+P6GTNmwMSJE11yfb9+/d48ALja3RF6xkZ9+/aFCRMmvM77I7e6EGLWg5WwESuIysvL3W6xczetFkzvZWFGIDcAsFkwN2KKqPX24zQ9Bsgl/4ifZ/vN5CluB9A1tCvEb4lx/Hae7g5WRBzYLcN4pXy0yiznvZoLkafhQ1xo6tV0eRgpcQMHD+9hQyQesrOz3QqA53kYNjxcuXSf5zMvyH80ela9Lwcc2/nE/mOuTtWl5QB0BhS4a5N1Xvwqc9dqzaev0/dJuoRQepB6K/zrBNUVhLjcV40BPdmBRmt8Ly8vCAgIcLnm5+cH7du3Z0/3+Y66duz6enJPqjC1NKBrA8DktxtkLq1WC5s3b4bbt2/DzZs3ISsrC4YOHVrdBGk0bI3qr127xirNUaNGsbUdO3bA/v37awweOHAgZGRkQFhYWD1Azh6Be3UWciWxsbGs9l+2bBlMmjSJ1EpqOH78ONuRsWPHsjV6DBo0iIE8cOAAA5aXl8coODg4mP3O9OnTITQ0lIF0sS8KBgnblGKCxNGyGHAlHh4ezLjt27fDhg0bmI4aRnV6vR4MBgPTlZWVQXp6OgMUERHBdHv37oXo6GgYOXIku2bcuHFM9/Tp0waZQCMaPR8oG9reN6/hBBTgUBwqswAdq3T8uw4/zQTQ8p3qXKIX9Kwzo9e+EIC/vz+IoghpaWk1uvz8fFi8eDH7nJiYCIcOHYKDBw+yOv/UqVOwZs0asFqtUFBQwFyGGp6cnAxt2rSBXbt2uRoYKA9K4Nd3C+9EWMwgCJpSu28bdM/PP/WqwO9KKy5bl9NK/F1ZzrkQKMiRQaNFYGidB+3D1cCqZGdPfMnsE/7pSl1+7b41KCgIU1m6dGmNjgQqDgkJwSaTqUbXo0cPvGjRIpyamooVRcF9+vRhegIUE2B4z549+P79+1in0zXojXV6JHv6IKW2zuiJcK8BauuSOH12UqEpLs0i9vvXRU4I7lmNuRsJo4sVvszuFwIQBAEXFhZi4h6Y+D7TRUZGMiMJ6+A5c+bgkydPMlB0jQKjMnPmzJoHYLPZmC4+Pr5FzX/7zjyO2228kCX7Tk0t9zEOGSdAaG8VAeDzcgD0IC6ASfrHpBlnT5jKxo0b2RphFvb9+vXreN++ffjWrVu4pKQEd+jQoeb6M2fOsHMIc73SFGNhlK7giuQz80iel3b6n7VwtrTabn72Ei3bFkFE7S6dlSekpUg+tV2U+vzRo0cZnVZUVDAfX7t2LVsjBrM4oMzk7e0NKSkpsHDhQjZ5cEpmZiacO3eO/UZzJhj1JfWU5OXpwwUPGKHOCX5XVYiqaR+Qc7hr9ED9v11l+eeWGHPHX7okJvEEq1evZoRBheaWy5cvNzhPq0ew7UfTfzqFqpZYzLioDo1KEjzoEMxnDxkv+JUUKarcTFnbvXt3IH4NxOebMG3DjWZfmqHp7hD3crlOKZnunFNIXLkEYKnCsC3O+uGXOwyDyFdKaUpNDKSUeOtIYPTMwb6Rf/9OX0BtItyP3SGEVnFgYGCj/k0oFhP3rDmfJMxGzxW1CP87zXPHhcfevtTumkysFsCccV7KeFiqHHLIqILq7Ha7W1wkKSkJ7ty545bfImU/XD4vdScx61+nlFALCDIuSFDxFGPEgVtHETShuVOuZTvokK1tg7EKBUGMR+4O0kePHr1wnbIbxrjJU78nDxQtCUvTS2shWpS5Q2iQNhhdBgbC6NGjwWKxsJqLUrFTaEXr6+vLqJsWjrTarVM+EQ9Bz+aqqkYabbYLR48cZTeo5m8Ez0mm9ueG3xG9HD1nIFrouXrqdEDsamhAyhL299ixY5CQkNCw/2jDVXE8PK3XUiIgaZ9spdrukKv7gsNHDrPjdQitYGl5TvsGOr6pL7RynTZtmsv5U5eeqmLiQsV1AFDGGRDen5SD+Q+7v1+VGLlJLyGE1XQODs/n4Mj5obaS6nGtNzr1OjBOlsDju2jzO2WPMVc/d8yaNQvySCUbPX9+jX7V1q0QNW+eS+NJoQek0Eu323BdADabBYYPmQRPzBmPdcbEbzqGSHuJA6iaOc+pn8oIpSmg14nhJDku/2GDpa2rBPjlggVgJh1dXFwcrFy5EmJiYhrduZFTxNKADtyJqgpcxm7oLCVk8r2zcR0E6v8EFkcBSMoTYuWrv8SsknOgSFro86QUVs0eWj7/3u3Gszqd9pGCsdF139YcbD9l+r51AL/CasH3Gk7moDpYaQek5d3j60Z1b7hevPtR63eSt6/4xtD1s48qBtusrtPMi4ynJBW5UX++XSd+6+0C5b7Bgzxe7hd6T7wzzgSZP9syho4TYqN3GH42eTUv1RhMCFZ9b0wn7hObm+FIJ/FEepUmNvXukFs37LB6gSIXFThOjpkq/m3zEY+EASOEJr2jChuitsYfMh0cP0P8/G6RIylqQaVUmOsAtejiJR9q1rvCpouG+GNBNsC0iDL76m2G030/UN/+eq/x9MUUadyJ/bYe2Rdln9JihbIVHe9Tnle69lE9HjZRzAr7QJ0oauHQTyekgsiPKxQaQ70Hqp2D6OdBjEEmfh8EIh/odgBXr16Fhw8eEqrGtO+gL8wpXQkaDWpHElK3yjIcWv4UtyWxoSFFmo24WAnx8RysQBYp3m4RY22kvIeyR5g2XmAkLti5G8+aevT8v1UoxdtAwZL7d4CUJCpV9e6SJAmEw+sOpzhQEyAiAcUTYx3EMDtJVHVKYWq4k9RpYWB/RgSq2hxEX93zSHA7AMlGj8YLXGKsRI8X/QYDbWuo/78AAwBzO3axos1t/wAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/default/dialogs.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogRElBTE9HUw0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi5kaWFsb2cgew0KICAgIGJvcmRlcjogMXB4IHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOw0KICAgIGZpbHRlcjogJGRpYWxvZy1zaGFkb3c7DQogICAgYm9yZGVyLXJhZGl1czogNHB4Ow0KICAgIHdpZHRoOiBhdXRvOw0KICAgIGhlaWdodDogYXV0bzsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZGVmYXVsdC1iYWNrZ3JvdW5kLWNvbG9yOw0KICAgIHBhZGRpbmc6IDJweDsNCn0NCg0KLmRpYWxvZy1jb250YWluZXIgew0KICAgIHNwYWNpbmc6IDA7DQp9DQoNCi5kaWFsb2ctdGl0bGUgew0KICAgIGJhY2tncm91bmQtY29sb3I6IG5vbmU7DQogICAgcGFkZGluZzogMTBweDsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc29saWQtYmFja2dyb3VuZC1jb2xvcjsNCiAgICBib3JkZXI6IG5vbmU7DQp9DQoNCi5kaWFsb2cubm8tdGl0bGUgLmRpYWxvZy10aXRsZSB7DQogICAgaGlkZGVuOiB0cnVlOw0KfQ0KDQouZGlhbG9nLXRpdGxlLWxhYmVsIHsNCiAgICB3aWR0aDogMTAwJTsNCiAgICB2ZXJ0aWNhbC1hbGlnbjogY2VudGVyOw0KICAgIGNvbG9yOiAkZGlhbG9nLXRpdGxlLWNvbG9yOw0KICAgIHZlcnRpY2FsLWFsaWduOiAiY2VudGVyIjsNCn0NCg0KLmRpYWxvZy1jb250ZW50IHsNCiAgICBwYWRkaW5nOiAxMHB4Ow0KfQ0KDQouZGlhbG9nLWNvbnRlbnQtcGFkZGluZyB7DQogICAgcGFkZGluZzogMTBweDsNCn0NCg0KLmRpYWxvZy5uby1wYWRkaW5nIC5kaWFsb2ctY29udGVudCB7DQogICAgcGFkZGluZzogMHB4Ow0KfQ0KDQouZGlhbG9nLWZvb3Rlci1jb250YWluZXIgew0KICAgIHBhZGRpbmc6IDVweDsNCiAgICBib3JkZXI6IG5vbmU7DQogICAgYmFja2dyb3VuZC1jb2xvcjogbm9uZTsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc29saWQtYmFja2dyb3VuZC1jb2xvcjsNCn0NCg0KLmRpYWxvZy1mb290ZXIgew0KICAgIHBhZGRpbmc6IDVweDsNCiAgICBob3Jpem9udGFsLWFsaWduOiByaWdodDsNCn0NCg0KLmRpYWxvZy1jbG9zZS1idXR0b24gew0KICAgIHJlc291cmNlOiAkY2xvc2U7DQogICAgdmVydGljYWwtYWxpZ246ICJjZW50ZXIiOw0KICAgIGN1cnNvcjogInBvaW50ZXIiOw0KICAgIHBvaW50ZXItZXZlbnRzOiB0cnVlOw0KICAgIHBhZGRpbmc6IDNweDsNCiAgICBib3JkZXItcmFkaXVzOiAycHg7DQp9DQoNCi5kaWFsb2ctY2xvc2UtYnV0dG9uOmhvdmVyIHsNCiAgICByZXNvdXJjZTogJGNsb3NlLWhvdmVyOw0KICAgIGJhY2tncm91bmQtY29sb3I6ICRzZWxlY3Rpb24tYmFja2dyb3VuZC1jb2xvcjsNCn0NCg0KLmRpYWxvZy1taW5pbWl6ZS1idXR0b24gew0KICAgIHJlc291cmNlOiAkY29sbGFwc2U7DQogICAgdmVydGljYWwtYWxpZ246ICJjZW50ZXIiOw0KICAgIGN1cnNvcjogInBvaW50ZXIiOw0KICAgIHBvaW50ZXItZXZlbnRzOiB0cnVlOw0KICAgIHBhZGRpbmc6IDNweDsNCiAgICBib3JkZXItcmFkaXVzOiAycHg7DQp9DQoNCi5kaWFsb2ctbWluaW1pemUtYnV0dG9uOmhvdmVyIHsNCiAgICByZXNvdXJjZTogJGNvbGxhcHNlLWhvdmVyOw0KICAgIGJhY2tncm91bmQtY29sb3I6ICRzZWxlY3Rpb24tYmFja2dyb3VuZC1jb2xvcjsNCn0NCg0KLmRpYWxvZy1tYXhpbWl6ZS1idXR0b24gew0KICAgIHJlc291cmNlOiAkZXhwYW5kOw0KICAgIHZlcnRpY2FsLWFsaWduOiAiY2VudGVyIjsNCiAgICBjdXJzb3I6ICJwb2ludGVyIjsNCiAgICBwb2ludGVyLWV2ZW50czogdHJ1ZTsNCiAgICBwYWRkaW5nOiAzcHg7DQogICAgYm9yZGVyLXJhZGl1czogMnB4Ow0KfQ0KDQouZGlhbG9nLW1heGltaXplLWJ1dHRvbjpob3ZlciB7DQogICAgcmVzb3VyY2U6ICRleHBhbmQtaG92ZXI7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJHNlbGVjdGlvbi1iYWNrZ3JvdW5kLWNvbG9yOw0KfQ0KDQouZGlhbG9nICNpY29uSW1hZ2UuaW5mbyB7DQogICAgcmVzb3VyY2U6ICRpbmZvLWxhcmdlOw0KfQ0KDQouZGlhbG9nICNpY29uSW1hZ2UucXVlc3Rpb24gew0KICAgIHJlc291cmNlOiAkcXVlc3Rpb24tbGFyZ2U7DQp9DQoNCi5kaWFsb2cgI2ljb25JbWFnZS55ZXNubyB7DQogICAgcmVzb3VyY2U6ICRxdWVzdGlvbi1sYXJnZTsNCn0NCg0KLmRpYWxvZyAjaWNvbkltYWdlLndhcm5pbmcgew0KICAgIHJlc291cmNlOiAkd2FybmluZy1sYXJnZTsNCn0NCg0KLmRpYWxvZyAjaWNvbkltYWdlLmVycm9yIHsNCiAgICByZXNvdXJjZTogJGVycm9yLWxhcmdlOw0KfQ0KDQoubWVzc2FnZWJveCB7DQogICAgaW5pdGlhbC13aWR0aDogMzAwcHg7DQp9"},{ name : "haxeui-core/styles/default/scrollview.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogU0NST0xMVklFVw0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi5zY3JvbGx2aWV3IHsNCiAgICBib3JkZXI6IDFweCBzb2xpZCAkbm9ybWFsLWJvcmRlci1jb2xvcjsNCiAgICBib3JkZXItcmFkaXVzOiAycHg7DQogICAgcGFkZGluZzogMHB4Ow0KICAgIHdpZHRoOiBhdXRvOw0KICAgIGhlaWdodDogYXV0bzsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkdGVydGlhcnktYmFja2dyb3VuZC1jb2xvcjsNCn0NCg0KLnNjcm9sbHZpZXcgLnNjcm9sbHZpZXctY29udGVudHMgew0KICAgIGhlaWdodDogYXV0bzsNCiAgICBzcGFjaW5nOiA1cHg7DQogICAgcGFkZGluZzogNXB4Ow0KICAgIGJvcmRlcjogbm9uZTsNCn0NCg0KLnNjcm9sbHZpZXcubm8tcGFkZGluZyAuc2Nyb2xsdmlldy1jb250ZW50cyB7DQogICAgcGFkZGluZzogMHB4Ow0KfQ0KDQouc2Nyb2xsdmlldy5uby1ib3JkZXIgew0KICAgIGJvcmRlcjogbm9uZTsNCn0NCg0KLnNjcm9sbHZpZXcubm8tYm9yZGVyIC5zY3JvbGwgew0KICAgIGJvcmRlcjogbm9uZTsNCn0NCg0KLnNjcm9sbHZpZXc6YWN0aXZlIHsNCiAgICBib3JkZXI6IDFweCBzb2xpZCAkYWNjZW50LWNvbG9yOw0KfQ0KDQovKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoqKiBNT0JJTEUgVkFSSUFOVFMNCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQouc2Nyb2xsdmlldzptb2JpbGUgew0KICAgIG1vZGU6IG1vYmlsZTsNCn0NCg"},{ name : "haxeui-core/styles/shared/warning-medium.png", data : "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABmJLR0QA/wD/AP+gvaeTAAACB0lEQVRYhe2WP2gUQRTGf+/udibFCbmL8exUjGiiFqlMZdBG8E9rYaWNggqipQRRRBCEJKWljY1gJ2n1LhCbNHIggorWIijkEHYvuWeT083u7GZ3L2JzX7W89+Z7H2/mm1kYYoj/DCm6UF9QpmHmUJRvwSO5yEYRnkpRAeyxt4D7CLDXroG/UISm0AR0hTrdkY+g9c3QT3rmkJxa+56Xq1REAF37MNQcYJRS8KAIVe4JaMtMofKO+PZtgE7LbNDOw5d/AirzjuYAZZDFvHS5BOgbewE4k1JyWpft+TycmbdAV/Ho2DbCYYD3X6o8fjYBwN0rnziyv9Nn/EzHPypn8bPwZp/AL3uz3xzAVHp/UsbTkFIOUrXXs9JmEqAr1FGZC8fCTb2QmE0R9/T1rt07JsBhuy1NjdeLrshsy20FaMtMAVej8XBThwCAa9o0xwcWkGQ7U1HndwiZbJkqIM12XtoZ+IttbZkoQFfxgCdJ+fDYvXKiAFAWdQmblE68B7Rlb6PMJzPngHBHTrpfS6cAx2sXr1F4264hAjPHfiDpV1ria+n+H3DYLooPX6s8fbkPgNFql8kDnbTyvi1vRBOxM6BNM4nDdlE0xnzGawHjtYDGWKZb12nL2OC0aV8B57IwFsCSzPpbuB0u0Jl/1BzQE9FI/AyU5DIql5y5wbAOPN9hziGGGBy/AQa5lYKywFiuAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/shared/sortable-desc-blue.png", data : ""},{ name : "haxeui-core/locale/ru/std-strings.properties", data : "c2F2ZT3QodC+0YXRgNCw0L3QuNGC0YwNCnllcz3QlNCwDQpubz3QndC10YINCmNsb3NlPdCX0LDQutGA0YvRgtGMDQpvaz1PSw0KY2FuY2VsPdCe0YLQvNC10L3QsA0KYXBwbHk90J/RgNC40LzQtdC90LjRgtGMDQpzZWFyY2g90J/QvtC40YHQug0KDQpyZWQ90JrRgNCw0YHQvdGL0LkNCmdyZWVuPdCX0LXQu9C10L3Ri9C5DQpibHVlPdCh0LjQvdC40LkNCmh1ZT3QptCy0LXRgtC+0LLQvtC5INGC0L7QvQ0Kc2F0dXJhdGlvbj3QndCw0YHRi9GJ0LXQvdC90L7RgdGC0YwNCmJyaWdodG5lc3M90K/RgNC60L7RgdGC0YwNCg"},{ name : "haxeui-core/styles/shared/minimize-button-white.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAwAAAAMCAYAAABWdVznAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAAnSURBVChTY/z//z8DKYAJShMNRjUQA2ivATmmCUU5I5ggLWkwMAAA9hYKDVhEBNAAAAAASUVORK5CYII"},{ name : "haxeui-core/locale/ru/expression-replacements.properties", data : "emVybz1bMF09MA0Kbm9uZT1bMF09MA0Kb25lPVswXT0xDQptYW55PVswXT4xDQo"},{ name : "haxeui-core/styles/default/sliders.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogU0xJREVSUw0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi5ob3Jpem9udGFsLXNsaWRlciB7DQogICAgcGFkZGluZy1sZWZ0OiA1cHg7DQogICAgcGFkZGluZy1yaWdodDogNXB4Ow0KICAgIHBhZGRpbmctdG9wOiAzcHg7DQogICAgcGFkZGluZy1ib3R0b206IDNweDsNCiAgICBoZWlnaHQ6IGF1dG87DQogICAgaW5pdGlhbC13aWR0aDogMTUwcHg7DQogICAgYm9yZGVyLXJhZGl1czogJG5vcm1hbC1ib3JkZXItcmFkaXVzOw0KfQ0KDQouaG9yaXpvbnRhbC1zbGlkZXI6YWN0aXZlIC5idXR0b24gew0KICAgIGJvcmRlcjogMXB4IHNvbGlkICRhY2NlbnQtY29sb3I7DQp9DQoNCi5ob3Jpem9udGFsLXNsaWRlcjphY3RpdmUgLnJhbmdlIHsNCiAgICBib3JkZXI6IDFweCBzb2xpZCAkYWNjZW50LWNvbG9yOw0KfQ0KDQouaG9yaXpvbnRhbC1zbGlkZXIgLnNsaWRlci12YWx1ZSB7DQogICAgd2lkdGg6IDEwMCU7DQogICAgaGVpZ2h0OiA4cHg7DQogICAgYm9yZGVyLXJhZGl1czogMXB4Ow0KICAgIHZlcnRpY2FsLWFsaWduOiBjZW50ZXI7DQogICAgY3Vyc29yOiBwb2ludGVyOw0KfQ0KDQouaG9yaXpvbnRhbC1zbGlkZXIud2l0aC1jZW50ZXIgLnJhbmdlLXZhbHVlIHsNCiAgICBib3JkZXItcmFkaXVzOiAwcHg7DQp9DQoNCi5ob3Jpem9udGFsLXNsaWRlciAubWlub3ItdGljayB7DQogICAgbWFyZ2luLXRvcDogMTBweDsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkbm9ybWFsLWJvcmRlci1jb2xvcjsNCiAgICB3aWR0aDogMXB4Ow0KICAgIGhlaWdodDogNHB4Ow0KICAgIHZlcnRpY2FsLWFsaWduOiBjZW50ZXI7DQp9DQoNCi5ob3Jpem9udGFsLXNsaWRlciAubWFqb3ItdGljayB7DQogICAgbWFyZ2luLXRvcDogMTJweDsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkbm9ybWFsLWJvcmRlci1jb2xvcjsNCiAgICB3aWR0aDogMXB4Ow0KICAgIGhlaWdodDogOHB4Ow0KICAgIHZlcnRpY2FsLWFsaWduOiBjZW50ZXI7DQp9DQoNCi5ob3Jpem9udGFsLXNsaWRlciAuYnV0dG9uIHsNCiAgICB3aWR0aDogMTFweDsNCiAgICBoZWlnaHQ6IDIwcHg7DQogICAgYm9yZGVyLXJhZGl1czogMnB4Ow0KICAgIHZlcnRpY2FsLWFsaWduOiBjZW50ZXI7DQogICAgZmlsdGVyOiBub25lOw0KfQ0KICAgIA0KLnZlcnRpY2FsLXNsaWRlciB7DQogICAgcGFkZGluZy10b3A6IDVweDsNCiAgICBwYWRkaW5nLWJvdHRvbTogNXB4Ow0KICAgIHBhZGRpbmctbGVmdDogM3B4Ow0KICAgIHBhZGRpbmctcmlnaHQ6IDNweDsNCiAgICB3aWR0aDogYXV0bzsNCiAgICBpbml0aWFsLWhlaWdodDogMTUwcHg7DQp9DQoNCi52ZXJ0aWNhbC1zbGlkZXI6YWN0aXZlIC5idXR0b24gew0KICAgIGJvcmRlcjogMXB4IHNvbGlkICRhY2NlbnQtY29sb3I7DQp9DQoNCi52ZXJ0aWNhbC1zbGlkZXI6YWN0aXZlIC5yYW5nZSB7DQogICAgYm9yZGVyOiAxcHggc29saWQgJGFjY2VudC1jb2xvcjsNCn0NCg0KLnZlcnRpY2FsLXNsaWRlciAuc2xpZGVyLXZhbHVlIHsNCiAgICBoZWlnaHQ6IDEwMCU7DQogICAgd2lkdGg6IDhweDsNCiAgICBib3JkZXItcmFkaXVzOiAycHg7DQogICAgaG9yaXpvbnRhbC1hbGlnbjogY2VudGVyOw0KICAgIGN1cnNvcjogcG9pbnRlcjsNCn0NCg0KLnZlcnRpY2FsLXNsaWRlci53aXRoLWNlbnRlciAucmFuZ2UtdmFsdWUgew0KICAgIGJvcmRlci1yYWRpdXM6IDBweDsNCn0NCg0KLnZlcnRpY2FsLXNsaWRlciAubWlub3ItdGljayB7DQogICAgbWFyZ2luLWxlZnQ6IDEwcHg7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJG5vcm1hbC1ib3JkZXItY29sb3I7DQogICAgd2lkdGg6IDRweDsNCiAgICBoZWlnaHQ6IDFweDsNCiAgICBob3Jpem9udGFsLWFsaWduOiBjZW50ZXI7DQp9DQoNCi52ZXJ0aWNhbC1zbGlkZXIgLm1ham9yLXRpY2sgew0KICAgIG1hcmdpbi1sZWZ0OiAxMnB4Ow0KICAgIGJhY2tncm91bmQtY29sb3I6ICRub3JtYWwtYm9yZGVyLWNvbG9yOw0KICAgIHdpZHRoOiA4cHg7DQogICAgaGVpZ2h0OiAxcHg7DQogICAgaG9yaXpvbnRhbC1hbGlnbjogY2VudGVyOw0KfQ0KDQoudmVydGljYWwtc2xpZGVyIC5idXR0b24gew0KICAgIHdpZHRoOiAyMHB4Ow0KICAgIGhlaWdodDogMTFweDsNCiAgICBib3JkZXItcmFkaXVzOiAycHg7DQogICAgaG9yaXpvbnRhbC1hbGlnbjogY2VudGVyOw0KICAgIGZpbHRlcjogbm9uZTsNCn0NCg0KLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogVkFSSUFOVCAtIFNJTVBMRQ0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi5zbGlkZXIuc2ltcGxlLXNsaWRlciAuYnV0dG9uIHsNCiAgICBoZWlnaHQ6IDEycHg7DQogICAgd2lkdGg6IDEycHg7DQp9DQoNCi5zbGlkZXIuc2ltcGxlLXNsaWRlciAucmFuZ2UtdmFsdWUgew0KICAgIGJhY2tncm91bmQtY29sb3I6IG5vbmU7DQp9DQoNCg"},{ name : "haxeui-core/styles/default/windows.css", data : ""},{ name : "haxeui-core/styles/shared/warning-large.png", data : ""},{ name : "haxeui-core/locale/en/formats.properties", data : "Zm9ybWF0cy5kYXRlLnNob3J0PSVkLyVtLyVZDQpmb3JtYXRzLmRlY2ltYWwuc2VwZXJhdG9yPS4NCg"},{ name : "haxeui-core/styles/default/accordion.css", data : "LmFjY29yZGlvbiB7DQogICAgYm9yZGVyOiAxcHggc29saWQgJG5vcm1hbC1ib3JkZXItY29sb3I7DQogICAgc3BhY2luZzogMDsNCiAgICBwYWRkaW5nOiAxcHg7DQogICAgcGFkZGluZy1ib3R0b206IDBweDsNCn0NCg0KLmFjY29yZGlvbi1idXR0b24gew0KICAgIGJvcmRlci1yYWRpdXM6IDA7DQogICAgYm9yZGVyOiAwcHggc29saWQgJG5vcm1hbC1ib3JkZXItY29sb3I7DQogICAgd2lkdGg6IDEwMCU7DQogICAgdGV4dC1hbGlnbjogbGVmdDsNCiAgICBpY29uOiAkYXJyb3ctcmlnaHQtc3F1YXJlOw0KICAgIGljb24tcG9zaXRpb246IGxlZnQ7DQogICAgYm9yZGVyOiBub25lOw0KICAgIGJvcmRlci1jb2xvcjogJG5vcm1hbC1ib3JkZXItY29sb3I7DQogICAgYm9yZGVyLWJvdHRvbS13aWR0aDogMXB4Ow0KICAgIHBhZGRpbmc6IDZweDsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc29saWQtYmFja2dyb3VuZC1jb2xvcjsNCn0NCg0KLmFjY29yZGlvbi1idXR0b246aG92ZXIgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICRzb2xpZC1iYWNrZ3JvdW5kLWNvbG9yLWhvdmVyOw0KfQ0KDQouYWNjb3JkaW9uLWJ1dHRvbjpkb3duIHsNCiAgICBpY29uOiAkYXJyb3ctZG93bi1zcXVhcmU7DQp9DQoNCi5hY2NvcmRpb24tcGFnZSB7DQogICAgd2lkdGg6IDEwMCU7DQogICAgd2lkdGg6IDEwMCU7DQogICAgYm9yZGVyLWNvbG9yOiAkbm9ybWFsLWJvcmRlci1jb2xvcjsNCiAgICBib3JkZXItYm90dG9tLXdpZHRoOiAxcHg7DQogICAgb3BhY2l0eTogMTsNCiAgICBwYWRkaW5nOiA1cHg7DQp9DQoNCi5hY2NvcmRpb24tcGFnZTpleHBhbmRlZCB7DQogICAgYW5pbWF0aW9uOiBhY2NvcmRpb25BbmltYXRlRXhwYW5kIDAuM3MgZWFzZSAwcyAxOw0KfQ0KDQouYWNjb3JkaW9uLXBhZ2U6Y29sbGFwc2VkIHsNCiAgICBhbmltYXRpb246IGFjY29yZGlvbkFuaW1hdGVDb2xscGFzZSAwLjNzIGVhc2UgMHMgMTsNCn0NCg0KQGtleWZyYW1lcyBhY2NvcmRpb25BbmltYXRlRXhwYW5kIHsNCiAgICAwJSB7DQogICAgICAgIG9wYWNpdHk6IDA7DQogICAgICAgIGhlaWdodDogMCU7DQogICAgfQ0KICAgIDEwMCUgew0KICAgICAgICBvcGFjaXR5OiAxOw0KICAgICAgICBoZWlnaHQ6IDEwMCU7DQogICAgfQ0KfQ0KDQpAa2V5ZnJhbWVzIGFjY29yZGlvbkFuaW1hdGVDb2xscGFzZSB7DQogICAgMCUgew0KICAgICAgICBvcGFjaXR5OiAxOw0KICAgICAgICBoZWlnaHQ6IDEwMCU7DQogICAgfQ0KICAgIDEwMCUgew0KICAgICAgICBvcGFjaXR5OiAwOw0KICAgICAgICBoZWlnaHQ6IDAlOw0KICAgIH0NCn0NCg0KLmFjY29yZGlvbi1wYWdlIC5zY3JvbGx2aWV3IHsNCiAgICBib3JkZXI6IG5vbmU7DQogICAgcGFkZGluZy10b3A6IDA7DQogICAgcGFkZGluZy1yaWdodDogMDsNCiAgICBwYWRkaW5nLWxlZnQ6IDA7DQogICAgcGFkZGluZy1ib3R0b206IDA7DQp9DQo"},{ name : "haxeui-core/locale/fr/expression-replacements.properties", data : "emVybz1bMF09MA0Kbm9uZT1bMF09MA0Kb25lPVswXT0xDQptYW55PVswXT4xDQo"},{ name : "images/check-red-icon.png", data : "iVBORw0KGgoAAAANSUhEUgAAABQAAAAUCAYAAACNiR0NAAAB7klEQVQ4jbWUz0tXQRDAP/sEMSPpIIJIh8RLJ/XULVHCQ6RRXmJRkm4euhgUexSEBcOuQdBBrL2p9IMOEUb9AxUWXcQOEUJeRClDsJWRWdjv62Hf76E5vJ2dnf3s7LzZMVRItK4HmAJGgZ7MYxd4AywCyyb4P+XdNcBoXTMwC0wDTVWHZfIeuGGCX6sERutagZfAQLb+BXgNfAdOA33AENCs63vAZRP8ag0wWifjU2Ak8YExE/xKOaxoXScwB4xn0PMp0kKNkxksHXRLo67NUfCbJvgJ4I6aTgAL0bojVhGtk1zN6KIk/bPqg8CLKqiC7wGPddoPXEsRSk7O6MK8gj7VA9Uo91WfSMALmcOiCX5LD/knVK4PrGZ+R8BUZzsm+A11rBsKfNDxVLSuvdCkivwsnV4vdDvTWwX4QycdWtiNQrsyfUuAH3XSlPLQIPSijusm+L1CX0eS6YocHQe9CpxT2zP5FCb4r/pKRIajdZMNQJdUPwAekL2Uu8Bv1R/WAU3Fn3rBfRP8OqXmYIEn2f5X4ijtygS/rz7dWsC3pUzU763cLPmU25dAHwEtmflAK+Ek0FYK+jlw3QT/KxnSldOVgraolFMR+fvSYXLYN+AmcCWH/RVhKdqzwCWgV2pU25Tk6Z08NxO8RP6fBTgEP7iv78ukgiQAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/default/tableview.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogSEVBREVSDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLw0KLmhlYWRlciB7DQogICAgd2lkdGg6IGF1dG87DQogICAgaGVpZ2h0OiBhdXRvOw0KICAgIHNwYWNpbmc6IDA7DQp9DQoNCi5oZWFkZXIgLmNvbHVtbiB7DQogICAgYm9yZGVyLXJhZGl1czogMDsNCiAgICBpY29uLXBvc2l0aW9uOiBmYXItcmlnaHQ7DQogICAgYm9yZGVyLWxlZnQtd2lkdGg6IDA7DQogICAgdGV4dC1hbGlnbjogbGVmdDsNCiAgICBwYWRkaW5nOiA2cHg7DQogICAgYm9yZGVyLWNvbG9yOiAkbm9ybWFsLWJvcmRlci1jb2xvcjsNCn0NCg0KLmhlYWRlciAuY29sdW1uLmxhc3Qgew0KICAgIGJvcmRlci1yaWdodC13aWR0aDogMDsNCn0NCg0KLyoNCi5oZWFkZXIuc2Nyb2xsaW5nIC5jb2x1bW4ubGFzdCB7DQogICAgYm9yZGVyLXJpZ2h0LXdpZHRoOiAxcHg7DQp9DQoqLw0KDQouY29sdW1uLnNvcnRhYmxlIHsNCiAgICBpY29uOiAkYXJyb3ctdXAtZG93bjsNCiAgICBpY29uLXBvc2l0aW9uOiBmYXItcmlnaHQ7DQp9DQoNCi5jb2x1bW4uc29ydC1hc2Mgew0KICAgIGljb246ICRzb3J0LWFzYzsNCn0NCg0KLmNvbHVtbi5zb3J0LWRlc2Mgew0KICAgIGljb246ICRzb3J0LWRlc2M7DQp9DQoNCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCioqIFRBQkxFVklFVw0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi50YWJsZXZpZXcgew0KICAgIHNwYWNpbmc6IDA7DQp9DQoNCi50YWJsZXZpZXcgLnRhYmxldmlldy1jb250ZW50cyB7DQogICAgc3BhY2luZzogMDsNCiAgICB3aWR0aDogMTAwJTsNCiAgICBwYWRkaW5nOiAwcHg7DQp9DQoNCi50YWJsZXZpZXcgLmV2ZW4gew0KICAgIGJhY2tncm91bmQtY29sb3I6ICR0ZXJ0aWFyeS1iYWNrZ3JvdW5kLWNvbG9yOw0KICAgIGN1cnNvcjogcG9pbnRlcjsNCn0NCg0KLnRhYmxldmlldyAub2RkIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc29saWQtYmFja2dyb3VuZC1jb2xvci1hbHQ7DQogICAgY3Vyc29yOiBwb2ludGVyOw0KfQ0KDQoudGFibGV2aWV3IC5jb21wb3VuZGl0ZW1yZW5kZXJlciA+IC5pdGVtcmVuZGVyZXIgew0KICAgIGhlaWdodDogYXV0bzsNCiAgICBwYWRkaW5nOiA2cHg7DQp9DQoNCi50YWJsZXZpZXcgLmV2ZW46aG92ZXIgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICRzZWxlY3Rpb24tYmFja2dyb3VuZC1jb2xvci1ob3ZlcjsNCn0NCg0KLnRhYmxldmlldyAub2RkOmhvdmVyIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2VsZWN0aW9uLWJhY2tncm91bmQtY29sb3ItaG92ZXI7DQp9DQoNCi50YWJsZXZpZXcgLmNvbXBvdW5kaXRlbXJlbmRlcmVyIC5sYWJlbCB7DQogICAgY29sb3I6ICRub3JtYWwtdGV4dC1jb2xvcjsNCn0NCg0KLnRhYmxldmlldzpkaXNhYmxlZCAubGFiZWwgew0KICAgIGNvbG9yOiAkZGlzYWJsZWQtdGV4dC1jb2xvcjsNCn0NCg0KLnRhYmxldmlldyAuY29tcG91bmRpdGVtcmVuZGVyZXI6c2VsZWN0ZWQgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICRzZWxlY3Rpb24tYmFja2dyb3VuZC1jb2xvcjsNCiAgICBjb2xvcjogJHNlbGVjdGlvbi10ZXh0LWNvbG9yOw0KfQ0KDQoudGFibGV2aWV3IC5jb21wb3VuZGl0ZW1yZW5kZXJlcjpzZWxlY3RlZCAubGFiZWwgew0KICAgIGNvbG9yOiAkc2VsZWN0aW9uLXRleHQtY29sb3I7DQp9DQo"},{ name : "images/info-noncritical.png", data : "iVBORw0KGgoAAAANSUhEUgAAABQAAAAUCAYAAACNiR0NAAACb0lEQVQ4ja2UXUiTYRTHf+87tzZtzdwWRtvAjxIMJeqiQCgIFhHOoovAO7uzusm66sqgCLqsq6UXXXRV0Oe7okzQkEKCFhr4iTqThlpq7m3k5j7imRts7p1U+ofn5jnn/J7zPOc5R0JDXsVXDVwAmoDqLA8V6AEeAE9aPY2J9dE5QK/iMwA3gSuATuuwjOKx2JAkSc0Xz5we1AR6FV8x8Ao4thEoW8lkMvpzYeHctfMtzzPbujRMgB8DJ9YHORwOGhoasFqtBIPB3OtJks5oMp3df/DQh/dvu6bEnpy2tQAerSxqa2tx6WQO2G3Y7fY8uyRJht0u131HVZUtlaFX8YksnwEWLaDFYmGP2cxiEr6MjBCLxfJ89Hq9pcy+S/7Y29tdBBwHnIXeye/3EwiUEQ6HiUQihdxwVlS4gQoBPFrQa+10VFXNXE8UQtPPXFpaA+wtWvfP8uR2u3HKa59B8X/OK0xGsiwb6w8f2SeKYtoI+C/abtlRIoDzWwWcGB5WBXBgK2DRSGR+bmZmVU53x6b1Y25WtGBIbvU0TiXi8ZebBCb6Xr95BwRSnSLrdFdFX/4v7dt0oLtHeTEHDKWArZ7G0d/h8CUt5/Hxcfomp1Ir8x+z9SsUGrvbfl0Mh9SVc8bXjY7ONlt5+W1JkvR/k9ny4uLgnfb2zmBgahoQz5bImXk9itLvrKzsNxWX1BlNpvJCoNVodGlkYODRrbbLT9WlpUmgS4xIYdOc2EDpqebmppq6+pM7bTaHYZthRyKeiIZV9fvXiYmxhx33RqMrKyHgEzCaHSiJ3hQ9WkBmwAVYAWM6i2VgVtRCzNicOOAPNlXRf5TwznEAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/default/textinputs.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogVEVYVCBGSUVMRA0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi50ZXh0ZmllbGQgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICR0ZXJ0aWFyeS1iYWNrZ3JvdW5kLWNvbG9yOw0KICAgIGNvbG9yOiAkbm9ybWFsLXRleHQtY29sb3I7DQogICAgYm9yZGVyOiAxcHggc29saWQgJG5vcm1hbC1ib3JkZXItY29sb3I7DQogICAgYm9yZGVyLXJhZGl1czogMnB4Ow0KICAgIHBhZGRpbmc6IDZweCA4cHg7DQogICAgZmlsdGVyOiAkbm9ybWFsLWlubmVyLXNoYWRvdzsNCiAgICBpbml0aWFsLXdpZHRoOiAxNTBweDsNCiAgICBoZWlnaHQ6IGF1dG87DQogICAgc3BhY2luZzogNXB4Ow0KICAgIGljb24tcG9zaXRpb246IHJpZ2h0Ow0KICAgIGNvbnRlbnQtdHlwZTogYXV0bzsNCn0NCg0KLnRleHRmaWVsZC5yZXF1aXJlZC12YWx1ZSB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJHdhcm5pbmctYmFja2dyb3VuZC1jb2xvci1zdGFydDsNCiAgICBib3JkZXItY29sb3I6ICR3YXJuaW5nLWJvcmRlci1jb2xvcjsNCn0NCg0KLnRleHRmaWVsZC5pbnZhbGlkLXZhbHVlIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZXJyb3ItYmFja2dyb3VuZC1jb2xvci1zdGFydDsNCiAgICBib3JkZXItY29sb3I6ICRlcnJvci1ib3JkZXItY29sb3I7DQp9DQoNCi50ZXh0ZmllbGQudmFsaWQtdmFsdWUgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICRzdWNjZXNzLWJhY2tncm91bmQtY29sb3Itc3RhcnQ7DQogICAgYm9yZGVyLWNvbG9yOiAkc3VjY2Vzcy1ib3JkZXItY29sb3I7DQp9DQoNCi50ZXh0ZmllbGQ6YWN0aXZlIHsNCiAgICBib3JkZXI6IDFweCBzb2xpZCAkYWNjZW50LWNvbG9yOw0KfQ0KDQoudGV4dGZpZWxkOmVtcHR5IHsNCiAgICBjb2xvcjogJGxpZ2h0ZXItdGV4dC1jb2xvcjsNCn0NCg0KLnRleHRmaWVsZDpkaXNhYmxlZCB7DQogICAgYm9yZGVyLWNvbG9yOiAkZGlzYWJsZWQtYm9yZGVyLWNvbG9yOw0KICAgIGNvbG9yOiAkZGlzYWJsZWQtdGV4dC1jb2xvcjsNCn0NCg0KLnRleHRmaWVsZCAuZGVjb3JhdG9yIHsNCiAgICBwYWRkaW5nOiAwcHggOHB4Ow0KICAgIGJhY2tncm91bmQ6ICRub3JtYWwtYmFja2dyb3VuZC1jb2xvci1zdGFydCAkbm9ybWFsLWJhY2tncm91bmQtY29sb3ItZW5kIHZlcnRpY2FsOw0KICAgIGJvcmRlci1yYWRpdXM6ICRub3JtYWwtYm9yZGVyLXJhZGl1czsNCiAgICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAwcHg7DQogICAgYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogMHB4Ow0KICAgIGJvcmRlci1sZWZ0OiAkbm9ybWFsLWJvcmRlci1zaXplIHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOw0KICAgIGluY2x1ZGUtaW4tbGF5b3V0OiBmYWxzZTsNCn0NCg0KLnRleHRmaWVsZCAuZGVjb3JhdG9yIC5pbWFnZSB7DQogICAgdmVydGljYWwtYWxpZ246Y2VudGVyOw0KICAgIG1hcmdpbi10b3A6IC0xcHg7DQp9DQoNCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCioqIFRFWFQgQVJFQQ0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi50ZXh0YXJlYSB7DQogICAgY29sb3I6ICRub3JtYWwtdGV4dC1jb2xvcjsNCiAgICBib3JkZXI6IDFweCBzb2xpZCAkbm9ybWFsLWJvcmRlci1jb2xvcjsNCiAgICBib3JkZXItcmFkaXVzOiAycHg7DQogICAgcGFkZGluZzogMXB4Ow0KICAgIGZpbHRlcjogJG5vcm1hbC1pbm5lci1zaGFkb3c7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJHRlcnRpYXJ5LWJhY2tncm91bmQtY29sb3I7DQogICAgaW5pdGlhbC13aWR0aDogMTUwcHg7DQogICAgaW5pdGlhbC1oZWlnaHQ6IDEwMHB4Ow0KICAgIGNvbnRlbnQtdHlwZTogYXV0bzsNCn0NCg0KLnRleHRhcmVhLnJlcXVpcmVkLXZhbHVlIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkd2FybmluZy1iYWNrZ3JvdW5kLWNvbG9yLXN0YXJ0Ow0KICAgIGJvcmRlci1jb2xvcjogJHdhcm5pbmctYm9yZGVyLWNvbG9yOw0KfQ0KDQoudGV4dGFyZWEuaW52YWxpZC12YWx1ZSB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJGVycm9yLWJhY2tncm91bmQtY29sb3Itc3RhcnQ7DQogICAgYm9yZGVyLWNvbG9yOiAkZXJyb3ItYm9yZGVyLWNvbG9yOw0KfQ0KDQoudGV4dGFyZWEudmFsaWQtdmFsdWUgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICRzdWNjZXNzLWJhY2tncm91bmQtY29sb3Itc3RhcnQ7DQogICAgYm9yZGVyLWNvbG9yOiAkc3VjY2Vzcy1ib3JkZXItY29sb3I7DQp9DQoNCi50ZXh0YXJlYTphY3RpdmUgew0KICAgIGJvcmRlcjogMXB4IHNvbGlkICRhY2NlbnQtY29sb3I7DQp9DQoNCi50ZXh0YXJlYTplbXB0eSB7DQogICAgY29sb3I6ICRsaWdodGVyLXRleHQtY29sb3I7DQp9DQoNCi50ZXh0YXJlYTpkaXNhYmxlZCB7DQogICAgYm9yZGVyLWNvbG9yOiAkZGlzYWJsZWQtYm9yZGVyLWNvbG9yOw0KICAgIGNvbG9yOiAkZGlzYWJsZWQtdGV4dC1jb2xvcjsNCn0"},{ name : "haxeui-core/styles/default/steppers.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogVU5BVFRBQ0hFRCBTVEVQUEVSDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLw0KLnN0ZXBwZXIgew0KICAgIHNwYWNpbmc6IDA7DQp9DQoNCi5zdGVwcGVyLWJ1dHRvbiB7DQogICAgcGFkZGluZzogM3B4Ow0KICAgIHBhZGRpbmctdG9wOiA0cHg7DQogICAgcGFkZGluZy1ib3R0b206IDRweDsNCiAgICBib3JkZXItcmFkaXVzOiAwOw0KICAgIGJvcmRlcjogbm9uZTsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc29saWQtYmFja2dyb3VuZC1jb2xvcjsNCiAgICBvcGFjaXR5OiAxOw0KfQ0KDQouc3RlcHBlci1idXR0b246aG92ZXIgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICRzb2xpZC1iYWNrZ3JvdW5kLWNvbG9yLWhvdmVyOw0KfQ0KDQouc3RlcHBlci1idXR0b246ZG93biB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJHNvbGlkLWJhY2tncm91bmQtY29sb3ItZG93bjsNCn0NCg0KLnN0ZXBwZXItYnV0dG9uOmRpc2FibGVkIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc29saWQtYmFja2dyb3VuZC1jb2xvci1kaXNhYmxlZDsNCn0NCg0KLnN0ZXBwZXItaW5jIHsNCiAgICBpY29uOiAkYXJyb3ctdXA7DQp9DQoNCi5zdGVwcGVyLWRlaW5jIHsNCiAgICBpY29uOiAkYXJyb3ctZG93bjsNCn0NCg0KLnN0ZXBwZXItaW5jOmRvd24gew0KICAgIGljb246ICRhcnJvdy11cDsNCn0NCg0KLnN0ZXBwZXItZGVpbmM6ZG93biB7DQogICAgaWNvbjogJGFycm93LWRvd247DQp9DQoNCi5zdGVwcGVyLXN0ZXAgLnN0ZXBwZXItaW5jLCAuc3RlcHBlci1zdGVwIC5zdGVwcGVyLWRlaW5jIHsNCiAgICBoZWlnaHQ6IDUwJTsNCn0NCg0KLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogTlVNQkVSIFNURVBQRVIgLSBTVEFOREFSRCBMQVlPVVQNCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQoubnVtYmVyLXN0ZXBwZXIgew0KICAgIHBhZGRpbmc6IDBweDsNCiAgICBoZWlnaHQ6IGF1dG87DQogICAgaW5pdGlhbC13aWR0aDogODBweDsNCiAgICBib3JkZXI6ICRub3JtYWwtYm9yZGVyLXNpemUgc29saWQgJG5vcm1hbC1ib3JkZXItY29sb3I7DQogICAgYm9yZGVyLXJhZGl1czogJG5vcm1hbC1ib3JkZXItcmFkaXVzOw0KICAgIGZpbHRlcjogJG5vcm1hbC1pbm5lci1zaGFkb3c7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJHRlcnRpYXJ5LWJhY2tncm91bmQtY29sb3I7DQp9DQoNCi5udW1iZXItc3RlcHBlciAuc3RlcHBlci12YWx1ZSB7DQogICAgdGV4dC1hbGlnbjogY2VudGVyOw0KICAgIGJvcmRlcjogbm9uZTsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBub25lOw0KICAgIGZpbHRlcjogbm9uZTsNCiAgICBtYXJnaW4tdG9wOiAwcHg7DQp9DQoNCi5udW1iZXItc3RlcHBlciAuc3RlcHBlci1kZWluYyB7DQogICAgaWNvbjogJGFycm93LWxlZnQ7DQogICAgcGFkZGluZy1sZWZ0OiA0cHg7DQogICAgcGFkZGluZy1yaWdodDogNHB4Ow0KICAgIGJvcmRlcjogbm9uZTsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2Nyb2xsYmFyLWJhY2tncm91bmQtY29sb3I7DQogICAgYm9yZGVyLXJhZGl1czogMDsNCiAgICBvcGFjaXR5OiAxOw0KfQ0KDQoubnVtYmVyLXN0ZXBwZXIgLnN0ZXBwZXItZGVpbmM6aG92ZXIgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICRzY3JvbGxiYXItYmFja2dyb3VuZC1jb2xvcjsNCn0NCg0KLm51bWJlci1zdGVwcGVyIC5zdGVwcGVyLWRlaW5jOmRvd24gew0KICAgIGJhY2tncm91bmQtY29sb3I6ICRzY3JvbGxiYXItYnV0dG9uLWNvbG9yOw0KICAgIGljb246ICRhcnJvdy1sZWZ0Ow0KfQ0KDQoubnVtYmVyLXN0ZXBwZXIgLnN0ZXBwZXItZGVpbmM6ZGlzYWJsZWQgew0KICAgIG9wYWNpdHk6IDAuNTsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2Nyb2xsYmFyLWJhY2tncm91bmQtY29sb3I7DQp9DQoNCi5udW1iZXItc3RlcHBlciAuc3RlcHBlci1pbmMgew0KICAgIGljb246ICRhcnJvdy1yaWdodDsNCiAgICBwYWRkaW5nLWxlZnQ6IDRweDsNCiAgICBwYWRkaW5nLXJpZ2h0OiA0cHg7DQogICAgYm9yZGVyOiBub25lOw0KICAgIGJhY2tncm91bmQtY29sb3I6ICRzY3JvbGxiYXItYmFja2dyb3VuZC1jb2xvcjsNCiAgICBib3JkZXItcmFkaXVzOiAwOw0KICAgIG9wYWNpdHk6IDE7DQp9DQoNCi5udW1iZXItc3RlcHBlciAuc3RlcHBlci1pbmM6aG92ZXIgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICRzY3JvbGxiYXItYmFja2dyb3VuZC1jb2xvcjsNCn0NCg0KLm51bWJlci1zdGVwcGVyIC5zdGVwcGVyLWluYzpkb3duIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2Nyb2xsYmFyLWJ1dHRvbi1jb2xvcjsNCiAgICBpY29uOiAkYXJyb3ctcmlnaHQ7DQp9DQoNCi5udW1iZXItc3RlcHBlciAuc3RlcHBlci1pbmM6ZGlzYWJsZWQgew0KICAgIG9wYWNpdHk6IDAuNTsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2Nyb2xsYmFyLWJhY2tncm91bmQtY29sb3I7DQp9DQoNCi5udW1iZXItc3RlcHBlci5yZXF1aXJlZC12YWx1ZSB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJHdhcm5pbmctYmFja2dyb3VuZC1jb2xvci1zdGFydDsNCiAgICBib3JkZXItY29sb3I6ICR3YXJuaW5nLWJvcmRlci1jb2xvcjsNCn0NCg0KLm51bWJlci1zdGVwcGVyLmludmFsaWQtdmFsdWUgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICRlcnJvci1iYWNrZ3JvdW5kLWNvbG9yLXN0YXJ0Ow0KICAgIGJvcmRlci1jb2xvcjogJGVycm9yLWJvcmRlci1jb2xvcjsNCn0NCg0KLm51bWJlci1zdGVwcGVyLnZhbGlkLXZhbHVlIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc3VjY2Vzcy1iYWNrZ3JvdW5kLWNvbG9yLXN0YXJ0Ow0KICAgIGJvcmRlci1jb2xvcjogJHN1Y2Nlc3MtYm9yZGVyLWNvbG9yOw0KfQ0KDQoubnVtYmVyLXN0ZXBwZXI6YWN0aXZlIHsNCiAgICBib3JkZXI6IDFweCBzb2xpZCAkYWNjZW50LWNvbG9yOw0KfQ0KDQovKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoqKiBOVU1CRVIgU1RFUFBFUiAtIENMQVNTSUMgTEFZT1VUDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLw0KLm51bWJlci1zdGVwcGVyLmNsYXNzaWMtc3RlcHBlciB7DQogICAgbGF5b3V0OiBjbGFzc2ljOw0KfQ0KDQoubnVtYmVyLXN0ZXBwZXIuY2xhc3NpYy1zdGVwcGVyIC5zdGVwcGVyLWRlaW5jIHsNCiAgICBpY29uOiAkYXJyb3ctZG93bjsNCn0NCg0KLm51bWJlci1zdGVwcGVyLmNsYXNzaWMtc3RlcHBlciAuc3RlcHBlci1pbmMgew0KICAgIGljb246ICRhcnJvdy11cDsNCn0NCg0KLm51bWJlci1zdGVwcGVyLmNsYXNzaWMtc3RlcHBlciAuc3RlcHBlci1kZWluYzpkb3duIHsNCiAgICBpY29uOiAkYXJyb3ctZG93bjsNCn0NCg0KLm51bWJlci1zdGVwcGVyLmNsYXNzaWMtc3RlcHBlciAuc3RlcHBlci1pbmM6ZG93biB7DQogICAgaWNvbjogJGFycm93LXVwOw0KfQ0KDQoubnVtYmVyLXN0ZXBwZXIuY2xhc3NpYy1zdGVwcGVyIC5zdGVwcGVyLXZhbHVlIHsNCiAgICB0ZXh0LWFsaWduOiBsZWZ0Ow0KICAgIG1hcmdpbi10b3A6IDBweDsNCn0NCg0KLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogT1BUSU9OIFNURVBQRVINCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQoub3B0aW9uLXN0ZXBwZXIgew0KICAgIHBhZGRpbmc6IDBweDsNCiAgICBoZWlnaHQ6IGF1dG87DQogICAgaW5pdGlhbC13aWR0aDogMTAwcHg7DQogICAgYm9yZGVyOiAkbm9ybWFsLWJvcmRlci1zaXplIHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOw0KICAgIGJvcmRlci1yYWRpdXM6ICRub3JtYWwtYm9yZGVyLXJhZGl1czsNCiAgICBmaWx0ZXI6ICRub3JtYWwtaW5uZXItc2hhZG93Ow0KICAgIGJhY2tncm91bmQtY29sb3I6ICR0ZXJ0aWFyeS1iYWNrZ3JvdW5kLWNvbG9yOw0KfQ0KDQoub3B0aW9uLXN0ZXBwZXIgLnN0ZXBwZXItdmFsdWUgew0KICAgIHRleHQtYWxpZ246IGNlbnRlcjsNCiAgICBib3JkZXI6IG5vbmU7DQogICAgYmFja2dyb3VuZC1jb2xvcjogbm9uZTsNCiAgICBmaWx0ZXI6IG5vbmU7DQogICAgbWFyZ2luLXRvcDogMHB4Ow0KICAgIHBhZGRpbmc6IDZweDsNCn0NCg0KLm9wdGlvbi1zdGVwcGVyIC5zdGVwcGVyLWRlaW5jIHsNCiAgICBpY29uOiAkYXJyb3ctbGVmdDsNCiAgICBwYWRkaW5nLWxlZnQ6IDRweDsNCiAgICBwYWRkaW5nLXJpZ2h0OiA0cHg7DQogICAgYm9yZGVyOiBub25lOw0KICAgIGJhY2tncm91bmQtY29sb3I6ICRzY3JvbGxiYXItYmFja2dyb3VuZC1jb2xvcjsNCiAgICBib3JkZXItcmFkaXVzOiAwOw0KICAgIG9wYWNpdHk6IDE7DQp9DQoNCi5vcHRpb24tc3RlcHBlciAuc3RlcHBlci1kZWluYzpob3ZlciB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJHNjcm9sbGJhci1iYWNrZ3JvdW5kLWNvbG9yOw0KfQ0KDQoub3B0aW9uLXN0ZXBwZXIgLnN0ZXBwZXItZGVpbmM6ZG93biB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJHNjcm9sbGJhci1idXR0b24tY29sb3I7DQogICAgaWNvbjogJGFycm93LWxlZnQ7DQp9DQoNCi5vcHRpb24tc3RlcHBlciAuc3RlcHBlci1kZWluYzpkaXNhYmxlZCB7DQogICAgb3BhY2l0eTogMC41Ow0KICAgIGJhY2tncm91bmQtY29sb3I6ICRzY3JvbGxiYXItYmFja2dyb3VuZC1jb2xvcjsNCn0NCg0KLm9wdGlvbi1zdGVwcGVyIC5zdGVwcGVyLWluYyB7DQogICAgaWNvbjogJGFycm93LXJpZ2h0Ow0KICAgIHBhZGRpbmctbGVmdDogNHB4Ow0KICAgIHBhZGRpbmctcmlnaHQ6IDRweDsNCiAgICBib3JkZXI6IG5vbmU7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJHNjcm9sbGJhci1iYWNrZ3JvdW5kLWNvbG9yOw0KICAgIGJvcmRlci1yYWRpdXM6IDA7DQogICAgb3BhY2l0eTogMTsNCn0NCg0KLm9wdGlvbi1zdGVwcGVyIC5zdGVwcGVyLWluYzpob3ZlciB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJHNjcm9sbGJhci1iYWNrZ3JvdW5kLWNvbG9yOw0KfQ0KDQoub3B0aW9uLXN0ZXBwZXIgLnN0ZXBwZXItaW5jOmRvd24gew0KICAgIGJhY2tncm91bmQtY29sb3I6ICRzY3JvbGxiYXItYnV0dG9uLWNvbG9yOw0KICAgIGljb246ICRhcnJvdy1yaWdodDsNCn0NCg0KLm9wdGlvbi1zdGVwcGVyIC5zdGVwcGVyLWluYzpkaXNhYmxlZCB7DQogICAgb3BhY2l0eTogMC41Ow0KICAgIGJhY2tncm91bmQtY29sb3I6ICRzY3JvbGxiYXItYmFja2dyb3VuZC1jb2xvcjsNCn0NCg0KLm9wdGlvbi1zdGVwcGVyLnJlcXVpcmVkLXZhbHVlIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkd2FybmluZy1iYWNrZ3JvdW5kLWNvbG9yLXN0YXJ0Ow0KICAgIGJvcmRlci1jb2xvcjogJHdhcm5pbmctYm9yZGVyLWNvbG9yOw0KfQ0KDQoub3B0aW9uLXN0ZXBwZXIuaW52YWxpZC12YWx1ZSB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJGVycm9yLWJhY2tncm91bmQtY29sb3Itc3RhcnQ7DQogICAgYm9yZGVyLWNvbG9yOiAkZXJyb3ItYm9yZGVyLWNvbG9yOw0KfQ0KDQoub3B0aW9uLXN0ZXBwZXIudmFsaWQtdmFsdWUgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICRzdWNjZXNzLWJhY2tncm91bmQtY29sb3Itc3RhcnQ7DQogICAgYm9yZGVyLWNvbG9yOiAkc3VjY2Vzcy1ib3JkZXItY29sb3I7DQp9DQoNCi5vcHRpb24tc3RlcHBlcjphY3RpdmUgew0KICAgIGJvcmRlcjogMXB4IHNvbGlkICRhY2NlbnQtY29sb3I7DQp9DQo"},{ name : "haxeui-core/styles/shared/left-square-arrow-blue.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAADqXpUWHRSYXcgcHJvZmlsZSB0eXBlIGV4aWYAAHja7VZZliMpDPznFHMEJAESxyFZ3psb9PEnIJeyXa7umi53fXVig1CSkogQi+s//h3uHzzso3chqqWckscTcshcIJjfn7Jq8mHVR8efwp3eXS8YKkEre9fSMf7Uk7+zRAVSvDFk9Xix3b/I4bBvD4YORzIjYgjtMJQPQ8L7CzoMlH1aPmXT2ylsfW/bORPb/25W48RE9+axHxTotQg/wtyFxKNmCXsAMv/spEBQ1CwJAzEIskhetR6RAJBnOPmbqNwjK5dEH+gfSJG06x0U92Cmq32qp/gcfLcgvvEs9fJ8p69vLu5AXhiPZm6Mvs+uhARI0zGpcypLwsANkMv6LKEo/hGyrpJRzCF7KyhvcLmhVMrEQHxQoEaFBvXVVqoIMXBnRctcWZbORDlzFe/AU5iFBiu4amLgr4JegZavWGj5zctdJYPjRhjJBGO008+vKR8aGmOmPJG3CyvExXNRIIzJ3KwxCoTQOPMoLoDP8vhMXgUMxgWzYYLFb7uJLdKRWzOPZBEtGBjR7muNtB0GABF8RwRDAgZ8IomUyCuzEgFHAz8FhgyLhjdQQDFyQ5QcBKtF2Xj6xjdKayxH3tXYs0BElISlZXMxgauAjQ35o8GQQyVKDDHGFDVazLEkSSHFlJKmufkVFQ0aNamqadZiYsGiJVMzZ9lK5izYHGNOWbPlnEuB0wLLBV8XDChl4022sMUtbbrZlrdSkT411FhT1Wqu5loaN2nYJ1pq2qzlVjp1pFIPPfbUtVvPvQyk2pARRhxp6LCRR7lYI7fT+q58njU6WePF1ByoF2v4VPU0QXM7iZMzMMaBwLhOBpDQPDnzRiGwm9RNznxmrIrIiDJOchpNxsBg6MRx0MXdG3N3vLkQvsQbn8y5Sd0rmHOTug+Ye8/bE9ZaWbueuMXQXIYTVC9YfhjQrbCVeah9unX/94O/hr7L0ECyLxGCVJGuZfZ46+ps6CsCYvcbgRydMCPKV0R1pPrHI0IA5S2S4Jf37HESBPywn0ltU4xDutMtLXWcl7UvtO7JC5xE2xIh5M5HB0fjisiu9hai6l4Ekbl7SPoBCa5JgX5JZu4HmXmIw23jIeLfa93tlE2PKRvuR7h6/dzAHUTDvQii4n6Vx+HM4/fk1iE7uRVouWZHevmvte7DATRw49jzNjCOGnrIpnuIcIq8BiLc2F6x9L83ok/sjnNzdC8K6K+h7zCEi012/wGpjcqgKzcemgAAAYVpQ0NQSUNDIHByb2ZpbGUAAHicfZE9SMNAHMVfU6VFKg4WkeKQoepiQVTEUapYBAulrdCqg8mlH0KThiTFxVFwLTj4sVh1cHHW1cFVEAQ/QBydnBRdpMT/JYUWMR4c9+PdvcfdO0BoVJhqdo0DqmYZ6URczOVXxMArAoggiFEMSMzUk5mFLDzH1z18fL2L8Szvc3+OXqVgMsAnEs8y3bCI14mnNy2d8z5xmJUlhficeMygCxI/cl12+Y1zyWGBZ4aNbHqOOEwsljpY7mBWNlTiKeKoomqUL+RcVjhvcVYrNda6J39hqKAtZ7hOcwgJLCKJFETIqGEDFViI0aqRYiJN+3EPf8Txp8glk2sDjBzzqEKF5PjB/+B3t2ZxcsJNCsWB7hfb/hgGArtAs27b38e23TwB/M/Aldb2VxvAzCfp9bYWPQL6toGL67Ym7wGXO8Dgky4ZkiP5aQrFIvB+Rt+UB/pvgZ5Vt7fWPk4fgCx1tXQDHBwCIyXKXvN4d7Czt3/PtPr7AY5OcrLdt8TMAAAN92lUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4KPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iWE1QIENvcmUgNC40LjAtRXhpdjIiPgogPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4KICA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIgogICAgeG1sbnM6eG1wTU09Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9tbS8iCiAgICB4bWxuczpzdEV2dD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlRXZlbnQjIgogICAgeG1sbnM6ZGM9Imh0dHA6Ly9wdXJsLm9yZy9kYy9lbGVtZW50cy8xLjEvIgogICAgeG1sbnM6R0lNUD0iaHR0cDovL3d3dy5naW1wLm9yZy94bXAvIgogICAgeG1sbnM6dGlmZj0iaHR0cDovL25zLmFkb2JlLmNvbS90aWZmLzEuMC8iCiAgICB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iCiAgIHhtcE1NOkRvY3VtZW50SUQ9ImdpbXA6ZG9jaWQ6Z2ltcDoxMGUxMWRlMi0wNTI1LTQwM2ItOTZhYi1jODYxZDZmMTlhMGEiCiAgIHhtcE1NOkluc3RhbmNlSUQ9InhtcC5paWQ6Yzc0ZjNmMmQtNjZhMS00MmFjLWEwYzktODgwYzdmNDkzMjU5IgogICB4bXBNTTpPcmlnaW5hbERvY3VtZW50SUQ9InhtcC5kaWQ6MmM0NTNkMzQtNmI5Mi00NDJjLTlhY2ItMTgyNWYyNzQ0NjFhIgogICBkYzpGb3JtYXQ9ImltYWdlL3BuZyIKICAgR0lNUDpBUEk9IjIuMCIKICAgR0lNUDpQbGF0Zm9ybT0iV2luZG93cyIKICAgR0lNUDpUaW1lU3RhbXA9IjE2NTg4MjQ3Nzg5MDA2ODkiCiAgIEdJTVA6VmVyc2lvbj0iMi4xMC4yNCIKICAgdGlmZjpPcmllbnRhdGlvbj0iMSIKICAgeG1wOkNyZWF0b3JUb29sPSJHSU1QIDIuMTAiPgogICA8eG1wTU06SGlzdG9yeT4KICAgIDxyZGY6U2VxPgogICAgIDxyZGY6bGkKICAgICAgc3RFdnQ6YWN0aW9uPSJzYXZlZCIKICAgICAgc3RFdnQ6Y2hhbmdlZD0iLyIKICAgICAgc3RFdnQ6aW5zdGFuY2VJRD0ieG1wLmlpZDpiM2YwMzU2NS0xNWQzLTQ4MGEtOGUxYi1kMmZlZTM3NDZmMmMiCiAgICAgIHN0RXZ0OnNvZnR3YXJlQWdlbnQ9IkdpbXAgMi4xMCAoV2luZG93cykiCiAgICAgIHN0RXZ0OndoZW49IjIwMjItMDItMTFUMTM6MjU6MjkiLz4KICAgICA8cmRmOmxpCiAgICAgIHN0RXZ0OmFjdGlvbj0ic2F2ZWQiCiAgICAgIHN0RXZ0OmNoYW5nZWQ9Ii8iCiAgICAgIHN0RXZ0Omluc3RhbmNlSUQ9InhtcC5paWQ6ZGNkOTA2MjMtOTYzMi00OGY2LWI3NjYtMzk3NTE1NTY5Nzg2IgogICAgICBzdEV2dDpzb2Z0d2FyZUFnZW50PSJHaW1wIDIuMTAgKFdpbmRvd3MpIgogICAgICBzdEV2dDp3aGVuPSIyMDIyLTA3LTI2VDEwOjM5OjM4Ii8+CiAgICA8L3JkZjpTZXE+CiAgIDwveG1wTU06SGlzdG9yeT4KICA8L3JkZjpEZXNjcmlwdGlvbj4KIDwvcmRmOlJERj4KPC94OnhtcG1ldGE+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAKPD94cGFja2V0IGVuZD0idyI/PpOuRqEAAAAGYktHRAD/AP8A/6C9p5MAAAAJcEhZcwAADdcAAA3XAUIom3gAAAAHdElNRQfmBxoIJyaHll/0AAAAgklEQVQ4y2NgGBkgqu+YMi45JiI0GzMyMhwly4CY/uOejIwMBxkYGMRJNiC671jUf4b/GxgYGLjxWYLVgNgJx8sZGBmWMDAwsBHyIhOlAYzVgMUFlp0M/xliGBgYfpHtgqVFVssYGRgDGBgYvpLthSWFltv//2ewZ2BgeEmzhDQMAADp6x1bXTBTSgAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/shared/collapsed-dark.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAA3XAAAN1wFCKJt4AAAAB3RJTUUH5AoNCwocG2BobAAAAHlJREFUOMtjYBi+YP36bcrEqGPCLfP36Pr1W4zJN4CBQZyB6f/B9Zs2eZJrAAMDAwM3w3/GDRs2bI4i1wAGBgYGtv+MDEs2bNpSTq4BeAELEWp+Mf5nSAzw91lGjgFfGRj/hwb4+20nxwUvGf4xegcG+p6laUIaBgAAk1kg6zuyVSkAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/shared/maximize-button-blue.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAwAAAAMCAYAAABWdVznAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsEAAA7BAbiRa+0AAABLSURBVChTY/z//z8DKYBx/YnH5168/24I5eMFEoKc55mIVQwCYLXTt98i2k0gtUxQNtFgRGpgXHPs0fHXH39YQPl4ASjiSEwaDAwA374gqW1irpsAAAAASUVORK5CYII"},{ name : "styles/main.css", data : ""},{ name : "haxeui-core/styles/shared/folder-light.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAADX3pUWHRSYXcgcHJvZmlsZSB0eXBlIGV4aWYAAHja7ZdRlusmDIbfWUWXgCRAYjkYzDndQZffH7DdydzkNHOdt9aMERZYCH0CZ9z+15/d/YGLvXgXolrKKXlcIYfMBQ3z6yqzJh9mfTz4s/Ggd1cHQyWQsh4tHeNPPfkHS1TQil8MWT06tseOHA779s3QMZEMjxiNdhjKhyHh1UGHgbKW5VM2/bqEbV+ynSuxdbtR9TMmusT356CIXouYR5h3IfGoWcJyQMbNTgoahJok82gZ2gG6gu58eIKAPIuT/+KV+07latEL/TcokpbeQfEYzHTJp3qKz4PvZoi/zCz1mvlBX7Zriocgzxj3Zq73fa2uhISQpmNR51JmCwM3hFzmawlFcUe0dZaMYg7ZW4G8+eo3lEqZGFg6BWpUqNM+ZaUKFwPvrJDMlWXqTJQzV2wRcAqjUGeVLA3UWCrwCrR8+UJz3jynq2SYuBFGMsEYLfz8mfLSUO8j5Ym8XbGCXzw2BdwY5EaNUQBC/cyjOAN8lu/X4CogGGeYDQssflsmtkhHbo08kglaMDBCrr1G2g4DCBHmjnCGBAR8IomUyCuzEiGOBj4FhgybhjcgoBi5wUsOIglwjMfceEdpjuXIS40zCyCiJFGgyVLAKuBgQ/5oMORQiRJDjDFFjRZzLElSSDGlpGkcfkVFg0ZNqmqatZhYsGjJ1MxZtpI5Cw7HmFPWbDnnUjBpgeWCtwsGlLLxJlvY4pY23WzLW6lInxpqrKlqNVdzLY2bNJwTLTVt1nIrO+1IpT3scU+77rbnvXSkWpceeuypa7eee7mokVtYfynvU6OTGk9SY6Be1PCq6mmCxnESBzMQ40AgroMAEpoHM28UAruBbjDzmbErIsPLOOA0GsRAMOzEsdPF7h9yD9xcCLe48UnODXSfIOcGuhfkfuX2hFobX5vqxU1CYxuOoHrB9sOA3QpbGR+1t6X76Qv/G3pT9pLTbLZQD6V7NTp5jhTw52vPaWGsodkr2+4DzryxtDAEZ3vDKfcBZ35vaW/HCIsoaxHW6lu+/Au1n0p335cl3YcSexm658uS7jPMenb3fflQHp1hcfd9uZ1Hj4jcfV9u5NGzdHH3ffmtPHqduu6+Lz/Mo6e+/Jc/kB0/V/BvqPsb0xrN2E54p04AAAGFaUNDUElDQyBwcm9maWxlAAB4nH2RPUjDUBSFT1OlIhWRdhBxyFA7WRAVcZQqFsFCaSu06mDy0j9o0pCkuDgKrgUHfxarDi7Oujq4CoLgD4ijk5Oii5R4X1JoEeOFx/s4757De/cBQrPKVLNnAlA1y0gn4mIuvyoGXuFDCEOIQpCYqSczi1l41tc9dVPdxXiWd9+fNaAUTAb4ROI5phsW8QbxzKalc94nDrOypBCfE48bdEHiR67LLr9xLjks8MywkU3PE4eJxVIXy13MyoZKPE0cUVSN8oWcywrnLc5qtc7a9+QvDBa0lQzXaY0igSUkkYIIGXVUUIWFGO0aKSbSdB738I84/hS5ZHJVwMixgBpUSI4f/A9+z9YsTk26ScE40Pti2x9jQGAXaDVs+/vYtlsngP8ZuNI6/loTmP0kvdHRIkfA4DZwcd3R5D3gcgcYftIlQ3IkPy2hWATez+ib8kDoFuhfc+fWPsfpA5ClWS3fAAeHQLRE2ese7+7rntu/Pe35/QBP4XKZ9Ef7VwAADRhpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+Cjx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IlhNUCBDb3JlIDQuNC4wLUV4aXYyIj4KIDxyZGY6UkRGIHhtbG5zOnJkZj0iaHR0cDovL3d3dy53My5vcmcvMTk5OS8wMi8yMi1yZGYtc3ludGF4LW5zIyI+CiAgPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIKICAgIHhtbG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvbW0vIgogICAgeG1sbnM6c3RFdnQ9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZUV2ZW50IyIKICAgIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIKICAgIHhtbG5zOkdJTVA9Imh0dHA6Ly93d3cuZ2ltcC5vcmcveG1wLyIKICAgIHhtbG5zOnRpZmY9Imh0dHA6Ly9ucy5hZG9iZS5jb20vdGlmZi8xLjAvIgogICAgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIgogICB4bXBNTTpEb2N1bWVudElEPSJnaW1wOmRvY2lkOmdpbXA6NmIwMzEyYjItZDE5YS00NTc2LTlkYjAtYjVhNTNmZDRmMjA1IgogICB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOmEyMTJiNWZhLWNjNjgtNDBiZS1hZTA5LTA3NmExZjU5NGY4NiIKICAgeG1wTU06T3JpZ2luYWxEb2N1bWVudElEPSJ4bXAuZGlkOjIwMmRiNTQzLTYwMGMtNGUyYi1hNDM4LTcxOTZjMjI4ZWNlZSIKICAgZGM6Rm9ybWF0PSJpbWFnZS9wbmciCiAgIEdJTVA6QVBJPSIyLjAiCiAgIEdJTVA6UGxhdGZvcm09IldpbmRvd3MiCiAgIEdJTVA6VGltZVN0YW1wPSIxNjQyNjE0MDI5ODk2ODExIgogICBHSU1QOlZlcnNpb249IjIuMTAuMjQiCiAgIHRpZmY6T3JpZW50YXRpb249IjEiCiAgIHhtcDpDcmVhdG9yVG9vbD0iR0lNUCAyLjEwIj4KICAgPHhtcE1NOkhpc3Rvcnk+CiAgICA8cmRmOlNlcT4KICAgICA8cmRmOmxpCiAgICAgIHN0RXZ0OmFjdGlvbj0ic2F2ZWQiCiAgICAgIHN0RXZ0OmNoYW5nZWQ9Ii8iCiAgICAgIHN0RXZ0Omluc3RhbmNlSUQ9InhtcC5paWQ6YmQ3YTVjZTUtNjE4Yy00MTE0LTg5ZWYtNTg5ZmMxM2Q2OTJlIgogICAgICBzdEV2dDpzb2Z0d2FyZUFnZW50PSJHaW1wIDIuMTAgKFdpbmRvd3MpIgogICAgICBzdEV2dDp3aGVuPSIyMDIyLTAxLTE5VDE4OjQwOjI5Ii8+CiAgICA8L3JkZjpTZXE+CiAgIDwveG1wTU06SGlzdG9yeT4KICA8L3JkZjpEZXNjcmlwdGlvbj4KIDwvcmRmOlJERj4KPC94OnhtcG1ldGE+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAKPD94cGFja2V0IGVuZD0idyI/PhbZGncAAAAGYktHRAD/AP8A/6C9p5MAAAAJcEhZcwAADdcAAA3XAUIom3gAAAAHdElNRQfmARMRKB1QuojKAAAARUlEQVQ4y2NgGPKAkYGBgWHWig1n0ISfM/z/Py8tMmA9IQOYsAv/l2RgZKietXxjKpkuIA6kRQSYMFEaBqMGDAsDBh4AAD+qEAAUuqhbAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/shared/help-large.png", data : "iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAATpXpUWHRSYXcgcHJvZmlsZSB0eXBlIGV4aWYAAHjarZppdhu7koT/YxW9hMIMLAfjOb2DXn5/gSrSsiT7+t1nTaSKRUwZGRkB0Kz/+99t/oevGEMxIeaSakoXX6GG6hpPynV/tfPXXuH8PV/+eYn/f7pu3i84Lvkfd5b03P+6bt8N3A+NZ/FDQ2U8L/SfX6jhab98asg9I9OI9Hw+DdWnIe/uF+zTQLundaVa8scp9HU/ztdMyv1r9CeUn4f95f/M6s1IP9655a2/+Ot8uAfg9euMb+eJ/hZutHw3fv258poSC/LdOl0fRmU+R+X9zP7i+qeg+HRfN1z4eTHT+/Hb6zZ+uv40aM4Sf8TJePf80/XUXmH4eZH1u/csZu91z66FxJKmZ1KvqZxn3NhZcn/elvjO/Eae5/Nd+S4G9A76mte4Ot/DVusIy7bBTtvstus8DjsYYnDLZR6dG86fa8VnV93wINv6oG+7XfbVT1+I4SC8nqvuPRZ7+q2nu2ELHU/Lnc7SmL3D7/7O9y8b2luQt/Yq77ViXE5JwTAUOf3lLkJg9wtH8Szw6/vzl+LqiWA8y1yYYLv63USP9sGWcORPoD03Rh7vINs8nwZYIvqODAbUB3sl66NN9srOZWtZx0J8Gg0VksZ1QmBjdJNRuuB9IjhkDH3znmzPvS66+zKcRSCiTz4TmuobsQoQG/jJoYChFn0MMcYUcyyxxpZ8CimmlHIS+bXsc8gxp5xzyTW34ksosaSSSzGlllZd9ZBjrKnmWmqtrdFpo+XGuxs3tNZd9z302FPPvfTa2wA+I4w40sijmFFHm276CU/MNPMss8627AJKK6y40sqrrLraBmrb77DjTjvvsutu76hZc4f1y/efR82+ouZOpHRjfkeNt+b8asKKTqJiRsRcsEQ8KwIA2ilmV7EhOKPQKWZXdWRFdIwyKjjTKmJEMCzr4rbv2P2I3E9xMyH8V3Fzr8gZhe5vRM4odL+I3Ne4fRO1qWozLm9OhJSGWtTLk37csEpzpamo/fGj+U/f8JcaYm1C2FeNe/WZws4xdR87lGlCSeCBwJDOTG0Wu6ONs2wmOVyvpDHPWKW0+167B0jepdMgFDx3sN1l1t/EXOO0CzoAYPUKizLr0QGruD7b8Cl6v1PdnVVfu3pPmFj/0WfdmyDu3Me04zLvnpPf6ndk9ZtPvwyrxOyb8mGPe5STkJ33hJlbngx+7ll9MWkN3ulL34zP+knwB0DK+9vWmeRpn7qkHrj+9DCNOiDkrw5C3omk6N3vzm2zzVLX6mv5MWjUxrH6WTW/SZC98+zn/db48HQeX4v6cXJ9ejBFoy5fk1WZy37beNvmu9b/TePmR+sJUGxeWixCaj2T725cJNAC8oX7fB0s4rh2YHHaTnnGPnxPtY3YTJt9jgATNNfRZqS7xoC2oqrP1G2/x15ZGAaep8aYZzsLTz0ZubTRUlxmeqI3c++Mfy1ww5vpDPTltTMkNUY6uN7X2Kn8EvPmn5NDg1ClSLPtJZZoczIFF1K9LD/QEFlhbL1nQfjJHdZow1y+2PyaBmt/cFPbmg350GZcdnBjWb7tsqhxLo5uWL3Sh6vLAvcJm4eaVlst9QQZljDSFcIYpE7npnXlBkEGDbgvBo1K4ie7YAj8iq3PzELV7MfOVzu3Jcj+PEOS/cMj/N/M8n3EfI8nZ0wFo5mseILLS4DNifW4SGpvF5FvrAC0nnxchUo/fCX3bY8X4ffN+oUh4Rf1FFcdtEvAtT4Q8YRWp/L/pJGdC1awafbgZnSOBL35wyxr3wTS/UWvWgVYgt/VNf8e6hqAD3WYomtrTapgO1FdCPQHEea3dLiDV+ibbaKKOWMbMw2q22c6rMFs2h5XgxY3s1sMxneKrPjDLyUftZfAD6nYmNscNEjgR9aMrkZ07IQR0g3I3ag5i8Lk5r8tAObTBaJ3eThrwMNkRaOGFWZQGQAyrONQ6A2J55JKd3gnsTNth7WLaGG5+rAgIzwEgvpbnVzrK2TWV2ogdkqy1r6sa/XOu2GbEm0wlIxBUiASQ5RJ+PRoVwX07jW21kb/MDiW8jU4EyvViXV3vbuGvLHU9p1ASdEPeEOrbOQlQ+Nn10XVP53A8KX86NY8T2IpboAk3r7KkD0rCyWwp81cRMfC4AVVUmmTyBNvxBVvuKDEyRwtfETKxnS5SazzzH7ncUjL7XbBlEQ68E4GGjLLQX3BgiirScaalO+2kdrL0AGJhSYb2435VCzEETI5tTKAXaaiUB+FKXEJQYG0yfshlVOhJf74bYaTyEkN53lVhMuKVaTf8RCsXCz8H2jFkWmbISDoFhD2Lp32ZZbvkoE8JlvQBZAQRilNqJz5FZjrPT4KHh484YbOvR24xTTHYOlHwgk7uNFjjkkhzB8VA+bKITL+FVRGcxD5lyweu6CE0YJKOP7AiyOA3GLlbMUDxlQp2UHVadmK+6BsZ6t8KTPtluNCZV59qE74a9asBlEZ1IgJF6Inlk825rBaNrWWgoVclcKHpbvZsZf1DT2+ONCJA/tPHKhNlq8kyA0j1WDHN0TY9kcevJGJbc3TtPIlOVhcyKRqqavNDAR5xpro/8MpjldzCwyfaHsXqbB+QCOlo8bJmjdUDzNTS1nnUAtCANwENFrOVZI9uhVGIfErzn4WJf8maq4ON8NK5AgCDDghmqFmHzZMrNVvXvM7rJWVa1/XrmfWyVhyg4IxqZnwBuIZYDXaSCwDQJUmQf2Dgaz6FgSC3NwkWISq+5K9JUpEDdDyIqNOOy1QiHNA5dsyMp4knToYZteXR2I5eYMrMq+IsLsgggRkmfEyoOlSMH3tYXQbKuSF8K9QCixSlEpX2MmJaMrsa9u8ml3ImrUoSghUNHKf4QitHuPMd1qTiAgyVvNO+QhUedMF1KsdY4HriLFC2zJs7mfhvAjMIkYbBqtioTuwJ1uU4w0g5YNe3ApuJlM6JJFwNaPFAwJqHOm7AgEWz1zNEOHsqTCRESWoAD0NL8OnVlPPSVzfImxE8rScfKe5Cpnl3RJFLl9uwCIhmaDyu/FYq6AhGQRrCofYFMlTEi6GsOgFpV7sOCBNaI6CVmoAPkLLcHUt21SWA7ZBQGLX7pK04IvxuXwJ386jBgom5Ej2SAU5NQfeytUUQpYWUHTyc+Qg2ZvDds25QMyu5IT48haVQxain7sL+CUfe4IPu1FRccEhD6CImtINejKRgt6TbZAacWTEAc7eNWAHZTPtXjOR6w9djCjF9gI7So78OgRKMZ0S/rkxm4WdJaQbL4PDX1wIyfZyl9KY7lJqwBk5iYxD2hzNiNRt5BTCCNpZcTf3SLgJesbXTDuKxTZD0OgE9tzaaYCmG3Iz1wUrI9yhjD6lqyxKdNIahICYJfnB4ng8maUcRzMqofRYKYo4A0ZJFsBEhQbLZCU1YwvW8kEO7LRTEDZuTToODbxHjHI5BicsP+bXTkc4iLROgaRK84zi6jy4olpLxVNutgzacKpxYM2HqW3jvM2k8A908cyuwo3bo4/XbtbaIBIgozEF8SIG3EVJk0kouSWkpid8y4KP5lo1fiWCPQN6rRZCO9114uZl5xxShcLC+qOb6AEy5M2lI0FY1hO3Y48pb4aXUkti1Cm9uR7Pvyv6u0mg4icPIJAVh7wjMyevGHunftPG2Z1oGD9qNoy9RHNPH+SSl9gavcZGMoMGsBdRHWTIk0a415/Enrn1K8B/Mgl/dGfSKncmwaQyqfK58MXeLFw6xRznbzU6r5WlZKcbhvBe2eQY80CuopHWk8Jgk0n+SF4ZuCN81Gm2d6dtmrvXFt+9qqCp11POppVA9hQcKIzSCbsT/prFNqTjPYiaVynm6TaM7f9ICSMKkUF4h1YsjArfntoTTFGqk2fcJBXpbXbID7ih2CZY0N26Qr3OyJvDU+LtKBbUnRbQTqQDkgNV2yhAheygUakdQDS0r4xXo7ZedTbYkcSjwPVMTl5lgDsmmhph3rVCSK5CuWapIidqdmsqCbgV9EUNKDvXYbWA5JJWqbK2tJKxw1jiQoZQgHvrdlJvTviRKS050o/RVKonmUS1aDYk7bUNkkLEWaYrBBlVMoODFLRE0QJ8lqjC2ZchJmtHqqP0CZUCUUE7xMRF0oBSfTQKGe7uJzqCeR4P0VkZeojOvExDeEwD8BXRfULode0boQeftUr4af8kIgQyZWR3M2gj5ac7zB6M+u4zn8Y/k2t4yPXhVnUJQs1+AVTwVI8PNlnDCCQXXjLW7fYZw+g7hKfPlsDvj+maT/N+HpNEPQNl2ZD+Ea9akrUCScHoBUTYqQvgH5nTUfDNoFFRkU52dd4FV0i6p3EhaLiPzEfYxrPVkXByGhkrhg0GIU376VRAg8eDpiX3E4VjiSx3zogFJJY2UxoBR6TGKI1zaVHwB5bc9ZLiER9+gWAr6VeKBy9WxyLQM92CS+EGVyYYwYrInhi07TQwWScAoKchRJNOSrxMzjAYgjSAF06tnHaQsREavNaUEKsTOVOHTlVG9HjJpsw68HS4E9gV6y3kmjHdn+xhgHsM63xVYRDFamN8qML7VGHzEZ3fgJPpqOKSBgheNJX4iPFSCevT/4oDorrM7+p+/8O6L2ia/6ruf3g0Gk3v+8oS16wydRmXAdLnhVI62ifKrqpuU1oHZesi5BABaeUAp6R08ROG7DHVe6P1V7U9awt+XAgiyWhosoM8qIl0UuDQYDsT/qs0e8ke+SyKomBtAl4YSHJIySsL0ddtchhV3X6X5aPHkV9lX7GdvDZFybwQIDZT5wNvx/9YFGCFoFADSceFheFXJBkjTR1fz4yI2+ImCnK26LhugpeXDM+akkr1nzfE3qB6IEXksrlX5Y2rz7AixlEL/4+QMh8w9YIUw6IM92CbFzIixktFgNTAFzrZesqwZH8+3CVfF5MpHg8jY1dQxRVCh09K0Gm2jB3ihmGS7uXe1Xkg63Y8kJ1Hql5Adhl4EO9BtenUQO37Zqocy010KBVH6XeU8VMDcl+4v++2dsxPezzJzbPVMvEDBCNCXdroJyM0LhxPPvs/EVkSpzQ7hDKytkKWsRE9YOfU1ikuWtuvDkBQHsioiJjFgUW8cb5ih0atbWc7YTvxLWj3hdnAZCZS5BcSH8FJaswlSp9ajQbxw9PaoAjgoyOKaiykbYXcUpJ3KngDxDGlPhdDfKkYPniuabcKCmdIOn5nTqGofk74kyxBsZSMQASLVIJEQ1Epgay+Ash2WkjuZX09zkO6J3cA6zYvV4f97mjbpwIhRsaXgns/mh8VKORSGPRj9Eklkuk2+iQJJtE+W/VicWHbOikS5ob+yhkLQb8o5RHsVWTZ8719AU/F2W/ZeO9IkBLakcj3joSEo0XXbOBORfJGm3p7DUQjVRbYk7goPzRwj609tDYC/vZzyvm5u+ZrJ4uyLYCUVGzUQQyfdL5zsntyfFE7sWcH3snyMQe1jgixrz12+QgYI/NjDj3cIhFX8cvDgU0i4Q4JxEHhlo3YM0QMMpNYthrYa0kWIghTKNotx5pfylbtCvqedaRZRveHvihueTToCyCGhZLHjDrKpw6hSgAnDizqAp7WXmjEXXY+9FFbb6qB+ADtH2FCXUQp8I59SNWWc+gDjuoSKaIbh5BWXYjhCrB6liVi4TusmJVajBlh6EFoVbymFV9TMh6QmQzLaJfqe5jxyBQc9QRCtGRC06Gfm0hZbdKzrnXqcz/OGi+6ZiRk3u0ppXy2tooXhnSkqS3bs0vr8Jek4iPtotTGh27NZ32pYrGupK2Ro+N2Oj7XkeiFyppQ3U6Me6VRceyTdNcBSjXH6LaPRrdIm7t9hhW7tovtsFX78pJXqDg31yo7CZnjaOExYzEbW7rWL5coOpxiJP0HzFYwhWEk7YQjnY/t0On6oUUTxrfeRU4P9kdBaGMxL31wRST1OLWTcq+EmxPcGxCGwkNVtahTKqBaStXHKmxh4Z9dkZMiTE17lZfmvDXn95Y9fpMRdXnpszH5uy37N63juW1ABTxHNRE70gL6w1gRWtGB+OvA6pQr3P5y7hz0wZZr6owsS2acbfvkQUBClqB/z2GOUoQqMDPVXIc52JZ5tli17c7CjHtXlsSYaUkdaleWOEOw7WzKunJvj+VkPOGz2o49O7JLRwXueNpWSAH3i6OCr4/m0wXLaLL2iM9orrNHLNi559wuvFF3Tqy0DNoZ7sOcM4v1bA1bpCTlW864bFgWxavz7I0svrfln2PE9mxJqxbCeNAiSRsT4l4bYfrwhhMIBybyKfrDHY0BcJKN2p3DDW/tUSBfLhLzyq/NaPNHQf/NOY4QynTksqkEX4cOPThKSLyPhTvSpmNmdSpcGbqyZ2UIOB2oam/YAIlKiYr3wfMkvzHD5+A5jlptqM+29almid5xrV0nxz143M+o+hSOzo6q4HR2lvRRAlA/JYTPeT9kdM77Zztn4uU572/PeX+Z93k//HbO+6/7vJ8CkW41BMMgvHV+QL2rOBcqFhxX9+96WOZ08Kl5fWDhuj+woA00HfAnYK9N/F82bb62/e+aNt8M+/m4wPeNnw9afNO4+dXA5yCGEEAP2oOMSbHxVWZwuAvdVnCc/EJCKhgjm0MWV6AfucxjQOrTSyZjcB3VbZQvHKCP+MCg1DH85UVHARN6PfkPjqgWAMonJF04cctZCrRhmi6pUtKCGUInc4VHJeCOP3+IwPydj+j85YZY+VnN/wO4TZW3nH6X5gAAAYVpQ0NQSUNDIHByb2ZpbGUAAHicfZE9SMNAHMVfU7UiFQcriDhkqE4WREUEF6liESyUtkKrDiaXfkGThiTFxVFwLTj4sVh1cHHW1cFVEAQ/QBydnBRdpMT/JYUWMR4c9+PdvcfdO0Col5lqdowDqmYZyVhUzGRXxcArBAQwgFl0SczU46nFNDzH1z18fL2L8Czvc3+OXiVnMsAnEs8x3bCIN4inNy2d8z5xiBUlhficeMygCxI/cl12+Y1zwWGBZ4aMdHKeOEQsFtpYbmNWNFTiKeKwomqUL2RcVjhvcVbLVda8J39hMKetpLhOcxgxLCGOBETIqKKEMixEaNVIMZGk/aiHf8jxJ8glk6sERo4FVKBCcvzgf/C7WzM/OeEmBaNA54ttf4wAgV2gUbPt72PbbpwA/mfgSmv5K3Vg5pP0WksLHwF928DFdUuT94DLHWDwSZcMyZH8NIV8Hng/o2/KAv23QM+a21tzH6cPQJq6Wr4BDg6B0QJlr3u8u7u9t3/PNPv7AXylcqvSRSQ9AAANGGlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4KPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iWE1QIENvcmUgNC40LjAtRXhpdjIiPgogPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4KICA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIgogICAgeG1sbnM6eG1wTU09Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9tbS8iCiAgICB4bWxuczpzdEV2dD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlRXZlbnQjIgogICAgeG1sbnM6ZGM9Imh0dHA6Ly9wdXJsLm9yZy9kYy9lbGVtZW50cy8xLjEvIgogICAgeG1sbnM6R0lNUD0iaHR0cDovL3d3dy5naW1wLm9yZy94bXAvIgogICAgeG1sbnM6dGlmZj0iaHR0cDovL25zLmFkb2JlLmNvbS90aWZmLzEuMC8iCiAgICB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iCiAgIHhtcE1NOkRvY3VtZW50SUQ9ImdpbXA6ZG9jaWQ6Z2ltcDowNDgxMjRiYS0xYzdlLTQ1MGMtYjQyOS0xOGFhMWJiNTg1MGYiCiAgIHhtcE1NOkluc3RhbmNlSUQ9InhtcC5paWQ6YWY0MjZlZTQtNWY4OC00NWJhLWFiOGMtYjgyNjg1NWI4MjRiIgogICB4bXBNTTpPcmlnaW5hbERvY3VtZW50SUQ9InhtcC5kaWQ6NGJiN2FlYWEtYzM2Ni00N2RmLThiYjEtOWIzNjE1OGJiZTZjIgogICBkYzpGb3JtYXQ9ImltYWdlL3BuZyIKICAgR0lNUDpBUEk9IjIuMCIKICAgR0lNUDpQbGF0Zm9ybT0iV2luZG93cyIKICAgR0lNUDpUaW1lU3RhbXA9IjE2NDQzMTUxODM4MzgyNzYiCiAgIEdJTVA6VmVyc2lvbj0iMi4xMC4yNCIKICAgdGlmZjpPcmllbnRhdGlvbj0iMSIKICAgeG1wOkNyZWF0b3JUb29sPSJHSU1QIDIuMTAiPgogICA8eG1wTU06SGlzdG9yeT4KICAgIDxyZGY6U2VxPgogICAgIDxyZGY6bGkKICAgICAgc3RFdnQ6YWN0aW9uPSJzYXZlZCIKICAgICAgc3RFdnQ6Y2hhbmdlZD0iLyIKICAgICAgc3RFdnQ6aW5zdGFuY2VJRD0ieG1wLmlpZDplZTAxMWY0Ni05ZTJmLTRlMDctODNjZC1jZWJjNjkzNDQ5YzIiCiAgICAgIHN0RXZ0OnNvZnR3YXJlQWdlbnQ9IkdpbXAgMi4xMCAoV2luZG93cykiCiAgICAgIHN0RXZ0OndoZW49IjIwMjItMDItMDhUMTE6MTM6MDMiLz4KICAgIDwvcmRmOlNlcT4KICAgPC94bXBNTTpIaXN0b3J5PgogIDwvcmRmOkRlc2NyaXB0aW9uPgogPC9yZGY6UkRGPgo8L3g6eG1wbWV0YT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgIAo8P3hwYWNrZXQgZW5kPSJ3Ij8+hvrXawAAAAZiS0dEAP8A/wD/oL2nkwAAAAlwSFlzAAALEwAACxMBAJqcGAAAAAd0SU1FB+YCCAoNA5KNg5EAAATXSURBVGje7VlNTFxVFP7ue2/ewAwzU35sy0AKQ1uQYGkFaUrSmApx0VI3JkVXutBIpFiNJl11MYm7Jm5qLSHpThdaXbhAGklTW3RhS0si+EuQIfwMOu1AmT/m793jQoK8MnXeH6NJObv3ct8933fPveec+z1g27bt8TZmySxXSKhZilYJHLUE5hWACgJKAMhrI9IERAGEBVCQgwIzIfcC/Iz+UwJ7P0p4iPE2gJoJcOv0HCHOxiVFuD11xhEpKIF9F6JORUIHgEMARJOLqBAwluH0zUKfO7HlBOouxQ4Q6ASAYou3c4IIQzOnXT9uCYHWARKXlFgXgJYtPpR39oRKhm74GbeMgHeAbEVKtJvA9hcot0ymROfnwR6WyTdS0LLyhQUPAFRvV+KnjvlJME1gSYl1FRb8PyRmdsaOmyJQ1x9r3uo9n2d/t/n6o02GzkDVxYhDFlgfAIdWhwID2qtEPO+T8FSFAI+dQRSASIowuUz4di6L4UAWqay+7GQT6eJkT+4UKz3qK1lgnXrAe+wM/qN2tFZuDmpZMcORYoYjXhkvNUo4dzONmRWudWpHRmHHAAxp3kL7LiTca0VKk4kCcL5Dzgn+YdvjFvBBpx1uWVcJaqnuT7g1E+ASP6ynwp7cK6GxXD1c4cDYHxzfBzkSGXXL84SDobtR0kNAkoi3aSPgJ0aMmvXM3lmrBp/lQN9wCu9cS+Ls9SReGUwimlaTOFqtrwMRQAdxZXNa3fSiZne0GqSvMfPtUE8zMqvgp/vK+nMoThiZVVRjKl36uhgC3L5wpDIvAYGjVm+689jVYOajmw9oLGNFWmW+vFmIEfOSzhbv2U/yN5GHdqnXKvCA6yZAYN68EeAM5VYXpO4nJTSUqV0N/a4Ymao8LwEGuKwE/8J+Cb2tsurdREjB4FQWBkLg0pJGZavAH68T8d5hGcKGLbkQ5Tg3kgY3dpmUdTdzRq2pQsTZdrsK/FyE4+1rKSwnyTI/uQikrZj4jacliBvA/5kg9A2nEIqbAp/OS2BNPTBlThtD8051oXr/u7T5lWebseWKQNgsgRqPoFr9xRjHeEgxH1bCfQ1ZiIJm/ZTY1Cs9/cCaPU+gxbyFjEABZlLvur3INRU33QeWxEDeCMyE3AsAVvD/s5Xpe46ghm6UERGbMONJZMCrB2y4fKII5zuKUF9qSbYezyVF5mzKJUW4rUhKu1HV7cUGCa8dtK0/N5TZ8fKXSaxmDZ+FbIaJo5ovNFNnHBECxox6a9mt5l1axFDrMRWFu/Nv5tZPHzlrVubXAcSNeFt8qFgpHAgluFHwiTSnm7pllfnXPavEcNWIx48nMvg1zNdvZx/eSSO8anD7EAb/TfTNmy/rLkVPEvCMEd+lRQyxDCFjvIbdCvS6rppS5qYrSoYY4Rcj3peTZsCzyZpQydcaxK/85h0gm12JnwKovkCa3G+ZpPOL+XctEHcBINjDMjUh56cEjBYA/a2akPMzLeA1R0ClQPRHm0Dogg7VTqPFQfgqcNr1s74G1YBVX14ptqWF5/C38CuZBJ4FcFeBcmO2d8eq/g7bhFX3J9wS8TYGagbg0dvbgOGHbFYYnXvLafgOYs1vVj8x366Il4H51qSP8jVxTN5wk4qAIUxEQYHEwPQ9R9CK36zbtm2Pu/0F+vK8BznSOd4AAAAASUVORK5CYII"},{ name : "haxeui-core/styles/shared/down-arrow-square-dark.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAHCAIAAABLMMCEAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAMUlEQVQImWN8K6PCgAGYMIUYGBhYkk10sKide+YKmtDcM1eYIBSyEMJcCAcuzYjVDQAFcxCadfC9sQAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/shared/window-collapse-white.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAwAAAAMCAYAAABWdVznAAABhWlDQ1BJQ0MgcHJvZmlsZQAAKJF9kT1Iw0AcxV9TpVorDnbwa8hQnSyIijhKFYtgobQVWnUwufQLmjQkKS6OgmvBwY/FqoOLs64OroIg+AHi6OSk6CIl/i8ttIjx4Lgf7+497t4BQq3EVLNjAlA1y0hEI2I6syr6XtGDYXTDj0GJmXosuZiC6/i6h4evd2Ge5X7uz9GrZE0GeETiOaYbFvEG8cympXPeJw6ygqQQnxOPG3RB4keuyw1+45x3WOCZQSOVmCcOEov5NpbbmBUMlXiaOKSoGuUL6QYrnLc4q6UKa96TvzCQ1VaSXKc5giiWEEMcImRUUEQJFsK0aqSYSNB+xMU/5Pjj5JLJVQQjxwLKUCE5fvA/+N2tmZuabCQFIkDni21/jAK+XaBete3vY9uunwDeZ+BKa/nLNWD2k/RqSwsdAX3bwMV1S5P3gMsdYOBJlwzJkbw0hVwOeD+jb8oA/beAf63RW3Mfpw9AirpavgEODoGxPGWvu7y7q723f880+/sBXHpynoD2GeAAAAAGYktHRAD/AP8A/6C9p5MAAAAJcEhZcwAADdcAAA3XAUIom3gAAAAHdElNRQfmCxsJHA1rFqnfAAAAg0lEQVQoz8XRrQoCYRBG4S/slWzbYrII2zabjKa1Gjd4C9a9gb06wSBYDKKoj2VEEX+2iC9MmMOBYWZS+kuQI+8rF1hhjcE3eYiNe7YYvZMr7EJsowSrnuUx9iEsH/gi2AGTG5ziiAuaF5PnOOOEWUIXTf1htzqcLiFD2eN6JbLfP/UK7emlPChzsBQAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/default/rules.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogUlVMRQ0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi5ydWxlIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkbm9ybWFsLWJvcmRlci1jb2xvcjsNCn0NCg0KLmhvcml6b250YWwtcnVsZSB7DQogICAgaGVpZ2h0OiAxcHg7DQogICAgd2lkdGg6IDEwMCU7DQogICAgaG9yaXpvbnRhbC1hbGlnbjogImNlbnRlciI7DQp9DQoNCi52ZXJ0aWNhbC1ydWxlIHsNCiAgICBoZWlnaHQ6IDEwMCU7DQogICAgd2lkdGg6IDFweDsNCiAgICB2ZXJ0aWNhbC1hbGlnbjogImNlbnRlciI7DQp9"},{ name : "images/check-green-icon.png", data : "iVBORw0KGgoAAAANSUhEUgAAABQAAAAUCAYAAACNiR0NAAACGElEQVQ4jbWUTWgTQRiGn2zUkEBOiiIiKBQvIjHgD8kWhxbqwY0KntT6jwhePQkVlkU9evEi6EmkGhEK1Y7eWragBalI8SBKoQcPoh6FNJhE5Bt2w2zI38XnsGwm8z37zbs7k6ILQeiNANeBE8CINeM3sAA8AWZ8pf92VieEQehtAu4AN4B0t4dZfAQu+kp/6ioMQi8HvAbUAJHNOlDxlZ6Px5xIJuLqsLJ0Ok02m5VbucwFobcvIQQuAceHlVXcM5w7eItcThZlpI+D0DMuJwg9ySoYRuY4jpEVOM12CkwemCKTychfReBU3OE4sHMY2cRoxchifvKZZrMZ/zwfC48MKzvMtfbYClXm3j6j1WrFQ2Ox0P7OyOfzlEolIxFSqRTlcjkh+8Ib9LuqLTOlQehtcaJQ27ILxdtMbJwyHYnUdV3GnZsJ2czSQ3upNrkNJoqIQ8USm6OGpaNdoy7b2Nuev8aikTUajV7p/HJMHBGLSwumg5hO2Yv39/vJVn2l151odxhksnQgxTbfWTGyer3eSya8lIvjK70GzNpSKY6lIptevjtIJm/nAfEBMHZ5j2z0q4BkagL/+uMDuR0NZpcfUavV+smEe77Sz+k4HM4C04MquxACR32l/2DtZXylnwKTQN+1dfAKOBbLEkJLut/OtAffgCvASV/pRB5dT+wogt3ydKAAbI3OvlX5uoB5X+nENvk/AP8AMMSufcOtFaEAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/shared/down-square-arrow-blue.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAADc3pUWHRSYXcgcHJvZmlsZSB0eXBlIGV4aWYAAHja7ZdbktwqDIbfWUWWYEkIieVgLlVnB1l+fmzamb7koWdOHlI1ptrCAktCH2A69J//jfADF2+cQlTzlFPacMUcMxdUfDuvctxpi8d9PWy3yp0+XA0MlUDK+ehp9b/pabuzRAU1/WDI62rY7xtyXPb9wdByJDMiRqUtQ3kZEj4baBko57C2lN0+DmHvp2y3kfj5C/M2bjmxUzw+R0P2msKPMHch2XAX4TMAmT8OUtDAuLNkdCR0mJp8aGhFgoS8ytN1ZUQ0ZqjxZac7KleNXuvDI63Iq4s8JDld8qU+kL6mcqT+g+foq8b3+ryfpsL2kP0j+aP5OMaMUZSYkOq0BnUbylFDvx0upmsPsJdAJ2EOOeQsGcUxqyumQtvqtqNUysTANShSo0KD+iErVYQYuQc2VJgrEE2li3HmKpNfnIUGGxg2cVCsB/YofMVCh9u81XB4c3huhK5MMDanw9slvPvCGHMpEG1+5QpxMc9kI4xJbt7RDURorKTqkeBbebwmVwFBnVmeSyQjsftpYlf6vRPIAVrQUSHPNUjWlgGkCK4VwZCAAKiRKCXajNmIkEgHoILQWSLvIECq3BAkR5EENs7TNV4xOrqyMtQBemxmIKGSxMAGqwywYlTMH4uOOVRUNKpqUlPXrCVJiklTSpbmplhMLAZTS2bmlq24eHT15Obu2UvmLNg0Nads2XPOpcBngeWCtws6lLLzLnvcNexpt933vJeK6VNj1ZqqVa+5lsZNGvaPlpo1b7mVTh1TqceuPXXr3nMvA1NtSBhx6EjDho88ykVtYX0qb1CjRY0PUrOjXdSgNbuZoLmd6GQGYBwigbhNBJjQPJltTjHyJDeZbZmxKpQRpE5mjSYxEIydWAfd2AU+iU5yX+IWLN5x48+SCxPdm+Seub2i1uZnqB7EzlU4k7oJVh/auxf2Mj92TzL8qeFd+W3o29A/bGhgBzmqqEiV9YAPbuEwqzjo8VuSTsuJpVs5dHvo5sPeHstzaOGK7bOhrEjCF9OMiMpRDUds8fSIM6VS1HlCfi0rNqW+xpS74GhzRRz4U9l+lNKD6xqqx4EzwWNkeQrFgeIuJ6k+DTV8fSreG0Kq+uK5XTmbIZvfAqmvArlk+J8C+jb0behvGMJpZP6t/AWjs8C1IYxOjAAAAYRpQ0NQSUNDIHByb2ZpbGUAAHicfZE9SMNQFIVPU6UiFUE7iChkqJ0siIo4ShWLYKG0FVp1MHnpHzRpSFJcHAXXgoM/i1UHF2ddHVwFQfAHxNHJSdFFSrwvKbSI8cHlfZz3zuG++wChUWGq2TUBqJplpOIxMZtbFQOvCGKUagARiZl6Ir2Ygef6uoeP73dRnuV978/Vp+RNBvhE4jmmGxbxBvHMpqVz3icOsZKkEJ8TjxvUIPEj12WX3zgXHRZ4ZsjIpOaJQ8RisYPlDmYlQyWeJg4rqkb5QtZlhfMWZ7VSY60++QuDeW0lzXWqEcSxhASSECGjhjIqsBClXSPFRIrOYx7+YcefJJdMrjIYORZQhQrJ8YP/we/ZmoWpSTcpGAO6X2z7YwwI7ALNum1/H9t28wTwPwNXWttfbQCzn6TX21r4COjfBi6u25q8B1zuAENPumRIjuSnEgoF4P2MvikHDN4CvWvu3FrnOH0AMjSr5Rvg4BCIFCl73ePdPZ1z+/dOa34/n9lyuQWiUawAAA80aVRYdFhNTDpjb20uYWRvYmUueG1wAAAAAAA8P3hwYWNrZXQgYmVnaW49Iu+7vyIgaWQ9Ilc1TTBNcENlaGlIenJlU3pOVGN6a2M5ZCI/Pgo8eDp4bXBtZXRhIHhtbG5zOng9ImFkb2JlOm5zOm1ldGEvIiB4OnhtcHRrPSJYTVAgQ29yZSA0LjQuMC1FeGl2MiI+CiA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPgogIDxyZGY6RGVzY3JpcHRpb24gcmRmOmFib3V0PSIiCiAgICB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIKICAgIHhtbG5zOnN0RXZ0PSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvc1R5cGUvUmVzb3VyY2VFdmVudCMiCiAgICB4bWxuczpkYz0iaHR0cDovL3B1cmwub3JnL2RjL2VsZW1lbnRzLzEuMS8iCiAgICB4bWxuczpHSU1QPSJodHRwOi8vd3d3LmdpbXAub3JnL3htcC8iCiAgICB4bWxuczp0aWZmPSJodHRwOi8vbnMuYWRvYmUuY29tL3RpZmYvMS4wLyIKICAgIHhtbG5zOnhtcD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wLyIKICAgeG1wTU06RG9jdW1lbnRJRD0iZ2ltcDpkb2NpZDpnaW1wOjEwZTExZGUyLTA1MjUtNDAzYi05NmFiLWM4NjFkNmYxOWEwYSIKICAgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDplMjljM2RmNi0wYzllLTQ2MDMtYmJiYi0zNGRiYmY0NWI1ODIiCiAgIHhtcE1NOk9yaWdpbmFsRG9jdW1lbnRJRD0ieG1wLmRpZDoyYzQ1M2QzNC02YjkyLTQ0MmMtOWFjYi0xODI1ZjI3NDQ2MWEiCiAgIGRjOkZvcm1hdD0iaW1hZ2UvcG5nIgogICBHSU1QOkFQST0iMi4wIgogICBHSU1QOlBsYXRmb3JtPSJXaW5kb3dzIgogICBHSU1QOlRpbWVTdGFtcD0iMTY3MjMxNjM2MjY4NDI2OCIKICAgR0lNUDpWZXJzaW9uPSIyLjEwLjMyIgogICB0aWZmOk9yaWVudGF0aW9uPSIxIgogICB4bXA6Q3JlYXRvclRvb2w9IkdJTVAgMi4xMCIKICAgeG1wOk1ldGFkYXRhRGF0ZT0iMjAyMjoxMjoyOVQxMzoxOToyMSswMTowMCIKICAgeG1wOk1vZGlmeURhdGU9IjIwMjI6MTI6MjlUMTM6MTk6MjErMDE6MDAiPgogICA8eG1wTU06SGlzdG9yeT4KICAgIDxyZGY6U2VxPgogICAgIDxyZGY6bGkKICAgICAgc3RFdnQ6YWN0aW9uPSJzYXZlZCIKICAgICAgc3RFdnQ6Y2hhbmdlZD0iLyIKICAgICAgc3RFdnQ6aW5zdGFuY2VJRD0ieG1wLmlpZDpiM2YwMzU2NS0xNWQzLTQ4MGEtOGUxYi1kMmZlZTM3NDZmMmMiCiAgICAgIHN0RXZ0OnNvZnR3YXJlQWdlbnQ9IkdpbXAgMi4xMCAoV2luZG93cykiCiAgICAgIHN0RXZ0OndoZW49IjIwMjItMDItMTFUMTM6MjU6MjkiLz4KICAgICA8cmRmOmxpCiAgICAgIHN0RXZ0OmFjdGlvbj0ic2F2ZWQiCiAgICAgIHN0RXZ0OmNoYW5nZWQ9Ii8iCiAgICAgIHN0RXZ0Omluc3RhbmNlSUQ9InhtcC5paWQ6ZGNkOTA2MjMtOTYzMi00OGY2LWI3NjYtMzk3NTE1NTY5Nzg2IgogICAgICBzdEV2dDpzb2Z0d2FyZUFnZW50PSJHaW1wIDIuMTAgKFdpbmRvd3MpIgogICAgICBzdEV2dDp3aGVuPSIyMDIyLTA3LTI2VDEwOjM5OjM4Ii8+CiAgICAgPHJkZjpsaQogICAgICBzdEV2dDphY3Rpb249InNhdmVkIgogICAgICBzdEV2dDpjaGFuZ2VkPSIvIgogICAgICBzdEV2dDppbnN0YW5jZUlEPSJ4bXAuaWlkOmRjNDliZjU0LTYyMGYtNGQ4Ny1hYzEzLTQyYWZhNDI5ZGJlOSIKICAgICAgc3RFdnQ6c29mdHdhcmVBZ2VudD0iR2ltcCAyLjEwIChXaW5kb3dzKSIKICAgICAgc3RFdnQ6d2hlbj0iMjAyMi0xMi0yOVQxMzoxOToyMiIvPgogICAgPC9yZGY6U2VxPgogICA8L3htcE1NOkhpc3Rvcnk+CiAgPC9yZGY6RGVzY3JpcHRpb24+CiA8L3JkZjpSREY+CjwveDp4bXBtZXRhPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgCjw/eHBhY2tldCBlbmQ9InciPz497WXVAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAA3XAAAN1wFCKJt4AAAAB3RJTUUH5gwdDBMW92s92wAAAItJREFUOMtjYBgFAw8YkTlRfceUGRkZjjIwMIjjUP/y/38G62VFVndhAkzIssuKrO7+/8/gzcDA8BWL5q///zN4I2vGMABqyFlGBsZQBgaGX0jCvxgZGEOXFVmdRVfPhM2dSwottzP8Z0hkYGD4z8DA8J/hP0PikkLL7SQHUOyE4+WxE46XjyYVGgMAMSgm4G3z+p8AAAAASUVORK5CYII"},{ name : "haxeui-core/styles/shared/up-arrow-light.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAECAIAAADNpLIqAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAK0lEQVQImWN8K6PCwMDAwMBwfMYEy4wCCJsJLgQnoaJwDpzNuGXLFgYMAADK0A4MJuH53gAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/shared/left-arrow-bright.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAQAAAAHCAIAAACgB3uHAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAANklEQVQImWN8K6PCwMDAwMAg9Pg2E5zFwMDABGcxMDAw/v//nwEGmN7JqiI4DAwMcD7UAAgfAMkKDTd2MVgoAAAAAElFTkSuQmCC"},{ name : "images/update.png", data : "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAA3VpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+IDx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IkFkb2JlIFhNUCBDb3JlIDcuMS1jMDAwIDc5LmIwZjhiZTkwLCAyMDIxLzEyLzE1LTIxOjI1OjE1ICAgICAgICAiPiA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RSZWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZVJlZiMiIHhtbG5zOnhtcD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wLyIgeG1wTU06T3JpZ2luYWxEb2N1bWVudElEPSJ4bXAuZGlkOjc2ZTE3NjM5LTc0OTgtNjY0Ni1iMDM3LWUwZDYzNWJiYmI2ZSIgeG1wTU06RG9jdW1lbnRJRD0ieG1wLmRpZDpEQUI1NEEwM0FBQjAxMUVDODA5RjkwMEVBNEE4QzYyNyIgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDpEQUI1NEEwMkFBQjAxMUVDODA5RjkwMEVBNEE4QzYyNyIgeG1wOkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgMjMuMiAoV2luZG93cykiPiA8eG1wTU06RGVyaXZlZEZyb20gc3RSZWY6aW5zdGFuY2VJRD0ieG1wLmlpZDo3NmUxNzYzOS03NDk4LTY2NDYtYjAzNy1lMGQ2MzViYmJiNmUiIHN0UmVmOmRvY3VtZW50SUQ9InhtcC5kaWQ6NzZlMTc2MzktNzQ5OC02NjQ2LWIwMzctZTBkNjM1YmJiYjZlIi8+IDwvcmRmOkRlc2NyaXB0aW9uPiA8L3JkZjpSREY+IDwveDp4bXBtZXRhPiA8P3hwYWNrZXQgZW5kPSJyIj8+cPrAVwAABh1JREFUeNrsV3tsU1UY/+7t7btbu1aUPSvMAWMPJgsohmiAQEZUHkqA+AfBsKCCMUwiCTMxGjNiSMw0iiBOJSEmLCyMEQWEII6oPBJkDjYRtrl1G3u0t+/2tr299/qdu7Zs3VrgH/mHkzQ999xzzvf7vu/3PS4lSRI8zEHDQx6PADDJCzU1NdDW1jZhTRIEEMIhnFFgnldBqc2W4ryXVs8wWJ/MFnmeoZVKtq+p0caNDN9k/7zqiXhcoFBrgFIoJgmsr6+HioqK1AAuXrwIly9fnnTQsrzKUrB23SZlccnGiMVS1ikIWmBddzcsWUEE3g6UV57pOtRwkD17un0qjVmWTW8BrVY70UdKJSz87KsNBavW1AmhUKEQCoMkCviChnj8UAlTSUW5lQuK8hc997q7s2P/jb17Phy+cN4//j5FklXScmD680uopc0n63JXrDwSYtlCLhAAAd0REkXg8CdiCJMLIqIkP0fwmbiK9/l0xtnFO5/dd/AU3pH3QBwYr3nprtq6rNLy3X6XC+ZlaCFDwcAVrx+WZRlhYaYBpquUwKD6QRTe6efgd48fbgVDoKTIYgDvUC1GEMcvbd9ahZZw3BcACS8D2ez7NqIWuyMeN4hobCL83YLpMBLhwapRT7qoTK+DNdPMcIp1w+EhB4QlERg+QkBUIogD51ZXrff1dIv3DMMomjlr8QuPF6x6ZW8UtUiso3k16PephMeHmqYQRBbUzsjBOQ0CnhERBKPXv/rU5ur195UH1BYLzKp+cwsKz0/nuy409Qc9A1Db3Q/7B0bgZpBLvKvM0MOWnGkyaELUaDAIBavW7mKyc1RiOJweAPpcm1VW/hoyfsI6lbTPqlVDJjKacKLZ7oJdXTZocdwNy5UWE5QadMCjS0keUWZmVszcXL2IzNNyQJ+XP8cvCHNImMWHCuf/oIbvdw/IfJAPItHCeLkhFlZE228GR2GGWg3lGToZMCFruz8YT2aULid3Bf63pgVgXbdhzgjrYsb7XkCZdjGKBPTLrJcS5qMQHJUARKLhpNMtA5CJadCCDsGLMXKjFeYTF6cFgKk1EbfkYLZaCSZmbJsdI8AZFVImDxJ+faEI9HBhGSjLR0GnoMGLZ4hLLU9XPmYushLEUro8kFiLIGoSWi+iP8k4OuqEhjujoKXplACGwhGZD1RMDLGggkowSBGjU2oAmIA8459HwnxiPlunwRso+XT8ShJq/LimRooxWxkDGYdKClPYYQ+GWYMIudmpXeDv6+0CgzHGfAo6A1xC4Fy9FuZn6uGSxyeTjwgneWEWAouDIPuG0VV/Y5iOz/oKJCdWyh6n1w6Q+3JqALbmpg5q81YWC4uFEOwWF4IOBFGKwgnR3s57AgLo0xsxYM5oVA65IgQRH7+5fdDeOwiKJFcpNJpW6l7FiPd5B3mvV95ItCFx/MOwQ9ZWLlCY/+sK82EHpuVl5kwo1GqgNzQxufBT9Jl4n7vv2NGz98yEaCawnWj+ktHppLH0SsM1XwAahuyJPYTZhJi7rTnw8cw8WG42pu16UHNwXW9vdLb+YqM1mvQAaJUK/j38/a9YE45gIYE4iOMYAfX9Q+BGk6canDBWkhlqYt5kdPrR299+/QnwPFBJbpnEAUKW6NAdCUvozme+ODAfTTcbmwAZxGnWA9d9HCxFjRcgGY3MmJt8+L4DyzF5P1OHmRD5QsdAqIwmyXbi2DuDZ071PlA/gPV7yNZybMOs6jdawqzTSrogEv+jqMXhYTs0jjgQACPHuw9JSRoSEu/9WGxI5KhwToT3/3Si5sqO7Y2Y4B68K27f89FfaInlkhC9gGZMpFwChGjoQXe4MdsRspA1IpRw3EUrQG02O1D4pis7tn2eSnhaC8hJBtNnX3PT7bCTrSp9r3abaW7JW1hMCsfehYEShXGuI10wTdjuRcI1tR1q2NP/Y0t3OuFTAuA4brI7Ws9z+PtUW1L2HbbjS7EdrzIVl5RgYTEiIBqFBthLfwxgD3EO88jP2BHfSqlUUjmmkr8NyTeB2+2GqVo1YpE4v7PmVaCZLTpcp5HZAee1q1IEz0mxsKNS1AvyTWAymVIDePRt+H+P/wQYAKQyxgG8xC9IAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/default/propertygrids.css", data : "LnByb3BlcnR5LWdyaWQgew0KfQ0KDQoucHJvcGVydHktZ3JpZCAuc2Nyb2xsdmlldy1jb250ZW50cyB7DQogICAgcGFkZGluZzogMDsNCiAgICB3aWR0aDogMTAwJTsNCiAgICBzcGFjaW5nOiAwOw0KfQ0KDQoucHJvcGVydHktZ3JvdXAgew0KICAgIHdpZHRoOiAxMDAlOw0KICAgIHNwYWNpbmc6IDA7DQp9DQoNCi5wcm9wZXJ0eS1ncm91cC1oZWFkZXIgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICRzb2xpZC1iYWNrZ3JvdW5kLWNvbG9yOw0KICAgIHBvaW50ZXItZXZlbnRzOiB0cnVlOw0KICAgIHdpZHRoOiAxMDAlOw0KICAgIHBhZGRpbmc6IDVweDsNCiAgICBib3JkZXItY29sb3I6ICRub3JtYWwtYm9yZGVyLWNvbG9yOw0KICAgIGJvcmRlci1ib3R0b20td2lkdGg6IDFweDsNCiAgICBib3JkZXItYm90dG9tLXNpemU6IDFweDsNCiAgICBjdXJzb3I6IHBvaW50ZXI7DQp9DQoNCi5wcm9wZXJ0eS1ncm91cC1oZWFkZXIuc2Nyb2xsaW5nIHsNCiAgICBib3JkZXItcmlnaHQtd2lkdGg6IDBweDsNCiAgICBib3JkZXItcmlnaHQtc2l6ZTogMHB4Ow0KfQ0KDQoucHJvcGVydHktZ3JvdXAtaGVhZGVyOmhvdmVyIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc29saWQtYmFja2dyb3VuZC1jb2xvci1ob3ZlcjsNCn0NCg0KLnByb3BlcnR5LWdyb3VwLWhlYWRlci1pY29uIHsNCiAgICB2ZXJ0aWNhbC1hbGlnbjogY2VudGVyOw0KfQ0KDQoucHJvcGVydHktZ3JvdXAtaGVhZGVyOmV4cGFuZGVkIC5wcm9wZXJ0eS1ncm91cC1oZWFkZXItaWNvbiB7DQogICAgcmVzb3VyY2U6ICRhcnJvdy1kb3duLXNxdWFyZTsNCn0NCg0KLnByb3BlcnR5LWdyb3VwLWhlYWRlcjpjb2xsYXBzZWQgLnByb3BlcnR5LWdyb3VwLWhlYWRlci1pY29uIHsNCiAgICByZXNvdXJjZTogJGFycm93LXJpZ2h0LXNxdWFyZTsNCn0NCg0KLnByb3BlcnR5LWdyb3VwLWhlYWRlci1sYWJlbCB7DQogICAgdmVydGljYWwtYWxpZ246IGNlbnRlcjsNCiAgICB3aWR0aDogMTAwJTsNCn0NCg0KLnByb3BlcnR5LWdyb3VwLWNvbnRlbnRzIHsNCiAgICB3aWR0aDogMTAwJTsNCiAgICBzcGFjaW5nOiAxOw0KICAgIGJhY2tncm91bmQtY29sb3I6ICRub3JtYWwtYm9yZGVyLWNvbG9yOw0KICAgIHBhZGRpbmctYm90dG9tOiAxcHg7DQp9DQoNCi5wcm9wZXJ0eS1ncm91cC5sYXN0IC5wcm9wZXJ0eS1ncm91cC1jb250ZW50cy5zY3JvbGxpbmcgew0KICAgIHBhZGRpbmctYm90dG9tOiAwcHg7DQp9DQoNCi5wcm9wZXJ0eS1ncm91cC1jb250ZW50cy5zY3JvbGxpbmcgew0KICAgIHBhZGRpbmctcmlnaHQ6IDBweDsNCn0NCg0KLnByb3BlcnR5LWdyb3VwLWl0ZW0tbGFiZWwtY29udGFpbmVyIHsNCiAgICB3aWR0aDogNTAlOw0KICAgIGJhY2tncm91bmQtY29sb3I6ICRzZWNvbmRhcnktYmFja2dyb3VuZC1jb2xvcjsNCiAgICBoZWlnaHQ6IDEwMCU7DQogICAgcGFkZGluZy1sZWZ0OiA1cHg7DQp9DQoNCi5wcm9wZXJ0eS1ncm91cC1pdGVtLWVkaXRvci1jb250YWluZXIgew0KICAgIHdpZHRoOiA1MCU7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJHNlY29uZGFyeS1iYWNrZ3JvdW5kLWNvbG9yOw0KfSAgICAgICAgDQoNCi5wcm9wZXJ0eS1ncm91cC1pdGVtLWxhYmVsIHsNCiAgICB2ZXJ0aWNhbC1hbGlnbjogY2VudGVyOw0KfQ0KDQoucHJvcGVydHktZ3JvdXAtaXRlbS1lZGl0b3Igew0KICAgIHdpZHRoOiAxMDAlOw0KfQ0KDQoucHJvcGVydHktZ3JvdXAgLnRleHRmaWVsZCB7DQogICAgYm9yZGVyOiBub25lOw0KICAgIGZpbHRlcjogbm9uZTsNCiAgICBib3JkZXItcmFkaXVzOiAwOw0KfQ0KDQoucHJvcGVydHktZ3JvdXAgLmNoZWNrYm94IHsNCiAgICBwYWRkaW5nOiA1cHg7DQogICAgcGFkZGluZy1sZWZ0OiA0cHg7DQp9DQoNCi5wcm9wZXJ0eS1ncm91cCAubnVtYmVyLXN0ZXBwZXIgew0KICAgIHBhZGRpbmc6IDA7DQogICAgYm9yZGVyOiBub25lOw0KfQ0KDQoucHJvcGVydHktZ3JvdXAgLm51bWJlci1zdGVwcGVyIC5zdGVwcGVyLXZhbHVlIHsNCiAgICBmaWx0ZXI6IG5vbmU7DQp9DQoNCi5wcm9wZXJ0eS1ncm91cCAubnVtYmVyLXN0ZXBwZXIgLnN0ZXBwZXItZGVpbmMgew0KICAgIGJvcmRlci1yaWdodDogMXB4IHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOw0KfQ0KDQoucHJvcGVydHktZ3JvdXAgLm51bWJlci1zdGVwcGVyIC5zdGVwcGVyLWluYyB7DQogICAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCAkbm9ybWFsLWJvcmRlci1jb2xvcjsNCn0NCg0KLnByb3BlcnR5LWdyb3VwIC5kcm9wZG93biB7DQogICAgYm9yZGVyOiBub25lOw0KICAgIGJvcmRlci1yYWRpdXM6IG5vbmU7DQp9DQo"},{ name : "haxeui-core/styles/shared/left-arrow-blue.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAQAAAAHCAYAAAAvZezQAAAEOHpUWHRSYXcgcHJvZmlsZSB0eXBlIGV4aWYAAHjazVZbkuwmDP1nFVkCkhCC5YCBquwgy88Rdnd6+nFnbiUfMW2kxlivIwmH+defK/yBi4xSSGol15wjrlRT5QamxPNqe6aY9nxe6aL0dT1Eux4wlgRUzr8lX/tv63QXcJIGTh8EleN60L8+qJdmLk+CLkXiFjGYcQmqlyDh8wFdAtrpVsy12KMLfZ70ev8MQ3HXMPXbql6bn/4nQ/SGQo8wTyGJmFnSaYD4zUHaZnwu2EhSwcueWW4xQUDexSk+WBWeUan8HpU79wSK5HM9YOFrMPOdvl0nfR/8sEP8oFmOu+Yv63ndIvY1yH6vNUpYa57etZQR0nw5dY+OM9jYEXLZr2UMw63gbY+KUQKy9wDkIx6xYxxUiQHLokSDGi2amx50wMTEkw2U+WDZa0WMKx8SA3BKPmixAashBWgdgFewyndbaOutW91BBYoHYScThNEJP/8346OgtTzliWI544S0gF3syQEzHDmfsQuA0Lrlke4A38bz5bgKENQd5gIHW+yniK505ZbnkWygBRsV9Kw1snEJQIigW2EMCRCImUQpUzRmI0IcC/BpEFRQNNwBAanygJWcRDLAQcVAN94x2ntZ+VxGzwIQKlkM0KCYgJU3NuSPpYIcaiqaVDWradGqLUtOWXPOlr35NRNLppbNrFi1VqSkoiUXKyWUWlrlKmiOWnO1WmqtrUFpg+SGtxs2tNa5S09de+7WS6+9HUifIx165MOOEo56tMFDBvrEyMNGGXW0SROpNNPUmafNMutsC6m2ZKWlKy9bZdXV7qhR2GVHL+PnqNENNd5I+Ua7o4ZXzW4iyNuJOmZAjBMBcXMEkNDsmMVCKXFw6BwzZByqQhlWqoMzyBEDgmkS66I7dv8g9wW3kNK/wo1vyAWH7r9ALjh0H5B7xe0NasNPmyNK2Ah5GXpQo6D8slJS0pUyzmBnk/op9Q0NqfWR4ZcajEJGfNiIIDqD0mtc8Huh4fWB6uweeFeANvvhRZxgztQStwMJCXkyD1R6XgQpXTlOII1jdfQJV8eyZnvPudAIzbvmgjBxcPHOPNEyN5M/B+XUAmBrtASLyosM/g3ZUq0P6VFGgOWEcwK9JlpTZO/EdwhWUpEW/SAfP9Jyd+1F3akLadjHrBD7najwS090tFxwA5ualOcQRNy/Qm7iG7pv31rCz+LzPf2/Cco5oDB7ynuuXgJkRkub7Dl5DtPRUkUiip7hf5PCoOF54Q319HDmuBtgvHP8UXT4pYifi9aATEdxWYQj3j/wzTNxhLi3Ph/bt9WL94aB5rjrorzpAeFntf3GtjP1y2z4kMLZED42mN+UHR6FVyDWcDQhpzOAdDDT7ki19oKaw3mB//OtpvAjN54pt50buwUiquMD/K+YfEurBofj0rB9ertx4bRAtoS/AceHGj2Vzz6UAAABhWlDQ1BJQ0MgcHJvZmlsZQAAeJx9kT1Iw0AcxV9TtSIVByuIOGSoThZERQQXqWIRLJS2QqsOJpd+QZOGJMXFUXAtOPixWHVwcdbVwVUQBD9AHJ2cFF2kxP8lhRYxHhz34929x907QKiXmWp2jAOqZhnJWFTMZFfFwCsEBDCAWXRJzNTjqcU0PMfXPXx8vYvwLO9zf45eJWcywCcSzzHdsIg3iKc3LZ3zPnGIFSWF+Jx4zKALEj9yXXb5jXPBYYFnhox0cp44RCwW2lhuY1Y0VOIp4rCiapQvZFxWOG9xVstV1rwnf2Ewp62kuE5zGDEsIY4ERMioooQyLERo1UgxkaT9qId/yPEnyCWTqwRGjgVUoEJy/OB/8LtbMz854SYFo0Dni21/jACBXaBRs+3vY9tunAD+Z+BKa/krdWDmk/RaSwsfAX3bwMV1S5P3gMsdYPBJlwzJkfw0hXweeD+jb8oC/bdAz5rbW3Mfpw9AmrpavgEODoHRAmWve7y7u723f880+/sBfKVyq9JFJD0AAA0YaVRYdFhNTDpjb20uYWRvYmUueG1wAAAAAAA8P3hwYWNrZXQgYmVnaW49Iu+7vyIgaWQ9Ilc1TTBNcENlaGlIenJlU3pOVGN6a2M5ZCI/Pgo8eDp4bXBtZXRhIHhtbG5zOng9ImFkb2JlOm5zOm1ldGEvIiB4OnhtcHRrPSJYTVAgQ29yZSA0LjQuMC1FeGl2MiI+CiA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPgogIDxyZGY6RGVzY3JpcHRpb24gcmRmOmFib3V0PSIiCiAgICB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIKICAgIHhtbG5zOnN0RXZ0PSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvc1R5cGUvUmVzb3VyY2VFdmVudCMiCiAgICB4bWxuczpkYz0iaHR0cDovL3B1cmwub3JnL2RjL2VsZW1lbnRzLzEuMS8iCiAgICB4bWxuczpHSU1QPSJodHRwOi8vd3d3LmdpbXAub3JnL3htcC8iCiAgICB4bWxuczp0aWZmPSJodHRwOi8vbnMuYWRvYmUuY29tL3RpZmYvMS4wLyIKICAgIHhtbG5zOnhtcD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wLyIKICAgeG1wTU06RG9jdW1lbnRJRD0iZ2ltcDpkb2NpZDpnaW1wOjk2N2IxNTgzLWYyOWUtNDY2ZS04Yjc4LWJjZGFjZDFkNWZkNCIKICAgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDo5MzBjOGE4NS02OTVkLTRmZTYtOGVmZC0xOTFlMzIzNzRmYTAiCiAgIHhtcE1NOk9yaWdpbmFsRG9jdW1lbnRJRD0ieG1wLmRpZDo3ODQyMjBkOC0wZTAyLTQ5ZDUtYjVmYS0zNzZiZWViYTNlYTEiCiAgIGRjOkZvcm1hdD0iaW1hZ2UvcG5nIgogICBHSU1QOkFQST0iMi4wIgogICBHSU1QOlBsYXRmb3JtPSJXaW5kb3dzIgogICBHSU1QOlRpbWVTdGFtcD0iMTY0NDM0NTU2MTU2MTg1NSIKICAgR0lNUDpWZXJzaW9uPSIyLjEwLjI0IgogICB0aWZmOk9yaWVudGF0aW9uPSIxIgogICB4bXA6Q3JlYXRvclRvb2w9IkdJTVAgMi4xMCI+CiAgIDx4bXBNTTpIaXN0b3J5PgogICAgPHJkZjpTZXE+CiAgICAgPHJkZjpsaQogICAgICBzdEV2dDphY3Rpb249InNhdmVkIgogICAgICBzdEV2dDpjaGFuZ2VkPSIvIgogICAgICBzdEV2dDppbnN0YW5jZUlEPSJ4bXAuaWlkOjhmMDUxYzAzLTBlNmItNDgwYy1iYjMzLTljMzc0OTY1YjM3MCIKICAgICAgc3RFdnQ6c29mdHdhcmVBZ2VudD0iR2ltcCAyLjEwIChXaW5kb3dzKSIKICAgICAgc3RFdnQ6d2hlbj0iMjAyMi0wMi0wOFQxOTozOToyMSIvPgogICAgPC9yZGY6U2VxPgogICA8L3htcE1NOkhpc3Rvcnk+CiAgPC9yZGY6RGVzY3JpcHRpb24+CiA8L3JkZjpSREY+CjwveDp4bXBtZXRhPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgCjw/eHBhY2tldCBlbmQ9InciPz6o2UKgAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAB3RJTUUH5gIIEicVGwcIIAAAAChJREFUCNdjYEACoV1H/jMicxgYGBgYkTkMDAwMjMgc7CrQzWBAtwUAMwgSdDGUjZQAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/default/checkboxes.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogQ0hFQ0tCT1gNCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQouY2hlY2tib3ggew0KICAgIHdpZHRoOiBhdXRvOw0KICAgIGhlaWdodDogYXV0bzsNCiAgICBob3Jpem9udGFsLXNwYWNpbmc6IDRweDsNCiAgICBjdXJzb3I6IHBvaW50ZXI7DQogICAgY29sb3I6ICRub3JtYWwtdGV4dC1jb2xvcjsNCn0NCg0KLmNoZWNrYm94OmhvdmVyIHsNCn0NCg0KLmNoZWNrYm94OmRpc2FibGVkIHsNCiAgICBjdXJzb3I6IGRlZmF1bHQ7DQogICAgY29sb3I6ICRkaXNhYmxlZC10ZXh0LWNvbG9yOw0KICAgIGJvcmRlci1jb2xvcjogJGRpc2FibGVkLWJvcmRlci1jb2xvcjsNCn0NCg0KLmNoZWNrYm94LXZhbHVlIHsNCiAgICBib3JkZXI6IDFweCBzb2xpZCAkbm9ybWFsLWJvcmRlci1jb2xvcjsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkdGVydGlhcnktYmFja2dyb3VuZC1jb2xvcjsNCiAgICB3aWR0aDogMThweDsNCiAgICBoZWlnaHQ6IDE4cHg7DQogICAgdmVydGljYWwtYWxpZ246IHRvcDsNCiAgICBib3JkZXItcmFkaXVzOiAycHg7DQogICAgaWNvbjogbm9uZTsNCiAgICBmaWx0ZXI6ICRub3JtYWwtaW5uZXItc2hhZG93Ow0KICAgIGN1cnNvcjogcG9pbnRlcjsNCn0NCg0KLmNoZWNrYm94LXZhbHVlOmhvdmVyIHsNCiAgICBib3JkZXI6IDFweCBzb2xpZCAkYWNjZW50LWNvbG9yOw0KfQ0KDQouY2hlY2tib3gtdmFsdWU6YWN0aXZlIHsNCiAgICBib3JkZXI6IDFweCBzb2xpZCAkYWNjZW50LWNvbG9yOw0KfQ0KDQouY2hlY2tib3gtdmFsdWU6c2VsZWN0ZWQgew0KICAgIGljb246ICRjaGVjay1zZWxlY3RlZDsNCn0NCg0KLmNoZWNrYm94LXZhbHVlOmRpc2FibGVkIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc29saWQtYmFja2dyb3VuZC1jb2xvci1kaXNhYmxlZDsNCiAgICBib3JkZXItY29sb3I6ICRkaXNhYmxlZC1ib3JkZXItY29sb3I7DQogICAgY3Vyc29yOiBkZWZhdWx0Ow0KfQ0KDQouY2hlY2tib3gtbGFiZWwgew0KICAgIHZlcnRpY2FsLWFsaWduOiBjZW50ZXI7DQogICAgY3Vyc29yOiBwb2ludGVyOw0KfQ0KDQouY2hlY2tib3gtaWNvbiB7DQogICAgaG9yaXpvbnRhbC1hbGlnbjogY2VudGVyOw0KICAgIHZlcnRpY2FsLWFsaWduOiBjZW50ZXI7DQogICAgY3Vyc29yOiBwb2ludGVyOw0KICAgIG9wYWNpdHk6IDE7DQp9DQoNCi5jaGVja2JveC1pY29uOmRpc2FibGVkIHsNCiAgICBjdXJzb3I6IGRlZmF1bHQ7DQogICAgb3BhY2l0eTogMC41Ow0KfQ0K"},{ name : "haxeui-core/styles/default/scrollbars.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogU0NST0xMDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLw0KLnNjcm9sbCB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogbm9uZTsNCiAgICBwYWRkaW5nOiAwcHg7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJHNjcm9sbGJhci1iYWNrZ3JvdW5kLWNvbG9yOw0KfQ0KDQouc2Nyb2xsIC5idXR0b24gew0KICAgIHdpZHRoOiA3cHg7DQogICAgaGVpZ2h0OiA3cHg7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJHNjcm9sbGJhci1idXR0b24tY29sb3I7DQogICAgYm9yZGVyLXJhZGl1czogMDsNCiAgICBib3JkZXI6IG5vbmU7DQogICAgZmlsdGVyOiBub25lOw0KICAgIG9wYWNpdHk6IDAuNjsNCn0NCg0KLnNjcm9sbCAuYnV0dG9uOmhvdmVyIHsNCiAgICBvcGFjaXR5OiAxOw0KfQ0KDQouc2Nyb2xsOmRpc2FibGVkIC5idXR0b24gew0KICAgIG9wYWNpdHk6IC4zOw0KfQ0KDQoudmVydGljYWwtc2Nyb2xsIHsNCiAgICB3aWR0aDogOHB4Ow0KICAgIHBhZGRpbmctbGVmdDogMXB4Ow0KICAgIGJvcmRlci1sZWZ0OiAxcHggc29saWQgJG5vcm1hbC1ib3JkZXItY29sb3I7DQp9DQoNCi5ob3Jpem9udGFsLXNjcm9sbCB7DQogICAgaGVpZ2h0OiA4cHg7DQogICAgcGFkZGluZy10b3A6IDFweDsNCiAgICBib3JkZXItdG9wOiAxcHggc29saWQgJG5vcm1hbC1ib3JkZXItY29sb3I7DQp9DQoNCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCioqIEJPUkRFUkxFU1MgVkFSSUFOVFMNCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQouc2Nyb2xsdmlldy5ib3JkZXJsZXNzID4gLnNjcm9sbCAuYnV0dG9uLCAudGV4dGFyZWEuYm9yZGVybGVzcyA+IC5zY3JvbGwgLmJ1dHRvbiB7DQogICAgd2lkdGg6IDhweDsNCiAgICBoZWlnaHQ6IDhweDsNCn0NCg0KLnNjcm9sbHZpZXcuYm9yZGVybGVzcyA+IC52ZXJ0aWNhbC1zY3JvbGwsIC50ZXh0YXJlYS5ib3JkZXJsZXNzID4gLnZlcnRpY2FsLXNjcm9sbCB7DQogICAgcGFkZGluZy1sZWZ0OiAwcHg7DQogICAgYm9yZGVyLWxlZnQ6IG5vbmU7DQp9DQoNCi5zY3JvbGx2aWV3LmJvcmRlcmxlc3MgPiAuaG9yaXpvbnRhbC1zY3JvbGwsIC50ZXh0YXJlYS5ib3JkZXJsZXNzID4gLmhvcml6b250YWwtc2Nyb2xsIHsNCiAgICBwYWRkaW5nLXRvcDogMHB4Ow0KICAgIGJvcmRlci10b3A6IG5vbmU7DQp9DQoNCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCioqIENMQVNTSUMgVkFSSUFOVFMNCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQouY2xhc3NpYy1zY3JvbGxzIC5zY3JvbGwsDQouc2Nyb2xsLmNsYXNzaWMtc2Nyb2xscyB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogI0U5RTlFOTsNCiAgICBib3JkZXI6bm9uZTsNCiAgICBwYWRkaW5nOiAwOw0KfQ0KDQouY2xhc3NpYy1zY3JvbGxzIC5zY3JvbGwgLmJ1dHRvbiwNCi5zY3JvbGwuY2xhc3NpYy1zY3JvbGxzIC5idXR0b257DQogICAgYm9yZGVyLXJhZGl1czogMDsNCiAgICBib3JkZXI6IG5vbmU7DQogICAgYmFja2dyb3VuZC1jb2xvcjogI0U5RTlFOTsNCiAgICBwYWRkaW5nOiAwOw0KICAgIGZpbHRlcjogbm9uZTsNCiAgICBoaWRkZW46IGZhbHNlOw0KICAgIHdpZHRoOiAxN3B4Ow0KICAgIGhlaWdodDogMTdweDsNCiAgICBvcGFjaXR5OiAxOw0KfQ0KDQouY2xhc3NpYy1zY3JvbGxzIC5zY3JvbGwgLmJ1dHRvbjpob3ZlciwNCi5zY3JvbGwuY2xhc3NpYy1zY3JvbGxzIC5idXR0b246aG92ZXIgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICNEN0Q3RDc7DQp9DQoNCi5jbGFzc2ljLXNjcm9sbHMgLnNjcm9sbCAuYnV0dG9uOmRvd24sDQouc2Nyb2xsLmNsYXNzaWMtc2Nyb2xscyAuYnV0dG9uOmRvd24gew0KICAgIGJhY2tncm91bmQtY29sb3I6ICM1MjUyNTI7DQogICAgZmlsdGVyOiBub25lOw0KfQ0KDQouY2xhc3NpYy1zY3JvbGxzIC5zY3JvbGwgLnRodW1iLA0KLnNjcm9sbC5jbGFzc2ljLXNjcm9sbHMgLnRodW1iIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjQzZDNkM2Ow0KfQ0KDQouY2xhc3NpYy1zY3JvbGxzIC5zY3JvbGwgLnRodW1iOmhvdmVyLA0KLnNjcm9sbC5jbGFzc2ljLXNjcm9sbHMgLnRodW1iOmhvdmVyIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjQUFBQUFBOw0KfQ0KDQouY2xhc3NpYy1zY3JvbGxzIC5zY3JvbGwgLnRodW1iOmRvd24sDQouc2Nyb2xsLmNsYXNzaWMtc2Nyb2xscyAudGh1bWI6ZG93biB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogIzUyNTI1MjsNCn0NCg0KLmNsYXNzaWMtc2Nyb2xscyAuc2Nyb2xsIC50aHVtYjpkaXNhYmxlZCwNCi5zY3JvbGwuY2xhc3NpYy1zY3JvbGxzIC50aHVtYjpkaXNhYmxlZCB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogI0RERERERDsNCn0NCg0KLmNsYXNzaWMtc2Nyb2xscyAudmVydGljYWwtc2Nyb2xsLA0KLnZlcnRpY2FsLXNjcm9sbC5jbGFzc2ljLXNjcm9sbHMgew0KICAgIHdpZHRoOiAxN3B4Ow0KfQ0KDQouY2xhc3NpYy1zY3JvbGxzIC52ZXJ0aWNhbC1zY3JvbGwgLmRlaW5jLA0KLnZlcnRpY2FsLXNjcm9sbC5jbGFzc2ljLXNjcm9sbHMgLmRlaW5jIHsNCiAgICBpY29uOiAiaGF4ZXVpLWNvcmUvc3R5bGVzL3NoYXJlZC91cC1hcnJvdy1kYXJrLnBuZyI7DQp9DQoNCi5jbGFzc2ljLXNjcm9sbHMgLnZlcnRpY2FsLXNjcm9sbCAuZGVpbmM6ZG93biwNCi52ZXJ0aWNhbC1zY3JvbGwuY2xhc3NpYy1zY3JvbGxzIC5kZWluYzpkb3duIHsNCiAgICBpY29uOiAiaGF4ZXVpLWNvcmUvc3R5bGVzL3NoYXJlZC91cC1hcnJvdy1icmlnaHQucG5nIjsNCn0NCg0KLmNsYXNzaWMtc2Nyb2xscyAudmVydGljYWwtc2Nyb2xsIC5pbmMsDQoudmVydGljYWwtc2Nyb2xsLmNsYXNzaWMtc2Nyb2xscyAuaW5jIHsNCiAgICBpY29uOiAiaGF4ZXVpLWNvcmUvc3R5bGVzL3NoYXJlZC9kb3duLWFycm93LWRhcmsucG5nIjsNCn0NCg0KLmNsYXNzaWMtc2Nyb2xscyAudmVydGljYWwtc2Nyb2xsIC5pbmM6ZG93biwNCi52ZXJ0aWNhbC1zY3JvbGwuY2xhc3NpYy1zY3JvbGxzIC5pbmM6ZG93biB7DQogICAgaWNvbjogImhheGV1aS1jb3JlL3N0eWxlcy9zaGFyZWQvZG93bi1hcnJvdy1icmlnaHQucG5nIjsNCn0NCg0KLmNsYXNzaWMtc2Nyb2xscyAuaG9yaXpvbnRhbC1zY3JvbGwsDQouaG9yaXpvbnRhbC1zY3JvbGwuY2xhc3NpYy1zY3JvbGxzIHsNCiAgICBoZWlnaHQ6IDE3cHg7DQp9DQoNCi5jbGFzc2ljLXNjcm9sbHMgLmhvcml6b250YWwtc2Nyb2xsIC5kZWluYywNCi5ob3Jpem9udGFsLXNjcm9sbC5jbGFzc2ljLXNjcm9sbHMgLmRlaW5jIHsNCiAgICBpY29uOiAiaGF4ZXVpLWNvcmUvc3R5bGVzL3NoYXJlZC9sZWZ0LWFycm93LWRhcmsucG5nIjsNCn0NCg0KLmNsYXNzaWMtc2Nyb2xscyAuaG9yaXpvbnRhbC1zY3JvbGwgLmRlaW5jOmRvd24sDQouaG9yaXpvbnRhbC1zY3JvbGwuY2xhc3NpYy1zY3JvbGxzIC5kZWluYzpkb3duIHsNCiAgICBpY29uOiAiaGF4ZXVpLWNvcmUvc3R5bGVzL3NoYXJlZC9sZWZ0LWFycm93LWJyaWdodC5wbmciOw0KfQ0KDQouY2xhc3NpYy1zY3JvbGxzIC5ob3Jpem9udGFsLXNjcm9sbCAuaW5jLA0KLmhvcml6b250YWwtc2Nyb2xsLmNsYXNzaWMtc2Nyb2xscyAuaW5jIHsNCiAgICBpY29uOiAiaGF4ZXVpLWNvcmUvc3R5bGVzL3NoYXJlZC9yaWdodC1hcnJvdy1kYXJrLnBuZyI7DQp9DQoNCi5jbGFzc2ljLXNjcm9sbHMgLmhvcml6b250YWwtc2Nyb2xsIC5pbmM6ZG93biwNCi5ob3Jpem9udGFsLXNjcm9sbC5jbGFzc2ljLXNjcm9sbHMgLmluYzpkb3duIHsNCiAgICBpY29uOiAiaGF4ZXVpLWNvcmUvc3R5bGVzL3NoYXJlZC9yaWdodC1hcnJvdy1icmlnaHQucG5nIjsNCn0NCg0KLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogTU9CSUxFIFZBUklBTlRTDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLw0KLnNjcm9sbDptb2JpbGUgLmluYywgLnNjcm9sbDptb2JpbGUgLmRlaW5jIHsNCiAgICBoaWRkZW46IHRydWU7DQp9DQoNCi5ob3Jpem9udGFsLXNjcm9sbDptb2JpbGUgew0KICAgIG9wYWNpdHk6IC41Ow0KICAgIGhlaWdodDogOHB4Ow0KICAgIHBhZGRpbmc6IDJweDsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBub25lOw0KICAgIGJvcmRlcjogbm9uZTsNCn0NCg0KLmhvcml6b250YWwtc2Nyb2xsOm1vYmlsZSAudGh1bWIgew0KICAgIGhlaWdodDogNHB4Ow0KICAgIGJvcmRlci1yYWRpdXM6IDRweDsNCn0NCg0KLnZlcnRpY2FsLXNjcm9sbDptb2JpbGUgew0KICAgIG9wYWNpdHk6IC41Ow0KICAgIHdpZHRoOiA4cHg7DQogICAgcGFkZGluZzogMnB4Ow0KICAgIGJhY2tncm91bmQtY29sb3I6IG5vbmU7DQogICAgYm9yZGVyOiBub25lOw0KfQ0KDQoudmVydGljYWwtc2Nyb2xsOm1vYmlsZSAudGh1bWIgew0KICAgIHdpZHRoOiA0cHg7DQogICAgYm9yZGVyLXJhZGl1czogNHB4Ow0KfQ0K"},{ name : "haxeui-core/styles/shared/expanded-dark.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAA3XAAAN1wFCKJt4AAAAB3RJTUUH5AoNCwkgHyJHKAAAAJBJREFUOMtjYBgFAw8YkTlrt2xRYv77/+h/BgYJHOpf///LZBMU5H0LJsCELBvs43OPkeGfOwMDw0csmj8z/GP0RNaMYQADAwODv7//JSYGxkAGBoafSMK/Gf8zhgYG+pxFV8+EzZ3+/j77/zMwJjAwMPxjYGD4/5+BMTUgwGcnyQG0fuOW4vUbtxSPJhUaAwCz8idCJS/GkgAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/shared/down-arrow-bright.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAECAIAAADNpLIqAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAJElEQVQImWP8//8/AwZgeieriib0TlaVCUIhCzEwMDAhc+DSAPKbCiUI9YmvAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/shared/down-arrow-dark.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAECAIAAADNpLIqAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAJElEQVQImWMMCAhgwABMc89cQROae+YKE4RCFmJgYGBC5sClAQxaDmYcnISCAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/shared/help-small.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QA/wD/AP+gvaeTAAABsklEQVQ4ja2TS2tTURSFv3POTapoWjAqiFgkotRAin8gcx1IOxQEHTiItFL8B/ojBJuJAx+dWjpxoLOAU7UKiZJBMlBI0YJJqTfXe/d2kJ6Yx0UHukdnr73XOmufB/xjmDRwfr1XDESXMPYCACqfEjWb7dVc/Y8CherunEjmoVGupYgryoZLopXmWr47JVCo7s6pZGoopb+43nZxVPYigUcPdh6Si8cdV845LPCqFfOmI760mASZB8CNoYP59V7RCR98fvKI4dnVw7S7QpQoF/OO61shX/aGIqpOi63KbMMCONHl0XGOHTK8/pxwvxZRfRvjLJzOjZ+dFZYBLIAx9vxotfFNuFfrs7MvVC4FtL4L73dkTEFkwAkARNG0+7xZynDqqOX2i5AwGa8Zg/52gDRT+IQxPNr+SWdfp2rGDDh24MA8B6a6vv5QOnsyCR9MwOZQoL2aq6NsTHZdLjjKZ4JJGNCnrcpsA0begUuilSTIloBFj9192Z+2Be+yM/07PrF+0VzLd10clUGf+HEmyAL6ODsTlj/eOtHzYOpnOlvtLpCwZI1dGAwsdQK2vO3/Gr8AlhyqPdEFcaYAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/default/ranges.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogUkFOR0UNCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQoucmFuZ2Ugew0KICAgIGJvcmRlcjogMXB4IHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOw0KICAgIHBhZGRpbmc6IDFweDsNCiAgICBib3JkZXItcmFkaXVzOiAycHg7DQogICAgZmlsdGVyOiAkbm9ybWFsLWlubmVyLXNoYWRvdzsNCn0NCg0KLnJhbmdlLXZhbHVlIHsNCiAgICBib3JkZXI6IG5vbmU7DQogICAgYm9yZGVyLXJhZGl1czogMXB4Ow0KfQ0KDQouaG9yaXpvbnRhbC1yYW5nZSB7DQogICAgYmFja2dyb3VuZDogJG5vcm1hbC1iYWNrZ3JvdW5kLWNvbG9yLWVuZCAkbm9ybWFsLWJhY2tncm91bmQtY29sb3Itc3RhcnQgdmVydGljYWw7DQogICAgaW5pdGlhbC13aWR0aDogMTUwcHg7DQogICAgaW5pdGlhbC1oZWlnaHQ6IDhweDsNCn0gICAgDQoNCi5ob3Jpem9udGFsLXJhbmdlIC5yYW5nZS12YWx1ZSB7DQogICAgYmFja2dyb3VuZDokYWNjZW50LWdyYWRpZW50LXN0YXJ0ICRhY2NlbnQtZ3JhZGllbnQtZW5kIHZlcnRpY2FsOw0KICAgIGhlaWdodDogMTAwJTsNCn0NCg0KLmhvcml6b250YWwtcmFuZ2U6ZGlzYWJsZWQgew0KICAgIGJvcmRlci1jb2xvcjogJGRpc2FibGVkLWJvcmRlci1jb2xvcjsNCn0NCg0KLmhvcml6b250YWwtcmFuZ2U6ZGlzYWJsZWQgLnJhbmdlLXZhbHVlIHsNCiAgICBiYWNrZ3JvdW5kOiAkZGlzYWJsZWQtYmFja2dyb3VuZC1jb2xvci1zdGFydCAkZGlzYWJsZWQtYmFja2dyb3VuZC1jb2xvci1lbmQgdmVydGljYWw7DQp9DQoNCi52ZXJ0aWNhbC1yYW5nZSB7DQogICAgYmFja2dyb3VuZDogJG5vcm1hbC1iYWNrZ3JvdW5kLWNvbG9yLWVuZCAkbm9ybWFsLWJhY2tncm91bmQtY29sb3Itc3RhcnQgaG9yaXpvbnRhbDsNCiAgICBpbml0aWFsLXdpZHRoOiA4cHg7DQogICAgaW5pdGlhbC1oZWlnaHQ6IDE1MHB4Ow0KfQ0KDQoudmVydGljYWwtcmFuZ2UgLnJhbmdlLXZhbHVlIHsNCiAgICBiYWNrZ3JvdW5kOiAkYWNjZW50LWdyYWRpZW50LXN0YXJ0ICRhY2NlbnQtZ3JhZGllbnQtZW5kIGhvcml6b250YWw7DQogICAgd2lkdGg6IDEwMCU7DQp9DQoNCi52ZXJ0aWNhbC1yYW5nZTpkaXNhYmxlZCAucmFuZ2UtdmFsdWUgew0KICAgIGJhY2tncm91bmQ6ICRkaXNhYmxlZC1iYWNrZ3JvdW5kLWNvbG9yLXN0YXJ0ICRkaXNhYmxlZC1iYWNrZ3JvdW5kLWNvbG9yLWVuZCBob3Jpem9udGFsOw0KfQ0KDQoudmVydGljYWwtcmFuZ2U6ZGlzYWJsZWQgew0KICAgIGJvcmRlci1jb2xvcjogJGRpc2FibGVkLWJvcmRlci1jb2xvcjsNCn0NCg"},{ name : "haxeui-core/styles/shared/right-arrow-light.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAQAAAAHCAIAAACgB3uHAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAOElEQVQImWPYsmXLWxkVCGJiYGA4PmMCAwMDAwMDE4SC8Bm3bNnCAANMcJZlRgETnAWVgbAYGBgAg4cO3PCuD3sAAAAASUVORK5CYII"},{ name : "haxeui-core/locale/it/std-strings.properties", data : "c2F2ZT1TYWx2YQ0KeWVzPVPDrA0Kbm89Tm8NCmNsb3NlPUNoaXVkaQ0Kb2s9T0sNCmNhbmNlbD1Bbm51bGxhDQphcHBseT1BcHBsaWNhDQpzZWFyY2g9Q2VyY2hpDQoNCnJlZD1Sb3Nzbw0KZ3JlZW49VmVyZGUNCmJsdWU9Qmx1ZQ0KaHVlPVRvbmFsaXTDoA0Kc2F0dXJhdGlvbj1TYXR1cmF6aW9uZQ0KYnJpZ2h0bmVzcz1MdW1pbm9zaXTDoA0K"},{ name : "haxeui-core/styles/shared/info-large.png", data : ""},{ name : "haxeui-core/styles/shared/window-expand-white.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAwAAAAMCAYAAABWdVznAAABhWlDQ1BJQ0MgcHJvZmlsZQAAKJF9kT1Iw0AcxV9TpVorDnbwa8hQnSyIijhKFYtgobQVWnUwufQLmjQkKS6OgmvBwY/FqoOLs64OroIg+AHi6OSk6CIl/i8ttIjx4Lgf7+497t4BQq3EVLNjAlA1y0hEI2I6syr6XtGDYXTDj0GJmXosuZiC6/i6h4evd2Ge5X7uz9GrZE0GeETiOaYbFvEG8cympXPeJw6ygqQQnxOPG3RB4keuyw1+45x3WOCZQSOVmCcOEov5NpbbmBUMlXiaOKSoGuUL6QYrnLc4q6UKa96TvzCQ1VaSXKc5giiWEEMcImRUUEQJFsK0aqSYSNB+xMU/5Pjj5JLJVQQjxwLKUCE5fvA/+N2tmZuabCQFIkDni21/jAK+XaBete3vY9uunwDeZ+BKa/nLNWD2k/RqSwsdAX3bwMV1S5P3gMsdYOBJlwzJkbw0hVwOeD+jb8oA/beAf63RW3Mfpw9AirpavgEODoGxPGWvu7y7q723f880+/sBXHpynoD2GeAAAAAGYktHRAD/AP8A/6C9p5MAAAAJcEhZcwAADdcAAA3XAUIom3gAAAAHdElNRQfmCxsJICvK6FXdAAAAg0lEQVQoz8XQrQoCYRCF4S/slWyzmCzCts0mo2mtRoO3YN0b2KsTDILFIIr6GBxRFn+2iC9MObwzDCeln4MMRQevQJbQ4ITqg1yF0yRMcMQF8xfyDOdYmN7DEfZuLJ/kRWQHjNuXSuxCqGNEVr77dYCNB1sMv7XRwwpr9LtWnSNPf+EK5KylPDiubigAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/shared/restore-button-blue.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAwAAAAMCAYAAABWdVznAAAIBXpUWHRSYXcgcHJvZmlsZSB0eXBlIGV4aWYAAHjarVltduSoDv3PKmYJloQQLIcvnfN28JY/F+yqJNXpnk7iqsQ4GAvpXiEhEub//+fhH3yk5CNEtZxKSgc+scTCFTf5OD91X+mI+3p++tXSx/7wfMDoErRy/pnTNf7RT08BZ1Nxp+8E5UsQtY8PSrzk5xdB10SyNGLcjEtQuQQJnw/oElBPs45Usr03oc2zvd4/YcjLNFxmu4ZdT1//jgb0hmIeYZ5CcuAqwqcCsn45SMUDwpXFMBCDcC9iuB7yMAmAfIbT81OgkS9V46eDPrL1uKPP+8MrW5GvIfICcnq2n/YH0s9Z2dC/mznm644/9ss45qnRC/rr131k3zbDihoToE6XUQ9T9h3GNUyxps4BqqXD8KsQYftb8M3w6g5XGHDYhm+nQgwmnCINquQ0d9upQ8XIMzC4YubOsjszuCvcZfEX15ecTYoMyeC1b9qj8FMX2tOWo4c9W8bMgzCUCcJo+cVXv+GrL7ivpUB05CdW0It5gQ01FnPrimFghPwCVTfAj+/rZ/EqYFAXymuJFADbThFN6S0SyCZaMFDRnmuQbFwCABGmViiDlREJrJEoJTqM2YgAZAZBFaqzRG5ggFR5QEmOIgncZF5T4xWjPZSV0R3Qj2AGJlQSVlgGQxVkxajwH4sZPlRVNKpqUtOsRWuSFJOmlCytoFhNLAZTS2aWrVjNkmPWnLLlnEuuhYsgaGpJxUoupdSKOSskV7xdMaDWxk1abBpaatZyK612uE+PXXvq1nMvvQ4eMhA/Rho28iijTppwpRmnzjRt5llmdbiaS/Do6snNsxevT9YuWn/5foE1uljjzdQaaE/W0Gv2EEErnOjiDIRxiATGbVEAh+bF2ZEpRl7MLc6OwlgVylBSF2eDFmNgME5idXpwF/hkdDH3I96CxQ+88XeZC4u6LzL3K2+fsTbqzqayGVqrcIF6CFYfxlTO+EGu+rUNv3vw1faPgoTNwQ216NCoTJPVDmfxnvK6B55piE8rofvqACDuVGcCerN5QnwsbdSeZ67RiUfpqRWscs99SlbyiaW+3uwMHnCHeCS9TszsRdeDLW3umRXR3WotQxnRIMUG5KXRqUkDLUsT7aeWgdsSztEma5NCiCZcnEo3sAwLWga94N5n3ca0EQViD9UKxynoKseo5jBN1l8HNFr6RvMOt027TzpUXS9PdOdhyyujN8pF54BH+hp8WibhnV0EFYBtbzCpTD2htQ6fgBAacG0fOrGlaKmUkd8jhAT5itCbrMXTlrZlAZdTGjn2eMcvwsJpws+FhYdqPxUW3tv5E2HhFbTvCgufMfAdYeEzBr4jLPyOzq8KC3/yja8IC//laJ8JQz44IwKiKl0RIZQzJHSE9n7GHcXCGrPGmeORaot5NnmGpTMovYWkZ0DCzt93GO35GUQQ0FdE4h2QEOKwtlcwGmSOiDCHsVX2qdoMUZ8bthGthVMHWTpUQzgpyOS5YceRRMpcCQMZo8d2vAQTjVA6T6SjsVJmD8mkD0lHbo7lLd60l4k/lslveuSJnKZj7YeApqZ43iD7Ptrw2vHX7QnpBWi1sIIjrEEkPE5rkDolKjIPkEISi1DUOwx6UzUCGq4z550ikB5RiyFl57qKsvrT9nuCXAacZ4dh5rxCNjzb0UDlwq1jzzhWLlib21x34FafuFaeERuqAxutHq1j6wAq8jX8gLN2JEixLRlv7AyHd2S/gzzu+UwMa9YBNzTHNgqTItv15ZCkqCdR1cDzOCAhIuN1x15m6+3cHdujL4MUfvPgndJ/p3N4VbqlrTXc703tS+s/QI0EeQ/UFTu2W6CGH90D9WbtDqgRau+BGov2HqjNwj1QzxnugRqs3QM1tn73QO0z3AP1TpB3QC053AM1ssg9UO9QewfUuYV7oF4J8haou4d7oP41Zn8TaoTae6AuHO6BWj3cA3WRcA/UrzH721A3D/dA3Xq4B+rp4R6o6+mQP4f6Y8z+AdQ71N4BdYRn3wL1jtl3QL0d8g6o38fsH0GNUHsP1G2EL0I9bR5bo55Ls323znk32Kh/aFgWtda90z4RKSTJUc91Pt6M03WkQ0Mh0uPWFbVan6hg5llCjKP3H1cj4XFTp8LouopfR932emZUtR0j7VoJdVakBEx36VaplN4sB28dRqFWLGOdtFKjgipwap6o9RIDHiY7SLOlA5iUjMGoXjvjSrvW7j5TOXdsqFl3WTx5OQEM7lNjFTZLqayiehVl0uOqkeO0nMGXuUQQ37zxmSCJdFbyY8qpGSU/HEV3Ho5CNhbuxVBHr5N7lMuo9bK0TGClpmazDlTIXlGGB0XtW2JCDUxtnaem3MvpSYk3HX/JRvhrWn7PxuYifEKGpjY7Ctg6oo2CQltr9VKIlvej1k2lAvz134gIEEz0GBJRQjBKek0D0ruPVPF6LiJnuWzaAaoQHBITqM3Ba11ggqo+KFUpWtRilLBV0XLsKlyP77SWZC+RI5cBQrtrK+epY1nni9dZbJz7BLSO6wQUnE8YBt35WBCktI9oLKS9tr4hDOZBFl2iNBgP8XEe4FptMN0/vvlQYp3CEjxmnYWw7lNYX+e18HEEKzhkXf8QLWOt5C0Er28h8TzFGXsZHPsAiubjQLpcB9JxCao2WgyIO0khyc6woCJMp3maZDbVBO/dJtVGDkdoCkuwSlo+j0l63E34HlEfWqumtOjXqWXm/JtzGaA31j90/wXQ+Ve3hRC3UwAAAYVpQ0NQSUNDIHByb2ZpbGUAAHicfZE9SMNAHMVfU6VaKw528GvIUJ0siIo4ShWLYKG0FVp1MLn0C5o0JCkujoJrwcGPxaqDi7OuDq6CIPgB4ujkpOgiJf4vLbSI8eC4H+/uPe7eAUKtxFSzYwJQNctIRCNiOrMq+l7Rg2F0w49BiZl6LLmYguv4uoeHr3dhnuV+7s/Rq2RNBnhE4jmmGxbxBvHMpqVz3icOsoKkEJ8Tjxt0QeJHrssNfuOcd1jgmUEjlZgnDhKL+TaW25gVDJV4mjikqBrlC+kGK5y3OKulCmvek78wkNVWklynOYIolhBDHCJkVFBECRbCtGqkmEjQfsTFP+T44+SSyVUEI8cCylAhOX7wP/jdrZmbmmwkBSJA54ttf4wCvl2gXrXt72Pbrp8A3mfgSmv5yzVg9pP0aksLHQF928DFdUuT94DLHWDgSZcMyZG8NIVcDng/o2/KAP23gH+t0VtzH6cPQIq6Wr4BDg6BsTxlr7u8u6u9t3/PNPv7AVx6cp6IJdMnAAANdmlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4KPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iWE1QIENvcmUgNC40LjAtRXhpdjIiPgogPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4KICA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIgogICAgeG1sbnM6eG1wTU09Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9tbS8iCiAgICB4bWxuczpzdEV2dD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlRXZlbnQjIgogICAgeG1sbnM6ZGM9Imh0dHA6Ly9wdXJsLm9yZy9kYy9lbGVtZW50cy8xLjEvIgogICAgeG1sbnM6R0lNUD0iaHR0cDovL3d3dy5naW1wLm9yZy94bXAvIgogICAgeG1sbnM6dGlmZj0iaHR0cDovL25zLmFkb2JlLmNvbS90aWZmLzEuMC8iCiAgICB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iCiAgIHhtcE1NOkRvY3VtZW50SUQ9ImdpbXA6ZG9jaWQ6Z2ltcDoxNmEyY2Q5Zi05NWVmLTRhNDMtYjVkNS1kZjgxOWM4ZWY4ODUiCiAgIHhtcE1NOkluc3RhbmNlSUQ9InhtcC5paWQ6MmZiYTdjODEtZjIxNS00ZjNjLTliM2MtNzEzNDkyODk3MTdhIgogICB4bXBNTTpPcmlnaW5hbERvY3VtZW50SUQ9InhtcC5kaWQ6YTQ1ZTE1ZGEtNDM4YS00YTE5LTkxODQtOGU2NzdiY2YxMWEwIgogICBkYzpGb3JtYXQ9ImltYWdlL3BuZyIKICAgR0lNUDpBUEk9IjIuMCIKICAgR0lNUDpQbGF0Zm9ybT0iV2luZG93cyIKICAgR0lNUDpUaW1lU3RhbXA9IjE2Njk1NDE4Mjc3ODI3MjAiCiAgIEdJTVA6VmVyc2lvbj0iMi4xMC4zMiIKICAgdGlmZjpPcmllbnRhdGlvbj0iMSIKICAgeG1wOkNyZWF0b3JUb29sPSJHSU1QIDIuMTAiCiAgIHhtcDpNZXRhZGF0YURhdGU9IjIwMjI6MTE6MjdUMTA6Mzc6MDMrMDE6MDAiCiAgIHhtcDpNb2RpZnlEYXRlPSIyMDIyOjExOjI3VDEwOjM3OjAzKzAxOjAwIj4KICAgPHhtcE1NOkhpc3Rvcnk+CiAgICA8cmRmOlNlcT4KICAgICA8cmRmOmxpCiAgICAgIHN0RXZ0OmFjdGlvbj0ic2F2ZWQiCiAgICAgIHN0RXZ0OmNoYW5nZWQ9Ii8iCiAgICAgIHN0RXZ0Omluc3RhbmNlSUQ9InhtcC5paWQ6Y2I1MTQ2YTgtMzZkYi00MGQzLTg3ZjUtNjU2MDNiYjkxNmY1IgogICAgICBzdEV2dDpzb2Z0d2FyZUFnZW50PSJHaW1wIDIuMTAgKFdpbmRvd3MpIgogICAgICBzdEV2dDp3aGVuPSIyMDIyLTExLTI3VDEwOjM3OjA3Ii8+CiAgICA8L3JkZjpTZXE+CiAgIDwveG1wTU06SGlzdG9yeT4KICA8L3JkZjpEZXNjcmlwdGlvbj4KIDwvcmRmOlJERj4KPC94OnhtcG1ldGE+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAKPD94cGFja2V0IGVuZD0idyI/PgxsSmoAAAAGYktHRAD/AP8A/6C9p5MAAAAJcEhZcwAADsEAAA7BAbiRa+0AAAAHdElNRQfmCxsJJQeFR817AAAAWElEQVQoz2NgIBEwwhjrTzw+9+L9d0N8iiUEOc8zwTiEFGOomb791n9CGqZvv/WfiVQ/MBFjMooGkm2guQYWGEOUn+MEIf9ICHKeZyDV0yzEmJzpqQZPEQBDDCPo63xTewAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/shared/maximize-button-light.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAwAAAAMCAYAAABWdVznAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsEAAA7BAbiRa+0AAAA/SURBVChTY2QAgv///4MoogBjXWe/A5AGYWLAASYgQaxiEHBgANrQAOUQBCC1IBtIAiNSA8kRR1LSYGRkZAAA0DsQaJvlZUMAAAAASUVORK5CYII"},{ name : "haxeui-core/locale/es/std-strings.properties", data : "c2F2ZT1HdWFyZGFyDQp5ZXM9U2kNCm5vPU5vDQpjbG9zZT1DZXJyYXINCm9rPU9LDQpjYW5jZWw9Q2FuY2VsYXINCmFwcGx5PUFwbGljYXINCnNlYXJjaD1CdXNjYQ0KDQpyZWQ9Um9qYQ0KZ3JlZW49VmVyZGUNCmJsdWU9QXp1bA0KaHVlPU1hdGl6DQpzYXR1cmF0aW9uPVNhdHVyYWNpw7NuDQpicmlnaHRuZXNzPUx1bWlub3NpZGFkDQo"},{ name : "haxeui-core/styles/shared/close-button-dark.png", data : ""},{ name : "haxeui-core/locale/fr/std-strings.properties", data : "c2F2ZT1TYXV2ZWdhcmRlcg0KeWVzPU91aQ0Kbm89Tm9uDQpjbG9zZT1GZXJtZXINCm9rPU9LDQpjYW5jZWw9QW5udWxlcg0KYXBwbHk9QXBwbGlxdWVyDQpzZWFyY2g9Q2hlcmNoZQ0KDQpyZWQ9Um91Z2UNCmdyZWVuPVZlcnQNCmJsdWU9QmxldQ0KaHVlPVRlaW50ZQ0Kc2F0dXJhdGlvbj1TYXR1cmF0aW9uDQpicmlnaHRuZXNzPUx1bWlub3NpdMOpDQo"},{ name : "images/arrow-icon.png", data : "iVBORw0KGgoAAAANSUhEUgAAABQAAAAUCAYAAACNiR0NAAAB30lEQVQ4jbWUT0hUQRzHP/Ncalcqg1Ujoz/WhhiChUNBUFEHhdCiLnOQKOzk1UOnLkEHwUu3ziEE7yJY0M1d7JgvLAJRURSMkDwu+izQiZH3dPTN7nMPfQ4zvN/vN9/5ze/NbwQO/EAUgEHgAVCwIspACRgFxpTU2wdX7xP0A3EEeA0MAXWuzSymgadK6h9OQT8Q9cAn4E6KkE0I9Cqpi/sE/UCYeRzoq0EsxojeiDP1IuOzNLEz5/KVXDngnR+IHS3PD4Sp1au0NDqa3tB25Xwl9zXgcZzhPeBsmqChM7fExcstldxPzJABbtvWYw0ZstlsIjrD6Z1ZnvjJ9qUWlhdXD4bcjQXte0Z74RatTFTN9PrJX2xdOMXK8pptPu4HotGLiloz7flh15J6I/i7VrEy40zOPHe51syRv9uWqa8lpnZv0x49XaM00M86RUqzj/gTJkIWlNShF3XHoQj5Qmm+m811Z/QHM3hK6qWoS6oSMs3E/E02yon3wLAFvMVqvTbgG5C8LxFHc7iOGTOipH5B3HpK6jnAWeWYKmKTwMv4Y7f6Sur3QD+wmXZ8i4/AfSX134SgJXr1EDVdAQaAh0rqDdvhfLENfiBaze6mhYHm6JlaAD4DRSW1+RH/GeAfPnZ7KbIHhHsAAAAASUVORK5CYII"},{ name : "locale/en-GB/tl_en.csv", data : "TE9HSU5fVVNFUk5BTUU7VXNlcm5hbWUNCkxPR0lOX1BBU1NXT1JEO1Bhc3N3b3JkDQpTSE9XX1BXRDtTaG93IHBhc3N3b3JkDQpMT0dJTl9CVE47RW50ZXINCkFQUF9USVRMRTtUZWFtIFRMIG1hbmFnZXIge3tMT0dJTl9CVE59fQ"},{ name : "haxeui-core/styles/default/dropdowns.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogRFJPUERPV05TDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLw0KLmRyb3Bkb3duIHsNCiAgICBpY29uOiAkYXJyb3ctdXAtZG93bjsNCiAgICBpY29uLXBvc2l0aW9uOiBmYXItcmlnaHQ7DQogICAgdGV4dC1hbGlnbjogbGVmdDsNCiAgICBwYWRkaW5nOiA2cHggOHB4Ow0KfQ0KDQouZHJvcGRvd24gLml0ZW1yZW5kZXJlciAubGFiZWwgew0KICAgIGNvbG9yOiAkbm9ybWFsLXRleHQtY29sb3I7DQogICAgY3Vyc29yOiBwb2ludGVyOw0KfQ0KDQouZHJvcGRvd24ucmVxdWlyZWQtdmFsdWUgew0KICAgIGJhY2tncm91bmQ6ICR3YXJuaW5nLWJhY2tncm91bmQtY29sb3Itc3RhcnQgJHdhcm5pbmctYmFja2dyb3VuZC1jb2xvci1lbmQ7DQogICAgYm9yZGVyLWNvbG9yOiAkd2FybmluZy1ib3JkZXItY29sb3I7DQp9DQoNCi5kcm9wZG93bi5yZXF1aXJlZC12YWx1ZTpkb3duIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkd2FybmluZy1iYWNrZ3JvdW5kLWNvbG9yLWVuZDsNCn0NCg0KLmRyb3Bkb3duLmludmFsaWQtdmFsdWUgew0KICAgIGJhY2tncm91bmQ6ICRlcnJvci1iYWNrZ3JvdW5kLWNvbG9yLXN0YXJ0ICRlcnJvci1iYWNrZ3JvdW5kLWNvbG9yLWVuZDsNCiAgICBib3JkZXItY29sb3I6ICRlcnJvci1ib3JkZXItY29sb3I7DQp9DQoNCi5kcm9wZG93bi5pbnZhbGlkLXZhbHVlOmRvd24gew0KICAgIGJhY2tncm91bmQtY29sb3I6ICRlcnJvci1iYWNrZ3JvdW5kLWNvbG9yLWVuZDsNCn0NCg0KLmRyb3Bkb3duLnZhbGlkLXZhbHVlIHsNCiAgICBiYWNrZ3JvdW5kOiAkc3VjY2Vzcy1iYWNrZ3JvdW5kLWNvbG9yLXN0YXJ0ICRzdWNjZXNzLWJhY2tncm91bmQtY29sb3ItZW5kOw0KICAgIGJvcmRlci1jb2xvcjogJHN1Y2Nlc3MtYm9yZGVyLWNvbG9yOw0KfQ0KDQouZHJvcGRvd24udmFsaWQtdmFsdWU6ZG93biB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJHN1Y2Nlc3MtYmFja2dyb3VuZC1jb2xvci1lbmQ7DQp9DQoNCi5kcm9wZG93bjpkb3duIHsNCiAgICBib3JkZXItY29sb3I6ICRhY2NlbnQtY29sb3I7DQp9DQoNCi5kcm9wZG93bi1wb3B1cCB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJGRlZmF1bHQtYmFja2dyb3VuZC1jb2xvcjsNCiAgICBib3JkZXI6IDFweCBzb2xpZCAkYWNjZW50LWNvbG9yOw0KICAgIGJvcmRlci10b3AtY29sb3I6ICRkb3duLWJvcmRlci1jb2xvcjsNCiAgICBwYWRkaW5nOiAxcHg7DQp9DQoNCi5kcm9wZG93bi1wb3B1cC5wb3B1cC1mcm9tLWJvdHRvbSB7DQogICAgYm9yZGVyOiAxcHggc29saWQgJGFjY2VudC1jb2xvcjsNCiAgICBib3JkZXItYm90dG9tLWNvbG9yOiAkZG93bi1ib3JkZXItY29sb3I7DQp9DQoNCi5kcm9wZG93bi1wb3B1cCAubGlzdHZpZXcgLml0ZW1yZW5kZXJlciB7DQogICAgcGFkZGluZzogNnB4IDhweDsNCn0NCg0KLmRyb3Bkb3duLXBvcHVwID4gLnNjcm9sbHZpZXcsDQouZHJvcGRvd24tcG9wdXAgPiAuc2Nyb2xsdmlldzphY3RpdmUsDQouZHJvcGRvd24tcG9wdXAgPiAuZHJvcGRvd24tc2VhcmNoLWNvbnRhaW5lciA+IC5zY3JvbGx2aWV3LA0KLmRyb3Bkb3duLXBvcHVwID4gLmRyb3Bkb3duLXNlYXJjaC1jb250YWluZXIgPiAuc2Nyb2xsdmlldzphY3RpdmUgIHsNCiAgICBib3JkZXI6IG5vbmU7DQogICAgYm9yZGVyLXJhZGl1czogMHB4Ow0KfQ0KDQouZHJvcGRvd24tZmlsbGVyIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkYWNjZW50LWNvbG9yOw0KICAgIGhlaWdodDogMXB4Ow0KfQ0KDQouZHJvcGRvd24tc2VhcmNoLWNvbnRhaW5lciB7DQogICAgc3BhY2luZzogMDsNCn0NCg0KLmRyb3Bkb3duLXNlYXJjaC1maWVsZC1jb250YWluZXIgew0KICAgIHdpZHRoOiAxMDAlOw0KICAgIHBhZGRpbmc6IDBweDsNCn0NCg0KLmRyb3Bkb3duLXNlYXJjaC1maWVsZCB7DQogICAgd2lkdGg6IDEwMCU7DQogICAgYm9yZGVyOiBub25lOw0KICAgIGJvcmRlci1yYWRpdXM6IDBweDsNCiAgICBpY29uOiAkc2VhcmNoOw0KfQ0KDQouZHJvcGRvd24tc2VhcmNoLWZpZWxkLXNlcGFyYXRvciB7DQogICAgaGVpZ2h0OiAxcHg7DQogICAgd2lkdGg6IDEwMCU7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJGRvd24tYm9yZGVyLWNvbG9yOw0KfQ0KLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogTU9CSUxFIFZBUklBTlRTDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLw0KLmRyb3Bkb3duOm1vYmlsZSB7DQogICAgbW9kZTogbW9iaWxlOw0KfQ0KDQouZHJvcGRvd24tcG9wdXA6bW9iaWxlIHsNCiAgICB3aWR0aDogNzUlOw0KfQ0K"},{ name : "haxeui-core/locale/es/expression-replacements.properties", data : "emVybz1bMF09MA0Kbm9uZT1bMF09MA0Kb25lPVswXT0xDQptYW55PVswXT4xDQo"},{ name : "haxeui-core/styles/shared/window-expand-blue.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAwAAAAMCAYAAABWdVznAAABhWlDQ1BJQ0MgcHJvZmlsZQAAKJF9kT1Iw0AcxV9TpVorDnbwa8hQnSyIijhKFYtgobQVWnUwufQLmjQkKS6OgmvBwY/FqoOLs64OroIg+AHi6OSk6CIl/i8ttIjx4Lgf7+497t4BQq3EVLNjAlA1y0hEI2I6syr6XtGDYXTDj0GJmXosuZiC6/i6h4evd2Ge5X7uz9GrZE0GeETiOaYbFvEG8cympXPeJw6ygqQQnxOPG3RB4keuyw1+45x3WOCZQSOVmCcOEov5NpbbmBUMlXiaOKSoGuUL6QYrnLc4q6UKa96TvzCQ1VaSXKc5giiWEEMcImRUUEQJFsK0aqSYSNB+xMU/5Pjj5JLJVQQjxwLKUCE5fvA/+N2tmZuabCQFIkDni21/jAK+XaBete3vY9uunwDeZ+BKa/nLNWD2k/RqSwsdAX3bwMV1S5P3gMsdYOBJlwzJkbw0hVwOeD+jb8oA/beAf63RW3Mfpw9AirpavgEODoGxPGWvu7y7q723f880+/sBXHpynoD2GeAAAAAGYktHRAD/AP8A/6C9p5MAAAAJcEhZcwAADdcAAA3XAUIom3gAAAAHdElNRQfmCxsJIBEM5IxvAAAA7UlEQVQoz8WQIUtDUQBGz3dnWDCKA9cG+rQbDDaDe4hgtq3pJhaDNqtWcVcZ+gcEwfDceyBjC4OZTd63brBYhInhXYNTw1CTeOLH4QsH/hrtt9tjky9TC7Uw6P4k1mO3+Jh/uDWFQbEh1LFJWvlOtklaEeoUBsWGEWoBGZ7zk8TtjMquhucMQKgrgHqzvyr5CyCP/GG1HOwB2GZ/F/kD4FVifbM8c6mPp+PYLRl0BYx7OHp/ZBt4zvBrW2HQGm5fnF7fz2fGxMDEcHoyaGUjnO59VhqpEaVzynEDPgd+uRrO3v3a2kauZCNX4l94AwHMSZhOXSBeAAAAAElFTkSuQmCC"},{ name : "haxeui-core/locale/it/expression-replacements.properties", data : "emVybz1bMF09MA0Kbm9uZT1bMF09MA0Kb25lPVswXT0xDQptYW55PVswXT4xDQo"},{ name : "haxeui-core/styles/shared/check-blue.png", data : ""},{ name : "haxeui-core/styles/shared/check-dark.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAwAAAAMCAYAAABWdVznAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAA3XAAAN1wFCKJt4AAAAB3RJTUUH5QITChsNaCG5cQAAAS5JREFUKM+NkDFLw1AUhb/3DG0Q6pBOdSgI4tBRsaCTP0EcHeSBEpAQkt2lggiKUGg6WMRVhGziILg4CRUnh+KibiVLl06lmPdcglRsrXe5nMP9uJwj+Md4nrckpVwvFotX1rRj3/fnhBD3QLnX6yGnAVLKU6AMDIGnP4EwDDeMMW4mj6Io6kwEXNedTdP0AhDAi+M4JwATM9i2fQwsAp9a691arTYEsIIgWDXG3Akhbrrd7l4cx2kYhmtaaz9jz5rN5vN3JmPMAuAYY1SpVDpXStla60tAAq/9fv9w9PNMu93uVKvVeSHECrCcz+e3gAqggc1Wq/XxozXAJEmyD1xnXiXbUaPRePxVM0Acx+lgMNgBbjP/LZfLHYwrQ4wKpZRdKBS2Lct6qNfr7+OAL7OwYq6nyWzXAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/shared/minimize-button-dark.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAwAAAAMCAYAAABWdVznAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsIAAA7CARUoSoAAAAAtSURBVChTY/z//z8DKYAJShMNRjUQA2ivAR7TjRNm4o3y+oJ0RhBNYtJgYAAA02UNDbDaPdYAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/shared/right-arrow-square-dark.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAHCAIAAABLMMCEAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAMUlEQVQImWN8K6PCwMCQbKIz98wVBhhggrOSTXSwiCJLoIjCJdBFIaYzYQqhiCK7AQAMqA07hk2gSAAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/default/tooltips.css", data : "LnRvb2x0aXAgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICR0b29sdGlwLWJhY2tncm91bmQtY29sb3I7DQogICAgYm9yZGVyOiAxcHggc29saWQgJG5vcm1hbC1ib3JkZXItY29sb3I7DQogICAgZmlsdGVyOiBkcm9wLXNoYWRvdygxLCA0NSwgIzAwMDAwMCwgMC4wNSwgNiwgMSwgMzAsIDM1LCBmYWxzZSk7DQogICAgYm9yZGVyLXJhZGl1czogMnB4Ow0KICAgIHBhZGRpbmc6IDRweCA1cHg7DQogICAgbWFyZ2luLWxlZnQ6IDBweDsNCiAgICBtYXJnaW4tdG9wOiAzMHB4Ow0KfQ0K"},{ name : "haxeui-core/styles/shared/collapsed-blue.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAADq3pUWHRSYXcgcHJvZmlsZSB0eXBlIGV4aWYAAHja7VZbcuwoDP1nFbMES0JILAfzqJodzPLngN1OutOZSm567tc1ZSQDlsQ54hH6P3+P8Bce3nQLUc1TTmnDE3PMXKD4djxl1bTFVZ8f2025aw9XB6NJIOX49HSOv7XTdmeJCjR9Z8jr2bHfd+R42vcHQ6cjmRExlHYayqch4aODTgPlmNaWstv7Kez9kO02Ez/eMKtxw8QO8fgdDeg1hR9h7kKyoWaJRwAyXw5SllLQDThQC3QWXbWdkQCQZzht76IKj6xcGn3S/kCKpKM9oOEezHTJp+2kz8EPC+J3nqVenu/a65uLO5AXxqN5GKMfsysxAdJ0Tuo2laVh4A7IZf2WUAyvQrdVMooHZG8F5Q0ud5RKmRi0DIrUqNCgvmSlihAjdzZI5sqy2lyMM1fZAniKs9BgkyxNHGxV0Cto5SsWWn7zclfJ4bgRRjLBGB3082vKp4bGmClPtPmFFeLiuSgQxmRu1hgFQmjc8kgXwLfy+ExeBQzqgtkxwbLth4ld6cytmUeyiBYMVMhjrZG10wAggm9FMMj9SFsiUUq0GbMRAUcHPwWGHIuGd1BAqtwQJUeRBHKcp2/8Y7TGsvLRjD0LRKgkMVCTpYCriI0N+WPRkUNFRaOqJjV1zVqSpJg0pWRpbn7FxKKpJTNzy1ZcPLp6cnMPnr1kzoLNUXPKlj3nXAqcFlgu+LtgQCk777LHXfe02+573ktF+tRYtaZq1UPNtTRu0rBPtNSsecutdOpIpR679tSte8+9DKTakBGHjjRs+MijXKxROGj9UL7OGt1Y48XUHGgXa/jV7GaC5naikzMwxpHAuE0GkNA8OducYuQwqZucbZmxKpQRpU5yGk3GwGDsxDro4u6NuTveQow/4o1vzIVJ3SuYC5O6T5j7yNsT1lpZu56ExdBchhPUTbD8MKB7YS/zUPuyDN/94Y+hVxsaSOqlQpEq0q3ML967+bCn9sKLAnpuCHGUMyCcvJGO9sT/FdlvjWhbUeCMXzI7DamNopJCsT1NNQadlzQoP5XPDOEkakudR1LH3Xd1bJfMqxPH2HvIwkj1FRB5+C5Eb/JMtbld9Glo/pCH4NbxyQ9fk+Fjh3RP59Qd96RPZ6TXeDvon1jVH0MVvg3RLc83eNeD3Ip7XWj+yO6vyfChgwZuGkfe4sx0v8+ylT35bcFdiISXLLSnhn5l6f/vEX13d5wyvCigP4Z+hyFcbHL4F54nyj1078dQAAABg2lDQ1BJQ0MgcHJvZmlsZQAAeJx9kT1Iw0AcxV9TpaIVBzOIOGSoTi2IijhKFYtgobQVWnUwufQLmhiSFBdHwbXg4Mdi1cHFWVcHV0EQ/ABxdHJSdJES/5cUWsR4cNyPd/ced+8AoVFlmtU1Dmi6baYTcSmXX5FCrxDQhzBERGVmGcnMQha+4+seAb7exXiW/7k/R79asBgQkIhnmWHaxOvE05u2wXmfWGRlWSU+J46adEHiR64rHr9xLrks8EzRzKbniEViqdTBSgezsqkRTxFHVE2nfCHnscp5i7NWrbHWPfkLwwV9OcN1miNIYBFJpCBBQQ0VVGEjRqtOioU07cd9/MOuP0UuhVwVMHLMYwMaZNcP/ge/u7WKkxNeUjgOdL84zscoENoFmnXH+T52nOYJEHwGrvS2f6MBzHySXm9rkSNgYBu4uG5ryh5wuQMMPRmyKbtSkKZQLALvZ/RNeWDwFuhd9Xpr7eP0AchSV0s3wMEhMFai7DWfd/d09vbvmVZ/P21dcqXiaaDUAAANGGlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4KPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iWE1QIENvcmUgNC40LjAtRXhpdjIiPgogPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4KICA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIgogICAgeG1sbnM6eG1wTU09Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9tbS8iCiAgICB4bWxuczpzdEV2dD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlRXZlbnQjIgogICAgeG1sbnM6ZGM9Imh0dHA6Ly9wdXJsLm9yZy9kYy9lbGVtZW50cy8xLjEvIgogICAgeG1sbnM6R0lNUD0iaHR0cDovL3d3dy5naW1wLm9yZy94bXAvIgogICAgeG1sbnM6dGlmZj0iaHR0cDovL25zLmFkb2JlLmNvbS90aWZmLzEuMC8iCiAgICB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iCiAgIHhtcE1NOkRvY3VtZW50SUQ9ImdpbXA6ZG9jaWQ6Z2ltcDoxMGUxMWRlMi0wNTI1LTQwM2ItOTZhYi1jODYxZDZmMTlhMGEiCiAgIHhtcE1NOkluc3RhbmNlSUQ9InhtcC5paWQ6NjIzZTNmZWMtYzg5Yi00MGVhLTljNjktMzFjYTgwODgwMGMyIgogICB4bXBNTTpPcmlnaW5hbERvY3VtZW50SUQ9InhtcC5kaWQ6MmM0NTNkMzQtNmI5Mi00NDJjLTlhY2ItMTgyNWYyNzQ0NjFhIgogICBkYzpGb3JtYXQ9ImltYWdlL3BuZyIKICAgR0lNUDpBUEk9IjIuMCIKICAgR0lNUDpQbGF0Zm9ybT0iV2luZG93cyIKICAgR0lNUDpUaW1lU3RhbXA9IjE2NDQ1ODIzMjkxMjA3NDQiCiAgIEdJTVA6VmVyc2lvbj0iMi4xMC4yNCIKICAgdGlmZjpPcmllbnRhdGlvbj0iMSIKICAgeG1wOkNyZWF0b3JUb29sPSJHSU1QIDIuMTAiPgogICA8eG1wTU06SGlzdG9yeT4KICAgIDxyZGY6U2VxPgogICAgIDxyZGY6bGkKICAgICAgc3RFdnQ6YWN0aW9uPSJzYXZlZCIKICAgICAgc3RFdnQ6Y2hhbmdlZD0iLyIKICAgICAgc3RFdnQ6aW5zdGFuY2VJRD0ieG1wLmlpZDpiM2YwMzU2NS0xNWQzLTQ4MGEtOGUxYi1kMmZlZTM3NDZmMmMiCiAgICAgIHN0RXZ0OnNvZnR3YXJlQWdlbnQ9IkdpbXAgMi4xMCAoV2luZG93cykiCiAgICAgIHN0RXZ0OndoZW49IjIwMjItMDItMTFUMTM6MjU6MjkiLz4KICAgIDwvcmRmOlNlcT4KICAgPC94bXBNTTpIaXN0b3J5PgogIDwvcmRmOkRlc2NyaXB0aW9uPgogPC9yZGY6UkRGPgo8L3g6eG1wbWV0YT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgIAo8P3hwYWNrZXQgZW5kPSJ3Ij8+OWQ6JAAAAAZiS0dEAP8A/wD/oL2nkwAAAAlwSFlzAAAN1wAADdcBQiibeAAAAAd0SU1FB+YCCwwZHVAUuvsAAAB7SURBVDjLY2AYviCq75gyMeqYcEkwMjIcjeo7Zky2AQwMDOKMjAwHY/qPe5JrAAMDAwP3f4b/G6L7jkWRawADAwMDGwMjw5LYCcfLyTUAL2AhQs0vhv8MiYsLLZeRY8BXRgbG0CVFltvJccHL//8ZvJcWWZ6laUIaBgAAEBYdvIFAlrEAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/shared/info-medium.png", data : "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABmJLR0QA/wD/AP+gvaeTAAACr0lEQVRYhe2XPUxTURiGn+/ctkKkQAxJERu1QkxcUJnAXVYSjG51UpEGTZx0kcQQBzcNFCW44axhddDERRYRFwfDryk/AhILJMLtvfc4SKG/cCkti77TyXd+njffPefc78C/Lilk0tmB1ZqErepESdB20IatY5vizM12Vf4smYH6aLxBiwpraAPO5xk2Jpph5bGHxjuqJ4piIDS4HsDS3WhuAl6XfhNoBpSiZ6LTv1iwgVMvVluUI6+BWpfgTC3jcGWqy/8h3wCVryP0fO2acuT9AeAANSjehvrXruYbkDMD9dHVS47IO+DIAeCpMnG4nCsTWQZCg+sBTP0FIVAkeFILhkXj+F3/Umow+xNYutsNvMInPGjxcb/Zx1Gvq8NUa3t4mBlMm1kfjTc4or7iYrc/aPFx64IPgIHPJk9GTDcmTBv73PdI9WQykJYBB3XdDRxAazejsuRTYoRTA560bqHN7Up9nxI523tJNG3Aox3klv5er7KUc1ZxpRM+pyZ2o2oFUjJgWioo4j6vtRVCU8AAYPSHzcK667niNY0gsAIpe0CLHHdNB5oCBn2tZfS1lm0bcSutqUu2tw2ILnBbFSKF3mkmDRjMHxrfYi7LgGk5sUPia7Pcns0ysFVMjB2CgdHkCUgzACCa4ZLjJZ2RZkB57CHA1Z1aoEzHsl+l+8lQKLrWi9BVCrrA08mI/15qLOtvqBQ9wEIJ+PMeQz/O4mUGJjr9i47S7cBmEeEbGqf9W0fl8p4GAGZuV34EwkUysYEmPB2pGsnVuWslcbo/3iyoNxReF85rnPZ8cNilKAWYjlSNGBaNQC/7Ox2mCM+8hm7cDQ77eJic7P91RokR3vqfX8y5mDDqaIa1bQ/N3KmecrNuQU+z4Mv4Md9v44RtSBDAsHXMLLdnU2+4/3KrPzu548SSV/k0AAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/default/haxeui.png", data : "iVBORw0KGgoAAAANSUhEUgAAAIgAAACICAMAAAALZFNgAAAC7lBMVEUAAACxubtjcotcaIKYmKs9RWc9Sl9jcYuutME+SGKstMPHyNhhcIrBxdNCT2esssBgbIiGiaLAwM56hZ5jb4zGydqyt8V7hJs6SF9hbYlfaYTGxtatssGmrb09SWB/iJ5/h56/wdFha4g+TWRhbIe0uMdhbYhue5dibonDxNXGx9lfbIU+TGOwtcM/TWXM1+h8hZy5vMumq7vBw9RvfJezuMfGyNaAiJ+Bi6NhbYhvfJfGx9g8S2Cpr71DUGh9h501Xotli7iiqbp8hZ2ytsV2gZg+TGNJdq55g5p/h569v89vfJZsdpLK1OWxtsRtepU8S2M7SmE9TGQ8SmHKyt26vs1+iJ5jb4tRXXU4V3s9VnZhbIfExddhbIdIVW3DxNWjqbtwfJWkqrtwe5ZgbIWkqbmmq7yCi6Ccss3N2OmrscBOW3M9TGO4u8uytsWus8JbZ4FKV298hZtWY3uqxOB7hZujqLlQXXW3vMtSXnU8Wn49S2KsscBseJTHyNnIyNifpbZve5VkibREUmp/iqGtssHHyNlGU2pkd5d/iqCkqrpRX3dib4mswdrEx9ebo7PFxtc+XYNufZmQmK2uv9S4vc+1uclUYXk6SWGxtsSutcNteZRebIW4u8tDd7JYe6k3VXmAjqWKk6iAiaBWY3uOl6pAdrSswdqtwdubsMuIlKtjboeQmKydtM+ZrclRd6dJYYGnr8B8h51UYnlJV3CmuNCPl6u+zeHM1uZjb4dga4Q+aZjG1OeWsM9mjbtTf7ONqMlNerBvkbtNaY9Yc5mUna+nv9qlu9Y4UHCLpMKKpMNomc08drVRiMR+p9OUttszZp2pxOLP3u9nmMxtnM5BerlckMlyoNBSh8Gbut3G2OyRtNqGrNbO3e5wns99ptJQhsCYuNxUicJ9ptOStdujwOBYjcdKgbxnl8tgksg6c7A1aJ+4z+edvN5kk8c2a6NEebM8cKiwyeRLgb03b6qbu944bqhMgryyyuWdu96j3pigAAAAy3RSTlMAAwQHBQUNCQcJDw8NBRULEAoJEBgLGRgfFCMYJBcRMCNrMSxYMSkkQTEjHFBEPfFEIyBWMisUFA5rQz8ZFGU+8vEsHWtYJPFsTkQsIOJWVUg4MSoeHVY3KsGjY19RUE46bFVNR0MyKvHwa2VZV049PDs3Nf5jTUs/HcBhVj02KGFg625rYC0fl3hpQy7vhHdGuHof1IliXkE1emZMN/7TvJdlXlU6/vLw7JVvSPDp1ayVi3Fb0VTx24V29/T09PTy7unBjYn06pPnxN39F5cAAAyOSURBVHjarNl5bIthHAdw64oqdZQ56xpzz2zUXWSOOOY29zGjc2/DzFBMGHHf9xFn3OK+ibhFHBUhrSORGH+0oo2I+M/v97zv26ft8x71vv3+tWTp+sn393vfvutTgiZGPiVUJQaj0+ligqPDiP1NqtCbTCZ9aEwQvSoLvCO+qV40aMHfizhMBoPBbDZXCI8ZAr8CzX9Z4F2IIbaSWEqXjoWQYsIYegMSjMEpC+F+ijMix0ApymUQBb5le0xlJuXKlUMMUoIr1BsMqLDZamOqhqW2zWYzGgEDvVCKAiMWqgBBO0g1kdRohxikUAk6KlUw2kCQArGEJBmSnp4OmrZljXEVzCZCUW6DKIDQvXv3eiFpjElLS2vevEqNithKSUGCY4E2UGFJTU3NwiSExGq1WiyAqW0jtSBFnmEABijQMGXKlLrBaUPSr1+/Ro3TOAp2wr/SUAnqQEVWRkaOHZNIUwDJ2b8bNMnQi60sS2HbIAxQgGHOnK6QVjQdMYsXLx4Rv65RzeYggenE0ELAAQy7PT8/MzPTkenADBCSnZ0Nnv0JVpgSQ5FkoAIEffr0GU7SU8hAyKRJk5uMiOckMBwdeTXvyLADorBwDWQ6SQ8hO3YUzRqQ3bdg/26GIs1ABRiOHJk3r/eKFb0DmQjZu3fZsoHjgIISHE4MvtxkNtqqguPKk8ePj68XcpzkBMn6E+u37dkBlsSc3WRCdFfkGKCYd+rc1KlnSaaG5c6de/cfxjdKqwKVEIiOFJKaZV//6tWXv8XFTvHkbdvTo4inWAiFXEEYVIgx5q04dTLPKZ4vL99+e/HiQW48VIKz4SdT1WLNyL/2iuTLj2IlCl5D9AoiChFGb2BIIzDfN0+e22hB+YowG4DAqsJksuyZt38Dg8EoUAwGPSY2NpTRU4rx5SMghBzYvC93ZM3yFctwEFiRFGtGoiPJiQaK+V0sSpkeoHD3lUpcKiOjcT/KUEBgfm4+unZuzeYAgSWBXYUVsebkFyV5qYI2I0pxcJSUFLj5G9tD8B6axjDkEBgPQkYuqFEqGJJdlOSmAhkMpWSlpqakbK1ta4d3cmC0mdO14yRgHApjuAiCzffXm3fOpxC9GXY1IccxPenNb0bBjEmgrCly5NszgGLZunUr3EORsRgYyyYiQxmBOfB64c75s0cuKF+qDFw25KJJTkhECF0SpWaQUpgJFLCQT5M2czpOIoxzSggaPwdZFYCURcgAgLBLwmIoZSNSztiPHTvWtSvMZGDPvUGM34hQiOf1whkMpGBAj6Q3zJLIYvKuAKXw6tUz+GnScxky8njEZzkEXRGAjJ/dIACJI40ghFkSeQxSNh4+fBg/TibybbgUEXRFxCGzAMIsiQIGKY9WY7YAg0EoxM9DqlNIreSmfRHCLokyJu/KqYsXD91jEMrxEEhLBlIfIMySRIJxPbvLLGZEKwKQLmGQZjzkjUuF5MPndy9UxAeQUcEQUzDEqcbx/LkaiV8C0ppAvKocqiQeAmkhAXGrcaiQ4IrIQCAuFQ5VEp80ZBpCnCocqiR+CUgnHuJV4VAl8ShA3CocKiS4IghZFAQxUAjGpcKhQuITgZhDIE4VDhUSvwAZjJBYMppQiFeFQ4XEQyAHFw0aPBQhOh4ybGWnCWM5iDtCx3sGwUiUVoSFtBUgGFekDi0SHw+ZCZDOdYTRxLUdtnRJAOKMcC6aJP4AZEgvgJQsSf7ljGubvnTJprHX30S6JF/BoU3i4SBPW+xCCFw0CBFuJBs+RbgkX2EuGiR0RboJVy9C6LYKlbg0OahEeUVG44ogRAcQfklwNnwlTmWHVomfK6TLTDIZoRFcEu5O0p8uiez1olni4Qohk4EVoV9dcbPhK3ErOTRLvnOFLBcmUzIGHEGzESpxyTu0S3xCIcGTCVw3tBKnvEO7xB9aCDpEK/HKO7RLPKSQLnwhsRTCPwoIlbhlHdolf8ILoRDyeUMrcck5tEt8oYWgQ6ISp5xDu8QfVAh/7UpU4pVzaJd4uEJa0kLCK1lZMGHHdqjELePQLvklFNKAFsJU0ncWqcQl7dAu8UkXItxek4VKnNIO7RI/FnJZZENoJenW/fA9CVTiZT/noifxQCEzxosWQitJKMjGStyMI3qSP6SQ+bNpIUwlRlqJi3FETeIjhaylhYhVUhUrKYJKnIxDs4SuSLdLWMgqelMVrwS+ce1Pl4RxaJZ45AuhleRgJW7GES3JHyiEft9MIWwluxMdUImLOqIpwRU5PwPOJMhzCJ6gSVZiycrJXHPhk5M6oivxYyG5MoUgRE9OTDLyCzf291JHdCWe8x3IIQ19MGODD0jkVA0qcVNHVCW/bt0cMy43npyfUQi7JXDgiZDCjddcxBF1yYHzN8fsyxXOaCQhenLyirO5UIyO6Etu3TjdkBxtliPP7tKzESCP7oAj+vn2gIfAYa8uMsg/Vu1gtYEQisLwpg/WR+8DyGEWs6ggpKU7N4JI18VFMOkfxzAn5wXyMeMYvfd+7P7PMl+ALF/N9w8lviPg1SwXaxIlviP8PrVY324+X4kS3xHyOz7fRzvr2NCqeiDxHD3b4YY2TtC9Bdy3+ChIfEdPwRZ//KeXBInv6Gk3f3p8JDwGSJD4jp6MY8DhwagKEtdxzTgp9pLV7IFcT89xQPDteI5QcFQ8OjwnQeI5RhoOz0fXCQkSzzGSeZ2YX7CqXij5DPfZcMGaXzmj7nPZbcdIwZVzfglPgsR9LyMNl/B5WUJyJcOBZJQlpoWaKkMCB7LhkcxKV1GGBA6koHQ1K+YlGRI4kIZi3qy8KRkSOJCM8uak4FtlSPjdMhsLviyBY4lgZ7MdoaAEzgeCJQKJ7wiNTYGHbRLJk9DBRcI2CRtHVZaEDmZD4witNCwRZrcdoaCV9qi5mGRK6OAiYXOR7VbJktDBZLZb2YCuMiV0MBsa0GzJRzFcsZ4jFLTkOaSQZEjgmKRhSIFjG5IhgWOSjLENDLJUGRI4pgEEoz1RT+ayG45Q/o32cNgp6YQEjmXaFTId/5JOSOBYJq8gVSckdKyzLUYEo05I6FinLIYmk05K/kq5Y5A2ojAO4FAjdugQaUAiFCWEJJDBUoRUoYgN0hYD2ZohZKgX6HpYQqcOEQcLtyQZDRUsdakgONilKIpQKEEECe0gUlyqKWqxJbVbv+9L7l5evjtfLv0LBjKcv7x3qHDv/x1X3KV+LYRuEfcS7lCndj3kcq8rCXeoI0HYUeOzva4k3KHOBUIcD18f7nUjAYf7/CaI03H0LhhH5ztbf6ruITVxHJ0f0L90izj99nNpfX19YfL8+JdbzL44oM8qC2fuENUKMLCwUCwuzJ0cnLrDXIjKAitxHHb4l/foHBCVypul1/PzuVwuD1WS90g5cIOpNyF2tZbOEF/pRxFj+e1TKLVoWjKYTzconWNqHGI2jq5UiC+EsBiouDsxMQsV0Ug5ExSUzjD77UUf7GAR5EyNkBigmB0amoYYqVQkC5QxQUHM92sxF1L1iZ6x0pOAEedbRCCq8FVZAUauwXg+PJyAhENGgFFUmLpUBjPrcTNQj+sEgYziY4sRjw8MxPw+XzQxGGIUxTbVWD2u8fhs5MoZUcUvel1ZA8aUBozp8HB8IEY9c6/X7/cxihKzX2g8urEgDxAy8/GvMwJiMp7lp7TxidEm4/6t/j4IWXxRW4rzNv2QKpSiVHpovx1iQYiR1MZfASNMjP6+Hg/8Cw4jAMCioHBMvfBSlEqpZkt788FEHEsIfIVIjFA47ovdxrK9B8YUUFQUkRMLUyvAzpg1W1E8/iQQEIGhb8hYbGH4sfTvAYBZPFZROAauXpCKx7g3uCSfd7a2trcf2WetmE+2MdqmIHBKORhM785NOmRzc257F54A++gWscrppXsP362ubmwsQ+YxZpEcm+SLeVLQvcEYEuWGoBgpHX7dgiWdHmNJp4PBTFZ/IcrptCT9TQlQVp9siG59shlNQ0UKGDRzgDGcKAGwZMvlTAY8UuCdcjaiB9BBD4BvmAMMYHNKJSipUkG0ZdCANW0AFAqG3QahJaXrER5dZwMM6C6BNYndKYn5C6OtMWD+QogUjKGgRBOIMYxAewwjFBocFCMdxJALrJZDqbtUMidRiCQgUVLgTAqPYCgpYCGMXRqXxM/Va13PHEsBFsBY8VnxI4IWQ6yGgiIsftDw0CXF2A9pEApaANMaL4aGlsBa9OFmSgwVBS0YLwsi2AezKJ6bPTi0xS44xgXibjQMWVBjEz4aRkjMwTY9UgjABtt0uiyYXhLJobclBrPY5b/HB7Hw8UH/AM3ZIm9FzQVkAAAAAElFTkSuQmCC"},{ name : "haxeui-core/locale/en/expression-replacements.properties", data : "emVybz1bMF09MA0Kbm9uZT1bMF09MA0Kb25lPVswXT0xDQptYW55PVswXT4xDQo"},{ name : "haxeui-core/styles/shared/sortable-asc-blue.png", data : ""},{ name : "haxeui-core/styles/shared/blank.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH4QIKDCIwjMBeawAAAB1pVFh0Q29tbWVudAAAAAAAQ3JlYXRlZCB3aXRoIEdJTVBkLmUHAAAAHElEQVQ4y2P8//8/AyWAiYFCMGrAqAGjBgwWAwBjmgMd7D3zQQAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/shared/right-arrow-square-blue.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAHCAYAAADEUlfTAAAEqXpUWHRSYXcgcHJvZmlsZSB0eXBlIGV4aWYAAHjarVdZlsMoDPzXKeYIlkAgjsP63txgjj8FttNZOp30YtoWLWMhVCVBqP/376B/cAmnjbxGCymEDZdPPklGx7b9yuvJm1/P/YqH5Fs9XV4IVA7S7f9aOMafer4Y2EVGT68MWT1elNsXyR/27c7QMZGbHgk67TCUDkNO9hd8GMj7sraQLF4vofRdHt/vYbC5NDzKqdVj8N3/PiJ6TTGPE+mO3YanOL874OYt5PLq5PUafruEvnNx6ePhCQLyWZy2K6/oAZWzx0/0d6C4sOsJittghov8VM/6efBphfhqZlcvM9/ofbkQ5SbI8x6jGY3R99VlHxDScCzqXMrqYWCBKbc+C2gRt6IfV0toRmBvBeRtq1tBq5xYEPfBnhtnHtyXrFzhopcuEVKkils6c1GSVLcR0PKz8ZAIxJozYFgBr4NWLr7wmjet6SobJm6MkcIwxjv88jftqaExJuWZN7vECn7JTAq4MZGbT4wCIDxOHukK8NnuL15M9Rg1w2xYYN7KbqIoH9yaPHILaIeBCrnnGsd2GECIMLfCGXZAYAvslANvUSQyI44GfDIMGZJGCiBgVWnwUrxzAeCYzLnxTeQ1VlR2NWoWgFAXkEg2UwpYeRQ28Cd6A4eyOvWqGjSqadIcXPBBQwgxzOKXo4s+agwxRospZnPmTS1YNCNLlpMkh+KoKaSYLKWUMybNsJzxdcaAnIsUV3zREkosVlLJFfSpvmoNNVajmmpu0lxDnWihxWYttdy5g0rdd+2hx2499TxAteGGHzrCiMNGGvmCGtMO60N7HzU+UZOF1BwYL6jh0xhPEzzLiU7MgJh4BuJxIgBCy8RsM/ZeaEI3MduSICtU4KVOcBpPxICg7yw6+ILdB3I3uJH3v8JNTuRoQvcXyNGE7glyj7h9glqbu03dHC2EZhrOoG4O6ReUvbIOH7AHz67XuUvdSZWt2/Q5bdGzR2ETy/iDscSldzgmLrY5z27Q148RX0l6NeArmVFFN0X04R0BSWyEa27I3RtF/R6lQFHnJ5LsY8QzSa8GvJLeXN6yddrdQ+Fbc2NvyR58lRSm8yE05+c95itOxTfG7fp8aYAbBE1a+lAhdVc2fiHpRrGgVG67v357Cv4hHS9vVEqk1sHe8PKTl5JeEe0lCZC40xnKCdW/CQ5uw88IIo6PmphQZ6Ll8Dyi9I2QfhlBemP9W8wMpqDoYKNGwTlZdJM89POkuM2Jd5nN3cJCAHGbNO3z1Ju8Sl/90GiKitORpBgSRoHXP0oVOnPlMVW+J+lDAUJojg1szTgey7eqUYahLwL4HUnXiuUMgmatBST7Pteb6UM/Sot7CSwJYGKzKH5c2FaKjYy6M5+ywqStxhZwhKztqUv0pc/fcJWe+upWVu3ZcaL8RfGmt4vyC6JdZX+1oRkHWkTD2ojYxLEU/6HFCmfh7h6luoeUbmlGf7KpgX70mm8Ve1ybR5XdzSdxoj/Z1OAdPQbQS1w/ibGzTY75eQNGYJaKTX7NH6pHEHHoCjv56Zebx0XSS+q9eUihXxxGnhp6Xk/eOKTQj/DCz6uGieh/0DPsUZQQ03EAAAGFaUNDUElDQyBwcm9maWxlAAB4nH2RPUjDQBzFX1O1IhUHK4g4ZKhOFkRFBBepYhEslLZCqw4ml35Bk4YkxcVRcC04+LFYdXBx1tXBVRAEP0AcnZwUXaTE/yWFFjEeHPfj3b3H3TtAqJeZanaMA6pmGclYVMxkV8XAKwQEMIBZdEnM1OOpxTQ8x9c9fHy9i/As73N/jl4lZzLAJxLPMd2wiDeIpzctnfM+cYgVJYX4nHjMoAsSP3JddvmNc8FhgWeGjHRynjhELBbaWG5jVjRU4inisKJqlC9kXFY4b3FWy1XWvCd/YTCnraS4TnMYMSwhjgREyKiihDIsRGjVSDGRpP2oh3/I8SfIJZOrBEaOBVSgQnL84H/wu1szPznhJgWjQOeLbX+MAIFdoFGz7e9j226cAP5n4Epr+St1YOaT9FpLCx8BfdvAxXVLk/eAyx1g8EmXDMmR/DSFfB54P6NvygL9t0DPmttbcx+nD0Caulq+AQ4OgdECZa97vLu7vbd/zzT7+wF8pXKr0kUkPQAADRhpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+Cjx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IlhNUCBDb3JlIDQuNC4wLUV4aXYyIj4KIDxyZGY6UkRGIHhtbG5zOnJkZj0iaHR0cDovL3d3dy53My5vcmcvMTk5OS8wMi8yMi1yZGYtc3ludGF4LW5zIyI+CiAgPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIKICAgIHhtbG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvbW0vIgogICAgeG1sbnM6c3RFdnQ9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZUV2ZW50IyIKICAgIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIKICAgIHhtbG5zOkdJTVA9Imh0dHA6Ly93d3cuZ2ltcC5vcmcveG1wLyIKICAgIHhtbG5zOnRpZmY9Imh0dHA6Ly9ucy5hZG9iZS5jb20vdGlmZi8xLjAvIgogICAgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIgogICB4bXBNTTpEb2N1bWVudElEPSJnaW1wOmRvY2lkOmdpbXA6YTJjZmUzZWYtMzE5Yi00YTlkLThlZGEtMzJhNDYzZjMwNmZlIgogICB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOjgxY2EwNjczLTJlODEtNGM3Mi1hNTM2LTg2MTJkYjc4YWY3NiIKICAgeG1wTU06T3JpZ2luYWxEb2N1bWVudElEPSJ4bXAuZGlkOmI0OGNmYzRiLTMxOGItNDEzNy1iMmZlLTEzYWZjM2E0ZTExZCIKICAgZGM6Rm9ybWF0PSJpbWFnZS9wbmciCiAgIEdJTVA6QVBJPSIyLjAiCiAgIEdJTVA6UGxhdGZvcm09IldpbmRvd3MiCiAgIEdJTVA6VGltZVN0YW1wPSIxNjQ0NDgyMjI4NDI1Mjg0IgogICBHSU1QOlZlcnNpb249IjIuMTAuMjQiCiAgIHRpZmY6T3JpZW50YXRpb249IjEiCiAgIHhtcDpDcmVhdG9yVG9vbD0iR0lNUCAyLjEwIj4KICAgPHhtcE1NOkhpc3Rvcnk+CiAgICA8cmRmOlNlcT4KICAgICA8cmRmOmxpCiAgICAgIHN0RXZ0OmFjdGlvbj0ic2F2ZWQiCiAgICAgIHN0RXZ0OmNoYW5nZWQ9Ii8iCiAgICAgIHN0RXZ0Omluc3RhbmNlSUQ9InhtcC5paWQ6ZWFmMzkzYzAtOGRlNy00NTlmLTg4MzItYWE2MGYyYTc0NWJlIgogICAgICBzdEV2dDpzb2Z0d2FyZUFnZW50PSJHaW1wIDIuMTAgKFdpbmRvd3MpIgogICAgICBzdEV2dDp3aGVuPSIyMDIyLTAyLTEwVDA5OjM3OjA4Ii8+CiAgICA8L3JkZjpTZXE+CiAgIDwveG1wTU06SGlzdG9yeT4KICA8L3JkZjpEZXNjcmlwdGlvbj4KIDwvcmRmOlJERj4KPC94OnhtcG1ldGE+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAKPD94cGFja2V0IGVuZD0idyI/Pj16UaAAAAAGYktHRAD/AP8A/6C9p5MAAAAJcEhZcwAADsQAAA7EAZUrDhsAAAAHdElNRQfmAgoIJQjxj+hWAAAAMklEQVQI12NggILQriP/GdAAEzIHXQETumpkBRiSyAqwSq4us2HEKgmTYMDnGAYGBgYAozYP8SPzNcgAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/shared/sortable-desc-dark.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAJCAIAAABxOqH0AAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAA0UlEQVQIHQHGADn/Ae0cJAAAAAAAAIdYUHmosAAAAAAAAAIAAAAAAACHWFAAAACJWlIAAAAAAAACAAAAh1hQAgICAgICAAAAjV5WAAAAAe0cJAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAANannwAAAAAAAAAAAAAAACpZYQIAAAAqWWEAAAAAAAAAAAAqWWEAAAACAAAAAAAAKllhAAAAKllhAAAAAAAAmeIQ3V5WWXgAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/default/treeviews.css", data : "LnRyZWV2aWV3IC5zY3JvbGx2aWV3LWNvbnRlbnRzIHsNCiAgICBzcGFjaW5nOiAwOw0KfQ0KDQoudHJlZXZpZXdub2RlIHsNCiAgICBzcGFjaW5nOiAwOw0KfQ0KDQoudHJlZXZpZXdub2RlIC5pdGVtcmVuZGVyZXIgew0KICAgIHdpZHRoOiBhdXRvOw0KICAgIHBhZGRpbmc6IDVweDsNCiAgICBib3JkZXItcmFkaXVzOiAycHg7DQogICAgY3Vyc29yOiBwb2ludGVyOw0KfQ0KDQoudHJlZXZpZXcgLml0ZW1yZW5kZXJlcjpob3ZlciB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJHNlbGVjdGlvbi1iYWNrZ3JvdW5kLWNvbG9yLWhvdmVyOw0KfQ0KDQoudHJlZXZpZXcgLml0ZW1yZW5kZXJlcjpub2RlLXNlbGVjdGVkIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2VsZWN0aW9uLWJhY2tncm91bmQtY29sb3I7DQp9DQoNCi50cmVldmlldyAuaXRlbXJlbmRlcmVyOm5vZGUtc2VsZWN0ZWQgLmxhYmVsIHsNCiAgICBjb2xvcjogJHNlbGVjdGlvbi10ZXh0LWNvbG9yOw0KfQ0KDQoudHJlZXZpZXdub2RlIC5iYXNpYy1yZW5kZXJlci1jb250YWluZXIgew0KICAgIHdpZHRoOiBhdXRvOw0KfQ0KICAgIA0KLnRyZWV2aWV3bm9kZSAuYmFzaWMtcmVuZGVyZXItbGFiZWwgew0KICAgIHdpZHRoOiBhdXRvOw0KfQ0KICAgIA0KLnRyZWVub2RlLWNvbnRhaW5lciB7DQogICAgc3BhY2luZzogMDsNCn0NCiAgICANCi50cmVlbm9kZS1jaGlsZC1jb250YWluZXIgew0KICAgIHBhZGRpbmctbGVmdDogMTZweDsNCiAgICBzcGFjaW5nOiAwOw0KfQ0KICAgIA0KLnRyZWVub2RlLWV4cGFuZC1jb2xsYXBzZS1pY29uIHsNCiAgICByZXNvdXJjZTogbm9uZTsNCn0NCg0KLnRyZWVub2RlLWV4cGFuZC1jb2xsYXBzZS1pY29uIHsNCiAgICByZXNvdXJjZTogJGJsYW5rOw0KICAgIGN1cnNvcjogbm9uZTsNCiAgICB2ZXJ0aWNhbC1hbGlnbjogY2VudGVyOw0KfQ0KICAgIA0KLnRyZWVub2RlLWV4cGFuZC1jb2xsYXBzZS1pY29uLm5vZGUtZXhwYW5kZWQgew0KICAgIHJlc291cmNlOiAkY29sbGFwc2VkOw0KICAgIGN1cnNvcjogcG9pbnRlcjsNCn0NCiAgICANCi50cmVlbm9kZS1leHBhbmQtY29sbGFwc2UtaWNvbi5ub2RlLWNvbGxhcHNlZCB7DQogICAgcmVzb3VyY2U6ICRleHBhbmRlZDsNCiAgICBjdXJzb3I6IHBvaW50ZXI7DQp9DQoNCi50cmVldmlldy5mdWxsLXdpZHRoIC5pdGVtcmVuZGVyZXIgew0KICAgIHdpZHRoOiAxMDAlOw0KfQ0KDQoudHJlZXZpZXcuZnVsbC13aWR0aCAuc2Nyb2xsdmlldy1jb250ZW50cyB7DQogICAgd2lkdGg6IDEwMCU7DQp9DQoNCi50cmVldmlldy5mdWxsLXdpZHRoIC50cmVldmlld25vZGUgew0KICAgIHdpZHRoOiAxMDAlOw0KfQ0KDQoudHJlZXZpZXcuZnVsbC13aWR0aCAudHJlZW5vZGUtY29udGFpbmVyIHsNCiAgICB3aWR0aDogMTAwJQ0KfQ0KDQoudHJlZXZpZXcuZnVsbC13aWR0aCAudHJlZW5vZGUtY2hpbGQtY29udGFpbmVyIHsNCiAgICB3aWR0aDogMTAwJTsNCn0"},{ name : "haxeui-core/locale/fr/formats.properties", data : "Zm9ybWF0cy5kYXRlLnNob3J0PSVkLyVtLyVZDQpmb3JtYXRzLmRlY2ltYWwuc2VwZXJhdG9yPSwNCg"},{ name : "haxeui-core/locale/it/formats.properties", data : "Zm9ybWF0cy5kYXRlLnNob3J0PSVkLyVtLyVZDQpmb3JtYXRzLmRlY2ltYWwuc2VwZXJhdG9yPSwNCg"},{ name : "images/info-critical.png", data : "iVBORw0KGgoAAAANSUhEUgAAABQAAAAUCAYAAACNiR0NAAACYElEQVQ4ja2UTUhUURTHf+/NBzOj86Y0SbJRDNM+aBAXbYKEIGjT4KKMViWtolVJRB8bo42QS6FwMVBE4aKQqEVM9LHJFoFONKWiaSaOis28mdLmzcx7cWcUZpw3Uul/896999zfPefce46EidSArwE4D/iBhjyLBPAKuA889nSE9LW7C4BqwGcHbgGXAIvZYatKZYywJHG68tzHkClQDfhcwHOgdT1QvnQDLRLV2vd2fhlYnZZXYAL8yAym1B1EOfEUpbULSSrMkCxhr95q7w9e33WkAAicBY6butFyGcprob4N9/aGomUBbapxBlq81m3ZsRrwiVx1lYwrMpj7ajG02LSpieK01N44ueOKSKEVEO56S/Hi73pQxh6STCySTCZLnrvf6zoK1Avg4ZJWgM1mY1ldyP6LHBqGYWpXpdiagN3WNe+sSM62ASiryU2/PEN8esjUziJLDn+zo1FcinM94L+o0m0tE8D5zQK+H1tOCODwZsCWNX0+HMmk5JXq2LCmFpKiBOOypyP0Na0bzzYCNEC/93ruDTCZrRSrLHUaBtr/Aj9/Xwr2BuNzQFg8GzwdoZFvvfsueFzWviLrT3fBruQ8iY0XLf/4mR491TMhmkM25IJqH+puvFhX5eiWJWx/41kkpoXab4/1Dc9kpgCRNr2g590JLg42e22DbpflQLnDUl0K9DulR9+G1f7Wm+NPZuPGBPACyIg1044NbLnmr/Af2qMcq6mw73TaZSWto0V/pRZCk0ujVx9ERlTNiAMfgJH8jZKozbV9Lk9uoFYUAeBY8UIV0QIzuQvOE/AHDz3A61MXy1QAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/shared/check-light.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAwAAAAMCAYAAABWdVznAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAA3XAAAN1wFCKJt4AAAAB3RJTUUH5QEaCTskh/mOvAAAAS5JREFUKM+NkbtKA2EQhb/ZrLIGL2BnExDEIr2FguADBLMo/IWFCF7AwiewEkRQ7GwUkXRiY4LZGASLtbIQK4tgo7VWgmBMdrM7FokQxBinO2fmzAczwj8qn78cFzuaCmu1U7vbcLlcHqyH0TUqqR7HweoWqDXiPSAFBBLHd38SCgVvBtW1ppJt13UrHQme5yWxOAZE4SGsV3cBOhIaMTvAGNBIEC/PGRMA2OfF4oSFXBFLMQyqK8aYKO95k8RsAIiwn53N3n8vsiwYRRlGdMl2+g5zvu+IcgJYAo9vA/1b7WRRVbkolo4UVltWBTQNxKIy7bqZ2/aAJSIa1D/XBc6alqZbvYOfw0DzD8aY6PVlZBEotfynpNO7+dsxpF3kfN8Zev9Y0AQ385nM82+BL3sbaMn2+wKIAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/default/sidebars.css", data : "LnNpZGViYXItbW9kYWwtYmFja2dyb3VuZCB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJG1vZGFsLWJhY2tncm91bmQtY29sb3I7DQogICAgb3BhY2l0eTogMC42MDsNCn0NCg0KLnNpZGViYXIgew0KICAgIG1hcmdpbjogNTBweDsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc29saWQtYmFja2dyb3VuZC1jb2xvcjsNCiAgICBwYWRkaW5nOiA1cHg7DQogICAgZmlsdGVyOiBkcm9wLXNoYWRvdygxLCA0NSwgIzAwMDAwMCwgMC4xLCAzMCwgMiwgMSwgMywgZmFsc2UpOw0KfQ0KICAgIA0KLnNpZGViYXI6bGVmdCB7DQogICAgYm9yZGVyLXJpZ2h0OiAxcHggc29saWQgJG5vcm1hbC1ib3JkZXItY29sb3I7DQp9DQoNCi5zaWRlYmFyOnJpZ2h0IHsNCiAgICBib3JkZXItbGVmdDogMXB4IHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOw0KfQ0KDQouc2lkZWJhcjp0b3Agew0KICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAkbm9ybWFsLWJvcmRlci1jb2xvcjsNCn0NCg0KLnNpZGViYXI6Ym90dG9tIHsNCiAgICBib3JkZXItdG9wOiAxcHggc29saWQgJG5vcm1hbC1ib3JkZXItY29sb3I7DQp9DQoNCg0KLnNpZGViYXI6bGVmdCAjY2xvc2VTaWRlQmFyIHsNCiAgICByZXNvdXJjZTogImhheGV1aS1jb3JlL3N0eWxlcy9kZWZhdWx0L2xlZnRfYXJyb3dfY2lyY2xlZC5wbmcgIjsNCiAgICBjdXJzb3I6IHBvaW50ZXI7DQp9DQoNCi5zaWRlYmFyOnJpZ2h0ICNjbG9zZVNpZGVCYXIgew0KICAgIHJlc291cmNlOiAiaGF4ZXVpLWNvcmUvc3R5bGVzL2RlZmF1bHQvcmlnaHRfYXJyb3dfY2lyY2xlZC5wbmcgIjsNCiAgICBjdXJzb3I6IHBvaW50ZXI7DQp9DQoNCi5zaWRlYmFyOnRvcCAjY2xvc2VTaWRlQmFyIHsNCiAgICByZXNvdXJjZTogImhheGV1aS1jb3JlL3N0eWxlcy9kZWZhdWx0L3VwX2Fycm93X2NpcmNsZWQucG5nICI7DQogICAgY3Vyc29yOiBwb2ludGVyOw0KfQ0KDQouc2lkZWJhcjpib3R0b20gI2Nsb3NlU2lkZUJhciB7DQogICAgcmVzb3VyY2U6ICJoYXhldWktY29yZS9zdHlsZXMvZGVmYXVsdC9kb3duX2Fycm93X2NpcmNsZWQucG5nICI7DQogICAgY3Vyc29yOiBwb2ludGVyOw0KfQ0KDQovKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi8qIEFOSU1BVElPTlMgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqLw0KLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQoNCi5zaWRlQmFyTW9kaWZ5Q29udGVudCB7DQogICAgYW5pbWF0aW9uOiBzaWRlQmFyTW9kaWZ5Q29udGVudCAwLjNzIGVhc2UgMHMgMTsNCn0NCg0KLnNpZGVCYXJSZXN0b3JlQ29udGVudCB7DQogICAgYW5pbWF0aW9uOiBzaWRlQmFyUmVzdG9yZUNvbnRlbnQgMC4zcyBlYXNlIDBzIDE7DQp9DQoNCiAgICANCkBrZXlmcmFtZXMgc2lkZUJhck1vZGlmeUNvbnRlbnQgew0KICAgIDAlIHsNCiAgICB9DQogICAgMTAwJSB7DQogICAgfQ0KfQ0KICAgIA0KQGtleWZyYW1lcyBzaWRlQmFyUmVzdG9yZUNvbnRlbnQgew0KICAgIDAlIHsNCiAgICB9DQogICAgMTAwJSB7DQogICAgfQ0KfQ0KICAgIA0KLnNob3dTaWRlQmFyTGVmdCB7DQogICAgYW5pbWF0aW9uOiBzaG93U2lkZUJhckxlZnQgMC4zcyBlYXNlIDBzIDE7DQp9DQouaGlkZVNpZGVCYXJMZWZ0IHsNCiAgICBhbmltYXRpb246IHNob3dTaWRlQmFyTGVmdCAwLjNzIGVhc2UgMHMgMSByZXZlcnNlIGJhY2t3YXJkczsNCn0NCiAgICANCkBrZXlmcmFtZXMgc2hvd1NpZGVCYXJMZWZ0IHsNCiAgICAwJSB7DQogICAgfQ0KICAgIDEwMCUgew0KICAgIH0NCn0NCg0KLnNob3dTaWRlQmFyUmlnaHQgew0KICAgIGFuaW1hdGlvbjogc2hvd1NpZGVCYXJSaWdodCAwLjNzIGVhc2UgMHMgMTsNCn0NCg0KLmhpZGVTaWRlQmFyUmlnaHQgew0KICAgIGFuaW1hdGlvbjogc2hvd1NpZGVCYXJSaWdodCAwLjNzIGVhc2UgMHMgMSByZXZlcnNlIGJhY2t3YXJkczsNCn0NCiAgICANCkBrZXlmcmFtZXMgc2hvd1NpZGVCYXJSaWdodCB7DQogICAgMCUgew0KICAgIH0NCiAgICAxMDAlIHsNCiAgICB9DQp9DQogICAgDQouc2hvd1NpZGVCYXJUb3Agew0KICAgIGFuaW1hdGlvbjogc2hvd1NpZGVCYXJUb3AgMC4zcyBlYXNlIDBzIDE7DQp9DQouaGlkZVNpZGVCYXJUb3Agew0KICAgIGFuaW1hdGlvbjogc2hvd1NpZGVCYXJUb3AgMC4zcyBlYXNlIDBzIDEgcmV2ZXJzZSBiYWNrd2FyZHM7DQp9DQogICAgDQpAa2V5ZnJhbWVzIHNob3dTaWRlQmFyVG9wIHsNCiAgICAwJSB7DQogICAgfQ0KICAgIDEwMCUgew0KICAgIH0NCn0NCiAgICANCi5zaG93U2lkZUJhckJvdHRvbSB7DQogICAgYW5pbWF0aW9uOiBzaG93U2lkZUJhckJvdHRvbSAwLjNzIGVhc2UgMHMgMTsNCn0NCi5oaWRlU2lkZUJhckJvdHRvbSB7DQogICAgYW5pbWF0aW9uOiBzaG93U2lkZUJhckJvdHRvbSAwLjNzIGVhc2UgMHMgMSByZXZlcnNlIGJhY2t3YXJkczsNCn0NCiAgICANCkBrZXlmcmFtZXMgc2hvd1NpZGVCYXJCb3R0b20gew0KICAgIDAlIHsNCiAgICB9DQogICAgMTAwJSB7DQogICAgfQ0KfQ0K"},{ name : "haxeui-core/styles/shared/error-large.png", data : ""},{ name : "haxeui-core/styles/shared/gripper-horizontal.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAoAAAAECAIAAAA4WjmaAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAJElEQVQImWN8K6PCgBswMTAwTEqOnpQcjZXBhEcrAwMDI37DARkxCkFtOZfXAAAAAElFTkSuQmCC"},{ name : "haxeui-core/locale/ru/formats.properties", data : "Zm9ybWF0cy5kYXRlLnNob3J0PSVkLSVtLSVZDQpmb3JtYXRzLmRlY2ltYWwuc2VwZXJhdG9yPSwNCg"},{ name : "haxeui-core/styles/default/menus.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogTUVOVUJBUg0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi5tZW51YmFyIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc29saWQtYmFja2dyb3VuZC1jb2xvcjsNCiAgICBwYWRkaW5nOiA2cHg7DQogICAgYm9yZGVyLWJvdHRvbS13aWR0aDogMXB4Ow0KICAgIGJvcmRlci1ib3R0b20tY29sb3I6ICRub3JtYWwtYm9yZGVyLWNvbG9yOw0KICAgIGZpbHRlcjogJG1lbnUtc2hhZG93Ow0KfQ0KDQoubWVudWJhci1idXR0b24gew0KICAgIGJhY2tncm91bmQtY29sb3I6ICRzb2xpZC1iYWNrZ3JvdW5kLWNvbG9yOw0KICAgIGJvcmRlcjogbm9uZTsNCiAgICBjb2xvcjogJG5vcm1hbC10ZXh0LWNvbG9yOw0KICAgIHZlcnRpY2FsLWFsaWduOiBjZW50ZXI7DQp9DQoNCi5tZW51YmFyLWJ1dHRvbjpob3ZlciB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJHNlbGVjdGlvbi1iYWNrZ3JvdW5kLWNvbG9yOw0KICAgIGNvbG9yOiAkc2VsZWN0aW9uLXRleHQtY29sb3I7DQp9DQoNCi8qDQoubWVudWJhci1idXR0b246YWN0aXZlIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2VsZWN0aW9uLWJhY2tncm91bmQtY29sb3ItaG92ZXI7DQogICAgY29sb3I6ICRob3Zlci10ZXh0LWNvbG9yOw0KfQ0KKi8NCg0KLm1lbnViYXItYnV0dG9uOmRvd24gew0KICAgIGJhY2tncm91bmQtY29sb3I6ICRzZWNvbmRhcnktYmFja2dyb3VuZC1jb2xvcjsNCiAgICBjb2xvcjogJGRvd24tdGV4dC1jb2xvcjsNCiAgICBib3JkZXI6IDFweCBzb2xpZCAkbm9ybWFsLWJvcmRlci1jb2xvcjsNCiAgICBib3JkZXItYm90dG9tLXdpZHRoOiAwcHg7DQogICAgYm9yZGVyLWJvdHRvbS1zaXplOiAwcHg7DQp9DQoNCi5tZW51YmFyLWJ1dHRvbi1uby1jaGlsZHJlbiB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJHNvbGlkLWJhY2tncm91bmQtY29sb3I7DQogICAgYm9yZGVyOiBub25lOw0KICAgIGNvbG9yOiAkbm9ybWFsLXRleHQtY29sb3I7DQogICAgdmVydGljYWwtYWxpZ246IGNlbnRlcjsNCn0NCg0KLm1lbnViYXItYnV0dG9uLW5vLWNoaWxkcmVuOmhvdmVyIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2VsZWN0aW9uLWJhY2tncm91bmQtY29sb3I7DQogICAgY29sb3I6ICRzZWxlY3Rpb24tdGV4dC1jb2xvcjsNCn0NCg0KLm1lbnViYXItYnV0dG9uLW5vLWNoaWxkcmVuOmRvd24gew0KICAgIGJhY2tncm91bmQtY29sb3I6ICRzZWNvbmRhcnktYmFja2dyb3VuZC1jb2xvcjsNCiAgICBjb2xvcjogJGRvd24tdGV4dC1jb2xvcjsNCiAgICBib3JkZXI6IDFweCBzb2xpZCAkbm9ybWFsLWJvcmRlci1jb2xvcjsNCn0NCg0KLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogTUVOVQ0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi5tZW51IHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2Vjb25kYXJ5LWJhY2tncm91bmQtY29sb3I7DQogICAgcGFkZGluZzogMXB4Ow0KICAgIGJvcmRlcjogMXB4IHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOw0KICAgIGZpbHRlcjogJG1lbnUtc2hhZG93Ow0KICAgIHNwYWNpbmc6IDA7DQogICAgaW5pdGlhbC13aWR0aDogMjAwcHg7DQp9DQoNCi5tZW51LmV4cGFuZGVkIHsNCiAgICBib3JkZXItdG9wLXdpZHRoOiAwcHg7DQogICAgYm9yZGVyLXRvcC1zaXplOiAwcHg7DQp9DQoNCi5tZW51LWZpbGxlciB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJG5vcm1hbC1ib3JkZXItY29sb3I7DQogICAgaGVpZ2h0OiAxcHg7DQp9DQoNCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCioqIE1FTlVJVEVNUw0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi5tZW51aXRlbSB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJHNlY29uZGFyeS1iYWNrZ3JvdW5kLWNvbG9yOw0KICAgIHdpZHRoOiAxMDAlOw0KICAgIHBhZGRpbmc6IDZweDsNCiAgICBwYWRkaW5nLWxlZnQ6IDEycHg7DQogICAgY3Vyc29yOiBwb2ludGVyOw0KfQ0KDQoubWVudWl0ZW0tbGFiZWwsIC5tZW51aXRlbS1jaGVja2JveCwgLm1lbnVpdGVtLW9wdGlvbmJveCwgLm1lbnVpdGVtLXNob3J0Y3V0LWxhYmVsIHsNCiAgICB2ZXJ0aWNhbC1hbGlnbjogY2VudGVyOw0KfQ0KDQoubWVudWl0ZW0tbGFiZWw6ZGlzYWJsZWQsIC5tZW51aXRlbS1zaG9ydGN1dC1sYWJlbDpkaXNhYmxlZCB7DQogICAgY29sb3I6ICRkaXNhYmxlZC10ZXh0LWNvbG9yOw0KfQ0KDQoubWVudWl0ZW0tc2hvcnRjdXQtbGFiZWwgew0KICAgIHRleHQtYWxpZ246IHJpZ2h0Ow0KICAgIHZlcnRpY2FsLWFsaWduOiBjZW50ZXI7DQogICAgaG9yaXpvbnRhbC1hbGlnbjogcmlnaHQ7DQp9DQoNCi5tZW51aXRlbS1pY29uIHsNCiAgICB2ZXJ0aWNhbC1hbGlnbjogY2VudGVyOw0KfQ0KDQoubWVudWl0ZW06aG92ZXIsIC5tZW51aXRlbTpzZWxlY3RlZCB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJHNlbGVjdGlvbi1iYWNrZ3JvdW5kLWNvbG9yOw0KfQ0KDQoubWVudWl0ZW0gLmxhYmVsOmhvdmVyLCAubWVudWl0ZW0gLmxhYmVsOnNlbGVjdGVkLA0KLm1lbnVpdGVtLWNoZWNrYm94OmhvdmVyLCAubWVudWl0ZW0tY2hlY2tib3g6c2VsZWN0ZWQsDQoubWVudWl0ZW0tb3B0aW9uYm94OmhvdmVyLCAubWVudWl0ZW0tb3B0aW9uYm94OnNlbGVjdGVkIHsNCiAgICBjb2xvcjogJHNlbGVjdGlvbi10ZXh0LWNvbG9yOw0KfQ0KDQoubWVudWl0ZW0tZXhwYW5kYWJsZSB7DQogICAgcmVzb3VyY2U6ICRhcnJvdy1yaWdodDsNCiAgICB2ZXJ0aWNhbC1hbGlnbjogImNlbnRlciI7DQp9DQoNCi5tZW51c2VwYXJhdG9yIHsNCiAgICBoZWlnaHQ6IDFweDsNCiAgICB3aWR0aDogMTAwJTsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkbm9ybWFsLWJvcmRlci1jb2xvcjsNCiAgICBob3Jpem9udGFsLWFsaWduOiAiY2VudGVyIjsNCn0NCg"},{ name : "haxeui-core/styles/shared/expanded-blue.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAADaXpUWHRSYXcgcHJvZmlsZSB0eXBlIGV4aWYAAHja7VZbciQpDPznFHsEJCEkjkNBEbE32ONvQj3G3W47POv52QgXXUjFQ0qUgibs//w9wl94OBKHpOa55BzxpJIKVygej6eummJa9fkRL+WhPdwdMBsFUo5Pz+f4q53igyWq0PSNIW9nx/bYUdJp358MnY5kImIo/TRUTkPCRwedBuqxrJiL29slbPsh+7USP94wq3HFxA7x/J0M0esKP8K8C0lEzZIOADJfDlKXUtGNcKAW6CwZdZJrSQjIqzjFN6jCMyu3Rh+0P5Ei+WgPaHgMZr7ly3bS18EPK8RvPEu7PT+0l3q7eAjyivHoHsbYj9XVlBHSfC7qWsrSMHBDyGVNyyiGV6HbKgXFA7K3gfIeW9xQGhVi0DIoUadKg/YlGzVATLyzQTI3ltXmYly4SQzgKc1Cg02KdHFw1kCvoJVvLLT8luWukcNxJ4xkgjE66Oc/Uz40NMZMeaLod6yAi+emAIzJ3KwxCoTQuPJIV4Cv8vxMXgUM6gqzY4E1boeJTenMrZlHsogWDFTIY6+R9dMAQgTfCjDI/UQxkyhlisZsRIijg58KQ45NwxsoIFXuQMnYGhnkOE/fmGO0xrLy0YwzC0QotpGBmiIVXCUcbMgfS44cqiqaVDWrqWvRmiWnrDlny/PwqyaWTC2bmVux6uLJ1bObe/DitXARHI5acrHipZRa4bTCcsXsigG1brzJljbd8mabb2WrDenTUtOWmzUPrbTauUvHOdFzt+699LrTjlTa06573m33vex1INWGjDR05GHDRxn1Zo3CQeu78nXW6GKNF1NzoN2sYarZZYLmcaKTMzDGicC4TQaQ0Dw5i04pcZjUTc5iYewKZaDUSU6nyRgYTDuxDrq5+8XcA28hpW/xxhdzYVL3J5gLk7oPmHvP2wvW+vy3aVHCYmhuwxnUKNh+GLB7Za/zT+3LMvzuhB9DP4b+x4ZGpWOXjIpbBf5BjvZESfGb17p3MnzUsaTkZSGz7LZNjbfdfNgLSOFzzIBWf0FLcRnDRea9DC87zrUsJPVzJF9E9AIZ3chKjLqCMGW4lAdJQ1qfqo4ZnfxJkL8W7GeJC0Ff6rwZ7PzWf/gmkFuG3wH0GbDwTSC3DP8B0I+hH0N/0pDhLlLCvwJpjAM7CC1lAAABg2lDQ1BJQ0MgcHJvZmlsZQAAeJx9kT1Iw0AcxV9TpaIVBzOIOGSoTi2IijhKFYtgobQVWnUwufQLmhiSFBdHwbXg4Mdi1cHFWVcHV0EQ/ABxdHJSdJES/5cUWsR4cNyPd/ced+8AoVFlmtU1Dmi6baYTcSmXX5FCrxDQhzBERGVmGcnMQha+4+seAb7exXiW/7k/R79asBgQkIhnmWHaxOvE05u2wXmfWGRlWSU+J46adEHiR64rHr9xLrks8EzRzKbniEViqdTBSgezsqkRTxFHVE2nfCHnscp5i7NWrbHWPfkLwwV9OcN1miNIYBFJpCBBQQ0VVGEjRqtOioU07cd9/MOuP0UuhVwVMHLMYwMaZNcP/ge/u7WKkxNeUjgOdL84zscoENoFmnXH+T52nOYJEHwGrvS2f6MBzHySXm9rkSNgYBu4uG5ryh5wuQMMPRmyKbtSkKZQLALvZ/RNeWDwFuhd9Xpr7eP0AchSV0s3wMEhMFai7DWfd/d09vbvmVZ/P21dcqXiaaDUAAANGGlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4KPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iWE1QIENvcmUgNC40LjAtRXhpdjIiPgogPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4KICA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIgogICAgeG1sbnM6eG1wTU09Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9tbS8iCiAgICB4bWxuczpzdEV2dD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlRXZlbnQjIgogICAgeG1sbnM6ZGM9Imh0dHA6Ly9wdXJsLm9yZy9kYy9lbGVtZW50cy8xLjEvIgogICAgeG1sbnM6R0lNUD0iaHR0cDovL3d3dy5naW1wLm9yZy94bXAvIgogICAgeG1sbnM6dGlmZj0iaHR0cDovL25zLmFkb2JlLmNvbS90aWZmLzEuMC8iCiAgICB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iCiAgIHhtcE1NOkRvY3VtZW50SUQ9ImdpbXA6ZG9jaWQ6Z2ltcDo3YzhmNGQ2ZC05Mjk0LTQ2ZWQtYmRhOS1hNDA1MDVlZjNmOTAiCiAgIHhtcE1NOkluc3RhbmNlSUQ9InhtcC5paWQ6MTFhMGRlODctY2RlYi00YmMxLWIwNGQtZmY4ZmY4NmZmN2RjIgogICB4bXBNTTpPcmlnaW5hbERvY3VtZW50SUQ9InhtcC5kaWQ6ZDNjOTZmYzktYWZlMy00YTJjLWIwNzgtNmUwM2QxZmQ1ZWEzIgogICBkYzpGb3JtYXQ9ImltYWdlL3BuZyIKICAgR0lNUDpBUEk9IjIuMCIKICAgR0lNUDpQbGF0Zm9ybT0iV2luZG93cyIKICAgR0lNUDpUaW1lU3RhbXA9IjE2NDQ1ODI0MDQ3ODc2NjUiCiAgIEdJTVA6VmVyc2lvbj0iMi4xMC4yNCIKICAgdGlmZjpPcmllbnRhdGlvbj0iMSIKICAgeG1wOkNyZWF0b3JUb29sPSJHSU1QIDIuMTAiPgogICA8eG1wTU06SGlzdG9yeT4KICAgIDxyZGY6U2VxPgogICAgIDxyZGY6bGkKICAgICAgc3RFdnQ6YWN0aW9uPSJzYXZlZCIKICAgICAgc3RFdnQ6Y2hhbmdlZD0iLyIKICAgICAgc3RFdnQ6aW5zdGFuY2VJRD0ieG1wLmlpZDplMTE5ZmRkMC04ODgwLTQ0NDQtYTg4MC02ODRlNTg4MGEzM2YiCiAgICAgIHN0RXZ0OnNvZnR3YXJlQWdlbnQ9IkdpbXAgMi4xMCAoV2luZG93cykiCiAgICAgIHN0RXZ0OndoZW49IjIwMjItMDItMTFUMTM6MjY6NDQiLz4KICAgIDwvcmRmOlNlcT4KICAgPC94bXBNTTpIaXN0b3J5PgogIDwvcmRmOkRlc2NyaXB0aW9uPgogPC9yZGY6UkRGPgo8L3g6eG1wbWV0YT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgIAo8P3hwYWNrZXQgZW5kPSJ3Ij8+QhhreAAAAAZiS0dEAP8A/wD/oL2nkwAAAAlwSFlzAAAN1wAADdcBQiibeAAAAAd0SU1FB+YCCwwaLCrn6QIAAACQSURBVDjLY2AYBQMPGJE5cROOK/37///ofwYGCRzqX//7999mebH1LZgAE7LsogLLewwMDO4MDAwfsWj+/P8/gyeyZgwDGBgYGJYUWl1iZGAMZGBg+Ikk/JuBgSF0WZHVWXT1TNjcuaTQcj8DA0MCAwPDPwYGhv8MDAypSwutdpIcQDH9x4pj+o8VjyYVGgMAhMInzjvMAn0AAAAASUVORK5CYII"},{ name : "images/bt_btn.png", data : "iVBORw0KGgoAAAANSUhEUgAAABQAAAAUCAYAAACNiR0NAAAB30lEQVQ4jbWUT0hUQRzHP/Ncalcqg1Ujoz/WhhiChUNBUFEHhdCiLnOQKOzk1UOnLkEHwUu3ziEE7yJY0M1d7JgvLAJRURSMkDwu+izQiZH3dPTN7nMPfQ4zvN/vN9/5ze/NbwQO/EAUgEHgAVCwIspACRgFxpTU2wdX7xP0A3EEeA0MAXWuzSymgadK6h9OQT8Q9cAn4E6KkE0I9Cqpi/sE/UCYeRzoq0EsxojeiDP1IuOzNLEz5/KVXDngnR+IHS3PD4Sp1au0NDqa3tB25Xwl9zXgcZzhPeBsmqChM7fExcstldxPzJABbtvWYw0ZstlsIjrD6Z1ZnvjJ9qUWlhdXD4bcjQXte0Z74RatTFTN9PrJX2xdOMXK8pptPu4HotGLiloz7flh15J6I/i7VrEy40zOPHe51syRv9uWqa8lpnZv0x49XaM00M86RUqzj/gTJkIWlNShF3XHoQj5Qmm+m811Z/QHM3hK6qWoS6oSMs3E/E02yon3wLAFvMVqvTbgG5C8LxFHc7iOGTOipH5B3HpK6jnAWeWYKmKTwMv4Y7f6Sur3QD+wmXZ8i4/AfSX134SgJXr1EDVdAQaAh0rqDdvhfLENfiBaze6mhYHm6JlaAD4DRSW1+RH/GeAfPnZ7KbIHhHsAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/shared/up-down-arrows-light.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAJCAIAAABxOqH0AAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAARElEQVQImWN8K6PCwMDAwMBwfMYEy4wCCJsJLgQnoaJwDpzNuGXLFgYMwAg3F0UUq1omuL1wYJlRwAShkIUQLoNw4NIA3UcXw9uo6KsAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/dark/scrollbars.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogQ0xBU1NJQyBWQVJJQU5UUw0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi5jbGFzc2ljLXNjcm9sbHMgLnNjcm9sbCwNCi5zY3JvbGwuY2xhc3NpYy1zY3JvbGxzIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmMyZjMwOw0KICAgIGJvcmRlcjpub25lOw0KfQ0KDQouY2xhc3NpYy1zY3JvbGxzIC5zY3JvbGwgLmJ1dHRvbiwNCi5zY3JvbGwuY2xhc3NpYy1zY3JvbGxzIC5idXR0b257DQogICAgYmFja2dyb3VuZC1jb2xvcjogIzJjMmYzMDsNCiAgICBib3JkZXI6bm9uZTsNCn0NCg0KLmNsYXNzaWMtc2Nyb2xscyAuc2Nyb2xsIC50aHVtYiwNCi5zY3JvbGwuY2xhc3NpYy1zY3JvbGxzIC50aHVtYiB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogIzNkNDA0MjsNCn0NCg0KLmNsYXNzaWMtc2Nyb2xscyAuc2Nyb2xsIC50aHVtYjpob3ZlciwNCi5zY3JvbGwuY2xhc3NpYy1zY3JvbGxzIC50aHVtYjpob3ZlciB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogIzQ1NDg0YTsNCn0NCg0KLmNsYXNzaWMtc2Nyb2xscyAuc2Nyb2xsIC50aHVtYjpkb3duLA0KLnNjcm9sbC5jbGFzc2ljLXNjcm9sbHMgLnRodW1iOmRvd24gew0KICAgIGJhY2tncm91bmQtY29sb3I6ICM0NTQ4NGE7DQp9DQoNCi5jbGFzc2ljLXNjcm9sbHMgLnNjcm9sbCAudGh1bWI6ZGlzYWJsZWQsDQouc2Nyb2xsLmNsYXNzaWMtc2Nyb2xscyAudGh1bWI6ZGlzYWJsZWQgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICMzMzM3Mzg7DQp9DQoNCi5jbGFzc2ljLXNjcm9sbHMgLnZlcnRpY2FsLXNjcm9sbCAuZGVpbmMsDQoudmVydGljYWwtc2Nyb2xsLmNsYXNzaWMtc2Nyb2xscyAuZGVpbmMgew0KICAgIGljb246ICJoYXhldWktY29yZS9zdHlsZXMvc2hhcmVkL3VwLWFycm93LWxpZ2h0LnBuZyI7DQp9DQoNCi5jbGFzc2ljLXNjcm9sbHMgLnZlcnRpY2FsLXNjcm9sbCAuZGVpbmM6ZG93biwNCi52ZXJ0aWNhbC1zY3JvbGwuY2xhc3NpYy1zY3JvbGxzIC5kZWluYzpkb3duIHsNCiAgICBpY29uOiAiaGF4ZXVpLWNvcmUvc3R5bGVzL3NoYXJlZC91cC1hcnJvdy1icmlnaHQucG5nIjsNCn0NCg0KLmNsYXNzaWMtc2Nyb2xscyAudmVydGljYWwtc2Nyb2xsIC5pbmMsDQoudmVydGljYWwtc2Nyb2xsLmNsYXNzaWMtc2Nyb2xscyAuaW5jIHsNCiAgICBpY29uOiAiaGF4ZXVpLWNvcmUvc3R5bGVzL3NoYXJlZC9kb3duLWFycm93LWxpZ2h0LnBuZyI7DQp9DQoNCi5jbGFzc2ljLXNjcm9sbHMgLnZlcnRpY2FsLXNjcm9sbCAuaW5jOmRvd24sDQoudmVydGljYWwtc2Nyb2xsLmNsYXNzaWMtc2Nyb2xscyAuaW5jOmRvd24gew0KICAgIGljb246ICJoYXhldWktY29yZS9zdHlsZXMvc2hhcmVkL2Rvd24tYXJyb3ctYnJpZ2h0LnBuZyI7DQp9DQoNCi5jbGFzc2ljLXNjcm9sbHMgLmhvcml6b250YWwtc2Nyb2xsIC5kZWluYywNCi5ob3Jpem9udGFsLXNjcm9sbC5jbGFzc2ljLXNjcm9sbHMgLmRlaW5jIHsNCiAgICBpY29uOiAiaGF4ZXVpLWNvcmUvc3R5bGVzL3NoYXJlZC9sZWZ0LWFycm93LWxpZ2h0LnBuZyI7DQp9DQoNCi5jbGFzc2ljLXNjcm9sbHMgLmhvcml6b250YWwtc2Nyb2xsIC5kZWluYzpkb3duLA0KLmhvcml6b250YWwtc2Nyb2xsLmNsYXNzaWMtc2Nyb2xscyAuZGVpbmM6ZG93biB7DQogICAgaWNvbjogImhheGV1aS1jb3JlL3N0eWxlcy9zaGFyZWQvbGVmdC1hcnJvdy1icmlnaHQucG5nIjsNCn0NCg0KLmNsYXNzaWMtc2Nyb2xscyAuaG9yaXpvbnRhbC1zY3JvbGwgLmluYywNCi5ob3Jpem9udGFsLXNjcm9sbC5jbGFzc2ljLXNjcm9sbHMgLmluYyB7DQogICAgaWNvbjogImhheGV1aS1jb3JlL3N0eWxlcy9zaGFyZWQvcmlnaHQtYXJyb3ctbGlnaHQucG5nIjsNCn0NCg0KLmNsYXNzaWMtc2Nyb2xscyAuaG9yaXpvbnRhbC1zY3JvbGwgLmluYzpkb3duLA0KLmhvcml6b250YWwtc2Nyb2xsLmNsYXNzaWMtc2Nyb2xscyAuaW5jOmRvd24gew0KICAgIGljb246ICJoYXhldWktY29yZS9zdHlsZXMvc2hhcmVkL3JpZ2h0LWFycm93LWJyaWdodC5wbmciOw0KfQ0K"},{ name : "haxeui-core/styles/default/optionboxes.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogT1BUSU9OQk9YDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLw0KLm9wdGlvbmJveCB7DQogICAgd2lkdGg6IGF1dG87DQogICAgaGVpZ2h0OiBhdXRvOw0KICAgIGhvcml6b250YWwtc3BhY2luZzogNHB4Ow0KICAgIGN1cnNvcjogcG9pbnRlcjsNCiAgICBjb2xvcjogJG5vcm1hbC10ZXh0LWNvbG9yOw0KfQ0KDQoub3B0aW9uYm94OmhvdmVyIHsNCn0NCg0KLm9wdGlvbmJveDpkaXNhYmxlZCB7DQogICAgY3Vyc29yOiBkZWZhdWx0Ow0KICAgIGNvbG9yOiAkZGlzYWJsZWQtdGV4dC1jb2xvcjsNCiAgICBib3JkZXItY29sb3I6ICRkaXNhYmxlZC1ib3JkZXItY29sb3I7DQp9DQoNCi5vcHRpb25ib3gtdmFsdWUgew0KICAgIGJvcmRlcjogMXB4IHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOw0KICAgIGJhY2tncm91bmQtY29sb3I6ICR0ZXJ0aWFyeS1iYWNrZ3JvdW5kLWNvbG9yOw0KICAgIHdpZHRoOiAxOHB4Ow0KICAgIGhlaWdodDogMThweDsNCiAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wOw0KICAgIGJvcmRlci1yYWRpdXM6IDlweDsNCiAgICBpY29uOiBub25lOw0KICAgIGZpbHRlcjogJG5vcm1hbC1pbm5lci1zaGFkb3c7DQogICAgY3Vyc29yOiBwb2ludGVyOw0KfQ0KDQoub3B0aW9uYm94LXZhbHVlOmhvdmVyIHsNCiAgICBib3JkZXI6IDFweCBzb2xpZCAkYWNjZW50LWNvbG9yOw0KfQ0KDQoub3B0aW9uYm94LXZhbHVlOmFjdGl2ZSB7DQogICAgYm9yZGVyOiAxcHggc29saWQgJGFjY2VudC1jb2xvcjsNCn0NCg0KLm9wdGlvbmJveC12YWx1ZTpzZWxlY3RlZCB7DQogICAgaWNvbjogJG9wdGlvbi1zZWxlY3RlZDsNCn0NCg0KLm9wdGlvbmJveC12YWx1ZTpkaXNhYmxlZCB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJHNvbGlkLWJhY2tncm91bmQtY29sb3ItZGlzYWJsZWQ7DQogICAgYm9yZGVyLWNvbG9yOiAkZGlzYWJsZWQtYm9yZGVyLWNvbG9yOw0KICAgIGN1cnNvcjogZGVmYXVsdDsNCn0NCg0KLm9wdGlvbmJveC1sYWJlbCB7DQogICAgdmVydGljYWwtYWxpZ246IGNlbnRlcjsNCiAgICBjdXJzb3I6IHBvaW50ZXI7DQp9DQoNCi5vcHRpb25ib3gtaWNvbiB7DQogICAgaG9yaXpvbnRhbC1hbGlnbjogY2VudGVyOw0KICAgIHZlcnRpY2FsLWFsaWduOiBjZW50ZXI7DQogICAgY3Vyc29yOiBwb2ludGVyOw0KICAgIG9wYWNpdHk6IDE7DQp9DQoNCi5vcHRpb25ib3gtaWNvbjpkaXNhYmxlZCB7DQogICAgY3Vyc29yOiBkZWZhdWx0Ow0KICAgIG9wYWNpdHk6IDAuNTsNCn0NCg"},{ name : "haxeui-core/styles/shared/gripper-vertical.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAQAAAAKCAIAAAAcmWhZAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAH0lEQVQImWN8K6PCAANMDAwMk5KjJyVHQzlwwEg7ZQCDgwyl+MMKdgAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/shared/option-blue.png", data : ""},{ name : "haxeui-core/styles/default/calendars.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogQ0FMRU5EQVINCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQouY2FsZW5kYXIgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICRkZWZhdWx0LWJhY2tncm91bmQtY29sb3I7DQogICAgcGFkZGluZzogNXB4Ow0KICAgIGJvcmRlcjogMXB4IHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOw0KICAgIGJvcmRlci1yYWRpdXM6IDFweDsNCn0NCg0KLmNhbGVuZGFyIC5idXR0b24gew0KICAgIHBhZGRpbmc6IDhweDsNCn0NCg0KLmNhbGVuZGFyIC5jYWxlbmRhci1vZmYtZGF5IHsNCiAgICBib3JkZXI6IG5vbmU7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJGRlZmF1bHQtYmFja2dyb3VuZC1jb2xvcjsNCiAgICBjdXJzb3I6IGRlZmF1bHQ7DQp9DQoNCi5jYWxlbmRhciAuY2FsZW5kYXItZGF5IHsNCiAgICBib3JkZXI6IG5vbmU7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJGFjY2VudC1jb2xvci1saWdodGVyOw0KfQ0KDQouY2FsZW5kYXIgLmNhbGVuZGFyLWRheTpob3ZlciB7DQogICAgYm9yZGVyOiBub25lOw0KICAgIGJhY2tncm91bmQtY29sb3I6ICRzZWxlY3Rpb24tYmFja2dyb3VuZC1jb2xvci1ob3ZlcjsNCn0NCg0KLmNhbGVuZGFyIC5jYWxlbmRhci1kYXktc2VsZWN0ZWQgew0KICAgIGJvcmRlcjogbm9uZTsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2VsZWN0aW9uLWJhY2tncm91bmQtY29sb3I7DQogICAgY29sb3I6ICRzZWxlY3Rpb24tdGV4dC1jb2xvcjsNCn0NCg0KDQovKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoqKiBDQUxFTkRBUlZJRVcNCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQouY2FsZW5kYXItdmlldyB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJGRlZmF1bHQtYmFja2dyb3VuZC1jb2xvcjsNCiAgICBwYWRkaW5nOiA1cHg7DQogICAgYm9yZGVyOiAxcHggc29saWQgJG5vcm1hbC1ib3JkZXItY29sb3I7DQogICAgYm9yZGVyLXJhZGl1czogMXB4Ow0KfQ0KDQouZHJvcGRvd24tcG9wdXAgPiAuY2FsZW5kYXItdmlldyB7DQogICAgYm9yZGVyOiBub25lOw0KfQ0KDQouY2FsZW5kYXItdmlldyAuY2FsZW5kYXIgew0KICAgIGJvcmRlcjogbm9uZTsNCiAgICBwYWRkaW5nOiAwcHg7DQp9DQoNCi5jYWxlbmRhci12aWV3IC5oYm94IHsNCiAgICBzcGFjaW5nOiAwOw0KfQ0KDQouY2FsZW5kYXItdmlldyAjcHJldi1tb250aCB7DQogICAgaWNvbjogJGFycm93LWxlZnQ7DQogICAgdmVydGljYWwtYWxpZ246IGNlbnRlcjsNCiAgICBib3JkZXI6IG5vbmU7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJGRlZmF1bHQtYmFja2dyb3VuZC1jb2xvcjsNCn0NCg0KLmNhbGVuZGFyLXZpZXcgI25leHQtbW9udGggew0KICAgIGljb246ICRhcnJvdy1yaWdodDsNCiAgICB2ZXJ0aWNhbC1hbGlnbjogY2VudGVyOw0KICAgIGJvcmRlcjogbm9uZTsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZGVmYXVsdC1iYWNrZ3JvdW5kLWNvbG9yOw0KfQ0KDQouY2FsZW5kYXItdmlldyAjY3VycmVudC1tb250aCB7DQogICAgdmVydGljYWwtYWxpZ246IGNlbnRlcjsNCn0NCg0KLmNhbGVuZGFyLXZpZXcgI2N1cnJlbnQteWVhciB7DQogICAgdGV4dC1hbGlnbjogcmlnaHQ7DQogICAgdmVydGljYWwtYWxpZ246IGNlbnRlcjsNCiAgICBib3JkZXI6IG5vbmU7DQogICAgcGFkZGluZy10b3A6IDFweDsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZGVmYXVsdC1iYWNrZ3JvdW5kLWNvbG9yOw0KfQ0KLmNhbGVuZGFyLXZpZXcgI2N1cnJlbnQteWVhciAuYnV0dG9uIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZGVmYXVsdC1iYWNrZ3JvdW5kLWNvbG9yOw0KICAgIGJvcmRlcjogbm9uZTsNCn0NCg"},{ name : "haxeui_rtti", data : "Ynk4OnVpLmxvZ2lub3kxMDpzdXBlckNsYXNzeTIzOmhheGUudWkuY29udGFpbmVycy52Ym94eTEwOnByb3BlcnRpZXNiaGd5MjU6dWkuZGlhbG9ncy5tYXJrZG93bnZpZXdlcm9SMXkzMzpoYXhlLnVpLmNvbnRhaW5lcnMuZGlhbG9ncy5kaWFsb2dSM2JoZ3kyMzp1aS5kaWFsb2dzLm1hcmtkb3duaGVscG9SMXkzNzpoYXhlLnVpLmNvbnRhaW5lcnMuZGlhbG9ncy5tZXNzYWdlYm94UjNiaGd5MjQ6aGF4ZS51aS50b29sdGlwcy50b29sdGlwb1IxeTIyOmhheGUudWkuY29udGFpbmVycy5ib3hSM2JoZ3kxNzpoYXhlLnVpLnByZWxvYWRlcm9SMVI5UjNiaGd5MjU6aGF4ZS51aS5jb3JlLml0ZW1yZW5kZXJlcm9SMVI5UjNiaGd5MzM6aGF4ZS51aS5jb3JlLmludGVyYWN0aXZlY29tcG9uZW50b1IxeTIyOmhheGUudWkuY29yZS5jb21wb25lbnRSM2J5MTY6YWxsb3dpbnRlcmFjdGlvbm95MTI6cHJvcGVydHlUeXBleTQ6Ym9vbHkxMjpwcm9wZXJ0eU5hbWVSMTRnaGd5MzI6aGF4ZS51aS5jb3JlLmNvbXBvbmVudHZhbGlkYXRpb25vUjF5Mjg6aGF4ZS51aS5jb3JlLmNvbXBvbmVudGV2ZW50c1IzYmhneTI4OmhheGUudWkuY29yZS5jb21wb25lbnRsYXlvdXRvUjFSMThSM2JoZ1IxOW9SMXkzMTpoYXhlLnVpLmNvcmUuY29tcG9uZW50Y29udGFpbmVyUjNiaGdSMjFvUjF5Mjg6aGF4ZS51aS5jb3JlLmNvbXBvbmVudGNvbW1vblIzYnk1OnZhbHVlb1IxNXk3OmR5bmFtaWNSMTdSMjNneTE1OnRvb2x0aXByZW5kZXJlcm9SMTV5OTpjb21wb25lbnRSMTdSMjVneTc6dG9vbHRpcG9SMTVSMjRSMTdSMjdneTQ6dGV4dG9SMTV5NjpzdHJpbmdSMTdSMjhneTg6ZGlzYWJsZWRvUjE1UjE2UjE3UjMwZ2hneTI4OmhheGUudWkuY29yZS5jb21wb25lbnRib3VuZHNvUjFSMjBSM2J5NTp3aWR0aG9SMTV5NTpmbG9hdFIxN1IzMmd5MTI6cGVyY2VudHdpZHRob1IxNVIzM1IxN1IzNGd5MTM6cGVyY2VudGhlaWdodG9SMTVSMzNSMTdSMzVneTY6aGVpZ2h0b1IxNVIzM1IxN1IzNmdoZ1IxM29SMXkyOTpoYXhlLnVpLmJhY2tlbmQuY29tcG9uZW50aW1wbFIzYmhneTMwOmhheGUudWkuY29yZS5iYXNpY2l0ZW1yZW5kZXJlcm9SMVIxMVIzYmhnUjJvUjFSOVIzYmhneTI4OmhheGUudWkuY29udGFpbmVycy50YWJsZXZpZXdvUjF5Mjk6aGF4ZS51aS5jb250YWluZXJzLnNjcm9sbHZpZXdSM2J5MTY6dmFyaWFibGVpdGVtc2l6ZW9SMTVSMTZSMTdSNDFneTEzOnNlbGVjdGlvbm1vZGVvUjE1UjQyUjE3UjQyZ3kxMzpzZWxlY3RlZGl0ZW1zb1IxNXkxODphcnJheSUzQ2R5bmFtaWMlM0VSMTdSNDNneTEyOnNlbGVjdGVkaXRlbW9SMTVSMjRSMTdSNDVneTE1OnNlbGVjdGVkaW5kaWNlc29SMTV5MTQ6YXJyYXklM0NpbnQlM0VSMTdSNDZneTEzOnNlbGVjdGVkaW5kZXhvUjE1eTM6aW50UjE3UjQ4Z3kyMjpsb25ncHJlc3NzZWxlY3Rpb250aW1lb1IxNVI0OVIxN1I1MGd5OTppdGVtd2lkdGhvUjE1UjMzUjE3UjUxZ3kxMDppdGVtaGVpZ2h0b1IxNVIzM1IxN1I1Mmd5OTppdGVtY291bnRvUjE1UjQ5UjE3UjUzZ3k2OmhlYWRlcm9SMTVSMjZSMTdSNTRneTEwOmRhdGFzb3VyY2VvUjE1eTIzOmRhdGFzb3VyY2UlM0NkeW5hbWljJTNFUjE3UjU1Z2hnUjQwb1IxUjEyUjNieTE2OnZzY3JvbGx0aHVtYnNpemVvUjE1UjMzUjE3UjU3Z3kxMDp2c2Nyb2xscG9zb1IxNVIzM1IxN1I1OGd5MTU6dnNjcm9sbHBhZ2VzaXplb1IxNVIzM1IxN1I1OWd5MTA6dnNjcm9sbG1heG9SMTVSMzNSMTdSNjBneTc6dmlydHVhbG9SMTVSMTZSMTdSNjFneTIwOnZlcnRpY2Fsc2Nyb2xscG9saWN5b1IxNXkxMjpzY3JvbGxwb2xpY3lSMTdSNjJneTk6dGh1bWJzaXplb1IxNVIzM1IxN1I2NGdSNjNvUjE1UjYzUjE3UjYzZ3kxMDpzY3JvbGxtb2Rlb1IxNVI2NVIxN1I2NWd5MTk6cGVyY2VudGNvbnRlbnR3aWR0aG9SMTVSMzNSMTdSNjZneTIwOnBlcmNlbnRjb250ZW50aGVpZ2h0b1IxNVIzM1IxN1I2N2d5MTY6aHNjcm9sbHRodW1ic2l6ZW9SMTVSMzNSMTdSNjhneTEwOmhzY3JvbGxwb3NvUjE1UjMzUjE3UjY5Z3kxNTpoc2Nyb2xscGFnZXNpemVvUjE1UjMzUjE3UjcwZ3kxMDpoc2Nyb2xsbWF4b1IxNVIzM1IxN1I3MWd5MjI6aG9yaXpvbnRhbHNjcm9sbHBvbGljeW9SMTVSNjNSMTdSNzJneTEyOmNvbnRlbnR3aWR0aG9SMTVSMzNSMTdSNzNneTg6Y29udGVudHNvUjE1UjI2UjE3Ujc0Z3kxNzpjb250ZW50bGF5b3V0bmFtZW9SMTVSMjlSMTdSNzVneTEzOmNvbnRlbnRoZWlnaHRvUjE1UjMzUjE3Ujc2Z3kxNTphdXRvaGlkZXNjcm9sbHNvUjE1UjE2UjE3Ujc3Z3kxNTphbGxvd2F1dG9zY3JvbGxvUjE1UjE2UjE3Ujc4Z2hneTI1OmhheGUudWkuY29udGFpbmVycy5oZWFkZXJvUjF5MjM6aGF4ZS51aS5jb250YWluZXJzLmhib3hSM2JoZ1I4MG9SMVI5UjNiaGd5MjQ6aGF4ZS51aS5jb250YWluZXJzLmdyb3Vwb1IxUjlSM2J5MTQ6c2VsZWN0ZWRvcHRpb25vUjE1UjI2UjE3UjgyZ3kxNDpjb21wb25lbnRncm91cG9SMTVSMjlSMTdSODNnaGd5MjM6aGF4ZS51aS5jb250YWluZXJzLmdyaWRvUjFSOVIzYmhnUjdvUjF5MzA6aGF4ZS51aS5iYWNrZW5kLm1lc3NhZ2Vib3hiYXNlUjNiaGdSNW9SMXkyNjpoYXhlLnVpLmJhY2tlbmQuZGlhbG9nYmFzZVIzYmhnUjlvUjFSMTNSM2J5NDppY29ub1IxNXk3OnZhcmlhbnRSMTdSODdnaGd5NTA6aGF4ZS51aS5jb250YWluZXJzLl90YWJsZXZpZXcuY29tcG91bmRpdGVtcmVuZGVyZXJvUjFSMTFSM2JoZ3kzMzpoYXhlLnVpLmNvbXBvbmVudHMudmVydGljYWxzY3JvbGxvUjF5MjU6aGF4ZS51aS5jb21wb25lbnRzLnNjcm9sbFIzYmhneTI4OmhheGUudWkuY29tcG9uZW50cy50ZXh0ZmllbGRvUjFSMTJSM2JSMjNvUjE1UjI5UjE3UjIzZ1IyOG9SMTVSMjlSMTdSMjhneTE5OnNlbGVjdGlvbnN0YXJ0aW5kZXhvUjE1UjQ5UjE3UjkzZ3kxNzpzZWxlY3Rpb25lbmRpbmRleG9SMTVSNDlSMTdSOTRneTEzOnJlc3RyaWN0Y2hhcnNvUjE1UjI5UjE3Ujk1Z3kxMTpwbGFjZWhvbGRlcm9SMTVSMjlSMTdSOTZneTg6cGFzc3dvcmRvUjE1UjE2UjE3Ujk3Z3k4Om1heGNoYXJzb1IxNVI0OVIxN1I5OGdSODdvUjE1UjI5UjE3Ujg3Z3k4Omh0bWx0ZXh0b1IxNVIyOVIxN1I5OWd5MTA6Y2FyZXRpbmRleG9SMTVSNDlSMTdSMTAwZ2hneTI3OmhheGUudWkuY29tcG9uZW50cy50ZXh0YXJlYW9SMVIxMlIzYnk0OndyYXBvUjE1UjE2UjE3UjEwMmdSMjNvUjE1UjI5UjE3UjIzZ1IyOG9SMTVSMjlSMTdSMjhnUjk2b1IxNVIyOVIxN1I5NmdSOTlvUjE1UjI5UjE3Ujk5Z1I1NW9SMTV5MjI6ZGF0YXNvdXJjZSUzQ3N0cmluZyUzRVIxN1I1NWd5MTg6YXV0b3Njcm9sbHRvYm90dG9tb1IxNVIxNlIxN1IxMDRnaGdSOTFvUjFSMTJSM2JSNjRvUjE1UjMzUjE3UjY0Z3kzOnBvc29SMTVSMzNSMTdSMTA1Z3k4OnBhZ2VzaXplb1IxNVIzM1IxN1IxMDZneTM6bWlub1IxNVIzM1IxN1IxMDdneTM6bWF4b1IxNVIzM1IxN1IxMDhneTk6aW5jcmVtZW50b1IxNVIzM1IxN1IxMDlnaGd5Mjg6aGF4ZS51aS5jb21wb25lbnRzLm9wdGlvbmJveG9SMXkyNzpoYXhlLnVpLmNvbXBvbmVudHMuY2hlY2tib3hSM2JSMjNvUjE1UjE2UjE3UjIzZ1I4Mm9SMTVSMjZSMTdSODJneTg6c2VsZWN0ZWRvUjE1UjE2UjE3UjExMmdSODNvUjE1UjI5UjE3UjgzZ2hneTI0OmhheGUudWkuY29tcG9uZW50cy5sYWJlbG9SMVIxM1IzYlIyM29SMTVSMjlSMTdSMjNnUjI4b1IxNVIyOVIxN1IyOGdSOTlvUjE1UjI5UjE3Ujk5Z2hneTI0OmhheGUudWkuY29tcG9uZW50cy5pbWFnZW9SMVIxM1IzYlIyM29SMTVSODhSMTdSMjNneTk6c2NhbGVtb2Rlb1IxNVIxMTVSMTdSMTE1Z3k4OnJlc291cmNlb1IxNVI4OFIxN1IxMTZneTEzOm9yaWdpbmFsd2lkdGhvUjE1UjMzUjE3UjExN2d5MTQ6b3JpZ2luYWxoZWlnaHRvUjE1UjMzUjE3UjExOGd5MTg6aW1hZ2V2ZXJ0aWNhbGFsaWdub1IxNXkxMzp2ZXJ0aWNhbGFsaWduUjE3UjExOWd5MTA6aW1hZ2VzY2FsZW9SMTVSMzNSMTdSMTIxZ3kyMDppbWFnZWhvcml6b250YWxhbGlnbm9SMTV5MTU6aG9yaXpvbnRhbGFsaWduUjE3UjEyMmdoZ3kzNTpoYXhlLnVpLmNvbXBvbmVudHMuaG9yaXpvbnRhbHNjcm9sbG9SMVI5MVIzYmhneTI4OmhheGUudWkuY29tcG9uZW50cy5kZWNvcmF0b3JvUjFSOVIzYmhneTI1OmhheGUudWkuY29tcG9uZW50cy5jb2x1bW5vUjF5MjU6aGF4ZS51aS5jb21wb25lbnRzLmJ1dHRvblIzYmhneTMyOmhheGUudWkuY29tcG9uZW50cy5jaGVja2JveHZhbHVlb1IxUjEyUjNiaGdSMTExb1IxUjEyUjNiUjIzb1IxNVIxNlIxN1IyM2dSMjhvUjE1UjI5UjE3UjI4Z1IxMTJvUjE1UjE2UjE3UjExMmdoZ3kyNTpoYXhlLnVpLmNvbXBvbmVudHMuY2FudmFzb1IxUjEzUjNiUjU1b1IxNVI1NlIxN1I1NWdoZ1IxMjdvUjFSMTJSM2JSMjNvUjE1UjI5UjE3UjIzZ3k2OnRvZ2dsZW9SMTVSMTZSMTdSMTMwZ1IyOG9SMTVSMjlSMTdSMjhnUjExMm9SMTVSMTZSMTdSMTEyZ3kxNDpyZXBlYXRpbnRlcnZhbG9SMTVSNDlSMTdSMTMxZ3k4OnJlcGVhdGVyb1IxNVIxNlIxN1IxMzJneTEzOnJlbWFpbnByZXNzZWRvUjE1UjE2UjE3UjEzM2dSODdvUjE1Ujg4UjE3Ujg3Z3kxNDplYXNlaW5yZXBlYXRlcm9SMTVSMTZSMTdSMTM0Z1I4M29SMTVSMjlSMTdSODNnaGdSODVvUjFSNVIzYmhnUjg2b1IxUjlSM2JoZ1IzN29SMXkyOTpoYXhlLnVpLmJhY2tlbmQuY29tcG9uZW50YmFzZVIzYmhnUjEzNW9SMVIzMVIzYmhnaA"},{ name : "haxeui-core/styles/default/splitters.css", data : "LnNwbGl0dGVyIHsNCiAgICBzcGFjaW5nOiAwOw0KfQ0KDQoudmVydGljYWwtc3BsaXR0ZXItZ3JpcHBlciB7DQogICAgd2lkdGg6IDEwMCU7DQogICAgaGVpZ2h0OiA2cHg7DQogICAgY3Vyc29yOiByb3ctcmVzaXplOw0KICAgIHBvaW50ZXItZXZlbnRzOiB0cnVlOw0KfQ0KDQoudmVydGljYWwtc3BsaXR0ZXItZ3JpcHBlcjpob3ZlciB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJHNvbGlkLWJhY2tncm91bmQtY29sb3I7DQp9DQoNCi52ZXJ0aWNhbC1zcGxpdHRlci1ncmlwcGVyOmRvd24gew0KICAgIGJhY2tncm91bmQtY29sb3I6ICRzb2xpZC1iYWNrZ3JvdW5kLWNvbG9yLWRvd247DQp9DQoNCi52ZXJ0aWNhbC1zcGxpdHRlci1ncmlwcGVyIC5pbWFnZSB7DQogICAgcmVzb3VyY2U6ICRncmlwcGVyLWhvcml6b250YWw7DQogICAgaG9yaXpvbnRhbC1hbGlnbjogY2VudGVyOw0KICAgIHZlcnRpY2FsLWFsaWduOiBjZW50ZXI7DQp9DQoNCi5ob3Jpem9udGFsLXNwbGl0dGVyLWdyaXBwZXIgew0KICAgIHdpZHRoOiA2cHg7DQogICAgaGVpZ2h0OiAxMDAlOw0KICAgIGN1cnNvcjogY29sLXJlc2l6ZTsNCiAgICBwb2ludGVyLWV2ZW50czogdHJ1ZTsNCn0NCg0KLmhvcml6b250YWwtc3BsaXR0ZXItZ3JpcHBlcjpob3ZlciB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJHNvbGlkLWJhY2tncm91bmQtY29sb3I7DQp9DQoNCi5ob3Jpem9udGFsLXNwbGl0dGVyLWdyaXBwZXI6ZG93biB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJHNvbGlkLWJhY2tncm91bmQtY29sb3ItZG93bjsNCn0NCg0KLmhvcml6b250YWwtc3BsaXR0ZXItZ3JpcHBlciAuaW1hZ2Ugew0KICAgIHJlc291cmNlOiAkZ3JpcHBlci12ZXJ0aWNhbDsNCiAgICBob3Jpem9udGFsLWFsaWduOiBjZW50ZXI7DQogICAgdmVydGljYWwtYWxpZ246IGNlbnRlcjsNCn0NCg"},{ name : "haxeui-core/locale/en_US/formats.properties", data : "Zm9ybWF0cy5kYXRlLnNob3J0PSVtLyVkLyVZDQo"},{ name : "haxeui-core/locale/es/formats.properties", data : "Zm9ybWF0cy5kYXRlLnNob3J0PSVkLyVtLyVZDQpmb3JtYXRzLmRlY2ltYWwuc2VwZXJhdG9yPSwNCg"},{ name : "haxeui-core/styles/shared/up-arrow-dark.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAECAIAAADNpLIqAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAKklEQVQImWN8K6PCwMDAwMCQbKIz98wVCJsJLgQnoaJwDpzNGBAQwIABAOGNCDDIObJsAAAAAElFTkSuQmCC"},{ name : "images/search_btn.png", data : "iVBORw0KGgoAAAANSUhEUgAAABQAAAAUCAYAAACNiR0NAAAACXBIWXMAAAsTAAALEwEAmpwYAAADl0lEQVQ4jY2UW2hcVRSGv3OdM3POzMnMJGkaa9BGcvFS2lollU6gttZGnwpCKSpU+lIvtFgMqQ8KPvhgRalIra14eamIWsEKIeAFCcE+pBJIRKxNNLS5zDSZTJK5ZM7dh0wwjkn1f1qsvdfHv9feewn96QRVCgONQBMQr+RywHVgCliqLlgteVUsAY0Cxq4oPUfUYMtWz6nRASQlV7SF4aE8pz4MKAwA04C3FlCoOJSAO0MceM5wTzybzS4IDtcLqOMZAOw7Nig0GbXJWJCX3zpj8fVZYHwt6IrDOpX9h/XyyRemc8NLcv1rpxVpYgDIVtaTvtuUmpp95fiGmpePBVqpaPPte0BmLYcysLfW7/10Kj2jqI1HusG9CMwCwco+oBbkJ+ypT95sbIhbs+Ljh4AfAHc1UARMjae6FuciUSnxwQVwLwEzq2BU4hlwe6XEua/yOSOmcfBRIFbtUATqNOGBjrI3bUnawE8VZ+up7FrMLzlpWxM6di67/jdQFzHjPkXPLjx4OxCt5Kule9bmNmuxdXsgFl0RMwHoawHtgHJZQBWsxdZOayH1MLCRvy9MAAzg3kJ631FBsmsFFDHAKgNONVAG5pzgz98lUi2qfqOxkNnV43t6bzjR9x2wACiu1dxSurn7adeK363HRh3JiStOMHwVmKsGCv3phCay6VCNdfFcJt83VypN2m45IYiSlReVUi7wpZDvGPUQaJJa8MKR28QGc0/NvHrgeZ/0Bap+jgiUfSYuO6FvvteFzmTE9AIlkhGDQK73LPMu3zGaEIKIrOXciOnZhpBKFoJLN/P52QYgUd1v6ZmXwgAFm/4/ovr2LWJpf0uAHCjm5ZwcnrCVcMYK6QuWSioWlR5JBr4qnz31hTHYbz3UvqNYCmn+NaBI5ZmtAF0gW6ZvKBSOROKRne2ytbdOdLZFVb/DNKS98UQi4tmR90c/OvNZtDBvqE7JVEYGnY5qqFA1bdTKDbfL3H+Pyo5mAJsrYy4//wJYv16JdX/57uauZO0mwbYslOi1pcMnJ98xTOdjYLwauLq3KsujjErjbUAB7vttKPrG56ebd69A9zzW6bR03HhbS5x/fa0HDOADZZbnYK4S+4AFjLRty/ccfHFsIDs7ERw9doJUZ5cUMnuvAs56wFvJAkZat+ZfffJ4y6gZ19xFrfu8IE38CJTXO/L/USzwNrYJYlZHsMeAScCT/6vqFloUpOlB/jmV+AtH6nRDhE1QLwAAAABJRU5ErkJgggBJRU5ErkJggsq/FQNnWbSrsjBdttbWlOOEatGVDPBEWWN4a/gSak40DYRhRaQJRJaanCmx6IUHgPs/fWG27Zzm080AAAAASUVORK5CYII"},{ name : "haxeui-core/styles/default/listview.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogTElTVFZJRVcNCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQoubGlzdHZpZXcgLmxpc3R2aWV3LWNvbnRlbnRzIHsNCiAgICBzcGFjaW5nOiAwOw0KICAgIHdpZHRoOiAxMDAlOw0KICAgIHBhZGRpbmc6IDBweDsNCn0NCg0KLmxpc3R2aWV3IC5saXN0dmlldy1jb250ZW50cyA+IC5pdGVtcmVuZGVyZXIgew0KICAgIGN1cnNvcjogcG9pbnRlcjsgIA0KfQ0KDQoubGlzdHZpZXcgLmxpc3R2aWV3LWNvbnRlbnRzID4gLml0ZW1yZW5kZXJlciAubGFiZWwgew0KICAgIGNvbG9yOiAkbm9ybWFsLXRleHQtY29sb3I7DQogICAgY3Vyc29yOiBwb2ludGVyOw0KfQ0KDQoubGlzdHZpZXcgLmV2ZW4gew0KICAgIGJhY2tncm91bmQtY29sb3I6ICR0ZXJ0aWFyeS1iYWNrZ3JvdW5kLWNvbG9yOw0KfQ0KDQoubGlzdHZpZXcgLmV2ZW46aG92ZXIgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICRzZWxlY3Rpb24tYmFja2dyb3VuZC1jb2xvci1ob3ZlcjsNCn0NCg0KLmxpc3R2aWV3IC5vZGQgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICRzb2xpZC1iYWNrZ3JvdW5kLWNvbG9yLWFsdDsNCn0NCg0KLmxpc3R2aWV3IC5vZGQ6aG92ZXIgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICRzZWxlY3Rpb24tYmFja2dyb3VuZC1jb2xvci1ob3ZlcjsNCn0NCg0KLmxpc3R2aWV3IC5saXN0dmlldy1jb250ZW50cyA+IC5pdGVtcmVuZGVyZXIgew0KICAgIGhlaWdodDogYXV0bzsNCiAgICBwYWRkaW5nOiA2cHg7DQp9DQoNCi5saXN0dmlldyAubGlzdHZpZXctY29udGVudHMgPiAuaXRlbXJlbmRlcmVyOnNlbGVjdGVkIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2VsZWN0aW9uLWJhY2tncm91bmQtY29sb3I7DQogICAgY29sb3I6ICRzZWxlY3Rpb24tdGV4dC1jb2xvcjsNCn0NCg0KLmxpc3R2aWV3IC5saXN0dmlldy1jb250ZW50cyA+IC5pdGVtcmVuZGVyZXI6c2VsZWN0ZWQgLmxhYmVsIHsNCiAgICBjb2xvcjogJHNlbGVjdGlvbi10ZXh0LWNvbG9yOw0KfQ0KDQoubGlzdHZpZXc6ZGlzYWJsZWQgLmxhYmVsIHsNCiAgICBjb2xvcjogJGRpc2FibGVkLXRleHQtY29sb3I7DQp9DQoNCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCioqIExJU1QgVklFVyAtIExFRlQgTUVOVSBBTFRFUk5BVEUNCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQoNCi5saXN0dmlldy5sZWZ0LW1lbnUgew0KICAgIGJvcmRlcjogbm9uZTsNCiAgICBwYWRkaW5nOiAwcHg7DQogICAgYm9yZGVyLXJhZGl1czogMDsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc29saWQtYmFja2dyb3VuZC1jb2xvcjsNCiAgICBtb2RlOiBtb2JpbGU7DQogICAgYm9yZGVyLXJpZ2h0OiAxcHggc29saWQgJG5vcm1hbC1ib3JkZXItY29sb3I7DQp9DQoNCi5saXN0dmlldy5sZWZ0LW1lbnUgLnZlcnRpY2FsLXNjcm9sbCAuZGVpbmMsIC5saXN0dmlldy5sZWZ0LW1lbnUgLnZlcnRpY2FsLXNjcm9sbCAuaW5jIHsNCiAgICBoaWRkZW46IHRydWU7DQp9DQoNCi5saXN0dmlldy5sZWZ0LW1lbnUgLnZlcnRpY2FsLXNjcm9sbCB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogbm9uZTsNCiAgICB3aWR0aDogOXB4Ow0KICAgIHBhZGRpbmc6IDJweDsNCn0NCg0KLmxpc3R2aWV3LmxlZnQtbWVudSAudmVydGljYWwtc2Nyb2xsIC50aHVtYiB7DQogICAgYmFja2dyb3VuZC1vcGFjaXR5OiAuMzsNCiAgICB3aWR0aDogNXB4Ow0KICAgIGJvcmRlci1yYWRpdXM6IDRweDsNCn0NCg0KLmxpc3R2aWV3LmxlZnQtbWVudSAubGlzdHZpZXctY29udGVudHMgew0KfQ0KICAgICAgICANCi5saXN0dmlldy5sZWZ0LW1lbnUgLmV2ZW4gew0KICAgIGJhY2tncm91bmQtY29sb3I6ICRzb2xpZC1iYWNrZ3JvdW5kLWNvbG9yOw0KICAgIGJvcmRlci1yaWdodDogMXB4IHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOw0KICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAkbm9ybWFsLWJvcmRlci1jb2xvcjsNCiAgICANCiAgICBwYWRkaW5nLXRvcDogOHB4Ow0KICAgIHBhZGRpbmctYm90dG9tOiA4cHg7DQp9DQoNCi5saXN0dmlldy5sZWZ0LW1lbnUgLmV2ZW46aG92ZXIgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICRzb2xpZC1iYWNrZ3JvdW5kLWNvbG9yLWhvdmVyOw0KICAgIGJvcmRlci1yaWdodDogMXB4IHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOw0KICAgIA0KICAgIHBhZGRpbmctdG9wOiA4cHg7DQogICAgcGFkZGluZy1ib3R0b206IDhweDsNCn0NCg0KLmxpc3R2aWV3LmxlZnQtbWVudSAub2RkIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc29saWQtYmFja2dyb3VuZC1jb2xvcjsNCiAgICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCAkbm9ybWFsLWJvcmRlci1jb2xvcjsNCiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgJG5vcm1hbC1ib3JkZXItY29sb3I7DQogICAgDQogICAgcGFkZGluZy10b3A6IDhweDsNCiAgICBwYWRkaW5nLWJvdHRvbTogOHB4Ow0KfQ0KDQoubGlzdHZpZXcubGVmdC1tZW51IC5vZGQ6aG92ZXIgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICRzb2xpZC1iYWNrZ3JvdW5kLWNvbG9yLWhvdmVyOw0KICAgIGJvcmRlci1yaWdodDogMXB4IHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOw0KICAgIA0KICAgIHBhZGRpbmctdG9wOiA4cHg7DQogICAgcGFkZGluZy1ib3R0b206IDhweDsNCn0NCg0KLmxpc3R2aWV3LmxlZnQtbWVudSAubGlzdHZpZXctY29udGVudHMgPiAuaXRlbXJlbmRlcmVyOnNlbGVjdGVkIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZGVmYXVsdC1iYWNrZ3JvdW5kLWNvbG9yOw0KICAgIGNvbG9yOiAkbm9ybWFsLXRleHQtY29sb3I7DQogICAgYm9yZGVyLXJpZ2h0OiAxcHggc29saWQgJGRlZmF1bHQtYmFja2dyb3VuZC1jb2xvcjsNCn0NCg0KDQoubGlzdHZpZXcubGVmdC1tZW51IC5saXN0dmlldy1jb250ZW50cyA+IC5pdGVtcmVuZGVyZXI6c2VsZWN0ZWQgLmxhYmVsIHsNCiAgICBjb2xvcjogJG5vcm1hbC10ZXh0LWNvbG9yOw0KfQ0KICAgIA0KLmxpc3R2aWV3LmxlZnQtbWVudSAudmVydGljYWwtc2Nyb2xsIHsNCiAgICBvcGFjaXR5OiAuNTsNCiAgICB3aWR0aDogOHB4Ow0KICAgIHBhZGRpbmc6IDJweDsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBub25lOw0KICAgIGJvcmRlcjogbm9uZTsNCn0NCg"},{ name : "haxeui-core/styles/default/colorpickers.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogQ09MT1IgUElDS0VSDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLw0KLmNvbG9yLXBpY2tlciB7DQogICAgcGFkZGluZzogMDsNCiAgICBib3JkZXItcmFkaXVzOiAkbm9ybWFsLWJvcmRlci1yYWRpdXM7DQogICAgaW5pdGlhbC13aWR0aDogMjcwcHg7DQogICAgaW5pdGlhbC1oZWlnaHQ6IDMwMHB4Ow0KfQ0KDQouY29sb3ItcGlja2VyIC5jb250cm9scy1jb250YWluZXIgew0KICAgIGJvcmRlcjogJG5vcm1hbC1ib3JkZXItc2l6ZSBzb2xpZCAkbm9ybWFsLWJvcmRlci1jb2xvcjsNCiAgICBwYWRkaW5nOiA1cHggMnB4Ow0KICAgIGJvcmRlci1yYWRpdXM6ICRub3JtYWwtYm9yZGVyLXJhZGl1czsNCiAgICBzcGFjaW5nOiAycHg7DQp9DQoNCi5jb2xvci1waWNrZXIgLmNvbnRyb2xzLWNvbnRhaW5lciAjcHJldkNvbnRyb2xzIHsNCiAgICByZXNvdXJjZTogaGF4ZXVpLWNvcmUvc3R5bGVzL3NoYXJlZC9sZWZ0LXNxdWFyZS1hcnJvdy1ibHVlLnBuZzsNCn0NCg0KLmNvbG9yLXBpY2tlciAuY29udHJvbHMtY29udGFpbmVyICNuZXh0Q29udHJvbHMgew0KICAgIHJlc291cmNlOiBoYXhldWktY29yZS9zdHlsZXMvc2hhcmVkL3JpZ2h0LXNxdWFyZS1hcnJvdy1ibHVlLnBuZzsNCn0NCg0KLmNvbG9yLXBpY2tlciAuY29udHJvbHMtY29udGFpbmVyIC50ZXh0ZmllbGQsIC5jb2xvci1waWNrZXIgI2lucHV0SGV4IHsNCiAgICB3aWR0aDogMjVweDsNCiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7DQogICAgYm9yZGVyOiBub25lOw0KICAgIGZpbHRlcjogbm9uZTsNCiAgICBib3JkZXItcmFkaXVzOiAwcHg7DQogICAgYm9yZGVyLWJvdHRvbTogJG5vcm1hbC1ib3JkZXItc2l6ZSBzb2xpZCAkbm9ybWFsLWJvcmRlci1jb2xvcjsNCiAgICBwYWRkaW5nOiAwcHg7DQogICAgcGFkZGluZy1ib3R0b206IDFweDsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBub25lOw0KICAgIHZlcnRpY2FsLWFsaWduOiBjZW50ZXI7DQp9DQoNCi5jb2xvci1waWNrZXIgI2lucHV0SGV4IHsNCiAgICB3aWR0aDogMTAwJTsNCn0NCg0KLmNvbG9yLXBpY2tlciAuY29udHJvbHMtY29udGFpbmVyIC5sYWJlbCB7DQogICAgd2lkdGg6IDU1cHg7DQogICAgdmVydGljYWwtYWxpZ246IGNlbnRlcjsNCn0NCg0KLmNvbG9yLXBpY2tlciAuY29udHJvbHMtY29udGFpbmVyIC5zbGlkZXIgew0KICAgIHdpZHRoOiAxMDAlOw0KICAgIHZlcnRpY2FsLWFsaWduOiBjZW50ZXI7DQp9DQoNCi8qIHNhdHVyYXRpb24gLyB2YWx1ZSAqLw0KLmNvbG9yLXBpY2tlciAjc2F0dXJhdGlvblZhbHVlQ29udGFpbmVyIHsNCiAgICBib3JkZXI6ICRub3JtYWwtYm9yZGVyLXNpemUgc29saWQgJG5vcm1hbC1ib3JkZXItY29sb3I7DQogICAgcGFkZGluZzogMXB4Ow0KICAgIGJvcmRlci1yYWRpdXM6ICRub3JtYWwtYm9yZGVyLXJhZGl1czsNCn0NCg0KLmNvbG9yLXBpY2tlciAjc2F0dXJhdGlvblZhbHVlSW5kaWNhdG9yIHsNCiAgICB3aWR0aDogMTBweDsNCiAgICBoZWlnaHQ6IDEwcHg7DQogICAgYm9yZGVyOiAycHggc29saWQgd2hpdGU7DQogICAgYm9yZGVyLW9wYWNpdHk6IC43Ow0KICAgIGJvcmRlci1yYWRpdXM6MTBweDsNCn0NCg0KLyogaHVlICovDQouY29sb3ItcGlja2VyICNodWVDb250YWluZXIgew0KICAgIGJvcmRlcjogJG5vcm1hbC1ib3JkZXItc2l6ZSBzb2xpZCAkbm9ybWFsLWJvcmRlci1jb2xvcjsNCiAgICBwYWRkaW5nOjFweCAycHg7DQogICAgYm9yZGVyLXJhZGl1czogJG5vcm1hbC1ib3JkZXItcmFkaXVzOw0KfQ0KDQouY29sb3ItcGlja2VyICNodWVJbmRpY2F0b3Igew0KICAgIGJvcmRlci1yYWRpdXM6MnB4Ow0KICAgIHBvaW50ZXItZXZlbnRzOm5vbmU7DQogICAgYmFja2dyb3VuZC1jb2xvcjp3aGl0ZTsNCiAgICBmaWx0ZXI6ZHJvcC1zaGFkb3coMiwgNDUsICM4ODg4ODgsIDAuMSwgNCwgMSwgMzAsIDM1LCBmYWxzZSk7DQp9DQoNCi8qIHByZXZpZXcgKi8NCi5jb2xvci1waWNrZXIgI2NvbG9yUHJldmlld0NvbnRhaW5lciB7DQogICAgYm9yZGVyOiAkbm9ybWFsLWJvcmRlci1zaXplIHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOw0KICAgIHBhZGRpbmc6IDJweDsNCiAgICBib3JkZXItcmFkaXVzOiAkbm9ybWFsLWJvcmRlci1yYWRpdXM7DQogICAgb3BhY2l0eTogMTsNCiAgICBmaWx0ZXI6IG5vbmU7DQp9DQoNCi5jb2xvci1waWNrZXI6ZGlzYWJsZWQgI2NvbG9yUHJldmlld0NvbnRhaW5lciB7DQogICAgZmlsdGVyOiBncmF5c2NhbGU7DQogICAgb3BhY2l0eTogLjM7DQp9DQoNCi5jb2xvci1waWNrZXIgI3NhdHVyYXRpb25WYWx1ZUdyYXBoIHsNCiAgICBvcGFjaXR5OiAxOw0KICAgIGZpbHRlcjogbm9uZTsNCn0NCg0KLmNvbG9yLXBpY2tlcjpkaXNhYmxlZCAjc2F0dXJhdGlvblZhbHVlR3JhcGggew0KICAgIGZpbHRlcjogZ3JheXNjYWxlOw0KICAgIG9wYWNpdHk6IC4zOw0KfQ0KDQouY29sb3ItcGlja2VyICNodWVHcmFwaCB7DQogICAgb3BhY2l0eTogMTsNCiAgICBmaWx0ZXI6IG5vbmU7DQp9DQoNCi5jb2xvci1waWNrZXI6ZGlzYWJsZWQgI2h1ZUdyYXBoIHsNCiAgICBmaWx0ZXI6IGdyYXlzY2FsZTsNCiAgICBvcGFjaXR5OiAuMzsNCn0NCg0KLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogQ09MT1IgUElDS0VSIFBPUFVQDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLw0KLmNvbG9yLXBpY2tlci1wb3B1cCB7DQogICAgcGFkZGluZy10b3A6IDRweDsNCiAgICBwYWRkaW5nLWJvdHRvbTogNHB4Ow0KICAgIHBhZGRpbmctbGVmdDogNHB4Ow0KICAgIHBhZGRpbmctcmlnaHQ6IDZweDsNCn0NCg0KLmNvbG9yLXBpY2tlci1wb3B1cCAjc2VsZWN0ZWRDb2xvclByZXZpZXdDb250YWluZXIgew0KICAgIHBhZGRpbmc6IDJweDsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2Vjb25kYXJ5LWJhY2tncm91bmQtY29sb3I7DQogICAgYm9yZGVyOiAxcHggc29saWQgJG5vcm1hbC1ib3JkZXItY29sb3I7DQogICAgYm9yZGVyLXJhZGl1czogMnB4Ow0KICAgIG9wYWNpdHk6IDE7DQogICAgZmlsdGVyOiBub25lOw0KfQ0KDQouY29sb3ItcGlja2VyLXBvcHVwOmRpc2FibGVkICNzZWxlY3RlZENvbG9yUHJldmlld0NvbnRhaW5lciB7DQogICAgZmlsdGVyOiBncmF5c2NhbGU7DQogICAgb3BhY2l0eTogLjM7DQp9DQoNCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCioqIENPTE9SIFBJQ0tFUiBWQVJJQU5UIC0gTk8gU0xJREVSUw0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi5jb2xvci1waWNrZXIubm8tc2xpZGVycyAuc2xpZGVyIHsNCiAgICBoaWRkZW46IHRydWU7DQp9DQoNCi5jb2xvci1waWNrZXIubm8tc2xpZGVycyAjY29udHJvbHNTdGFjayAubGFiZWwgew0KICAgIHdpZHRoOiAxMDAlOw0KfQ0KDQovKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoqKiBDT0xPUiBQSUNLRVIgVkFSSUFOVCAtIE5PIFRFWFQgSU5QVVRTDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLw0KLmNvbG9yLXBpY2tlci5uby10ZXh0LWlucHV0cyAudGV4dGZpZWxkIHsNCiAgICBoaWRkZW46IHRydWU7DQp9DQoNCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCioqIENPTE9SIFBJQ0tFUiBWQVJJQU5UIC0gTk8gQ09OVFJPTFMNCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQouY29sb3ItcGlja2VyLm5vLWNvbnRyb2xzIC5jb250cm9scy1wcmV2aWV3LWNvbnRhaW5lciB7DQogICAgaGlkZGVuOiB0cnVlOw0KfQ0K"},{ name : "haxeui-core/styles/default/last.css", data : "LmNvbXBvbmVudDphY3RpdmUgew0KICAgIF9fYm9yZGVyOiAxcHggc29saWQgJGFjY2VudC1jb2xvcjsNCn0NCg0KLmNvbXBvbmVudDphY3RpdmF0YWJsZSB7DQogICAgYm9yZGVyOiAxcHggc29saWQgJGFjY2VudC1jb2xvcjsNCn0NCg0K"},{ name : "haxeui-core/styles/shared/down-arrow-light.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAECAIAAADNpLIqAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAJElEQVQImWPcsmULAwZgsswoQBOyzChgglDIQgwMDEzIHLg0AIkLCIq+gFfgAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/shared/left-arrow-dark.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAQAAAAHCAIAAACgB3uHAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAANklEQVQImWN8K6PCwMDAwMCQbKLDBGcxMDAwwVkMDAzMt5zsGGCAae6ZKwgOAwMDnA81AMIHAN2yC5bbbdIbAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/shared/right-arrow-dark.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAQAAAAHCAIAAACgB3uHAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAL0lEQVQImWMMCAiYe+YKAwMDAwMDEwMDQ7KJDoID50M5ED6CM/fMFSY4C6oMbhoAEcwMOy/jUHEAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/shared/right-arrow-square-light.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAHCAIAAABLMMCEAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAMUlEQVQImWN8K6PCwMBwfMYEy4wCBhhggrOOz5iARRRZAkUULoEuCjGdCVMIRRTZDQD4NA07+SZ5fAAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/shared/up-arrow-blue.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAECAYAAABCxiV9AAAEAXpUWHRSYXcgcHJvZmlsZSB0eXBlIGV4aWYAAHja5VZZdsUmDP1nFV0CkhCC5TCe0x10+b1g++VNSdMmfzXHFhZC0xWDG3/9Od0feMh8ckEtxRyjxxNyyFzQSf54yv6SD/t7PHZSeuS7/bMeBktA5fhN8ZS/+HRTcJCCnt4pSu0cqI8D+TTA6UnRaUiWR4xOPxXlU5HwMUCngnKE5WNOdh9CHQc95x9pSCs0fOrF1VP46T8YstcVdoR5CInHlyUcDsh62UnZnYJhWoKgRQJaEZErVCTkXZ78nVfuBZWr94RK5vegSDwkHBiPyYw3+pZP+j75bqf4zrK0s8eP/JivjD0meb1z9uTmHEd0JUSkNJ5BXSHuHgQrUi57WkQzvIq+7ZbRkkP1NkDeffMVrVEmBiyTAnUqNGls2qjBxcCDDZS5AZXFS2KcuYl3QGlhFGiySZYuCcg1wCvg8s0X2nbzNtcowXAnSDJBGR3w8++0TxXNuUqeaCUz884V/OJVBHBjIbe+kAIgNK860p3gqz0/C1cBgrrTnBBg8fVQUZXO2lp1JBtogaCCHmuNrJ8KkCLYVjiD2g/kI4lSJG/MRoQ8JuBToChh0XAFBKTKHV5yEIkAJ/GyjTlGW5aVDzb2LAChEsUATZYCrAI2NtSPhYQaKioaVDWqadKsJUoMUWOMFtfmV0wsmFo0s2TZSpIUkqaYLCWXciqZs2Bz1Byz5ZRzLgVGCzQXzC4QKKVylRqq1litpppraSifFpq22Kwl13Irnbt07BM9duup514GDZTSCENHHDbSyKNMlNqUGabOOG2mmWe5oUbugPWlfR81ulDjjdQStBtqmGp2qaC1nejCDIhxICBuCwEUNC/MfKIQ2C3oFmaourWTMbzUBU6nhRgQDINYJ92w+0DuATcXwo9w4ws5t6D7DeTcgu4T5F5xe4NaX6dN8+I2QmsZrqR6wfKLSkFJZ4g4g1c36Dql/oG6UGqPiEsNTqEingSE6piK1VGtDwQaP1Pl/Ldtfk2Xol/xyf3Il9FrM8DaQ8JJ6wsK2+KsnZbR3Lcfm8FJG6EAcJPw+NxTsI0RwzXH3Sbda/FleFgKxcDsJd7ckBeFF3WfDXzQ7G0tMLh/eP8+Uvd5ClgOb6TXMbrclOfkd6Vhdd9R98y4KCp6htH8xBG87jUacqKxjmIrum46yn5gqW2J74X2lGQ6/EMCcWwADniOVRnc1vjA2hxsEIpVFL4IZtPDcaxrN60sL/+tYy/UvQxsX6yjoAtugHyYbn4Pl3U5LQoI0npx8t7+3PpVq11KphAZ25H/NI6vqPtSYLslI6+7U1/XvA93kLcclJH3EPECtXnk87/58UHdTxX8rxXhNtYBgfsbkBUChqlTc0oAAAGDaUNDUElDQyBwcm9maWxlAAB4nH2RPUjDQBzFX1OlohUHM4g4ZKhOLYiKOEoVi2ChtBVadTC59AuaGJIUF0fBteDgx2LVwcVZVwdXQRD8AHF0clJ0kRL/lxRaxHhw3I939x537wChUWWa1TUOaLptphNxKZdfkUKvENCHMEREZWYZycxCFr7j6x4Bvt7FeJb/uT9Hv1qwGBCQiGeZYdrE68TTm7bBeZ9YZGVZJT4njpp0QeJHrisev3EuuSzwTNHMpueIRWKp1MFKB7OyqRFPEUdUTad8IeexynmLs1atsdY9+QvDBX05w3WaI0hgEUmkIEFBDRVUYSNGq06KhTTtx338w64/RS6FXBUwcsxjAxpk1w/+B7+7tYqTE15SOA50vzjOxygQ2gWadcf5Pnac5gkQfAau9LZ/owHMfJJeb2uRI2BgG7i4bmvKHnC5Aww9GbIpu1KQplAsAu9n9E15YPAW6F31emvt4/QByFJXSzfAwSEwVqLsNZ9393T29u+ZVn8/bV1ypeJpoNQAAA0YaVRYdFhNTDpjb20uYWRvYmUueG1wAAAAAAA8P3hwYWNrZXQgYmVnaW49Iu+7vyIgaWQ9Ilc1TTBNcENlaGlIenJlU3pOVGN6a2M5ZCI/Pgo8eDp4bXBtZXRhIHhtbG5zOng9ImFkb2JlOm5zOm1ldGEvIiB4OnhtcHRrPSJYTVAgQ29yZSA0LjQuMC1FeGl2MiI+CiA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPgogIDxyZGY6RGVzY3JpcHRpb24gcmRmOmFib3V0PSIiCiAgICB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIKICAgIHhtbG5zOnN0RXZ0PSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvc1R5cGUvUmVzb3VyY2VFdmVudCMiCiAgICB4bWxuczpkYz0iaHR0cDovL3B1cmwub3JnL2RjL2VsZW1lbnRzLzEuMS8iCiAgICB4bWxuczpHSU1QPSJodHRwOi8vd3d3LmdpbXAub3JnL3htcC8iCiAgICB4bWxuczp0aWZmPSJodHRwOi8vbnMuYWRvYmUuY29tL3RpZmYvMS4wLyIKICAgIHhtbG5zOnhtcD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wLyIKICAgeG1wTU06RG9jdW1lbnRJRD0iZ2ltcDpkb2NpZDpnaW1wOjIyYzQ2ODgwLTQzNDktNDFjMS05NWJjLWZkZGNmYTk0OWIxMyIKICAgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDowNmYyYWY4Ni1jNjA4LTRlZTItOTUwMy1lM2QwOWY3MWRhNjgiCiAgIHhtcE1NOk9yaWdpbmFsRG9jdW1lbnRJRD0ieG1wLmRpZDoxMDAxNDQzZC1kM2RkLTQ2YmQtYjYzMi0xMWE5ODk4MTYyOWYiCiAgIGRjOkZvcm1hdD0iaW1hZ2UvcG5nIgogICBHSU1QOkFQST0iMi4wIgogICBHSU1QOlBsYXRmb3JtPSJXaW5kb3dzIgogICBHSU1QOlRpbWVTdGFtcD0iMTY0NDYxMjI3NzAwMjQxNyIKICAgR0lNUDpWZXJzaW9uPSIyLjEwLjI0IgogICB0aWZmOk9yaWVudGF0aW9uPSIxIgogICB4bXA6Q3JlYXRvclRvb2w9IkdJTVAgMi4xMCI+CiAgIDx4bXBNTTpIaXN0b3J5PgogICAgPHJkZjpTZXE+CiAgICAgPHJkZjpsaQogICAgICBzdEV2dDphY3Rpb249InNhdmVkIgogICAgICBzdEV2dDpjaGFuZ2VkPSIvIgogICAgICBzdEV2dDppbnN0YW5jZUlEPSJ4bXAuaWlkOjQwN2YyZDllLWYyYzUtNDY2My04YzEyLTRkNjcyMGZhZDM0MSIKICAgICAgc3RFdnQ6c29mdHdhcmVBZ2VudD0iR2ltcCAyLjEwIChXaW5kb3dzKSIKICAgICAgc3RFdnQ6d2hlbj0iMjAyMi0wMi0xMVQyMTo0NDozNyIvPgogICAgPC9yZGY6U2VxPgogICA8L3htcE1NOkhpc3Rvcnk+CiAgPC9yZGY6RGVzY3JpcHRpb24+CiA8L3JkZjpSREY+CjwveDp4bXBtZXRhPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgCjw/eHBhY2tldCBlbmQ9InciPz7T4nLNAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAB3RJTUUH5gILFCwkvxUCjQAAACNJREFUCNdjYEACoV1H/iPzGbFJrC6zYYRLouuAKWDEJgEDACRXDUjpoGrXAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/shared/up-arrow-bright.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAECAIAAADNpLIqAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAK0lEQVQImWN8K6PCwMDAwMAg9Pj2O1lVCJsJLgQnoaJwDpzN+P//fwYMAADCtw5xBtAKnQAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/default/cards.css", data : "LmNhcmQgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICR0ZXJ0aWFyeS1iYWNrZ3JvdW5kLWNvbG9yOw0KICAgIGZpbHRlcjogZHJvcC1zaGFkb3coMCwgNDUsICMwMDAwMDAsIDAuMSwgNSwgMSwgMSwgMywgZmFsc2UpOw0KICAgIGJvcmRlci1yYWRpdXM6IDRweDsNCiAgICBwYWRkaW5nOiAxNXB4Ow0KfQ0KDQouY2FyZC10aXRsZS1sYWJlbCB7DQogICAgZm9udC1zaXplOiAxNnB4Ow0KICAgIGNvbG9yOiAkbm9ybWFsLXRleHQtY29sb3I7DQogICAgZm9udC1ib2xkOiB0cnVlOw0KfQ0KDQouY2FyZC10aXRsZS1jb250YWluZXIgew0KICAgIHBhZGRpbmctYm90dG9tOiA1cHg7DQogICAgd2lkdGg6IDEwMCU7DQp9DQoNCi5jYXJkLXRpdGxlLWxpbmUgew0KICAgIGhlaWdodDogMXB4Ow0KICAgIHdpZHRoOiAxMDAlOw0KICAgIGJhY2tncm91bmQtY29sb3I6ICRub3JtYWwtYm9yZGVyLWNvbG9yOw0KfQ0K"},{ name : "haxeui-core/styles/default/progressbars.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogUFJPR1JFU1MNCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQpAa2V5ZnJhbWVzIGluZGV0ZXJtaW5hdGUgew0KICAgIDAlIHsNCiAgICAgICAgc3RhcnQ6IDA7DQogICAgICAgIGVuZDogMjU7DQogICAgfQ0KICAgIDUwJSB7DQogICAgICAgIHN0YXJ0OiA3NTsNCiAgICAgICAgZW5kOiAxMDA7DQogICAgfQ0KICAgIDEwMCUgew0KICAgICAgICBzdGFydDogMDsNCiAgICAgICAgZW5kOiAyNTsNCiAgICB9DQp9DQoNCi5wcm9ncmVzczppbmRldGVybWluYXRlIHsNCiAgICBhbmltYXRpb246IGluZGV0ZXJtaW5hdGUgMXMgZWFzZSAwcyBpbmZpbml0ZTsNCn0NCg0KLnByb2dyZXNzLXZhbHVlIHsNCiAgICBib3JkZXI6IG5vbmU7DQogICAgYm9yZGVyLXJhZGl1czogMXB4Ow0KfQ0KDQouaG9yaXpvbnRhbC1wcm9ncmVzcyB7DQogICAgYmFja2dyb3VuZDogJG5vcm1hbC1iYWNrZ3JvdW5kLWNvbG9yLWVuZCAkbm9ybWFsLWJhY2tncm91bmQtY29sb3Itc3RhcnQgdmVydGljYWw7DQogICAgaW5pdGlhbC13aWR0aDogMTUwcHg7DQogICAgaW5pdGlhbC1oZWlnaHQ6IDhweDsNCn0NCg0KLmhvcml6b250YWwtcHJvZ3Jlc3MgLnByb2dyZXNzLXZhbHVlIHsNCiAgICBiYWNrZ3JvdW5kOiAkYWNjZW50LWdyYWRpZW50LXN0YXJ0ICRhY2NlbnQtZ3JhZGllbnQtZW5kIHZlcnRpY2FsOw0KICAgIGhlaWdodDogMTAwJTsNCn0NCg0KLmhvcml6b250YWwtcHJvZ3Jlc3M6ZGlzYWJsZWQgew0KICAgIGJvcmRlci1jb2xvcjogJGRpc2FibGVkLWJvcmRlci1jb2xvcjsNCn0NCg0KLmhvcml6b250YWwtcHJvZ3Jlc3M6ZGlzYWJsZWQgLnByb2dyZXNzLXZhbHVlIHsNCiAgICBiYWNrZ3JvdW5kOiAkZGlzYWJsZWQtYmFja2dyb3VuZC1jb2xvci1zdGFydCAkZGlzYWJsZWQtYmFja2dyb3VuZC1jb2xvci1lbmQgdmVydGljYWw7DQp9DQoNCi52ZXJ0aWNhbC1wcm9ncmVzcyB7DQogICAgYmFja2dyb3VuZDogJG5vcm1hbC1iYWNrZ3JvdW5kLWNvbG9yLWVuZCAkbm9ybWFsLWJhY2tncm91bmQtY29sb3Itc3RhcnQgaG9yaXpvbnRhbDsNCiAgICBpbml0aWFsLXdpZHRoOiA4cHg7DQogICAgaW5pdGlhbC1oZWlnaHQ6IDE1MHB4Ow0KfQ0KDQoudmVydGljYWwtcHJvZ3Jlc3MgLnByb2dyZXNzLXZhbHVlIHsNCiAgICBiYWNrZ3JvdW5kOiAkYWNjZW50LWdyYWRpZW50LXN0YXJ0ICRhY2NlbnQtZ3JhZGllbnQtZW5kIGhvcml6b250YWw7DQogICAgd2lkdGg6IDEwMCU7DQp9DQoNCi52ZXJ0aWNhbC1wcm9ncmVzczpkaXNhYmxlZCAucHJvZ3Jlc3MtdmFsdWUgew0KICAgIGJhY2tncm91bmQ6ICRkaXNhYmxlZC1iYWNrZ3JvdW5kLWNvbG9yLXN0YXJ0ICRkaXNhYmxlZC1iYWNrZ3JvdW5kLWNvbG9yLWVuZCBob3Jpem9udGFsOw0KfQ0KDQoudmVydGljYWwtcHJvZ3Jlc3M6ZGlzYWJsZWQgew0KICAgIGJvcmRlci1jb2xvcjogJGRpc2FibGVkLWJvcmRlci1jb2xvcjsNCn0NCg"},{ name : "haxeui-core/styles/shared/up-square-arrow-blue.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAADc3pUWHRSYXcgcHJvZmlsZSB0eXBlIGV4aWYAAHja7ZddcuwoDIXfWcUsAUmAxHIwP1Wzg7v8OWDspDs9VZPkTtV9iEkDFrI46AN3x/Vffw/3Fy72nFyIaimn5HGFHDIXdMyfV1k1+bDqfeOvzoPd3QMMk6CV89bS9r/s5B8iUUEvvgtkdQ8cjwM57Pj2FGhPJFMRo9N2oLwDCZ8DtAOUc1k+ZdP3Szj62bZrJXZ+3KzGlRM9m+f7oMhei5hHmLuQeNQifAqQ+WEnBQOMmiXDkeAwLRn1uQo6E/IqT/eVoWhMqeGl0wOVu0ev7e6ZVuDtIk9JTnf70u4ovqayUv9u5mC7x4/2fJyhnH/K/kr+aDbWmrGKEhJSnfai7qwtKKMdmGJObQ7xEugk7CFDO0tGMezqiq3QfPUHSqVMDFyDAjUqNKivtlKFxMDdsaLDXFmW0UQ5c5XJL8xCgxUMmxi41oU9CN9aaE2bfXVrNsPMjeDKhGBzO3y6uM8+MMY8CkTe7lxBF/NMNmRMcrOGG4jQ2EmNK8FXeb4mVwHBOLM8j0hGYo8zxBHp7U0gC7TAMaI9zyBp2wGQIkwdIYYEBECNJFIir8xKhEQaABVIZwl8gADFyA0iOYgksDGeU+MRpeXKkWF2sONlBhJRkijY4JQBVggR+0eDYQ+VKDHEGFPUaDHHkiSFFFNKmuZLsahocBo1qapp1mJiwaIlUzPLVjJnwUsz5pQ1W865FMxZELng6QKHUg4+5AhHdEc69LAjH6Vi+9RQY01Vq9VcS+MmDe+Plpo2a7mVTh1bqYcee+raredeBrbaEDfCiCMNHTbyKDe1jfVD+QQ12tR4kZqOelODVfUKQfN1EiczAGMXCMR1IsCG5snMG4XAk9xk5jPjVESGyDiZNZrEQDB04jjoYuf4JDrJfYub0/DAjb9Kzk10nyT3kdsram1+DdVF7DyFM6lecPow3q2wlfll96F1/zbw2fYn0E+g/y/QKHRu4lE8jowva8BL12Xlo2sdqb5/zP0mQY+BICRtIQQh+ybg52DEH/zi6lUcu15Ox9wFX97ouin5kv6d1p1rt7TXbmHQVvim5HUrM2f5ypmzp6R9pZ0pcW85kSsn8l+XRGekxJDmyqXNhn5JylbiviTlhTR3a/uWtB3od2zJn0A/gf7kQPg1Mv+t/AfTYMCLM/OUnAAAAYRpQ0NQSUNDIHByb2ZpbGUAAHicfZE9SMNQFIVPU6UiFUE7iChkqJ0siIo4ShWLYKG0FVp1MHnpHzRpSFJcHAXXgoM/i1UHF2ddHVwFQfAHxNHJSdFFSrwvKbSI8cHlfZz3zuG++wChUWGq2TUBqJplpOIxMZtbFQOvCGKUagARiZl6Ir2Ygef6uoeP73dRnuV978/Vp+RNBvhE4jmmGxbxBvHMpqVz3icOsZKkEJ8TjxvUIPEj12WX3zgXHRZ4ZsjIpOaJQ8RisYPlDmYlQyWeJg4rqkb5QtZlhfMWZ7VSY60++QuDeW0lzXWqEcSxhASSECGjhjIqsBClXSPFRIrOYx7+YcefJJdMrjIYORZQhQrJ8YP/we/ZmoWpSTcpGAO6X2z7YwwI7ALNum1/H9t28wTwPwNXWttfbQCzn6TX21r4COjfBi6u25q8B1zuAENPumRIjuSnEgoF4P2MvikHDN4CvWvu3FrnOH0AMjSr5Rvg4BCIFCl73ePdPZ1z+/dOa34/n9lyuQWiUawAAA80aVRYdFhNTDpjb20uYWRvYmUueG1wAAAAAAA8P3hwYWNrZXQgYmVnaW49Iu+7vyIgaWQ9Ilc1TTBNcENlaGlIenJlU3pOVGN6a2M5ZCI/Pgo8eDp4bXBtZXRhIHhtbG5zOng9ImFkb2JlOm5zOm1ldGEvIiB4OnhtcHRrPSJYTVAgQ29yZSA0LjQuMC1FeGl2MiI+CiA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPgogIDxyZGY6RGVzY3JpcHRpb24gcmRmOmFib3V0PSIiCiAgICB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIKICAgIHhtbG5zOnN0RXZ0PSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvc1R5cGUvUmVzb3VyY2VFdmVudCMiCiAgICB4bWxuczpkYz0iaHR0cDovL3B1cmwub3JnL2RjL2VsZW1lbnRzLzEuMS8iCiAgICB4bWxuczpHSU1QPSJodHRwOi8vd3d3LmdpbXAub3JnL3htcC8iCiAgICB4bWxuczp0aWZmPSJodHRwOi8vbnMuYWRvYmUuY29tL3RpZmYvMS4wLyIKICAgIHhtbG5zOnhtcD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wLyIKICAgeG1wTU06RG9jdW1lbnRJRD0iZ2ltcDpkb2NpZDpnaW1wOjEwZTExZGUyLTA1MjUtNDAzYi05NmFiLWM4NjFkNmYxOWEwYSIKICAgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDo5MGEwOTc1MC1iZDZlLTQxMTYtODExZS01MDdmZGQ5MjczNmYiCiAgIHhtcE1NOk9yaWdpbmFsRG9jdW1lbnRJRD0ieG1wLmRpZDoyYzQ1M2QzNC02YjkyLTQ0MmMtOWFjYi0xODI1ZjI3NDQ2MWEiCiAgIGRjOkZvcm1hdD0iaW1hZ2UvcG5nIgogICBHSU1QOkFQST0iMi4wIgogICBHSU1QOlBsYXRmb3JtPSJXaW5kb3dzIgogICBHSU1QOlRpbWVTdGFtcD0iMTY3MjMxNjM0MjAyMzA4OCIKICAgR0lNUDpWZXJzaW9uPSIyLjEwLjMyIgogICB0aWZmOk9yaWVudGF0aW9uPSIxIgogICB4bXA6Q3JlYXRvclRvb2w9IkdJTVAgMi4xMCIKICAgeG1wOk1ldGFkYXRhRGF0ZT0iMjAyMjoxMjoyOVQxMzoxOTowMCswMTowMCIKICAgeG1wOk1vZGlmeURhdGU9IjIwMjI6MTI6MjlUMTM6MTk6MDArMDE6MDAiPgogICA8eG1wTU06SGlzdG9yeT4KICAgIDxyZGY6U2VxPgogICAgIDxyZGY6bGkKICAgICAgc3RFdnQ6YWN0aW9uPSJzYXZlZCIKICAgICAgc3RFdnQ6Y2hhbmdlZD0iLyIKICAgICAgc3RFdnQ6aW5zdGFuY2VJRD0ieG1wLmlpZDpiM2YwMzU2NS0xNWQzLTQ4MGEtOGUxYi1kMmZlZTM3NDZmMmMiCiAgICAgIHN0RXZ0OnNvZnR3YXJlQWdlbnQ9IkdpbXAgMi4xMCAoV2luZG93cykiCiAgICAgIHN0RXZ0OndoZW49IjIwMjItMDItMTFUMTM6MjU6MjkiLz4KICAgICA8cmRmOmxpCiAgICAgIHN0RXZ0OmFjdGlvbj0ic2F2ZWQiCiAgICAgIHN0RXZ0OmNoYW5nZWQ9Ii8iCiAgICAgIHN0RXZ0Omluc3RhbmNlSUQ9InhtcC5paWQ6ZGNkOTA2MjMtOTYzMi00OGY2LWI3NjYtMzk3NTE1NTY5Nzg2IgogICAgICBzdEV2dDpzb2Z0d2FyZUFnZW50PSJHaW1wIDIuMTAgKFdpbmRvd3MpIgogICAgICBzdEV2dDp3aGVuPSIyMDIyLTA3LTI2VDEwOjM5OjM4Ii8+CiAgICAgPHJkZjpsaQogICAgICBzdEV2dDphY3Rpb249InNhdmVkIgogICAgICBzdEV2dDpjaGFuZ2VkPSIvIgogICAgICBzdEV2dDppbnN0YW5jZUlEPSJ4bXAuaWlkOmE4NDgwNTk0LWViYWQtNGE1OC04MmYwLTEyNDJiMzcyODdmZCIKICAgICAgc3RFdnQ6c29mdHdhcmVBZ2VudD0iR2ltcCAyLjEwIChXaW5kb3dzKSIKICAgICAgc3RFdnQ6d2hlbj0iMjAyMi0xMi0yOVQxMzoxOTowMiIvPgogICAgPC9yZGY6U2VxPgogICA8L3htcE1NOkhpc3Rvcnk+CiAgPC9yZGY6RGVzY3JpcHRpb24+CiA8L3JkZjpSREY+CjwveDp4bXBtZXRhPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgCjw/eHBhY2tldCBlbmQ9InciPz5nBDHtAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAA3XAAAN1wFCKJt4AAAAB3RJTUUH5gwdDBMC7bHppgAAAIRJREFUOMtjYBgFtAWxE46Xx044Xo5PDSMuiei+Y1EMjAxLGBgYGBj+M8QsLbJaRrQBMf3HPf8z/N/AwMDABhX6xcjAGLCk0HI7QQOi+o4ZMzIyHGRgYOBGk/r6/z+D/bIiq7M4DYjqO6bMyMhwlIGBQRyHz17+/89gvazI6u5oChlMAABStSJbN0BoiAAAAABJRU5ErkJggg"},{ name : "haxeui-core/locale/de/formats.properties", data : "Zm9ybWF0cy5kYXRlLnNob3J0PSVkLyVtLyVZDQpmb3JtYXRzLmRlY2ltYWwuc2VwZXJhdG9yPSwNCg"},{ name : "haxeui-core/styles/shared/option-dark.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAoAAAAKCAMAAAC67D+PAAAAQlBMVEVYWGzW/9EAAACYtdLCqYPP6PTU////9KxYWFhUVlhXVVJ4rthXkMHs1Kxsj6lSYXvElmdYWGeefViUXFhfUVNWUk58LX/QAAAACHRSTlMnCADr69QWFksN2hQAAAA8SURBVAjXY2BiZxDi5OBjYGNiYGTh4OTg4BJkZmTgFeEAA35WBgFOCFOUm0EYyuTiQWYiFCBrQxiGZAUAvXcDb/w8amgAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/shared/down-arrow-square-blue.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAHCAYAAADEUlfTAAAEK3pUWHRSYXcgcHJvZmlsZSB0eXBlIGV4aWYAAHja7VdZkuQoDP3nFHMEJCEQx8EsEX2DOf482U53ZVZld23z0RNjwoCFEEJPCDnMv3+s8BcepppC0mK55hzxpJoqN3QsHk/ba4ppr4+nnC3d08M1wCAJWjk+LZ/8NzpdAo6moacvBFk/B7b7gZpO+fYg6FxIXCNGZ5yC6ilI+BigU0A7thVztfJyC9s82nP+YQbzraHablQ9mR++U4H1hmIdYZ5CElGzpEMB8ZeDtL3T9mHoLRV9kbLXN5vAIG/ZKb7QKrxC5dajJ/QHUCQf9ADCvTHz1b5JJ33b+GE38YuVpV8r39HTuhzlzsj+rjUsrDWP3bWUYdJ8buqyjnfAuEGU7NMySsGr6Je9VBQL8N4OyEfscUPpVIlh90WJBjVaNPe2U4eKiScXtMydZaeZFK7cJQaglbzQ4gLEhhgw7IBXQOVLF9rXrftynQwLDwInE4TRAT9/T3kqaC13eaJol62gF/uhgBqOnNfgAiC0bn6ku4Fv5fGh3VMTuNzMhg22uB0iNqXTt9yPZAdawKhoj7NGZZwCYCKsrVCGBAjETKKUKRbmQgQ7GvBpEGQ4NLwBAlLlAS05iWSAY+xrY06hnZeVDzJiFoBQyThI5kcKWHlgg/+UZPChpqJJVbMWNa3asuSUNedcsge/VqSkoiWXUqzU0kwsmVq2YhasWqtcBcFRa66lWq21NSzaILlhdgNDaxtvsqVNt7yVzba6tQ736alrz710C732NnjIQJwYeZRho442acKVZpo68yzTZp1twdWWrLR05VWWrbrahRqFA9ZX5f2o0Q013pFyxnKhhqml3ESQhxN1zIAYJwLixRGAQ7NjFo1S4uDQOWaxMk6FMrRUB2eQIwYE0yTWRRd2P5G7wy2k9CXc+IZccOi+A7ng0D1B7jVub6A2/LbpUcKOkB9DN2oUHL+slJR0pYw72LtJ/Zb6TRvey/i/oD9LUKpG02+80hRXkcBRU48redIwkPUclPCa9DnKHycoNrb2rja8l/HjgqqUuLQdNbK/Nyk46ghP/5pGiVN8uvY95QgxMOM+31l0bmm1zAHjZfDXVQqvBhDQXbbQ1pAl86MKj+1NpcDfpFKIX1UpUleeMwg0q3488eH9PB8pi4bfJzWWRMmeCQzPV4J/50PsEqSMuPpwRW+22qC95l1RHb2MXP2nZnwuACGkTPupaniq669URc42kpVGzeZp3sDV4mHP+PFWkOcZ9YFcIjTkH7WSmzmV5pbQ+Ehp28KljTTocXs/uSTQNpfy68nqvyUVSfm+Xvut4uEzO+K2xvT8Qtc2QFjNt4aYcLH07CNIbwb2Uj9kvvBZO9+0gmP7/2X1MOJu5x4Nty1wqj56Nn8RNQ4FCUlZUvnleQvfE9b+c4JkIfUD6OEf4i71AujO6WgAAAGFaUNDUElDQyBwcm9maWxlAAB4nH2RPUjDQBzFX1O1IhUHK4g4ZKhOFkRFBBepYhEslLZCqw4ml35Bk4YkxcVRcC04+LFYdXBx1tXBVRAEP0AcnZwUXaTE/yWFFjEeHPfj3b3H3TtAqJeZanaMA6pmGclYVMxkV8XAKwQEMIBZdEnM1OOpxTQ8x9c9fHy9i/As73N/jl4lZzLAJxLPMd2wiDeIpzctnfM+cYgVJYX4nHjMoAsSP3JddvmNc8FhgWeGjHRynjhELBbaWG5jVjRU4inisKJqlC9kXFY4b3FWy1XWvCd/YTCnraS4TnMYMSwhjgREyKiihDIsRGjVSDGRpP2oh3/I8SfIJZOrBEaOBVSgQnL84H/wu1szPznhJgWjQOeLbX+MAIFdoFGz7e9j226cAP5n4Epr+St1YOaT9FpLCx8BfdvAxXVLk/eAyx1g8EmXDMmR/DSFfB54P6NvygL9t0DPmttbcx+nD0Caulq+AQ4OgdECZa97vLu7vbd/zzT7+wF8pXKr0kUkPQAADRhpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+Cjx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IlhNUCBDb3JlIDQuNC4wLUV4aXYyIj4KIDxyZGY6UkRGIHhtbG5zOnJkZj0iaHR0cDovL3d3dy53My5vcmcvMTk5OS8wMi8yMi1yZGYtc3ludGF4LW5zIyI+CiAgPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIKICAgIHhtbG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvbW0vIgogICAgeG1sbnM6c3RFdnQ9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZUV2ZW50IyIKICAgIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIKICAgIHhtbG5zOkdJTVA9Imh0dHA6Ly93d3cuZ2ltcC5vcmcveG1wLyIKICAgIHhtbG5zOnRpZmY9Imh0dHA6Ly9ucy5hZG9iZS5jb20vdGlmZi8xLjAvIgogICAgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIgogICB4bXBNTTpEb2N1bWVudElEPSJnaW1wOmRvY2lkOmdpbXA6ZWY5MjY4YzktNTgwYy00MjQ0LTgyODktYTAwYzk2N2E0YmFjIgogICB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOjRiZDVmMGQ1LWNkMWUtNDViYi1iNmQ5LWE4YzVlNDkyM2U3MSIKICAgeG1wTU06T3JpZ2luYWxEb2N1bWVudElEPSJ4bXAuZGlkOmVhMTQ5N2M5LTAxMzktNDk4ZS1hZDYwLTk5NTI1NzhlOWIxYyIKICAgZGM6Rm9ybWF0PSJpbWFnZS9wbmciCiAgIEdJTVA6QVBJPSIyLjAiCiAgIEdJTVA6UGxhdGZvcm09IldpbmRvd3MiCiAgIEdJTVA6VGltZVN0YW1wPSIxNjQ0NDgyMjUxMTA2NTgwIgogICBHSU1QOlZlcnNpb249IjIuMTAuMjQiCiAgIHRpZmY6T3JpZW50YXRpb249IjEiCiAgIHhtcDpDcmVhdG9yVG9vbD0iR0lNUCAyLjEwIj4KICAgPHhtcE1NOkhpc3Rvcnk+CiAgICA8cmRmOlNlcT4KICAgICA8cmRmOmxpCiAgICAgIHN0RXZ0OmFjdGlvbj0ic2F2ZWQiCiAgICAgIHN0RXZ0OmNoYW5nZWQ9Ii8iCiAgICAgIHN0RXZ0Omluc3RhbmNlSUQ9InhtcC5paWQ6OWVhYTkyOTYtOTI0NC00ZTU4LThkYmUtZWNhODMxMTJkZDE2IgogICAgICBzdEV2dDpzb2Z0d2FyZUFnZW50PSJHaW1wIDIuMTAgKFdpbmRvd3MpIgogICAgICBzdEV2dDp3aGVuPSIyMDIyLTAyLTEwVDA5OjM3OjMxIi8+CiAgICA8L3JkZjpTZXE+CiAgIDwveG1wTU06SGlzdG9yeT4KICA8L3JkZjpEZXNjcmlwdGlvbj4KIDwvcmRmOlJERj4KPC94OnhtcG1ldGE+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAKPD94cGFja2V0IGVuZD0idyI/PjAYwf0AAAAGYktHRAD/AP8A/6C9p5MAAAAJcEhZcwAADsQAAA7EAZUrDhsAAAAHdElNRQfmAgoIJR9yXG2RAAAALUlEQVQI12NgIBcwhnYd+Y9TkoGBgQGbgtVlNoyMMA6ygtVlNowYxuCzAgMAAKYfDUgzMsMOAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/shared/help-medium.png", data : "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABmJLR0QA/wD/AP+gvaeTAAADpElEQVRYhe2X32scVRTHP/fOZtMFs7tJC4np1mS7RQjC2oJg7ZMKPvShBBR9MopiqYbaP0CwL0VQ30SyGtsnow9SUGMViw8WBGlebBWjlJgf/ZFNQo2Jm0SSzM6914fJbmayO7OTRJ/0+zRz5n7P97tnzpx7F/7rEDsh3T+4tK+sZKeQIqM0xlJmel3omeLp5B//moHcQOmQEbLPQC/wYMCyH4VhWMbU0Pip9MQ/YiB7fqUdx5zFcBJoiui3jGFQSs5NvNJyd8cGut5fekRq8SnQEVF4K+bRPDV1uuW7oAUy6EH2veVnpBZXdiEOsA/JN9nC8tNBC+pWIDewdEwL8S3QvAtxL2w0T9SrRI2B7PmVdmzzE4L2sIwHkpIDLQJbGWZWYHZFY8JNzFkO+fEzLb97g7GaZY45GybelZK8dqyJnr2WL357SfPWSJmf76ogaoeK8Tpwxhv0VSA3UDqkhfyVgG5PxgUfnthDW6J+7646hucvrTH3V2AtbIXqud2fnqwEfE2okc8FiQMcz1lV8TtLmv7L67z41RpjCxqARExwPFdbVA/iUlh93oD/KxD0hrFzrZtlv3jDYXReMb6o+XzMqcYzycAPy5Uwfo2qXXe8kg8jfzHmcLXoio3O62q81fNKFlcbtCIczlwotU2/lFrwGbAdmREinDw6r2DeH+vZa/HsA24apeHrSacO0wfRZFsZYAE8r8AIcW8j5lZ0pyVvPx4nEXMrULhmM7GoG7DAGDor11UDwpiGtfMibsGbj8ZJNbvig9fLXLzR8NdXVM3mZcWAxex2DBzdb9F5j0v/ctzh41/KkbnSYabGgO3o6e0Y6E5tdvul3wKHTz0YO6GKlRvfRMkWlq8Dh6NkOdgq6Uq69JGiZtWJ/AZ/mOpveahy45sawjBsRDQDk4sapSXLttmOOAiGvbe+qSFjagiwo+R5Id/E0Ik9fNKbqNkXQmBrR30UaGD8VHoCwwdRMj3c6VKbY3CkI3z6VSCgcOvV9FSgAQApOQfMNUp2eVKhDCyuGb6/E6kJZ2OWeaOOqVpsHMWu0OBA0hwDR7sTsAHWDPqxm/2pka0P6tbu1svJq0AfsB6Wdd2JJo6hr544NDiUdhdKRwXyM3Z+Lpw16CeDxCHkUApwsz81YjnkgXeJ+HVswBaCd5oskw8Th238Mbmv8OdBKay+jf38SN1kgmvaMGyUGtra7bs24EXmQqktvmrtV5bIAFjKTNsJVazs8f9jO/gbuERJ498j87cAAAAASUVORK5CYII"},{ name : "haxeui-core/locale/en/std-strings.properties", data : "c2F2ZT1TYXZlDQp5ZXM9WWVzDQpubz1Obw0KY2xvc2U9Q2xvc2UNCm9rPU9LDQpjYW5jZWw9Q2FuY2VsDQphcHBseT1BcHBseQ0Kc2VhcmNoPVNlYXJjaA0KDQpyZWQ9UmVkDQpncmVlbj1HcmVlbg0KYmx1ZT1CbHVlDQpodWU9SHVlDQpzYXR1cmF0aW9uPVNhdHVyYXRpb24NCmJyaWdodG5lc3M9QnJpZ2h0bmVzcw0K"},{ name : "haxeui-core/styles/shared/option-light.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAgAAAAICAYAAADED76LAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAA3XAAAN1wFCKJt4AAAAB3RJTUUH5QEaCgw0CA+AtQAAAINJREFUGNN9zDEKwlAQRdE781egfdYQV6FgM0WWYpNNSPYRm2ktsgfb9LYSsE7+WAQE4ccDr7rwBMDdqyB1CEcAgkElt2Y2irtXoelBsOfXJLHUGqSuEAF2SLrq97Yg4KT8F0owbHe5q0pugalQX3nWi5rZKLHUAjfgvU76PKdD05yfH881KnTRsBd3AAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/shared/window-collapse-blue.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAwAAAAMCAYAAABWdVznAAABhWlDQ1BJQ0MgcHJvZmlsZQAAKJF9kT1Iw0AcxV9TpVorDnbwa8hQnSyIijhKFYtgobQVWnUwufQLmjQkKS6OgmvBwY/FqoOLs64OroIg+AHi6OSk6CIl/i8ttIjx4Lgf7+497t4BQq3EVLNjAlA1y0hEI2I6syr6XtGDYXTDj0GJmXosuZiC6/i6h4evd2Ge5X7uz9GrZE0GeETiOaYbFvEG8cympXPeJw6ygqQQnxOPG3RB4keuyw1+45x3WOCZQSOVmCcOEov5NpbbmBUMlXiaOKSoGuUL6QYrnLc4q6UKa96TvzCQ1VaSXKc5giiWEEMcImRUUEQJFsK0aqSYSNB+xMU/5Pjj5JLJVQQjxwLKUCE5fvA/+N2tmZuabCQFIkDni21/jAK+XaBete3vY9uunwDeZ+BKa/nLNWD2k/RqSwsdAX3bwMV1S5P3gMsdYOBJlwzJkbw0hVwOeD+jb8oA/beAf63RW3Mfpw9AirpavgEODoGxPGWvu7y7q723f880+/sBXHpynoD2GeAAAAAGYktHRAD/AP8A/6C9p5MAAAAJcEhZcwAADdcAAA3XAUIom3gAAAAHdElNRQfmCxsJGShdZYndAAAA5klEQVQoz8WRoW7CUBiFv/8WMYFZshCyOQTNzBQCElwNFVOTkyNLtgrUkrlpxExDC46XKL1kpgvZkj0Cl3oETzDFPw0hOLIjzzmfOQf+RWnmGmnmGocys28k2eoaTxZ4fKd2eXMUmMyWLfFYAFcgdTCfE1t2DgIj64KtMQVwoRArxMD5Fv0YWRfsAEle3hokA6qIDqOwOYjC5gCVV6BqkHw8X90ByDgv71V0ClRE9OWp57/vDDB3ESoxoKLyaBQNAIPwsF8GeO75CUIfQNGuvBVFpfZ72Y5C/+vY1Il13c3Z+uf0p/4Bt0VKdw++nJwAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/default/switches.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogU1dJVENIIChERUZBVUxUKQ0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi5zd2l0Y2ggew0KICAgIHdpZHRoOiBhdXRvOw0KICAgIGhlaWdodDogYXV0bzsNCiAgICBob3Jpem9udGFsLXNwYWNpbmc6IDVweDsNCn0NCg0KLnN3aXRjaC1sYWJlbCB7DQogICAgdmVydGljYWwtYWxpZ246IGNlbnRlcjsNCn0NCg0KLnN3aXRjaC1idXR0b24tc3ViIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZGVmYXVsdC1iYWNrZ3JvdW5kLWNvbG9yOw0KICAgIGJvcmRlcjogMXB4IHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOw0KICAgIGJvcmRlci1yYWRpdXM6IDJweDsNCiAgICBjdXJzb3I6IHBvaW50ZXI7DQogICAgcGFkZGluZzogMHB4Ow0KICAgIGluaXRpYWwtd2lkdGg6IDQwcHg7DQogICAgaW5pdGlhbC1oZWlnaHQ6IDIwcHg7DQp9DQoNCi5zd2l0Y2gtYnV0dG9uLXN1YjpkaXNhYmxlZCB7DQogICAgYm9yZGVyLWNvbG9yOiAkZGlzYWJsZWQtYm9yZGVyLWNvbG9yOw0KfQ0KDQouc3dpdGNoLWJ1dHRvbi1zdWIgLmJ1dHRvbiB7DQogICAgaGVpZ2h0OiAxMDAlOw0KICAgIHdpZHRoOiA1MCU7DQogICAgYm9yZGVyLXJhZGl1czogMnB4Ow0KICAgIGZpbHRlcjogbm9uZTsNCn0NCg0KLnN3aXRjaC1idXR0b24tc3ViIC5idXR0b246ZGlzYWJsZWQgew0KICAgIGJhY2tncm91bmQ6ICRkaXNhYmxlZC1iYWNrZ3JvdW5kLWNvbG9yLXN0YXJ0ICRkaXNhYmxlZC1iYWNrZ3JvdW5kLWNvbG9yLWVuZCB2ZXJ0aWNhbDsNCiAgICBib3JkZXItY29sb3I6ICRkaXNhYmxlZC1ib3JkZXItY29sb3I7DQp9DQoNCi5zd2l0Y2gtYnV0dG9uLXN1Yi1leHRyYSB7DQogICAgaGVpZ2h0OiAwOw0KICAgIHdpZHRoOiAwOw0KICAgIGJhY2tncm91bmQtY29sb3I6IG5vbmU7DQogICAgYm9yZGVyOiBub25lOw0KICAgIGZpbHRlcjogbm9uZTsNCn0NCg0KQGtleWZyYW1lcyBzd2l0Y2hBbmltYXRlU2VsZWN0ZWQgew0KICAgIDAlIHsNCiAgICAgICAgcG9zOiAwOw0KICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZGVmYXVsdC1iYWNrZ3JvdW5kLWNvbG9yOw0KICAgIH0NCiAgICAxMDAlIHsNCiAgICAgICAgcG9zOiAxMDA7DQogICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRzZWxlY3Rpb24tYmFja2dyb3VuZC1jb2xvci1ob3ZlcjsNCiAgICB9DQp9DQoNCi5zd2l0Y2gtYnV0dG9uLXN1YjpzZWxlY3RlZCB7DQogICAgYW5pbWF0aW9uOiBzd2l0Y2hBbmltYXRlU2VsZWN0ZWQgMC4ycyBlYXNlIDBzIDE7DQp9DQoNCi5zd2l0Y2gtYnV0dG9uLXN1Yjp1bnNlbGVjdGVkIHsNCiAgICBhbmltYXRpb246IHN3aXRjaEFuaW1hdGVTZWxlY3RlZCAwLjJzIGVhc2UgMHMgMSByZXZlcnNlIGJhY2t3YXJkczsNCn0NCg0KLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogU1dJVENIIChDSVJDTEUpDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLw0KLmNpcmNsZS1zd2l0Y2ggLnN3aXRjaC1idXR0b24tc3ViIHsNCiAgICBib3JkZXI6IG5vbmU7DQogICAgZmlsdGVyOiBub25lOw0KICAgIGJhY2tncm91bmQtY29sb3I6IG5vbmU7DQogICAgYm9yZGVyLXJhZGl1czogMnB4Ow0KICAgIGN1cnNvcjogcG9pbnRlcjsNCiAgICBwYWRkaW5nOiAwcHg7DQogICAgaW5pdGlhbC1oZWlnaHQ6IDIwcHg7DQogICAgaW5pdGlhbC13aWR0aDogNDBweDsNCn0NCg0KLmNpcmNsZS1zd2l0Y2ggLnN3aXRjaC1idXR0b24tc3ViLWV4dHJhIHsNCiAgICBoZWlnaHQ6IDE0cHg7DQogICAgd2lkdGg6IDEwMCU7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJGRlZmF1bHQtYmFja2dyb3VuZC1jb2xvcjsNCiAgICBib3JkZXI6IDFweCBzb2xpZCAkbm9ybWFsLWJvcmRlci1jb2xvcjsNCiAgICB2ZXJ0aWNhbC1hbGlnbjogY2VudGVyOw0KICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7DQogICAgZmlsdGVyOiAkbm9ybWFsLWlubmVyLXNoYWRvdzsNCn0NCg0KLmNpcmNsZS1zd2l0Y2ggLnN3aXRjaC1idXR0b24tc3ViLWV4dHJhOmRpc2FibGVkIHsNCiAgICBib3JkZXItY29sb3I6ICRkaXNhYmxlZC1ib3JkZXItY29sb3I7ICAgIA0KfQ0KDQouY2lyY2xlLXN3aXRjaCAuc3dpdGNoLWJ1dHRvbi1zdWIgLmJ1dHRvbiB7DQogICAgd2lkdGg6IDIwcHg7DQogICAgaGVpZ2h0OiAyMHB4Ow0KICAgIGJvcmRlci1yYWRpdXM6IDUwcHg7DQp9DQoNCkBrZXlmcmFtZXMgc3dpdGNoQW5pbWF0ZVNlbGVjdGVkQ2lyY2xlIHsNCiAgICAwJSB7DQogICAgICAgIHBvczogMDsNCiAgICB9DQogICAgMTAwJSB7DQogICAgICAgIHBvczogMTAwOw0KICAgIH0NCn0NCg0KLmNpcmNsZS1zd2l0Y2ggLnN3aXRjaC1idXR0b24tc3ViOnNlbGVjdGVkIHsNCiAgICBhbmltYXRpb246IHN3aXRjaEFuaW1hdGVTZWxlY3RlZENpcmNsZSAwLjJzIGVhc2UgMHMgMTsNCn0NCiANCi5jaXJjbGUtc3dpdGNoIC5zd2l0Y2gtYnV0dG9uLXN1Yjp1bnNlbGVjdGVkIHsNCiAgICBhbmltYXRpb246IHN3aXRjaEFuaW1hdGVTZWxlY3RlZENpcmNsZSAwLjJzIGVhc2UgMHMgMSByZXZlcnNlIGJhY2t3YXJkczsNCn0NCg0KDQpAa2V5ZnJhbWVzIHN3aXRjaEFuaW1hdGVFeHRyYVNlbGVjdGVkQ2lyY2xlIHsNCiAgICAwJSB7DQogICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRkZWZhdWx0LWJhY2tncm91bmQtY29sb3I7DQogICAgfQ0KICAgIDEwMCUgew0KICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2VsZWN0aW9uLWJhY2tncm91bmQtY29sb3I7DQogICAgfQ0KfQ0KDQouY2lyY2xlLXN3aXRjaCAuc3dpdGNoLWJ1dHRvbi1zdWItZXh0cmE6c2VsZWN0ZWQgew0KICAgIGFuaW1hdGlvbjogc3dpdGNoQW5pbWF0ZUV4dHJhU2VsZWN0ZWRDaXJjbGUgMC4ycyBlYXNlIDBzIDE7DQp9DQoNCi5jaXJjbGUtc3dpdGNoIC5zd2l0Y2gtYnV0dG9uLXN1Yi1leHRyYTp1bnNlbGVjdGVkIHsNCiAgICBhbmltYXRpb246IHN3aXRjaEFuaW1hdGVFeHRyYVNlbGVjdGVkQ2lyY2xlIDAuMnMgZWFzZSAwcyAxIHJldmVyc2UgYmFja3dhcmRzOw0KfQ0KDQovKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoqKiBTV0lUQ0ggKFBJTEwpDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLw0KLnBpbGwtc3dpdGNoIC5zd2l0Y2gtYnV0dG9uLXN1YiB7DQogICAgYm9yZGVyLXJhZGl1czogMjBweDsNCiAgICBpbml0aWFsLXdpZHRoOiA0MHB4Ow0KICAgIGluaXRpYWwtaGVpZ2h0OiAyMHB4Ow0KICAgIHBhZGRpbmc6IDBweDsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZGVmYXVsdC1iYWNrZ3JvdW5kLWNvbG9yOw0KICAgIGJvcmRlcjogMXB4IHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOw0KICAgIGN1cnNvcjogcG9pbnRlcjsNCiAgICBmaWx0ZXI6ICRub3JtYWwtaW5uZXItc2hhZG93Ow0KfQ0KDQoucGlsbC1zd2l0Y2ggLnN3aXRjaC1idXR0b24tc3ViOmRpc2FibGVkIHsNCiAgICBib3JkZXItY29sb3I6ICRkaXNhYmxlZC1ib3JkZXItY29sb3I7IA0KfQ0KDQoucGlsbC1zd2l0Y2ggLnN3aXRjaC1idXR0b24tc3ViIC5idXR0b24gew0KICAgIGJvcmRlci1yYWRpdXM6IDUwcHg7DQogICAgd2lkdGg6IDIwcHg7DQogICAgaGVpZ2h0OiAyMHB4Ow0KICAgIGZpbHRlcjogbm9uZTsNCn0NCg0KLnBpbGwtc3dpdGNoIC5zd2l0Y2gtYnV0dG9uLXN1Yi1leHRyYSB7DQogICAgaGVpZ2h0OiAwOw0KICAgIHdpZHRoOiAwOw0KICAgIGJhY2tncm91bmQtY29sb3I6IG5vbmU7DQogICAgYm9yZGVyOiBub25lOw0KICAgIGZpbHRlcjogbm9uZTsNCn0NCg0KQGtleWZyYW1lcyBzd2l0Y2hBbmltYXRlU2VsZWN0ZWRQaWxsIHsNCiAgICAwJSB7DQogICAgICAgIHBvczogMDsNCiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGRlZmF1bHQtYmFja2dyb3VuZC1jb2xvcjsNCiAgICB9DQogICAgMTAwJSB7DQogICAgICAgIHBvczogMTAwOw0KICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2VsZWN0aW9uLWJhY2tncm91bmQtY29sb3I7DQogICAgfQ0KfQ0KDQoucGlsbC1zd2l0Y2ggLnN3aXRjaC1idXR0b24tc3ViOnNlbGVjdGVkIHsNCiAgICBhbmltYXRpb246IHN3aXRjaEFuaW1hdGVTZWxlY3RlZFBpbGwgMC4ycyBlYXNlIDBzIDE7DQp9DQoNCi5waWxsLXN3aXRjaCAuc3dpdGNoLWJ1dHRvbi1zdWI6dW5zZWxlY3RlZCB7DQogICAgYW5pbWF0aW9uOiBzd2l0Y2hBbmltYXRlU2VsZWN0ZWRQaWxsIDAuMnMgZWFzZSAwcyAxIHJldmVyc2UgYmFja3dhcmRzOw0KfQ0K"},{ name : "haxeui-core/styles/shared/right-arrow-blue.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAQAAAAHCAYAAAAvZezQAAAEJXpUWHRSYXcgcHJvZmlsZSB0eXBlIGV4aWYAAHjazVZbkiQnDPznFD4CkhASx+FRRPgGPr4Tqrp3ph+zs+v9cBENtIpKRKYEhOOfv2f4Cw8Zx5DUPJecI55UUuGKjsfzqbummHZ9Pulq6bM9RLteMEyCVs6/nq/xNzvdAc6moqcfgLxfL9rnF+Wamf0B6JpIlkeMzriAygUkfL6gC6Cey4q5uH1cQjvO9vr+pMHX0lC1m1WvwQ//k4G9oZhHmA8hiahZ0umArB8HqbuzasdAkoK+iKNWscsTEPKKp/jBq/CoSuHXqtx7D6JIPu0Bhs9k5nv70k76mvywKf4ws/T7zJ/spjfGPpO8fnMOD3Me5+pqyqA0X4u6LWX3MLCBctmfZRTDT9G3XQqKB0Rvh+Qj9thQOhViyDIp0aBKk47ddupwMfHBSAdm7izb5mJcuEsM0CmtQpMNig3oxdIhr8DKd19oz1v2dJ0cEw/CSCaA0Sk//5nyFmjOFfJE0U+eEBbwi1dwwI2l3KoxCoLQvMWRboJv5fFZugoU1E2zY4E1thOiKV2xteJIttASl8Dp2ibIxgUAijC3whkSKBAziVKmaMxGBB4d+lQAOZKGGyQgVR7wkpNIhjjIGMyNb4z2WFY+zdizIIRKFoM0SClolbCxIX4sOWKoqmhS1aymrkVrlpyy5pwtr82vmlgytWxmbsWqiydXz27uwYvXwkWwOWrJxYqXUmrFpBXIFV9XDKi1cZOWmrbcrHkrrXaET09de+7WPfTS6+AhA/vEyMOGjzLqQQdC6UiHHvmww49y1IlQmzLT1JmnTZ9l1rtqFHba0VP5vmp0U423Umug3VXDp2Y3CFrbiS7NoBgnguK2FEBA89IsOqXEYUm3NEPEISuU4aUucQYtxaBgOoh10l27H8p90i2k9J9045tyYUn3J5QLS7o3yj3r9kK1sU6bHiVshVYaLlKjIP20slduh/uMfXUdY+FDrnlIaQ3UYFfcg4ojd5KuIyzcOj9pQfjueHwDHZ6xfw86ADtB+FSajaOMhB1eLM826NEg1gbUIJD1Ym3h+2t5anGQQp4LO7wi7neww2dwHEdWdZ/2morT8coyMvW14LxhcJAu9KDx7Oi+Z60OXy76N1pIl6ohH1qoT9i/Bx0esBGaZdHSQZrlUgW/HBc5rSUomXDjuf/DuHny+/2A/Gn7PwBah39ce8PiBEBpdBvZd10243wg61vKuy6L88ui/EU0hVche2tLHYORJSMf65I73gTuhg5fZ0HBNRLue5+67p5zdNnuoy7bWZkWp+JuFThiOeMHfn9CK2cnPUXZvV3JFrCRpvuM77C+gR02+7gI27oCG1zroy/nkcw0zz2jrJfpjpNfuha+zAgC27W0hG0blH8JFd4s+5ehw1sG37Q2cXKs3PoX/YUPPAIScFcAAAGFaUNDUElDQyBwcm9maWxlAAB4nH2RPUjDQBzFX1O1IhUHK4g4ZKhOFkRFBBepYhEslLZCqw4ml35Bk4YkxcVRcC04+LFYdXBx1tXBVRAEP0AcnZwUXaTE/yWFFjEeHPfj3b3H3TtAqJeZanaMA6pmGclYVMxkV8XAKwQEMIBZdEnM1OOpxTQ8x9c9fHy9i/As73N/jl4lZzLAJxLPMd2wiDeIpzctnfM+cYgVJYX4nHjMoAsSP3JddvmNc8FhgWeGjHRynjhELBbaWG5jVjRU4inisKJqlC9kXFY4b3FWy1XWvCd/YTCnraS4TnMYMSwhjgREyKiihDIsRGjVSDGRpP2oh3/I8SfIJZOrBEaOBVSgQnL84H/wu1szPznhJgWjQOeLbX+MAIFdoFGz7e9j226cAP5n4Epr+St1YOaT9FpLCx8BfdvAxXVLk/eAyx1g8EmXDMmR/DSFfB54P6NvygL9t0DPmttbcx+nD0Caulq+AQ4OgdECZa97vLu7vbd/zzT7+wF8pXKr0kUkPQAADRhpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+Cjx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IlhNUCBDb3JlIDQuNC4wLUV4aXYyIj4KIDxyZGY6UkRGIHhtbG5zOnJkZj0iaHR0cDovL3d3dy53My5vcmcvMTk5OS8wMi8yMi1yZGYtc3ludGF4LW5zIyI+CiAgPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIKICAgIHhtbG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvbW0vIgogICAgeG1sbnM6c3RFdnQ9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZUV2ZW50IyIKICAgIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIKICAgIHhtbG5zOkdJTVA9Imh0dHA6Ly93d3cuZ2ltcC5vcmcveG1wLyIKICAgIHhtbG5zOnRpZmY9Imh0dHA6Ly9ucy5hZG9iZS5jb20vdGlmZi8xLjAvIgogICAgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIgogICB4bXBNTTpEb2N1bWVudElEPSJnaW1wOmRvY2lkOmdpbXA6ZjA2MTJiMDQtMmJkZC00N2E3LTgyOGQtYzkzNWMwOTU5OTZlIgogICB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOjVhODNkZjU5LTk2NGUtNDI5Zi05ZmEyLTg5ZDNmYWY4ZTc1ZiIKICAgeG1wTU06T3JpZ2luYWxEb2N1bWVudElEPSJ4bXAuZGlkOjExMjg5YWQzLTA2ZTEtNGU4Ni1hMTkyLTQ0ZWVhNjRkZDkzNiIKICAgZGM6Rm9ybWF0PSJpbWFnZS9wbmciCiAgIEdJTVA6QVBJPSIyLjAiCiAgIEdJTVA6UGxhdGZvcm09IldpbmRvd3MiCiAgIEdJTVA6VGltZVN0YW1wPSIxNjQ0MzQ1NTM4NjkyMjYyIgogICBHSU1QOlZlcnNpb249IjIuMTAuMjQiCiAgIHRpZmY6T3JpZW50YXRpb249IjEiCiAgIHhtcDpDcmVhdG9yVG9vbD0iR0lNUCAyLjEwIj4KICAgPHhtcE1NOkhpc3Rvcnk+CiAgICA8cmRmOlNlcT4KICAgICA8cmRmOmxpCiAgICAgIHN0RXZ0OmFjdGlvbj0ic2F2ZWQiCiAgICAgIHN0RXZ0OmNoYW5nZWQ9Ii8iCiAgICAgIHN0RXZ0Omluc3RhbmNlSUQ9InhtcC5paWQ6YTI2YzU1ZDUtMDYxMi00NDZhLTgzZGEtYjZiNjA5NGI5ZjY5IgogICAgICBzdEV2dDpzb2Z0d2FyZUFnZW50PSJHaW1wIDIuMTAgKFdpbmRvd3MpIgogICAgICBzdEV2dDp3aGVuPSIyMDIyLTAyLTA4VDE5OjM4OjU4Ii8+CiAgICA8L3JkZjpTZXE+CiAgIDwveG1wTU06SGlzdG9yeT4KICA8L3JkZjpEZXNjcmlwdGlvbj4KIDwvcmRmOlJERj4KPC94OnhtcG1ldGE+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAKPD94cGFja2V0IGVuZD0idyI/Pj86b/sAAAAGYktHRAD/AP8A/6C9p5MAAAAJcEhZcwAADsQAAA7EAZUrDhsAAAAHdElNRQfmAggSJjqpzQQ4AAAALklEQVQI12MI7TrynwEJMDEwMDAgCzLBGDBBRqxaYGB1mQ0jEzKHAd1ABgYGBgAWuA/w/oe0hAAAAABJRU5ErkJggg"},{ name : "haxeui-core/locale/de/expression-replacements.properties", data : "emVybz1bMF09MA0Kbm9uZT1bMF09MA0Kb25lPVswXT0xDQptYW55PVswXT4xDQo"},{ name : "haxeui-core/styles/native/main.css", data : "KiB7DQogICAgbmF0aXZlOiB0cnVlOw0KfQ0KDQouaHNsaWRlcjpuYXRpdmUsIC52c2xpZGVyOm5hdGl2ZSwgLmhwcm9ncmVzczpuYXRpdmUsIC52cHJvZ3Jlc3M6bmF0aXZlIHsNCiAgICB3aWR0aDogYXV0bzsNCiAgICBoZWlnaHQ6IGF1dG87DQogICAgYmFja2dyb3VuZDogbm9uZTsNCiAgICBib3JkZXI6IG5vbmU7DQogICAgYm9yZGVyLXJhZGl1czogbm9uZTsNCn0NCg0KLmJ1dHRvbjpuYXRpdmUsIC5kcm9wZG93bjpuYXRpdmUgew0KICAgIGJhY2tncm91bmQ6IG5vbmU7DQogICAgYm9yZGVyOiBub25lOw0KICAgIGJvcmRlci1yYWRpdXM6IG5vbmU7DQogICAgY29sb3I6IG5vbmU7DQp9DQoNCi50ZXh0ZmllbGQ6bmF0aXZlLCAudGV4dGFyZWE6bmF0aXZlIHsNCiAgICBiYWNrZ3JvdW5kOiBub25lOw0KICAgIGJvcmRlcjogbm9uZTsNCiAgICBib3JkZXItcmFkaXVzOiBub25lOw0KICAgIGNvbG9yOiBub25lOw0KICAgIGZpbHRlcjogbm9uZTsNCn0NCg0KLmRpYWxvZzpuYXRpdmUgew0KICAgIHBhZGRpbmctdG9wOiAwcHg7DQp9"},{ name : "haxeui-core/styles/shared/warning-small.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QA/wD/AP+gvaeTAAABCUlEQVQ4jc2RPUoDURSFvzvzfgKKoCmSKmijSLSzF7ERrd1CIOIeBBcgLiCLCGg/jIq1rW5ABUFQUsSR92x8zkxw4tiIp3vvnnvOuRz41/BpY8knjcVpHKlcTlCIvQEUs+N12SD7jhdVSsf2EKGLsMLIHvwqgb9mgczcgTQ/ac84vSxbr0/1EmT2GKQ5GHYYDDuAnyd6O6p1gk/NKtAD0MphtAujvk/M2s8JRE4ADWB0SSAmktOpAv7C7uHZCW+jHToXANj2qd0t+X0th9qEbvh7GSkA5mbeCy7cFmvNE4TaCji7bHF+1Zo4sVxrniC1D8AEuxKPsjluA6g8muyDa9da9/F9TaM/wAcSz0RlELj/AwAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/default/haxeui_small.png", data : "iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAMAAABg3Am1AAAC91BMVEUAAABgbY0+U25ga4QwSGe/wMy2ucI8SWC1t8OGj6Sana+zuMd3gppicY1ibYm0ucUzZZvH0ODExdZ8hZw/TGQ+TGPFxth/hp+vtMJNXHLExNI/TmVlhq5hbYi6vc2pr75veZI0ZpyrvdTK0+Q7WoC0t8d/iZ/Gx9ezuMaorb3Gx9dmc49OWm+DiaOpw+CVqMJUe6uwtcGprr5gbIdteZRaZn11gJpgbIhiborM1+g/XoM4WH2zusw8S2RhaYFCUGVuepdyfJVLWG9UYHjDxdZhbYg8SmGeprfKytmSmKw6bqZnjryTqseXq8RQd6mmrb58iaF4g5m2uMd4gZiorrx3gZeKkqZmco5smMg0Y5fP3e5ol8rS3+4+drUzZZs0ZJhPe67AzN7J0+RTeKc5X4o3WoNCYog6WoKuv9ZihK7M1ea+ydyht9JBX4U2V35ieZzAxtd7h59ldZPIzt9je6BBVHBYZoDBwtNMWHCco7Rea4KYqsRWcJZxeI6/wtJSXXTEw9O6vc08RVicpLU5SV7Ly904Rl19h55KVm43RFpLf7lFerOZuNqcudpIeK48bqWftdGftdGZsc6OqsuswdlLd62qv9l2lrxjh7NlibRJbpumudBcga6svtWnutJdg7GKoL6svdZylL1uj7ZSeahJbJREZZCGlKyOm7OZorNgboyxtcNwfJmKkqWhprSHjaB5fJBmc4yor7ylp7Vomc08drVRiMSUttt+p9OStdt9p9M9d7bQ3+9nmMypxOGBqdQ6dbRtnc9gk8qsxuN6pdJ1odFwntBtnM1pms1SicVQh8RHfrs8draqxeKhvuCaut5yoNBilctajsZYjMSXuNxOhcBBerg0aJ8zZ52nwuGdvN6Vt9yOstlklcpckMZNhcM5b6o3a6TR4PDL2+7K2u23zuejwOBekchSisZZjcRVicI6c7EyZZvT4fHF2OzC1eu+0umkweGJr9dfkspik8hWi8VMg75Lgr1Bdq85cq+yyuWEq9VFe7VNUsNiAAAAtHRSTlMABQIDBAYDEgUFAhYWChcK/ac7OzYuFxQTDQwJpjsgDw/9p6aXOjQyMisTExIL+KenPDc0MiciGxXQlpVyXUdCPDk1MSIiHhwVD/7Tx6SkcG1dR0dGLCsq+/r5+Pb29vDMxL28vLerqKOhoKCXj454dnV1cXBpaGdiXldVTUlIQkE8OzYzKiYgHhz9/fz48fHW087OzMzKysjCwLu7t6Cgn5eXlJSFhXl4bm1jY11FRUM4IQf95cbSAAAEV0lEQVRIx32WZZwSQRjGF1ZQMMAEG+zE7u7u7u7u7u7u7m4WdlkQFEwEFOG48+70zu5u/eAE7C6s+nzgA7/3P888O/PODAEkTwclk4EfuZKIllQpV2BJJCRJoHKFKr82PZY2vyqaIRWlm2k0GZBK6jJKpOA/Rf4mxReULwdUuHCx4vm0KlkEUYJyzZLORbJC1atXsUuVnICQq5rMGLm7ANLQoTXLFeMQWF65yNmjrVqVgWq198DMKhkBkL/4vkCiz3vRcxHIsPFEe4woLsDyDm3XGsDfHqfXnvzFdKhSTpJIpy0/ImA2M0zg3tOEBI/n4q6aHYud1zbTZahccdaRlhedzqe+pNv+Bw9umoKjGpRKQ8jSF878lDEjJQZ83gSnYXOb0ws6d6o3a9w6g9Nntz37cvOmCejGiur1w8ATBGAxifc+JOw4dqrduJbepKs3wMARPW9evX5aAOSYl/lREg9Axuxb1bJF1zuCauSgL5QNAVkyW++ZY8RcvWOKlVsdAQpanUxM/RWj8VNM/Y3veh54z8SMbwSK9WiurwGBdE0B8DYQMz7S5aj6YKq+xkIIlCg63PpIGIK5bTOGCWHobyH96OxpwcLlWjShu/WDsB7Wij1+x/eutRistFKVb24160+Gnw8cX0zcSIkfNH9ZbikB5zTF+pbh8/ISJn8e6lYrO4gA+iFXw9n93yRG5xV7fH09pE5jaEAoZU2Lju3pwRYgr4i4iVehzyRgAABk0b7ae0aYV+zxPHUgNAAAtChRrOYjOD6XV0wE9VOxAbbI17GfNyqvKLl78JylKAG2SF++jYHPK9Yn0+rJoHkiAGzTaeuF44s9BkyH7SkENlz6H3B/OwKEU1pJ/8fiLrUGT0kQOommr/2r3k9RP/jQ+LM+pmna8vdZXb9LUZRDjT8rt3BPXP8kXrAAYENo4fit4bPQUNfE4/sdFARS8NbgNp8dVCMPcV6sV9zmQ9v7nYv+O3GfCouNx9sbN9BDj4UWEThvRLdScQPhFn1opjlZBDn8LMUp5TVqUXwIPP5IC3QpOm8kRLwaHgL4mHmHMvOz4r8nL0dIDY8ZfJA9wRH4WfF5eaWqa3AnnxcBQg8uL5+6uZo7jB9+xIDQA48v1A8I4OP+sUtYbLdbrnXd0ne5m3I4oggI4AvFKQDsruRg3M627dqN35rs/8YKEDYELhQMmC3h2tvX77odvfq2PVOkU6dztce36HH92Ut3HBsOkQKvLHQp/oLzuPI56I67dYsdMLFDkSUanS5Towq1x2yzGW3Jz158jYOzewUvRdieI2nXtZewlmV7bTrZoWJlTWkJmUaSsSpAjrfoYQMyfn7pZqnDoE3Rxb5/T1mo1q1bT6xbsXLJjBLUvSRGxgzLgzXsILrYCUWzJuh1ULduXfg6gOXhVpQipEuFvFgVKqGnAyGH748MQJkyVS2pQ6PzAoiuZNVMSJHHiRQgCgkWSSqlMc8fKUlKsPDz5w9agXK/G5FNrAAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/shared/error-small.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QA/wD/AP+gvaeTAAABGklEQVQ4jYWSPUrEUBRGz3sTbHQ2ohi1yE9hkwmCS7AQsVBEEMWViI0wiI1YuInUGi0EFyCDW5g4MMHkWgxqJr4bb/n4zrn3gwcd85EGwSSJo66M1eHwSDB5beuHcRqcajnjhAfhgRiGjQUC5nwpyy//FTjg73FK5gRteGHvEIDy9lqVWA0GsCs+dnm1tVAuijQ6mxOoZ5dTKEtH7V+JV2wF61I7OyPlFETazz+SSRI/eohXQeUKzba7BbMFyKcBGKfRjkHugF4z0PM3AKheX/6wgpz0s+crC9DP8nvB7NI6pRdv4qXbKgyN3i5J/T6iHr2pMDg+klbHBTsFisQJqwKAYhDsY8wNYAwcL2ZPQy2rTpFGfpGEa12ZLwdajcanz1XAAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/shared/error-medium.png", data : "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABmJLR0QA/wD/AP+gvaeTAAACJElEQVRYhcXXzWsTQRjH8e8zSUprmv4JohTEm4fS9CJKbRUsePAFFPGkgVoE/xqxFnyDHvTmzZONUBAlkYCIF0GrnsRLS2uEJO4+HrRh1ybZecZin9OwJM/vszOzOyzscUnoH5vTUxPq9CaIi+Poztjz1y/+G2BrdvKcqDwGCn8uRahWRqv1h9ZebhfCAXKI3G/OlOet/Uwz0Cc8WSqwUFypLe06wCM8COEFMISbEZmAgHATYiBgULg7OI7bfwCA+Msn4rUPQYh8SDhA/vgMhSvXAOgs36PdGyAKi82ZMv0QPR9Dn2nXdjsxbvX7WRLR8xHdAfBe81YidDBgICIFsGy45F1rKxPQF9EFmHd7YglSYyPCAXyfLh8RlUfe4ZBeAr8ZSCJub85OHe0CJEcFGLJ0SS1BxwQAcE6Z7wIU/WntkNp4thn4XRJ3uoBYZRH4YQME7YHt6kicu9UFjK3U3qvqaaDp20HX14kaNaJGDd3YMIU75WKx+qoBf72Kt05MHhORp0DR0tEavq9ae7J9YcdZ4IuQUonC1QVkeIT2gyX021dzOPR4E5aq9VVVnSNjOQoXLlM4c578yTmGKjeCwnsCfBHx57XE+GNQOGQdxxnL4cYPIcMjRO/eBIVnAnwQAyoz3AsQiPAK9wYYEd7hJoAnwhRuBmQgzOEQ8GVUqtZXQc6SPjvaKnrJGg7/8HG6eWrisIvcdXCCuLujz16+De21p/ULbmcp8bwvNP8AAAAASUVORK5CYII"},{ name : "haxeui-core/styles/shared/close-button-light.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAABhWlDQ1BJQ0MgcHJvZmlsZQAAKJF9kT1Iw0AcxV9TS0UrDnaQ4pChOlnwC3GUKhbBQmkrtOpgcumH0KQhSXFxFFwLDn4sVh1cnHV1cBUEwQ8QNzcnRRcp8X9JoUWMB8f9eHfvcfcOEBoVpppdY4CqWUY6ERdz+RUx+IpeBBBEBOMSM/VkZiELz/F1Dx9f72I8y/vcn6NPKZgM8InEs0w3LOJ14ulNS+e8TxxmZUkhPiceNeiCxI9cl11+41xyWOCZYSObniMOE4ulDpY7mJUNlXiKOKqoGuULOZcVzluc1UqNte7JXxgqaMsZrtMcQgKLSCIFETJq2EAFFmK0aqSYSNN+3MMfcfwpcsnk2gAjxzyqUCE5fvA/+N2tWZyccJNCcSDwYtsfw0BwF2jWbfv72LabJ4D/GbjS2v5qA5j5JL3e1qJHQP82cHHd1uQ94HIHGHzSJUNyJD9NoVgE3s/om/LAwC3Qs+r21trH6QOQpa6WboCDQ2CkRNlrHu/u7uzt3zOt/n4AgVdyrUq8E1wAAAAGYktHRAD/AP8A/6C9p5MAAAAJcEhZcwAADdcAAA3XAUIom3gAAAAHdElNRQflCwUHHhl/NmAoAAABNElEQVQ4y92QsU4CQRCG/9nbdb2jsFHvBUh4A2NrjDEhhkeAWNNySnkl5HgHPR8BExpotbbS8AqExoS7y3Jkx+IguRAusdWpdnbnn3+/H/jzReXmcTA40UI3U9qMR0GQlN96UVTzWLaMNZNhv/+9uxflIS10E4yGa1WnF0W1sti1qgNGQwvdLGtkuUlpM/Yg28Tsu1bdPwyHsRXCeizbAJ8zaOmk6rUSoexGhWBRDBXnTOTxPhodCmbL2wbDBwAGLZ1MPYdhd7U/K36bduquDpo51QjwCwRKCHzmQNYvbq8/36fTvHLB7utb8dLJVJxq86Eg6gT4kp3G5c3V19tstj6I4LFsgQvnTORPYdhdjYIgSWnzwqAFgU+P6eiuMgNjzQSE+X7aoyBIMpHHIMyNNRP8r/oB7XSENXBA5j4AAAAASUVORK5CYII"},{ name : "haxeui-core/styles/default/frames.css", data : "LmZyYW1lIHsNCiAgICBwYWRkaW5nLWxlZnQ6IDEwcHg7DQogICAgd2lkdGg6IGF1dG87DQogICAgaGVpZ2h0OiBhdXRvOw0KfQ0KDQouZnJhbWUtYm9yZGVyIHsNCiAgICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCAkbm9ybWFsLWJvcmRlci1jb2xvcjsNCiAgICBib3JkZXItbGVmdDogMXB4IHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOw0KICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAkbm9ybWFsLWJvcmRlci1jb2xvcjsNCn0NCg0KLmZyYW1lLWJvcmRlcjpkaXNhYmxlZCB7DQogICAgYm9yZGVyLXJpZ2h0OiAxcHggc29saWQgJGRpc2FibGVkLWJvcmRlci1jb2xvcjsNCiAgICBib3JkZXItbGVmdDogMXB4IHNvbGlkICRkaXNhYmxlZC1ib3JkZXItY29sb3I7DQogICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICRkaXNhYmxlZC1ib3JkZXItY29sb3I7DQp9DQoNCi5mcmFtZS1jb250ZW50cyB7DQogICAgcGFkZGluZzogMTBweDsNCiAgICBwYWRkaW5nLXRvcDogMTVweDsNCn0NCg0KLmZyYW1lLXRpdGxlIHsNCiAgICBjb2xvcjogJG5vcm1hbC10ZXh0LWNvbG9yOw0KfQ0KDQouZnJhbWUtdGl0bGU6ZGlzYWJsZWQgew0KICAgIGNvbG9yOiAkZGlzYWJsZWQtdGV4dC1jb2xvcjsNCn0NCg0KLmZyYW1lLWxlZnQtbGluZSwgLmZyYW1lLXJpZ2h0LWxpbmUgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICRub3JtYWwtYm9yZGVyLWNvbG9yOw0KICAgIGhlaWdodDogMXB4Ow0KfQ0KDQouZnJhbWUtbGVmdC1saW5lOmRpc2FibGVkLCAuZnJhbWUtcmlnaHQtbGluZTpkaXNhYmxlZCB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJGRpc2FibGVkLWJvcmRlci1jb2xvcjsNCiAgICBoZWlnaHQ6IDFweDsNCn0NCg0KLmZyYW1lIC5oZWFkZXIgew0KICAgIGhvcml6b250YWwtYWxpZ246IHJpZ2h0Ow0KICAgIHZlcnRpY2FsLWFsaWduOiBjZW50ZXI7DQogICAgbWFyZ2luLXJpZ2h0OiAxMHB4Ow0KICAgIG1hcmdpbi1sZWZ0OiAwcHg7DQogICAgc3BhY2luZzogNXB4Ow0KfQ0KDQouZnJhbWUubGVmdC1oZWFkZXIgLmhlYWRlciB7DQogICAgaG9yaXpvbnRhbC1hbGlnbjogbGVmdDsNCiAgICB2ZXJ0aWNhbC1hbGlnbjogY2VudGVyOw0KICAgIG1hcmdpbi1yaWdodDogMTBweDsNCiAgICBtYXJnaW4tbGVmdDogMTBweDsNCiAgICBzcGFjaW5nOiA1cHg7DQogICAgcGFkZGluZy1yaWdodDogNXB4Ow0KfQ0KDQouZnJhbWUuY29sbGFwc2libGUgLmhlYWRlciB7DQogICAgaG9yaXpvbnRhbC1hbGlnbjogbGVmdDsNCiAgICB2ZXJ0aWNhbC1hbGlnbjogY2VudGVyOw0KICAgIF9tYXJnaW4tcmlnaHQ6IDEwcHg7DQogICAgbWFyZ2luLWxlZnQ6IDEwcHg7DQogICAgcGFkZGluZy1yaWdodDogMHB4Ow0KfQ0KDQouZnJhbWUuY29sbGFwc2libGUgLmZyYW1lLXRpdGxlLCAuZnJhbWUuY29sbGFwc2libGUgLmZyYW1lLWljb24gew0KICAgIHBvaW50ZXItZXZlbnRzOiB0cnVlOw0KfQ0KDQouZnJhbWUuY29sbGFwc2libGUgLmZyYW1lLWNvbnRlbnRzLmV4cGFuZGVkLCAuZnJhbWUuY29sbGFwc2libGUgLmZyYW1lLWJvcmRlci5leHBhbmRlZCB7DQogICAgaGlkZGVuOiBmYWxzZTsNCn0NCg0KLmZyYW1lLmNvbGxhcHNpYmxlIC5mcmFtZS1jb250ZW50cy5jb2xsYXBzZWQsIC5mcmFtZS5jb2xsYXBzaWJsZSAuZnJhbWUtYm9yZGVyLmNvbGxhcHNlZCB7DQogICAgaGlkZGVuOiB0cnVlOw0KfQ0KDQouZnJhbWUtY29sbGFwc2UtZXhwYW5kLWljb24uZXhwYW5kZWQgew0KICAgIHJlc291cmNlOiAiaGF4ZXVpLWNvcmUvc3R5bGVzL3NoYXJlZC9leHBhbmRlZC1ibHVlLnBuZyI7DQogICAgcG9pbnRlci1ldmVudHM6IHRydWU7DQp9DQoNCi5mcmFtZS1jb2xsYXBzZS1leHBhbmQtaWNvbi5jb2xsYXBzZWQgew0KICAgIHJlc291cmNlOiAiaGF4ZXVpLWNvcmUvc3R5bGVzL3NoYXJlZC9jb2xsYXBzZWQtYmx1ZS5wbmciOw0KICAgIHBvaW50ZXItZXZlbnRzOiB0cnVlOw0KfQ"}];
haxe_ds_ObjectMap.count = 0;
js_Boot.__toStr = ({ }).toString;
Object.defineProperties(signals_BaseSignal.prototype,{ "numListeners" : { get : function () { return this.get_numListeners (); }, set : function (v) { return this.set_numListeners (v); }}, "hasListeners" : { get : function () { return this.get_hasListeners (); }, set : function (v) { return this.set_hasListeners (v); }}});
AppBase.idleTimer = new haxe_Timer(1000);
AppBase.VERSION_TIMER_DURATION = 300;
AppBase.VERSION_TIMER_value = AppBase.VERSION_TIMER_DURATION;
App.NEW_LINE = "\r\n";
App.TEAM_HEADER = "TEAM";
App.TL_HEADER = "Team Leader NT";
App.NEW_TEAM_LABEL = "** NEW team **";
App.NEW_TL_LABEL = "** NEW tl **";
App.AUTHORIZED_GROUPS = ["Customer Operations - Knowledge - Management","CO Customer Operations Management"];
App.AUTHORIZED_person = ["dgonzale","dgrzeski","nmayombo"];
DateTools.DAY_SHORT_NAMES = ["Sun","Mon","Tue","Wed","Thu","Fri","Sat"];
DateTools.DAY_NAMES = ["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"];
DateTools.MONTH_SHORT_NAMES = ["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];
DateTools.MONTH_NAMES = ["January","February","March","April","May","June","July","August","September","October","November","December"];
DateTools.DAYS_OF_MONTH = [31,28,31,30,31,30,31,31,30,31,30,31];
Main._mainDebug = false;
data_Monitoring.MONITORING_TYPE = "monitoringType";
data_Monitoring.MONITORING_REASON = "monitoringReason";
data_Monitoring.MONITORING_SUMMARY = "monitoringsummary";
data_Transaction.TRANSACTION_SUMMARY = "transactionsummary";
data_Transaction.TRANSACTION_INDENTIFICATOR = "transactionIdentificator";
data_Transaction.TRANSACTION_DATE = "transactionDate";
date_DateToolsBB.SUMMER = new Date(2021,2,28,0,0,0);
date_DateToolsBB.SUMMER_TIME_RANGES = [{ start : new Date(2023,2,26,0,0,0), end : new Date(2023,9,29,0,0,0)},{ start : new Date(2024,2,31,0,0,0), end : new Date(2024,9,27,0,0,0)},{ start : new Date(2025,2,30,0,0,0), end : new Date(2025,9,26,0,0,0)},{ start : new Date(2026,2,29,0,0,0), end : new Date(2026,9,25,0,0,0)},{ start : new Date(2027,2,28,0,0,0), end : new Date(2027,9,31,0,0,0)},{ start : new Date(2028,2,26,0,0,0), end : new Date(2028,9,29,0,0,0)},{ start : new Date(2029,2,25,0,0,0), end : new Date(2029,9,28,0,0,0)}];
date_DateToolsBB.SUMMER_TIMES = (function($this) {
	var $r;
	var _g = new haxe_ds_IntMap();
	_g.h[2021] = new Date(2021,2,28,0,0,0);
	_g.h[2022] = new Date(2022,2,27,0,0,0);
	_g.h[2023] = new Date(2023,2,26,0,0,0);
	_g.h[2024] = new Date(2024,2,31,0,0,0);
	$r = _g;
	return $r;
}(this));
date_DateToolsBB.WINTER_TIMES = (function($this) {
	var $r;
	var _g = new haxe_ds_IntMap();
	_g.h[2021] = new Date(2021,9,31,0,0,0);
	_g.h[2022] = new Date(2022,9,30,0,0,0);
	_g.h[2023] = new Date(2023,9,29,0,0,0);
	_g.h[2024] = new Date(2024,9,27,0,0,0);
	$r = _g;
	return $r;
}(this));
date_DateToolsBB.weekDaysMapNormal = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	_g.h["fr-FR"] = ["lundi","mardi","mercredi","jeudi","vendredi","samedi","dimanche"];
	_g.h["fr"] = ["lundi","mardi","mercredi","jeudi","vendredi","samedi","dimanche"];
	_g.h["de-DE"] = ["Montag","Dienstag","Mittwoch","Donnerstag","Freitag","Samstag","Sonntag"];
	_g.h["de"] = ["Montag","Dienstag","Mittwoch","Donnerstag","Freitag","Samstag","Sonntag"];
	_g.h["it-IT"] = ["Lunedì","Martedì","Mercoledì","Giovedì","Venerdì","Sabato","Domenica"];
	_g.h["it"] = ["Lunedì","Martedì","Mercoledì","Giovedì","Venerdì","Sabato","Domenica"];
	_g.h["en-GB"] = ["Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"];
	_g.h["en"] = ["Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"];
	$r = _g;
	return $r;
}(this));
date_DateToolsBB.weekDaysMap = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	_g.h["fr-FR"] = ["dimanche","lundi","mardi","mercredi","jeudi","vendredi","samedi"];
	_g.h["fr"] = ["dimanche","lundi","mardi","mercredi","jeudi","vendredi","samedi"];
	_g.h["de-DE"] = ["Sonntag","Montag","Dienstag","Mittwoch","Donnerstag","Freitag","Samstag"];
	_g.h["de"] = ["Sonntag","Montag","Dienstag","Mittwoch","Donnerstag","Freitag","Samstag"];
	_g.h["it-IT"] = ["Domenica","Lunedì","Martedì","Mercoledì","Giovedì","Venerdì","Sabato"];
	_g.h["it"] = ["Domenica","Lunedì","Martedì","Mercoledì","Giovedì","Venerdì","Sabato"];
	_g.h["en-GB"] = ["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"];
	_g.h["en"] = ["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"];
	$r = _g;
	return $r;
}(this));
format_csv_Reader.FETCH_SIZE = 4096;
haxe_Int32._mul = Math.imul != null ? Math.imul : function(a,b) {
	return a * (b & 65535) + (a * (b >>> 16) << 16 | 0) | 0;
};
haxe_Serializer.USE_CACHE = false;
haxe_Serializer.USE_ENUM_INDEX = false;
haxe_Serializer.BASE64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:";
haxe_Unserializer.DEFAULT_RESOLVER = new haxe__$Unserializer_DefaultResolver();
haxe_Unserializer.BASE64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:";
haxe_crypto_Base64.CHARS = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
haxe_crypto_Base64.BYTES = haxe_io_Bytes.ofString(haxe_crypto_Base64.CHARS);
haxe_ui_backend_BackendImpl.id = "html5";
haxe_ui_core_ComponentEvents.INTERACTIVE_EVENTS = ["mousemove","mouseover","mouseout","mousedown","mouseup","mousewheel","click","doubleclick","keydown","keyup"];
haxe_ui_core_ComponentBounds.__meta__ = { fields : { percentWidth : { clonable : null, bindable : null}, percentHeight : { clonable : null, bindable : null}, width : { bindable : null}, height : { bindable : null}}};
haxe_ui_backend_ComponentImpl.elementToComponent = new haxe_ds_ObjectMap();
haxe_ui_backend_ComponentImpl._stylesAdded = false;
haxe_ui_core_Component.__meta__ = { fields : { styleNames : { clonable : null}, styleString : { clonable : null}}};
haxe_ui_util_GenericConfig.cache = new haxe_ds_StringMap();
haxe_ui_Toolkit.styleSheet = new haxe_ui_styles_CompositeStyleSheet();
haxe_ui_Toolkit.properties = new haxe_ds_StringMap();
haxe_ui_Toolkit.nativeConfig = new haxe_ui_util_GenericConfig();
haxe_ui_Toolkit._theme = "default";
haxe_ui_Toolkit._backendProperties = new haxe_ui_util_Properties();
haxe_ui_Toolkit._built = false;
haxe_ui_Toolkit._backendBuilt = false;
haxe_ui_Toolkit._initialized = false;
haxe_ui_Toolkit.pixelsPerRem = 16;
haxe_ui_Toolkit.roundScale = true;
haxe_ui_Toolkit.autoScale = true;
haxe_ui_Toolkit._scaleX = 0;
haxe_ui_Toolkit._scaleY = 0;
haxe_ui_backend_AssetsImpl.SVG_BYTE_SEQUENCE = [HxOverrides.cca("<",0),HxOverrides.cca("s",0),HxOverrides.cca("v",0),HxOverrides.cca("g",0)];
haxe_ui_backend_PlatformBase.KEY_CODE_TAB = 9;
haxe_ui_backend_PlatformBase.KEY_CODE_UP = 38;
haxe_ui_backend_PlatformBase.KEY_CODE_DOWN = 40;
haxe_ui_backend_PlatformBase.KEY_CODE_LEFT = 37;
haxe_ui_backend_PlatformBase.KEY_CODE_RIGHT = 39;
haxe_ui_backend_PlatformBase.KEY_CODE_SPACE = 32;
haxe_ui_backend_PlatformBase.KEY_CODE_ENTER = 13;
haxe_ui_backend_PlatformBase.KEY_CODE_ESCAPE = 27;
haxe_ui_backend_PlatformBase.MOBILE_REGEXP = new EReg("(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino","gi");
haxe_ui_backend_PlatformImpl._vscrollWidth = -1;
haxe_ui_backend_PlatformImpl._hscrollHeight = -1;
haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	_g.h["mousemove"] = "pointermove";
	_g.h["mouseover"] = "pointerover";
	_g.h["mouseout"] = "pointerout";
	_g.h["mousedown"] = "pointerdown";
	_g.h["mouseup"] = "pointerup";
	_g.h["click"] = "click";
	_g.h["doubleclick"] = "dblclick";
	_g.h["rightmousedown"] = "pointerdown";
	_g.h["rightmouseup"] = "pointerup";
	_g.h["rightclick"] = "contextmenu";
	_g.h["change"] = "change";
	_g.h["keydown"] = "keydown";
	_g.h["keyup"] = "keyup";
	_g.h["scrollchange"] = "scroll";
	$r = _g;
	return $r;
}(this));
haxe_ui_backend_html5_EventMapper.DOM_TO_HAXEUI = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	_g.h["pointermove"] = "mousemove";
	_g.h["pointerover"] = "mouseover";
	_g.h["pointerout"] = "mouseout";
	_g.h["pointerdown"] = "mousedown";
	_g.h["pointerup"] = "mouseup";
	_g.h["click"] = "click";
	_g.h["contextmenu"] = "rightclick";
	_g.h["dblclick"] = "doubleclick";
	_g.h["change"] = "change";
	_g.h["keydown"] = "keydown";
	_g.h["keyup"] = "keyup";
	_g.h["scroll"] = "scrollchange";
	$r = _g;
	return $r;
}(this));
haxe_ui_backend_html5_HtmlUtils._divHelpers = new haxe_ds_ObjectMap();
haxe_ui_backend_html5_HtmlUtils._divHelpersId = new haxe_ds_StringMap();
haxe_ui_backend_html5_HtmlUtils._dpi = 0;
haxe_ui_backend_html5_util_FontDetect._initialized = false;
haxe_ui_backend_html5_util_FontDetect._aFallbackFonts = ["serif","sans-serif","monospace","cursive","fantasy"];
haxe_ui_containers_ScrollViewEvents.INERTIAL_TIME_CONSTANT = 325;
haxe_ui_core_ItemRenderer.__meta__ = { fields : { allowHover : { clonable : null}}};
haxe_ui_containers_dialogs_DialogButton.SAVE = "{{save}}";
haxe_ui_containers_dialogs_DialogButton.YES = "{{yes}}";
haxe_ui_containers_dialogs_DialogButton.NO = "{{no}}";
haxe_ui_containers_dialogs_DialogButton.CLOSE = "{{close}}";
haxe_ui_containers_dialogs_DialogButton.OK = "{{ok}}";
haxe_ui_containers_dialogs_DialogButton.CANCEL = "{{cancel}}";
haxe_ui_containers_dialogs_DialogButton.APPLY = "{{apply}}";
haxe_ui_events_UIEvent.READY = "ready";
haxe_ui_events_UIEvent.DESTROY = "destroy";
haxe_ui_events_UIEvent.RESIZE = "resize";
haxe_ui_events_UIEvent.CHANGE = "change";
haxe_ui_events_UIEvent.BEFORE_CHANGE = "beforechange";
haxe_ui_events_UIEvent.MOVE = "move";
haxe_ui_events_UIEvent.INITIALIZE = "initialize";
haxe_ui_events_UIEvent.SUBMIT_START = "submitstart";
haxe_ui_events_UIEvent.SUBMIT = "submit";
haxe_ui_events_UIEvent.RENDERER_CREATED = "renderercreated";
haxe_ui_events_UIEvent.RENDERER_DESTROYED = "rendererdestroyed";
haxe_ui_events_UIEvent.HIDDEN = "hidden";
haxe_ui_events_UIEvent.SHOWN = "shown";
haxe_ui_events_UIEvent.ENABLED = "enabled";
haxe_ui_events_UIEvent.DISABLED = "disabled";
haxe_ui_events_UIEvent.BEFORE_CLOSE = "beforeclose";
haxe_ui_events_UIEvent.CLOSE = "close";
haxe_ui_events_UIEvent.PROPERTY_CHANGE = "propertychange";
haxe_ui_events_UIEvent.COMPONENT_ADDED = "componentadded";
haxe_ui_events_UIEvent.COMPONENT_REMOVED = "componentremoved";
haxe_ui_events_UIEvent.COMPONENT_ADDED_TO_PARENT = "componentaddedtoparent";
haxe_ui_events_UIEvent.COMPONENT_REMOVED_FROM_PARENT = "componentremovedfromparent";
haxe_ui_containers_dialogs_DialogEvent.DIALOG_CLOSED = "dialogClosed";
haxe_ui_containers_dialogs_MessageBoxType.TYPE_INFO = "info";
haxe_ui_containers_dialogs_MessageBoxType.TYPE_QUESTION = "question";
haxe_ui_containers_dialogs_MessageBoxType.TYPE_WARNING = "warning";
haxe_ui_containers_dialogs_MessageBoxType.TYPE_ERROR = "error";
haxe_ui_containers_dialogs_MessageBoxType.TYPE_YESNO = "yesno";
haxe_ui_core_Platform.METRIC_VSCROLL_WIDTH = "patform.metrics.vscroll.width";
haxe_ui_core_Platform.METRIC_HSCROLL_HEIGHT = "patform.metrics.hscroll.height";
haxe_ui_events_ActionEvent.ACTION_START = "actionstart";
haxe_ui_events_ActionEvent.ACTION_END = "actionend";
haxe_ui_events_AnimationEvent.LOADED = "animationloaded";
haxe_ui_events_AnimationEvent.START = "animationstart";
haxe_ui_events_AnimationEvent.END = "animationend";
haxe_ui_events_AnimationEvent.FRAME = "animationframe";
haxe_ui_events_DragEvent.DRAG_START = "dragstart";
haxe_ui_events_DragEvent.DRAG = "drag";
haxe_ui_events_DragEvent.DRAG_END = "dragend";
haxe_ui_events_FocusEvent.FOCUS_IN = "focusin";
haxe_ui_events_FocusEvent.FOCUS_OUT = "focusout";
haxe_ui_events_ItemEvent.COMPONENT_EVENT = "itemcomponentevent";
haxe_ui_events_ItemEvent.COMPONENT_CLICK_EVENT = "itemcomponentclickevent";
haxe_ui_events_ItemEvent.COMPONENT_CHANGE_EVENT = "itemcomponentchangeevent";
haxe_ui_events_KeyboardEvent.KEY_DOWN = "keydown";
haxe_ui_events_KeyboardEvent.KEY_PRESS = "keypress";
haxe_ui_events_KeyboardEvent.KEY_UP = "keyup";
haxe_ui_events_MouseEvent.MOUSE_MOVE = "mousemove";
haxe_ui_events_MouseEvent.MOUSE_OVER = "mouseover";
haxe_ui_events_MouseEvent.MOUSE_OUT = "mouseout";
haxe_ui_events_MouseEvent.MOUSE_DOWN = "mousedown";
haxe_ui_events_MouseEvent.MOUSE_UP = "mouseup";
haxe_ui_events_MouseEvent.MOUSE_WHEEL = "mousewheel";
haxe_ui_events_MouseEvent.CLICK = "click";
haxe_ui_events_MouseEvent.DBL_CLICK = "doubleclick";
haxe_ui_events_MouseEvent.RIGHT_CLICK = "rightclick";
haxe_ui_events_MouseEvent.RIGHT_MOUSE_DOWN = "rightmousedown";
haxe_ui_events_MouseEvent.RIGHT_MOUSE_UP = "rightmouseup";
haxe_ui_events_ScrollEvent.CHANGE = "scrollchange";
haxe_ui_events_ScrollEvent.START = "scrollstart";
haxe_ui_events_ScrollEvent.STOP = "scrollstop";
haxe_ui_events_ScrollEvent.SCROLL = "scrollscroll";
haxe_ui_events_SortEvent.SORT_CHANGED = "sortchanged";
haxe_ui_events_ThemeEvent.THEME_CHANGED = "themechanged";
haxe_ui_events_ValidationEvent.START = "validationstart";
haxe_ui_events_ValidationEvent.STOP = "validationstop";
haxe_ui_locale_LocaleEvent.LOCALE_CHANGED = "localeChanged";
haxe_ui_locale_LocaleManager._registeredComponents = new haxe_ds_ObjectMap();
haxe_ui_styles_Parser.cssKeyframesRegex = new EReg("@keyframes\\s*(\\w+?)\\s*\\{([\\s\\S]*?\\}\\s*?)\\}","gi");
haxe_ui_styles_Parser.cssKeyframeSelectorRegex = new EReg("([\\w%]+)\\s*\\{\\s*([\\s\\S]*?)\\s*\\}","gi");
haxe_ui_styles_Parser.combinedCSSMediaRegex = new EReg("((\\s*?(?:/\\*[\\s\\S]*?\\*/)?\\s*?@media[\\s\\S]*?)\\{([\\s\\S]*?)\\}\\s*?\\})|(([\\s\\S]*?)\\{([\\s\\S]*?)\\})","gi");
haxe_ui_styles_Parser.cssCommentsRegex = new EReg("(/\\*[\\s\\S]*?\\*/)","gi");
haxe_ui_styles_Parser.cssImportStatementRegex = new EReg("@import .*?;","gi");
haxe_ui_styles_Parser.newlineRegex = new EReg("\n+","g");
haxe_ui_styles_ValueTools.timeEReg = new EReg("^(-?\\d+(?:\\.\\d+)?)(s|ms)$","gi");
haxe_ui_styles_ValueTools.colors = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	_g.h["black"] = 0;
	_g.h["red"] = 16711680;
	_g.h["lime"] = 65280;
	_g.h["blue"] = 255;
	_g.h["white"] = 16777215;
	_g.h["aqua"] = 65535;
	_g.h["fuchsia"] = 16711935;
	_g.h["yellow"] = 16776960;
	_g.h["maroon"] = 8388608;
	_g.h["green"] = 32768;
	_g.h["navy"] = 128;
	_g.h["olive"] = 8421376;
	_g.h["purple"] = 8388736;
	_g.h["teal"] = 32896;
	_g.h["silver"] = 12632256;
	_g.h["gray"] = 8421504;
	_g.h["grey"] = 8421504;
	$r = _g;
	return $r;
}(this));
haxe_ui_styles_animation_AnimationOptions.DEFAULT_DURATION = 0;
haxe_ui_styles_animation_AnimationOptions.DEFAULT_DELAY = 0;
haxe_ui_styles_animation_AnimationOptions.DEFAULT_ITERATION_COUNT = 1;
haxe_ui_styles_animation_AnimationOptions.DEFAULT_EASING_FUNCTION = haxe_ui_styles_EasingFunction.EASE;
haxe_ui_styles_animation_AnimationOptions.DEFAULT_DIRECTION = "normal";
haxe_ui_styles_animation_AnimationOptions.DEFAULT_FILL_MODE = "forwards";
haxe_ui_styles_animation_util_Actuator.frameCallbacks = [];
haxe_ui_styles_animation_util_Actuator.dispatchingFrameCallbacks = false;
haxe_ui_themes_Theme.DEFAULT = "default";
haxe_ui_themes_Theme.DARK = "dark";
haxe_ui_tooltips_ToolTipManager.defaultDelay = 500;
haxe_ui_tooltips_ToolTipManager.fade = true;
haxe_ui_util_MathUtil.MAX_INT = 2147483647;
haxe_ui_util_MathUtil.MIN_INT = -2147483648;
haxe_ui_util_StyleUtil.style2ComponentEReg = new EReg("-(\\w)","g");
haxe_ui_util_StyleUtil.component2StyleEReg = new EReg("([A-Z])","g");
ldap_Params.SEARCH_WILD_PARAM = "wildsearch";
ldap_Params.SEARCH_PARAM = "search";
ldap_Params.USERNAME_PARAM = "username";
ldap_Params.FINDSINGLE_PARAM = "findsingle";
ldap_Params.PARAMS_PARAM = "params";
ldap_Params.DEBUG_PARAM = "debug";
ldap_Params.ATTR_TYPE_PARAM = "attr-type";
ldap_Params.FINDMANY_PARAM = "findmany";
ldap_Params.DIRECT_REPORT_PARAM = "directReports";
ldap_Params.PEERS_PARAM = "peers";
ldap_Params.MANAGER_PARAM = "manager";
ldap_Params.PASSWORD_PARAM = "pwd";
ldap_Params.MAINSUB_JSON_PARAM = "ad";
ldap_Params.MAIN_ATTR_PARAM = "ad-attr";
ldap_Params.SUB_ATTR_PARAM = "ad-subattr";
ldap_Params.ATTR_ADD_OR_SET_PARAM = "attr-add";
ldap_Params.TEAM_TL_PARAM = "teamTl";
ldap_Params.ATTRIBUTE_SEPARATOR = "_";
ldap_Params.COLLECTION_SEPARATOR = "|";
ldap_Params.ATTR_TYPE_VALUE_SUB = "sub";
ldap_Params.ATTR_TYPE_VALUE_MAIN = "main";
ldap_Params.ATTR_THUMBNAIL = "thumbnail";
ldap_Params.BG_COLOR = "bgColor";
ldap_Params.TEXT_COLOR = "textColor";
ldap_Results.AUTHORIZED_RESULT = "authorized";
ldap_Results.DIRECT_REPORT_RESULT = "directReports";
ldap_Results.STATUS_RESULT = "status";
ldap_Results.RESULTS_RESULT = "results";
ldap_Results.PEERS_RESULT = "peers";
ldap_Results.MANAGER_RESULT = "boss";
ldap_Results.DETAILS_RESULT = "details";
ldap_Results.MESSAGE_RESULT = "message";
ldap_Results.ATTRIBUTES_RESULT = "attributes";
ldap_Results.NOT_FOUND_COUNT_RESULT = "notfound_count";
ldap_Results.REJECTED_RESULT = "rejected";
ldap_Results.TEAM_TL_RESULT = "teamTl";
ldap_Results.FINDMANY_RESULT = "findmany";
ldap_Results.FAILED_FINDMANY = "failedFindmany";
ldap_Results.SEARCH_WILD_PARAM = "wildsearch";
ldap_Results.LEAVERS_RESULT = "leaversResult";
ldap_Results.LDAP_COULD_BIND = "ldap could bind";
mail_Params.SUBJECT = "subject";
mail_Params.BODY = "body";
mail_Params.BCC_EMAIL = "bcc_email";
mail_Params.CC_EMAIL = "cc_email";
mail_Params.TO_EMAIL = "to_email";
mail_Params.TO_FULL_NAME = "to_full_name";
mail_Params.FROM_MAIL = "from_email";
mail_Params.IMAGE = "image";
mail_Params.IMAGE_FULL_NAME = "imagefullname";
mail_Params.STRING_TO_REPLACE = "stringToReplace";
mail_Params.FROM_FULL_MAIL = "from_full_name";
mail_Params.MINE_TYPE_JPG = "image/jpeg";
mail_Params.MINE_TYPE_GIF = "image/gif";
mail_Params.MINE_TYPE_PNG = "image/png";
mail_Params.MINE_UNKNOWN = "application/unknown";
regex_ExpReg.ALL = "^[\\s\\S]+$";
regex_ExpReg.MINIMAL_3WORDS = "^(\\S+)( \\S+){2,}[\\s\\S]*$";
regex_ExpReg.SIMPLE_REVERSE_MINUS_DATE = new EReg("^[0-9]{4}-[0-9]{2}-[0-9]{2}$","gm");
regex_ExpReg.DATE_REG_START_END = "^(([0-3]?[0-9]{1}.(0|1)?[0-9]{1}.20(1|2)[0-9]{1})|([0-3]?[0-9]{1}/(0|1)?[0-9]{1}/20(1|2)[0-9]{1}))$";
regex_ExpReg.DATE_REG = "([0-3]?[0-9]{1}[./]{1}(0|1)?[0-9]{1}[./]{1}20(1|2)[0-9]{1})";
regex_ExpReg.TIME = "[012]?\\d(h\\s?|:|\\s)+[012]?\\d(m|')?";
regex_ExpReg.DATE_TIME = "([0-3]?[0-9]{1}[./]{1}(0|1)?[0-9]{1}[./]{1}20(1|2)[0-9]{1})" + "\\s" + "[012]?\\d(h\\s?|:|\\s)+[012]?\\d(m|')?";
regex_ExpReg.OTO_REG = "^(A|B|S)\\.[0-9]{3}\\.[0-9]{3}\\.[0-9]{3}(\\.[0-9X])?$";
regex_ExpReg.CONTRACTOR_PIPE_ARRAY_EREG = "^(3\\d{7})(\\|?(3\\d{7}))+$";
regex_ExpReg.CONTRACTOR_EREG = "^(3\\d{7})$";
regex_ExpReg.VTI_VOIP_WITH_NOCHEATING = "^(?!41\\s?\\d{2}\\s?000\\s?00\\s?00)(41\\d{9}|00000000000)$";
regex_ExpReg.VOIP_WITH_CHEATING = "^(?!41\\s?\\d{2}\\s?000\\s?00\\s?00)(41\\d{9})$";
regex_ExpReg.MISIDN_LOCAL_PIPE_ARRAY_ = "^(07\\d{8})|(0\\d{2}\\s?\\d{3}\\s?(\\d{4}|\\d{2}\\s?\\d{2}))(\\|?(07\\d{8})|(^0\\d{2}\\s?\\d{3}\\s?(\\d{4}|\\d{2}\\s?\\d{2})))$";
regex_ExpReg.MSISDN_NO_CHEATING = "(?!0\\d{2}\\s?000\\s?00\\s?00|41\\s?\\d{2}\\s?000\\s?00\\s?00)";
regex_ExpReg.MISIDN_LOCAL = "(07\\d{8})|(0\\d{2}\\s?\\d{3}\\s?(\\d{4}|\\d{2}\\s?\\d{2}))";
regex_ExpReg.MISIDN_MOBILE = "(^07\\d{8}$)|(^07\\d{1}\\s?\\d{3}\\s?(\\d{4}|\\d{2}\\s?\\d{2})$)";
regex_ExpReg.MISIDN_MOBILE_SWISS_PREFIX = "(417\\d{8})|(417\\d{1}\\s?\\d{3}\\s?(\\d{4}|\\d{2}\\s?\\d{2}))";
regex_ExpReg.MISIDN_INTL = "(41\\d{9})|(41\\s{0,1}\\d{2}\\s{0,1}\\d{3}\\s{0,1}\\d{4})";
regex_ExpReg.MISIDN_UNIVERAL = "^" + "(07\\d{8})|(0\\d{2}\\s?\\d{3}\\s?(\\d{4}|\\d{2}\\s?\\d{2}))" + "|" + "(41\\d{9})|(41\\s{0,1}\\d{2}\\s{0,1}\\d{3}\\s{0,1}\\d{4})" + "$";
regex_ExpReg.MISIDN_MOBILE_NOCHEATING = "^" + "(?!0\\d{2}\\s?000\\s?00\\s?00|41\\s?\\d{2}\\s?000\\s?00\\s?00)" + "(07\\d{8})|(0\\d{2}\\s?\\d{3}\\s?(\\d{4}|\\d{2}\\s?\\d{2}))" + "|" + "(41\\d{9})|(41\\s{0,1}\\d{2}\\s{0,1}\\d{3}\\s{0,1}\\d{4})" + "$";
regex_ExpReg.EMAIL = "[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?";
regex_ExpReg.ZIP = "^[1-9]{1}\\d{3}$";
regex_ExpReg.SWISS_ZIP = "^[1-9][0-9][0-9][0-9]$";
regex_ExpReg.CITY = "^\\w+[a-z 0-9.éàèüöäâêô!ï()\\/\\-']+$";
regex_ExpReg.ADRESS_NUMBER = "^\\d+\\w?$";
regex_ExpReg.STREET = "^.{2,}$";
regex_ExpReg.INTL_NUMBER = "(\\(0\\))?\\d{4,14}";
regex_ExpReg.INTL_CODE = "^(00|\\+)(9[976]\\d|8[987530]\\d|6[987]\\d|5[90]\\d|42\\d|3[875]\\d|2[98654321]\\d|9[8543210]|8[6421]|6[6543210]|5[87654321]|4[987654310]|3[9643210]|2[70]|7|1)$";
regex_ExpReg.COUNTRY_LOOSE = "^\\w+[a-zéàèüöäâêô!ï &]+$";
regex_ExpReg.NUMBEB_ONLY = "^\\d+$";
regex_ExpReg.NAME_MINIMAL = "^\\w{2,}$";
regex_ExpReg.NAME_FULL = "^[\\w'\\-,. áéíóúäëïöüÄőŐűŰZàáâäãåąčćęèéêëėįìíîïłńòóôöõøùúûüųūÿýżźñçčšžÀÁÂÄÃÅĄĆČĖĘÈÉÊËÌÍÎÏĮŃÒÓÔÖÕØÙÚÛÜŲŪŸÝŻŹÑßÇŒÆČŠŽ]{2,}$";
regex_ExpReg.BOX_SERIAL = "^(SFAA|GFAB)?[0-9]{8}$";
regex_ExpReg.BOX_WHITE_SERIAL = "^SFAA[0-9]{8}$";
regex_ExpReg.SALT_NT = "^(sp_)?[a-z0-9]{3,8}$";
regex_ExpReg.CN = "^(\\S+\\s\\S+)+\\S+$";
regex_ExpReg.SO_TICKET_PIPE_ARRAY = "^(1[2-9][0-9]{6})(\\|(1[2-9][0-9]{6}))+$";
regex_ExpReg.SO_TICKET = "^(1[2-9][0-9]{6})$";
regex_ExpReg.URL_START = "^(http|https)://";
regex_ExpReg.RX = "(^-[0-9]{1,2}((,|.)[0-9]{1,3})?$)";
regex_ExpReg.TX = "(^[-]?[0-9]{1,2}((,|.)[0-9]{1,3})?$)";
regex_ExpReg.UUID = "[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}";
regex_ExpReg.SAP_DEALER_CODE = "^[0-9]{5,6}$";
regex_ExpReg.VTI_LANG_PARSE = "^(PROD|SIT)(EN|FR|IT|DE)";
regex_ExpReg.OTO_PORT = "^[A-D1-4]$";
regex_ExpReg.BOX_SERIAL_HEALTH = "^(SFAA[0-9]{8})|(GFAB[0-9]{8})$";
regex_ExpReg.PORTS_ID = "^[0-9]+$";
regex_ExpReg.LEX_ID = "^[\\S\\s-.]+$";
regex_ExpReg.OLT_NAME = "^[0-9]{1,2}$";
regex_ExpReg.OLT_OBJECT = "^[0-9a-zA-Z_\\-:]+$";
regex_ExpReg.BREAKOUT_CABLE = "^(XMDF [0-9]\\.[0-9]{2}-[0-9]{6}-[A-Z][0-9]{4}|KP[0-9]{6}-[A-Z][0-9A-Z\\/]{1,6}|F-[0-9]\\.[0-9]{0,2}-[0-9]{0,2}-[0-9]{0,2})$";
regex_ExpReg.MAJOR_INC_OPEN = new EReg("^_[\\s\\S!_]+_{1}$","i");
regex_ExpReg.STICKY_INC_OPEN = new EReg("^_[0-8]{1}[0-9]{1}_incident_[0-9]-[0-9]_[a-z_0-9-]+$","i");
regex_ExpReg.STICKY_INC_OPEN_FOLDER = new EReg("^_[0-8]{1}[0-9]{1}_[a-z]+_[0-9]-[0-9]_[a-z_0-9-]+$","i");
regex_ExpReg.FRONTMATTER_IN_MD = new EReg("---[\\s\\S]+---","gim");
regex_ExpReg.PARSABLE_DATE = new EReg("(20[0-9]{2}-[0-9]{1,2}-[0-9]{1,2} [0-9]{1,2}:[0-9]{1,2}:[0-9]{1,2})","i");
regex_ExpReg.FEES = new EReg("^[0-9]+[.0-9]{0,3}$","");
string_StringUtils.LINEFEEDS_RN = "\r\n";
string_StringUtils.LINEFEEDS_N = "\n";
string_StringUtils.LINEFEEDS_R = "\r";
thx_DateTimeUtc.millisPerSecond = 1000;
thx_DateTimeUtc.millisPerMinute = thx_DateTimeUtc.millisPerSecond * 60;
thx_DateTimeUtc.millisPerHour = thx_DateTimeUtc.millisPerMinute * 60;
thx_DateTimeUtc.millisPerDay = thx_DateTimeUtc.millisPerHour * 24;
thx_DateTimeUtc.tenI64 = (function($this) {
	var $r;
	var this1 = new haxe__$Int64__$_$_$Int64(0,10);
	$r = this1;
	return $r;
}(this));
thx_DateTimeUtc.hundredI64 = (function($this) {
	var $r;
	var this1 = new haxe__$Int64__$_$_$Int64(0,100);
	$r = this1;
	return $r;
}(this));
thx_DateTimeUtc.thousandI64 = (function($this) {
	var $r;
	var this1 = new haxe__$Int64__$_$_$Int64(0,1000);
	$r = this1;
	return $r;
}(this));
thx_DateTimeUtc.tenThousandI64 = (function($this) {
	var $r;
	var this1 = new haxe__$Int64__$_$_$Int64(0,10000);
	$r = this1;
	return $r;
}(this));
thx_DateTimeUtc.millionI64 = (function($this) {
	var $r;
	var this1 = new haxe__$Int64__$_$_$Int64(0,1000000);
	$r = this1;
	return $r;
}(this));
thx_DateTimeUtc.ticksPerMicrosecondI64 = thx_DateTimeUtc.tenI64;
thx_DateTimeUtc.ticksPerMillisecond = 10000;
thx_DateTimeUtc.ticksPerMillisecondI64 = (function($this) {
	var $r;
	var x = thx_DateTimeUtc.ticksPerMillisecond;
	var this1 = new haxe__$Int64__$_$_$Int64(x >> 31,x);
	$r = this1;
	return $r;
}(this));
thx_DateTimeUtc.ticksPerSecondI64 = (function($this) {
	var $r;
	var a = thx_DateTimeUtc.ticksPerMillisecondI64;
	var b_high = 0;
	var b_low = 1000;
	var mask = 65535;
	var al = a.low & mask;
	var ah = a.low >>> 16;
	var bl = b_low & mask;
	var bh = b_low >>> 16;
	var p00 = haxe_Int32._mul(al,bl);
	var p10 = haxe_Int32._mul(ah,bl);
	var p01 = haxe_Int32._mul(al,bh);
	var p11 = haxe_Int32._mul(ah,bh);
	var low = p00;
	var high = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
	p01 <<= 16;
	low = low + p01 | 0;
	if(haxe_Int32.ucompare(low,p01) < 0) {
		var ret = high++;
		high = high | 0;
	}
	p10 <<= 16;
	low = low + p10 | 0;
	if(haxe_Int32.ucompare(low,p10) < 0) {
		var ret = high++;
		high = high | 0;
	}
	high = high + (haxe_Int32._mul(a.low,b_high) + haxe_Int32._mul(a.high,b_low) | 0) | 0;
	var this1 = new haxe__$Int64__$_$_$Int64(high,low);
	$r = this1;
	return $r;
}(this));
thx_DateTimeUtc.ticksPerMinuteI64 = (function($this) {
	var $r;
	var a = thx_DateTimeUtc.ticksPerSecondI64;
	var b_high = 0;
	var b_low = 60;
	var mask = 65535;
	var al = a.low & mask;
	var ah = a.low >>> 16;
	var bl = b_low & mask;
	var bh = b_low >>> 16;
	var p00 = haxe_Int32._mul(al,bl);
	var p10 = haxe_Int32._mul(ah,bl);
	var p01 = haxe_Int32._mul(al,bh);
	var p11 = haxe_Int32._mul(ah,bh);
	var low = p00;
	var high = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
	p01 <<= 16;
	low = low + p01 | 0;
	if(haxe_Int32.ucompare(low,p01) < 0) {
		var ret = high++;
		high = high | 0;
	}
	p10 <<= 16;
	low = low + p10 | 0;
	if(haxe_Int32.ucompare(low,p10) < 0) {
		var ret = high++;
		high = high | 0;
	}
	high = high + (haxe_Int32._mul(a.low,b_high) + haxe_Int32._mul(a.high,b_low) | 0) | 0;
	var this1 = new haxe__$Int64__$_$_$Int64(high,low);
	$r = this1;
	return $r;
}(this));
thx_DateTimeUtc.ticksPerHourI64 = (function($this) {
	var $r;
	var a = thx_DateTimeUtc.ticksPerMinuteI64;
	var b_high = 0;
	var b_low = 60;
	var mask = 65535;
	var al = a.low & mask;
	var ah = a.low >>> 16;
	var bl = b_low & mask;
	var bh = b_low >>> 16;
	var p00 = haxe_Int32._mul(al,bl);
	var p10 = haxe_Int32._mul(ah,bl);
	var p01 = haxe_Int32._mul(al,bh);
	var p11 = haxe_Int32._mul(ah,bh);
	var low = p00;
	var high = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
	p01 <<= 16;
	low = low + p01 | 0;
	if(haxe_Int32.ucompare(low,p01) < 0) {
		var ret = high++;
		high = high | 0;
	}
	p10 <<= 16;
	low = low + p10 | 0;
	if(haxe_Int32.ucompare(low,p10) < 0) {
		var ret = high++;
		high = high | 0;
	}
	high = high + (haxe_Int32._mul(a.low,b_high) + haxe_Int32._mul(a.high,b_low) | 0) | 0;
	var this1 = new haxe__$Int64__$_$_$Int64(high,low);
	$r = this1;
	return $r;
}(this));
thx_DateTimeUtc.ticksPerDayI64 = (function($this) {
	var $r;
	var a = thx_DateTimeUtc.ticksPerHourI64;
	var b_high = 0;
	var b_low = 24;
	var mask = 65535;
	var al = a.low & mask;
	var ah = a.low >>> 16;
	var bl = b_low & mask;
	var bh = b_low >>> 16;
	var p00 = haxe_Int32._mul(al,bl);
	var p10 = haxe_Int32._mul(ah,bl);
	var p01 = haxe_Int32._mul(al,bh);
	var p11 = haxe_Int32._mul(ah,bh);
	var low = p00;
	var high = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
	p01 <<= 16;
	low = low + p01 | 0;
	if(haxe_Int32.ucompare(low,p01) < 0) {
		var ret = high++;
		high = high | 0;
	}
	p10 <<= 16;
	low = low + p10 | 0;
	if(haxe_Int32.ucompare(low,p10) < 0) {
		var ret = high++;
		high = high | 0;
	}
	high = high + (haxe_Int32._mul(a.low,b_high) + haxe_Int32._mul(a.high,b_low) | 0) | 0;
	var this1 = new haxe__$Int64__$_$_$Int64(high,low);
	$r = this1;
	return $r;
}(this));
thx_DateTimeUtc.daysPerYear = 365;
thx_DateTimeUtc.daysPer4Years = thx_DateTimeUtc.daysPerYear * 4 + 1;
thx_DateTimeUtc.daysPer100Years = thx_DateTimeUtc.daysPer4Years * 25 - 1;
thx_DateTimeUtc.daysPer400Years = thx_DateTimeUtc.daysPer100Years * 4 + 1;
thx_DateTimeUtc.daysTo1970 = thx_DateTimeUtc.daysPer400Years * 4 + thx_DateTimeUtc.daysPer100Years * 3 + thx_DateTimeUtc.daysPer4Years * 17 + thx_DateTimeUtc.daysPerYear;
thx_DateTimeUtc.unixEpochTicks = (function($this) {
	var $r;
	var a = thx_DateTimeUtc.ticksPerDayI64;
	var x = thx_DateTimeUtc.daysTo1970;
	var b_high = x >> 31;
	var b_low = x;
	var mask = 65535;
	var al = a.low & mask;
	var ah = a.low >>> 16;
	var bl = b_low & mask;
	var bh = b_low >>> 16;
	var p00 = haxe_Int32._mul(al,bl);
	var p10 = haxe_Int32._mul(ah,bl);
	var p01 = haxe_Int32._mul(al,bh);
	var p11 = haxe_Int32._mul(ah,bh);
	var low = p00;
	var high = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
	p01 <<= 16;
	low = low + p01 | 0;
	if(haxe_Int32.ucompare(low,p01) < 0) {
		var ret = high++;
		high = high | 0;
	}
	p10 <<= 16;
	low = low + p10 | 0;
	if(haxe_Int32.ucompare(low,p10) < 0) {
		var ret = high++;
		high = high | 0;
	}
	high = high + (haxe_Int32._mul(a.low,b_high) + haxe_Int32._mul(a.high,b_low) | 0) | 0;
	var this1 = new haxe__$Int64__$_$_$Int64(high,low);
	$r = this1;
	return $r;
}(this));
thx_DateTimeUtc.DATE_PART_YEAR = 0;
thx_DateTimeUtc.DATE_PART_DAY_OF_YEAR = 1;
thx_DateTimeUtc.DATE_PART_MONTH = 2;
thx_DateTimeUtc.DATE_PART_DAY = 3;
thx_DateTimeUtc.daysToMonth365 = [0,31,59,90,120,151,181,212,243,273,304,334,365];
thx_DateTimeUtc.daysToMonth366 = [0,31,60,91,121,152,182,213,244,274,305,335,366];
thx_Dates.order = thx_Ord.fromIntComparison(thx_Dates.compare);
thx_Floats.TOLERANCE = 10e-5;
thx_Floats.EPSILON = 1e-9;
thx_Floats.pattern_parse = new EReg("^(\\+|-)?(:?\\d+(\\.\\d+)?(e-?\\d+)?|nan|NaN|NAN)$","");
thx_Floats.pattern_inf = new EReg("^\\+?(inf|Inf|INF)$","");
thx_Floats.pattern_neg_inf = new EReg("^-(inf|Inf|INF)$","");
thx_Floats.order = thx_Ord.fromIntComparison(thx_Floats.compare);
thx_Floats.monoid = { zero : 0.0, append : function(a,b) {
	return a + b;
}};
thx_Int64s.one = (function($this) {
	var $r;
	var this1 = new haxe__$Int64__$_$_$Int64(0,1);
	$r = this1;
	return $r;
}(this));
thx_Int64s.two = (function($this) {
	var $r;
	var this1 = new haxe__$Int64__$_$_$Int64(0,2);
	$r = this1;
	return $r;
}(this));
thx_Int64s.zero = (function($this) {
	var $r;
	var this1 = new haxe__$Int64__$_$_$Int64(0,0);
	$r = this1;
	return $r;
}(this));
thx_Int64s.ten = (function($this) {
	var $r;
	var this1 = new haxe__$Int64__$_$_$Int64(0,10);
	$r = this1;
	return $r;
}(this));
thx_Int64s.maxValue = (function($this) {
	var $r;
	var this1 = new haxe__$Int64__$_$_$Int64(2147483647,-1);
	$r = this1;
	return $r;
}(this));
thx_Int64s.minValue = (function($this) {
	var $r;
	var this1 = new haxe__$Int64__$_$_$Int64(-2147483648,1);
	$r = this1;
	return $r;
}(this));
thx_Int64s.min = (function($this) {
	var $r;
	var this1 = new haxe__$Int64__$_$_$Int64(-2147483648,0);
	$r = this1;
	return $r;
}(this));
thx_Ints.pattern_parse = new EReg("^[ \t\r\n]*[+-]?(\\d+|0x[0-9A-F]+)","i");
thx_Ints.BASE = "0123456789abcdefghijklmnopqrstuvwxyz";
thx_Ints.order = function(i0,i1) {
	if(i0 > i1) {
		return thx_OrderingImpl.GT;
	} else if(i0 == i1) {
		return thx_OrderingImpl.EQ;
	} else {
		return thx_OrderingImpl.LT;
	}
};
thx_Ints.monoid = { zero : 0, append : function(a,b) {
	return a + b;
}};
thx_Orderings.monoid = { zero : thx_OrderingImpl.EQ, append : function(o0,o1) {
	switch(o0._hx_index) {
	case 0:
		return thx_OrderingImpl.LT;
	case 1:
		return thx_OrderingImpl.GT;
	case 2:
		return o1;
	}
}};
thx_Strings.order = thx_Ord.fromIntComparison(thx_Strings.compare);
thx_Strings.HASCODE_MAX = 2147483647;
thx_Strings.HASCODE_MUL = 31;
thx_Strings.monoid = { zero : "", append : function(a,b) {
	return a + b;
}};
thx_Strings.UCWORDS = new EReg("[^a-zA-Z]([a-z])","g");
thx_Strings.IS_BREAKINGWHITESPACE = new EReg("[^\t\n\r ]","");
thx_Strings.IS_ALPHA = new EReg("[^a-zA-Z]","");
thx_Strings.UCWORDSWS = new EReg("[ \t\r\n][a-z]","g");
thx_Strings.ALPHANUM = new EReg("^[a-z0-9]+$","i");
thx_Strings.DIGITS = new EReg("^[0-9]+$","");
thx_Strings.STRIPTAGS = new EReg("</?[a-z]+[^>]*>","gi");
thx_Strings.WSG = new EReg("[ \t\r\n]+","g");
thx_Strings.SPLIT_LINES = new EReg("\r\n|\n\r|\n|\r","g");
thx_Strings.CANONICALIZE_LINES = new EReg("\r\n|\n\r|\r","g");
thx_Time.zero = (function($this) {
	var $r;
	var this1 = new haxe__$Int64__$_$_$Int64(0,0);
	var this2 = this1;
	$r = this2;
	return $r;
}(this));
thx_Time.oneDay = (function($this) {
	var $r;
	var this1 = new haxe__$Int64__$_$_$Int64(0,24);
	var this2 = this1;
	$r = this2;
	return $r;
}(this));
thx_fp_Map.delta = 5;
thx_fp_Map.ratio = 2;
xapi_Params.LRS = "lrs";
xapi_Params.STATEMENT = "statement";
xapi_Params.STATEMENTS = "statements";
xapi_Params.VOID = "void";
xapi_Params.SUBJECT = "subject";
xapi_Params.GET = "get";
xapi_Params.XAPI_COMMON_LIBS = "https://qook.test.salt.ch/commonlibs/xapi-new/";
xapi_Results.STATUS = "status";
xapi_Results.MESSAGE = "msg";
xapi_Results.DETAILS = "details";
xapi_Results.NATIVE = "native";
xapi_Results.STAGE = "stage";
xapi_Results.STATEMENT_IDS = "statementsIds";
xapi_Results.STATEMENT = "statement";
xapi_Results.FAILED_VALUE = "failed";
xapi_Results.FAILED_404_VALUE = "failed404";
xapi_Results.SUCCESS_VALUE = "success";
xapi_Results.NO_PARAM_VALUE = "No significant param recieved";
xapi_Results.BAD_UUID = "Missing UUID or bad format";
xapi_Verb.SUBMITED = "http://activitystrea.ms/schema/1.0/submit";
xapi_Verb.VERB_RECIEVED = "http://activitystrea.ms/schema/1.0/receive";
xapi_Verb.VERB_MENTORED = "http://id.tincanapi.com/verb/mentored";
xapi_Verb.VERB_REVIEWD = "http://id.tincanapi.com/verb/reviewed";
xapi_Verb.VERB_DISSMISSED = "http://id.tincanapi.com/verb/terminated-employment-with";
xapi_Verb.abandoned = new xapi_Verb("https://w3id.org/xapi/adl/verbs/abandoned");
xapi_Verb.answered = new xapi_Verb("http://adlnet.gov/expapi/verbs/answered");
xapi_Verb.aligned = new xapi_Verb("https://w3id.org/xapi/dod-isd/verbs/aligned");
xapi_Verb.asked = new xapi_Verb("http://adlnet.gov/expapi/verbs/asked");
xapi_Verb.attempted = new xapi_Verb("http://adlnet.gov/expapi/verbs/attempted");
xapi_Verb.attended = new xapi_Verb("http://adlnet.gov/expapi/verbs/attended");
xapi_Verb.commented = new xapi_Verb("http://adlnet.gov/expapi/verbs/commented");
xapi_Verb.completed = new xapi_Verb("http://adlnet.gov/expapi/verbs/completed");
xapi_Verb.calibrated = new xapi_Verb("https://w3id.org/xapi/dod-isd/verbs/calibrated");
xapi_Verb.dismissed = new xapi_Verb("http://id.tincanapi.com/verb/terminated-employment-with");
xapi_Verb.exited = new xapi_Verb("http://adlnet.gov/expapi/verbs/exited");
xapi_Verb.experienced = new xapi_Verb("http://adlnet.gov/expapi/verbs/experienced");
xapi_Verb.failed = new xapi_Verb("http://adlnet.gov/expapi/verbs/failed");
xapi_Verb.imported = new xapi_Verb("http://adlnet.gov/expapi/verbs/imported");
xapi_Verb.initialized = new xapi_Verb("http://adlnet.gov/expapi/verbs/initialized");
xapi_Verb.interacted = new xapi_Verb("http://adlnet.gov/expapi/verbs/interacted");
xapi_Verb.launched = new xapi_Verb("http://adlnet.gov/expapi/verbs/launched");
xapi_Verb.loggedIn = new xapi_Verb("https://w3id.org/xapi/adl/verbs/logged-in");
xapi_Verb.loggedOut = new xapi_Verb("https://w3id.org/xapi/adl/verbs/logged-out");
xapi_Verb.mastered = new xapi_Verb("http://adlnet.gov/expapi/verbs/mastered");
xapi_Verb.mentoored = new xapi_Verb("http://id.tincanapi.com/verb/mentored");
xapi_Verb.passed = new xapi_Verb("http://adlnet.gov/expapi/verbs/passed");
xapi_Verb.preferred = new xapi_Verb("http://adlnet.gov/expapi/verbs/preferred");
xapi_Verb.progressed = new xapi_Verb("http://adlnet.gov/expapi/verbs/progressed");
xapi_Verb.replaced = new xapi_Verb("http://activitystrea.ms/schema/1.0/replace");
xapi_Verb.registered = new xapi_Verb("http://adlnet.gov/expapi/verbs/registered");
xapi_Verb.responded = new xapi_Verb("http://adlnet.gov/expapi/verbs/responded");
xapi_Verb.resolved = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	_g.h["en"] = "resolved";
	$r = new xapi_Verb("http://activitystrea.ms/schema/1.0/resolve",_g);
	return $r;
}(this));
xapi_Verb.recieved = new xapi_Verb("http://activitystrea.ms/schema/1.0/receive");
xapi_Verb.reviewed = new xapi_Verb("http://id.tincanapi.com/verb/reviewed");
xapi_Verb.resumed = new xapi_Verb("http://adlnet.gov/expapi/verbs/resumed");
xapi_Verb.recalled = new xapi_Verb("https://w3id.org/xapi/dod-isd/verbs/recalled");
xapi_Verb.satisfied = new xapi_Verb("https://w3id.org/xapi/adl/verbs/satisfied");
xapi_Verb.scored = new xapi_Verb("http://adlnet.gov/expapi/verbs/scored");
xapi_Verb.shared = new xapi_Verb("http://adlnet.gov/expapi/verbs/shared");
xapi_Verb.suspended = new xapi_Verb("http://adlnet.gov/expapi/verbs/suspended");
xapi_Verb.submitted = new xapi_Verb("http://activitystrea.ms/schema/1.0/submit");
xapi_Verb.terminated = new xapi_Verb("http://adlnet.gov/expapi/verbs/terminated");
xapi_Verb.updated = new xapi_Verb("http://activitystrea.ms/schema/1.0/update");
xapi_Verb.voided = new xapi_Verb("http://adlnet.gov/expapi/verbs/voided");
xapi_Verb.waived = new xapi_Verb("https://w3id.org/xapi/adl/verbs/waived");
xapi_types_Standards.EMAIL = new EReg("^mailto:[^@]{1,64}@[^@]{1,255}$","i");
xapi_types_Standards.AUTH = new EReg("^[0-9]{4}-[0-9]{2}-[0-9]{2}_[0-9]{4}-[0-9]{2}-[0-9]{2}_","i");
xapi_types_Standards.UUID = new EReg("[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}","");
xapi_types_Standards.ISO8601_DURATION = new EReg("^P(?!$)(\\d+(?:\\.\\d+)?Y)?(\\d+(?:\\.\\d+)?M)?(\\d+(?:\\.\\d+)?W)?(\\d+(?:\\.\\d+)?D)?(T(?=\\d)(\\d+(?:\\.\\d+)?H)?(\\d+(?:\\.\\d+)?M)?(\\d+(?:\\.\\d+)?S)?)?$","");
xapi_types_Standards.ISO_8601 = new EReg("^\\d{4}(-\\d\\d(-\\d\\d(T\\d\\d:\\d\\d(:\\d\\d)?(\\.\\d+)?(([+-]\\d\\d:\\d\\d)|Z)?)?)?)?$","i");
xapi_types_Standards.ISO_8601_FULL = new EReg("^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(\\.\\d+)?(([+-]\\d\\d:\\d\\d)|Z)?$","i");
Main.main();
})(typeof exports != "undefined" ? exports : typeof window != "undefined" ? window : typeof self != "undefined" ? self : this, typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);

//# sourceMappingURL=team_tl.js.map